
	thumb_func_start FUN_02199900
FUN_02199900: ; 0x02199900
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r5, r0, #0
	ldr r0, [r7]
	adds r6, r2, #0
	adds r4, r3, #0
	cmp r0, #0
	beq _02199920
	cmp r0, #1
	bne _02199918
	b _02199B52
_02199918:
	cmp r0, #2
	bne _0219991E
	b _02199BB0
_0219991E:
	b _02199C2E
_02199920:
	movs r4, #1
	movs r0, #1
	movs r1, #0x12
	lsls r2, r4, #0x11
	bl FUN_0203A188
	movs r0, #1
	movs r1, #0x14
	lsls r2, r4, #0xf
	bl FUN_0203A188
	ldr r2, _02199C34 ; =0x000AC500
	movs r0, #1
	movs r1, #0x13
	bl FUN_0203A188
	movs r1, #0x12
	lsls r4, r1, #6
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x12
	bl FUN_0203AB18
	adds r5, r0, #0
	movs r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_02078684
	movs r0, #0x13
	bl FUN_021CE644
	bl FUN_021CE14C
	bl FUN_02005820
	cmp r0, #0
	bne _0219997A
	bl FUN_02005808
	ldr r1, _02199C38 ; =0x00000473
	movs r0, #0x80
	ldrb r2, [r5, r1]
	orrs r0, r2
	strb r0, [r5, r1]
_0219997A:
	ldr r4, _02199C3C ; =0x00000468
	movs r0, #0x12
	strh r0, [r5, r4]
	adds r0, r6, #0
	str r6, [r5]
	movs r1, #6
	adds r0, #0xac
	strb r1, [r0]
	ldr r0, [r5]
	ldr r1, [r0, #0x34]
	adds r0, r5, #0
	adds r0, #0xc0
	str r1, [r0]
	ldr r0, [r5]
	adds r0, #0x8c
	ldrh r1, [r0]
	adds r0, r4, #0
	subs r0, #0x28
	strh r1, [r5, r0]
	ldr r0, [r5]
	adds r0, #0x8e
	ldrh r1, [r0]
	adds r0, r4, #0
	subs r0, #0x26
	strh r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #8
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #0x10
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #1
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #2
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #0x20
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xb
	ldrb r1, [r5, r0]
	movs r0, #0x40
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xb
	strb r1, [r5, r0]
	adds r1, r4, #0
	movs r0, #0
	adds r1, #9
	strb r0, [r5, r1]
	subs r1, r4, #4
	str r0, [r5, r1]
	str r0, [sp]
	str r0, [r5, #4]
	adds r0, r4, #0
	movs r1, #7
	subs r0, #0x24
	str r1, [r5, r0]
	ldr r0, [r5]
	ldr r0, [r0, #0x74]
	bl FUN_02008A14
	subs r4, #0x2c
	str r0, [r5, r4]
	ldr r0, [r6, #0x74]
	bl FUN_02008A4C
	cmp r0, #0
	bne _02199A3E
	movs r0, #1
	str r0, [sp]
_02199A3E:
	ldr r4, _02199C38 ; =0x00000473
	movs r1, #4
	ldrb r0, [r5, r4]
	bics r0, r1
	ldr r1, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1d
	orrs r0, r1
	strb r0, [r5, r4]
	adds r0, r4, #0
	subs r0, #0xb
	ldrh r0, [r5, r0]
	bl FUN_021D5AC4
	movs r1, #0xaf
	lsls r1, r1, #2
	str r0, [r5, r1]
	adds r0, r5, #0
	str r1, [sp, #4]
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CCFC
	ldr r0, [r5]
	bl FUN_0219E1A4
	ldr r0, [sp, #4]
	adds r1, r0, #4
	movs r0, #0
	str r0, [r5, r1]
	ldr r0, [sp, #4]
	movs r1, #0
	adds r0, #8
	str r0, [sp, #4]
	str r1, [r5, r0]
	ldr r0, [r5]
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	bne _02199AAC
	subs r4, #0x83
	adds r0, r5, r4
	bl FUN_020440C4
	b _02199AC0
_02199AAC:
	adds r2, r6, #0
	subs r4, #0x83
	adds r2, #0xb8
	adds r3, r5, r4
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
_02199AC0:
	movs r4, #0x3f
	lsls r4, r4, #4
	adds r1, r4, #0
	adds r1, #0x78
	ldrh r1, [r5, r1]
	adds r0, r5, r4
	bl FUN_021BD094
	bl FUN_021B16B0
	adds r0, r6, #0
	bl FUN_021BD7F0
	adds r1, r4, #0
	adds r1, #0x40
	str r0, [r5, r1]
	adds r1, r4, #0
	movs r0, #0
	adds r1, #0x44
	str r0, [r5, r1]
	adds r4, #0x48
	str r0, [r5, r4]
	ldr r1, [r5]
	adds r1, #0x23
	ldrb r1, [r1]
	cmp r1, #0
	bne _02199B06
	adds r2, r0, #0
_02199AF8:
	ldr r1, [r5]
	adds r1, r1, r0
	adds r1, #0x44
	adds r0, r0, #1
	strb r2, [r1]
	cmp r0, #4
	blo _02199AF8
_02199B06:
	ldr r0, _02199C40 ; =0x00000448
	adds r0, r5, r0
	bl FUN_021BDA98
	ldr r0, [r6, #0x74]
	bl FUN_02008A68
	movs r1, #0
	cmp r0, #0
	beq _02199B1C
	movs r1, #1
_02199B1C:
	ldr r0, _02199C44 ; =0x0000046F
	movs r2, #0x14
	strb r1, [r5, r0]
	adds r1, r6, #0
	adds r1, #0xa0
	ldrh r1, [r1]
	ldr r0, [r6, #0x1c]
	bl FUN_021B9990
	movs r0, #0x12
	bl FUN_021BD8B4
	adds r0, r6, #0
	adds r0, #0xdd
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	beq _02199B4A
	adds r6, #0xdf
	ldrb r1, [r6]
	adds r0, r5, #0
	bl FUN_0219E354
_02199B4A:
	ldr r0, [r7]
	adds r0, r0, #1
	str r0, [r7]
	b _02199C2E
_02199B52:
	ldr r0, [r4]
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	beq _02199B7C
	bl FUN_021B9AB0
	cmp r0, #0
	beq _02199B7C
	ldr r2, _02199C38 ; =0x00000473
	movs r0, #1
	ldrb r1, [r4, r2]
	add sp, #8
	bics r1, r0
	movs r0, #1
	orrs r1, r0
	strb r1, [r4, r2]
	ldrb r3, [r4, r2]
	movs r1, #2
	orrs r1, r3
	strb r1, [r4, r2]
	pop {r3, r4, r5, r6, r7, pc}
_02199B7C:
	bl FUN_021B9A70
	cmp r0, #0
	beq _02199C2E
	ldr r0, [r4]
	adds r0, #0x20
	ldrb r0, [r0]
	bl FUN_021D4A5C
	movs r5, #0x45
	lsls r5, r5, #4
	ldr r2, [r4]
	adds r0, r4, r5
	adds r1, r4, #0
	bl FUN_02199F00
	movs r0, #0
	adds r5, #0x10
	str r0, [r4, r5]
	adds r0, r4, #0
	bl FUN_0219D6EC
	adds r0, r4, #0
	bl FUN_0219D9F0
	b _02199B4A
_02199BB0:
	movs r5, #0x45
	lsls r5, r5, #4
	ldr r2, [r4, r5]
	cmp r2, #0
	beq _02199BD8
	adds r1, r5, #0
	adds r0, r5, #0
	adds r1, #8
	adds r0, #0xc
	ldr r1, [r4, r1]
	adds r0, r4, r0
	blx r2
	cmp r0, #0
	beq _02199BD4
	movs r0, #0
	str r0, [r4, r5]
	adds r5, #0xc
	str r0, [r4, r5]
_02199BD4:
	movs r0, #0
	b _02199BFE
_02199BD8:
	adds r0, r5, #4
	ldr r2, [r4, r0]
	cmp r2, #0
	beq _02199BFC
	adds r1, r5, #0
	adds r0, r5, #0
	adds r1, #8
	adds r0, #0xc
	ldr r1, [r4, r1]
	adds r0, r4, r0
	blx r2
	cmp r0, #0
	beq _02199BFA
	movs r1, #0
	adds r0, r5, #4
	str r1, [r4, r0]
	b _02199BFC
_02199BFA:
	b _02199BD4
_02199BFC:
	movs r0, #1
_02199BFE:
	cmp r0, #0
	beq _02199C2E
	ldr r1, _02199C38 ; =0x00000473
	ldrb r2, [r4, r1]
	lsls r0, r2, #0x1f
	lsrs r0, r0, #0x1f
	beq _02199C18
	movs r0, #2
	orrs r0, r2
	strb r0, [r4, r1]
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02199C18:
	ldr r0, [r4]
	ldr r0, [r0]
	cmp r0, #4
	beq _02199C28
	adds r0, r4, #0
	movs r1, #4
	bl FUN_0219DB10
_02199C28:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02199C2E:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02199C34: .word 0x000AC500
_02199C38: .word 0x00000473
_02199C3C: .word 0x00000468
_02199C40: .word 0x00000448
_02199C44: .word 0x0000046F
	thumb_func_end FUN_02199900

	thumb_func_start FUN_02199C48
FUN_02199C48: ; 0x02199C48
	push {r4, r5, r6, lr}
	ldr r6, _02199CD8 ; =0x00000464
	adds r5, r3, #0
	ldr r1, [r5, r6]
	cmp r1, #0
	bne _02199C58
	movs r0, #1
	pop {r4, r5, r6, pc}
_02199C58:
	adds r0, r5, #0
	blx r1
	cmp r0, #0
	beq _02199CD2
	adds r0, r5, #0
	bl FUN_0219C9C0
	cmp r0, #0
	bne _02199CAE
	adds r0, r5, #0
	bl FUN_0219DEC4
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219E038
	adds r0, r5, #0
	bl FUN_0219E1F0
	adds r0, r5, #0
	bl FUN_0219DC50
	cmp r4, #0
	beq _02199CA6
	cmp r4, #1
	beq _02199C92
	cmp r4, #2
	beq _02199CA6
	b _02199CCE
_02199C92:
	adds r0, r5, #0
	bl FUN_0219CB2C
	subs r6, #0x34
	ldr r1, [r5, r6]
	adds r1, r1, r0
_02199C9E:
	ldr r0, [r5]
	adds r0, #0xa4
	str r1, [r0]
	b _02199CCE
_02199CA6:
	ldr r0, _02199CDC ; =0x00000438
	ldr r0, [r5, r0]
	rsbs r1, r0, #0
	b _02199C9E
_02199CAE:
	adds r0, r5, #0
	bl FUN_02199CE0
	ldr r1, [r5]
	lsls r0, r0, #0x18
	adds r2, r1, #0
	adds r2, #0xdd
	ldrb r3, [r2]
	lsrs r0, r0, #0x18
	movs r2, #2
	lsls r0, r0, #0x1f
	bics r3, r2
	lsrs r0, r0, #0x1e
	orrs r0, r3
	adds r1, #0xdd
	strb r0, [r1]
_02199CCE:
	movs r0, #1
	pop {r4, r5, r6, pc}
_02199CD2:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_02199CD8: .word 0x00000464
_02199CDC: .word 0x00000438
	thumb_func_end FUN_02199C48

	thumb_func_start FUN_02199CE0
FUN_02199CE0: ; 0x02199CE0
	push {r4, r5, r6, lr}
	movs r6, #0xb2
	adds r5, r0, #0
	movs r4, #0
	lsls r6, r6, #2
_02199CEA:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _02199D0A
	lsls r1, r4, #0x18
	adds r0, r5, r6
	lsrs r1, r1, #0x18
	bl FUN_021D48C0
	cmp r0, #0
	bne _02199D0A
	movs r0, #0
	pop {r4, r5, r6, pc}
_02199D0A:
	adds r4, r4, #1
	cmp r4, #4
	blo _02199CEA
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02199CE0

	thumb_func_start FUN_02199D14
FUN_02199D14: ; 0x02199D14
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	ldr r0, [r5]
	adds r4, r3, #0
	cmp r0, #5
	bhi _02199DEA
	adds r1, r0, r0
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02199D2E: ; jump table
	.short _02199D3A - _02199D2E - 2 ; case 0
	.short _02199D96 - _02199D2E - 2 ; case 1
	.short _02199DD8 - _02199D2E - 2 ; case 2
	.short _02199DF4 - _02199D2E - 2 ; case 3
	.short _02199E4A - _02199D2E - 2 ; case 4
	.short _02199EAA - _02199D2E - 2 ; case 5
_02199D3A:
	ldr r0, _02199EF4 ; =0x00000473
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bne _02199D4A
	movs r0, #0x1e
	bl FUN_02005EA0
_02199D4A:
	movs r0, #0x46
	movs r1, #0
	lsls r0, r0, #4
	str r1, [r4, r0]
	adds r0, r4, #0
	bl FUN_0219C9C8
	cmp r0, #0
	beq _02199D62
	adds r0, r4, #0
	bl FUN_0219E3B8
_02199D62:
	ldr r7, _02199EF8 ; =0x0400006C
	adds r0, r7, #0
	bl FUN_020749C0
	cmp r0, #0
	beq _02199D8E
	movs r6, #0xf
	movs r0, #0x46
	mvns r6, r6
	lsls r0, r0, #4
	str r6, [r4, r0]
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_0207499C
	ldr r0, _02199EFC ; =0x0400106C
	adds r1, r6, #0
	bl FUN_0207499C
	ldr r0, [r5]
	adds r0, r0, #2
	b _02199D92
_02199D8E:
	ldr r0, [r5]
_02199D90:
	adds r0, r0, #1
_02199D92:
	str r0, [r5]
	b _02199EF0
_02199D96:
	movs r6, #0x46
	lsls r6, r6, #4
	movs r1, #0xf
	ldr r2, [r4, r6]
	mvns r1, r1
	cmp r2, r1
	ble _02199DD6
	ldr r5, _02199EF8 ; =0x0400006C
	subs r0, r2, #1
	str r0, [r4, r6]
	adds r0, r5, #0
	bl FUN_020749C0
	ldr r1, [r4, r6]
	cmp r0, r1
	ble _02199DBC
	adds r0, r5, #0
	bl FUN_0207499C
_02199DBC:
	ldr r5, _02199EFC ; =0x0400106C
	adds r0, r5, #0
	bl FUN_020749C0
	movs r1, #0x46
	lsls r1, r1, #4
	ldr r1, [r4, r1]
	cmp r0, r1
	ble _02199DEA
	adds r0, r5, #0
	bl FUN_0207499C
	b _02199EF0
_02199DD6:
	b _02199D90
_02199DD8:
	ldr r1, _02199EF4 ; =0x00000473
	ldrb r1, [r4, r1]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	bne _02199DF2
	bl FUN_02005EC0
	cmp r0, #0
	beq _02199DEC
_02199DEA:
	b _02199EF0
_02199DEC:
	bl FUN_02005D8C
	b _02199D8E
_02199DF2:
	b _02199DD6
_02199DF4:
	movs r6, #0xaf
	lsls r6, r6, #2
	ldr r0, [r4, r6]
	cmp r0, #0
	beq _02199E06
	bl FUN_021D5AEC
	movs r0, #0
	str r0, [r4, r6]
_02199E06:
	movs r6, #0xb
	lsls r6, r6, #6
	ldr r0, [r4, r6]
	cmp r0, #0
	beq _02199E18
	bl FUN_0203A278
	movs r0, #0
	str r0, [r4, r6]
_02199E18:
	movs r6, #0xb1
	lsls r6, r6, #2
	ldr r0, [r4, r6]
	cmp r0, #0
	beq _02199E2A
	bl FUN_021BA59C
	movs r0, #0
	str r0, [r4, r6]
_02199E2A:
	bl FUN_021BD0E8
	adds r0, r4, #0
	bl FUN_0219DA28
	adds r0, r4, #0
	bl FUN_0219D71C
	movs r0, #0x45
	lsls r0, r0, #4
	ldr r2, [r4]
	adds r0, r4, r0
	adds r1, r4, #0
	bl FUN_0219A030
	b _02199D8E
_02199E4A:
	movs r6, #0x45
	lsls r6, r6, #4
	ldr r2, [r4, r6]
	cmp r2, #0
	beq _02199E72
	adds r1, r6, #0
	adds r0, r6, #0
	adds r1, #8
	adds r0, #0xc
	ldr r1, [r4, r1]
	adds r0, r4, r0
	blx r2
	cmp r0, #0
	beq _02199E6E
	movs r0, #0
	str r0, [r4, r6]
	adds r6, #0xc
	str r0, [r4, r6]
_02199E6E:
	movs r0, #0
	b _02199E98
_02199E72:
	adds r0, r6, #4
	ldr r2, [r4, r0]
	cmp r2, #0
	beq _02199E96
	adds r1, r6, #0
	adds r0, r6, #0
	adds r1, #8
	adds r0, #0xc
	ldr r1, [r4, r1]
	adds r0, r4, r0
	blx r2
	cmp r0, #0
	beq _02199E94
	movs r1, #0
	adds r0, r6, #4
	str r1, [r4, r0]
	b _02199E96
_02199E94:
	b _02199E6E
_02199E96:
	movs r0, #1
_02199E98:
	cmp r0, #0
	beq _02199EF0
	bl FUN_021D4A80
	bl FUN_021B9A94
	bl FUN_021BD8C0
	b _02199D8E
_02199EAA:
	bl FUN_021CE678
	movs r0, #1
	movs r1, #0x3e
	bl FUN_02005D08
	bl FUN_020067B0
	ldr r5, _02199EF4 ; =0x00000473
	ldrb r0, [r4, r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1f
	beq _02199ED0
	bl FUN_02030248
	ldrb r1, [r4, r5]
	movs r0, #0x80
	bics r1, r0
	strb r1, [r4, r5]
_02199ED0:
	adds r0, r6, #0
	bl FUN_0203AB3C
	movs r0, #0x13
	bl FUN_0203A1FC
	movs r0, #0x14
	bl FUN_0203A1FC
	movs r0, #0x12
	bl FUN_0203A1FC
	bl FUN_021CE178
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02199EF0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02199EF4: .word 0x00000473
_02199EF8: .word 0x0400006C
_02199EFC: .word 0x0400106C
	thumb_func_end FUN_02199D14

	thumb_func_start FUN_02199F00
FUN_02199F00: ; 0x02199F00
	push {r3, r4, r5, r6}
	ldr r3, _0219A008 ; =0x00000428
	movs r6, #0
	movs r5, #4
_02199F08:
	adds r4, r1, r6
	adds r6, r6, #1
	strb r5, [r4, r3]
	cmp r6, #6
	blo _02199F08
	adds r3, r2, #0
	adds r3, #0x20
	ldrb r3, [r3]
	cmp r3, #0
	bne _02199F9E
	ldr r3, [r2, #4]
	cmp r3, #3
	bhi _02199F8E
	adds r3, r3, r3
	add r3, pc
	ldrh r3, [r3, #6]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	add pc, r3
_02199F2E: ; jump table
	.short _02199F36 - _02199F2E - 2 ; case 0
	.short _02199F46 - _02199F2E - 2 ; case 1
	.short _02199F6E - _02199F2E - 2 ; case 2
	.short _02199F7E - _02199F2E - 2 ; case 3
_02199F36:
	ldr r2, _0219A00C ; =FUN_0219A2D8
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F46:
	adds r2, #0x22
	ldrb r2, [r2]
	cmp r2, #0
	bne _02199F5E
	ldr r2, _0219A010 ; =FUN_0219A488
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F5E:
	ldr r2, _0219A014 ; =FUN_0219A5FC
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F6E:
	ldr r2, _0219A018 ; =FUN_0219A888
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F7E:
	ldr r2, _0219A01C ; =FUN_0219AA0C
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F8E:
	ldr r2, _0219A00C ; =FUN_0219A2D8
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199F9E:
	ldr r2, [r2, #4]
	cmp r2, #3
	bhi _02199FF8
	adds r2, r2, r2
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_02199FB0: ; jump table
	.short _02199FB8 - _02199FB0 - 2 ; case 0
	.short _02199FC8 - _02199FB0 - 2 ; case 1
	.short _02199FD8 - _02199FB0 - 2 ; case 2
	.short _02199FE8 - _02199FB0 - 2 ; case 3
_02199FB8:
	ldr r2, _0219A020 ; =FUN_0219AB84
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199FC8:
	ldr r2, _0219A024 ; =FUN_0219ABFC
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199FD8:
	ldr r2, _0219A028 ; =FUN_0219AD50
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199FE8:
	ldr r2, _0219A02C ; =FUN_0219ACC0
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
_02199FF8:
	ldr r2, _0219A00C ; =FUN_0219A2D8
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_0219A008: .word 0x00000428
_0219A00C: .word FUN_0219A2D8
_0219A010: .word FUN_0219A488
_0219A014: .word FUN_0219A5FC
_0219A018: .word FUN_0219A888
_0219A01C: .word FUN_0219AA0C
_0219A020: .word FUN_0219AB84
_0219A024: .word FUN_0219ABFC
_0219A028: .word FUN_0219AD50
_0219A02C: .word FUN_0219ACC0
	thumb_func_end FUN_02199F00

	thumb_func_start FUN_0219A030
FUN_0219A030: ; 0x0219A030
	ldr r2, _0219A040 ; =FUN_0219A434
	str r1, [r0, #8]
	str r2, [r0]
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #0xc]
	bx lr
	nop
_0219A040: .word FUN_0219A434
	thumb_func_end FUN_0219A030

	thumb_func_start FUN_0219A044
FUN_0219A044: ; 0x0219A044
	ldr r0, [r0]
	cmp r0, #3
	bhi _0219A06E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219A056: ; jump table
	.short _0219A05E - _0219A056 - 2 ; case 0
	.short _0219A062 - _0219A056 - 2 ; case 1
	.short _0219A066 - _0219A056 - 2 ; case 2
	.short _0219A06A - _0219A056 - 2 ; case 3
_0219A05E:
	movs r0, #0
	bx lr
_0219A062:
	movs r0, #0
	bx lr
_0219A066:
	movs r0, #0
	bx lr
_0219A06A:
	movs r0, #1
	bx lr
_0219A06E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219A044

	thumb_func_start FUN_0219A074
FUN_0219A074: ; 0x0219A074
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r1, #0x21
	ldrb r1, [r1]
	ldr r6, _0219A100 ; =0x0000046C
	adds r5, r0, #0
	movs r2, #0
	strb r1, [r5, r6]
	movs r4, #0
	bl FUN_0219C498
	adds r1, r6, #1
	strb r0, [r5, r1]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_0219A104
	adds r0, r5, #0
	bl FUN_0219C9C0
	cmp r0, #0
	bne _0219A0CE
	ldr r0, [r7, #0x70]
	bl FUN_02017934
	bl FUN_02007E64
	adds r7, r0, #0
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	bl FUN_02007E40
	subs r6, #0x8c
	adds r1, r7, #0
	str r0, [r5, r6]
	bl FUN_02007F40
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D298
	ldr r1, [r5]
	adds r1, #0x44
	strb r0, [r1]
	pop {r3, r4, r5, r6, r7, pc}
_0219A0CE:
	add r7, sp, #0
_0219A0D0:
	ldrb r0, [r5, r6]
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219E088
	ldr r1, [r5]
	adds r1, r1, r4
	adds r1, #0x44
	ldrb r1, [r1]
	adds r4, r4, #1
	cmp r4, #4
	strb r1, [r7, r0]
	blo _0219A0D0
	movs r3, #0
	add r2, sp, #0
_0219A0EE:
	ldr r0, [r5]
	ldrb r1, [r2, r3]
	adds r0, r0, r3
	adds r0, #0x44
	adds r3, r3, #1
	strb r1, [r0]
	cmp r3, #4
	blo _0219A0EE
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219A100: .word 0x0000046C
	thumb_func_end FUN_0219A074

	thumb_func_start FUN_0219A104
FUN_0219A104: ; 0x0219A104
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _0219A17C ; =0x0000046C
	adds r4, r1, #0
	ldrb r0, [r5, r0]
	movs r1, #0
	bl FUN_0219E088
	adds r6, r0, #0
	ldr r0, _0219A17C ; =0x0000046C
	movs r1, #1
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	lsls r2, r6, #2
	adds r2, r4, r2
	adds r7, r0, #0
	ldr r2, [r2, #0x24]
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219DA84
	lsls r2, r7, #2
	adds r2, r4, r2
	ldr r2, [r2, #0x24]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219DA84
	ldr r0, _0219A17C ; =0x0000046C
	movs r1, #2
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	adds r7, r0, #0
	ldr r0, _0219A17C ; =0x0000046C
	movs r1, #3
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	adds r6, r0, #0
	lsls r0, r7, #2
	adds r0, r4, r0
	ldr r2, [r0, #0x24]
	cmp r2, #0
	beq _0219A168
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219DA84
_0219A168:
	lsls r0, r6, #2
	adds r0, r4, r0
	ldr r2, [r0, #0x24]
	cmp r2, #0
	beq _0219A17A
	adds r0, r5, #0
	movs r1, #3
	bl FUN_0219DA84
_0219A17A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219A17C: .word 0x0000046C
	thumb_func_end FUN_0219A104

	thumb_func_start FUN_0219A180
FUN_0219A180: ; 0x0219A180
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _0219A1BC ; =0x0000046C
	adds r5, r0, #0
	ldrb r0, [r5, r7]
	ldr r4, [r5]
	adds r6, r1, #0
	bl FUN_0219E088
	lsls r0, r0, #2
	adds r3, r5, #0
	movs r1, #0x28
	adds r2, r6, #0
	adds r4, r4, r0
	muls r2, r1, r2
	ldr r1, [r4, #0x48]
	adds r3, #0x20
	ldr r0, [r1]
	cmp r0, #0
	beq _0219A1AE
	adds r0, r3, r2
	bl FUN_0219D7D4
	pop {r3, r4, r5, r6, r7, pc}
_0219A1AE:
	subs r1, r7, #4
	ldrh r1, [r5, r1]
	adds r0, r3, r2
	ldr r2, [r4, #0x34]
	bl FUN_0219D76C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219A1BC: .word 0x0000046C
	thumb_func_end FUN_0219A180

	thumb_func_start FUN_0219A1C0
FUN_0219A1C0: ; 0x0219A1C0
	push {r3, lr}
	ldr r0, [r0]
	ldr r2, [r0, #4]
	cmp r2, #3
	bhi _0219A224
	adds r2, r2, r2
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_0219A1D6: ; jump table
	.short _0219A1DE - _0219A1D6 - 2 ; case 0
	.short _0219A1EA - _0219A1D6 - 2 ; case 1
	.short _0219A1E6 - _0219A1D6 - 2 ; case 2
	.short _0219A1E2 - _0219A1D6 - 2 ; case 3
_0219A1DE:
	movs r0, #1
	pop {r3, pc}
_0219A1E2:
	movs r0, #1
	pop {r3, pc}
_0219A1E6:
	movs r0, #3
	pop {r3, pc}
_0219A1EA:
	adds r2, r0, #0
	adds r2, #0x22
	ldrb r2, [r2]
	cmp r2, #0
	bne _0219A1F8
	movs r0, #2
	pop {r3, pc}
_0219A1F8:
	ldr r2, [r0]
	cmp r2, #3
	bne _0219A202
	movs r0, #1
	pop {r3, pc}
_0219A202:
	adds r2, r1, #2
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x16
	adds r0, r0, r1
	ldr r0, [r0, #0x24]
	cmp r0, #0
	beq _0219A220
	bl FUN_0201FE24
	cmp r0, #0
	ble _0219A220
	movs r0, #1
	pop {r3, pc}
_0219A220:
	movs r0, #2
	pop {r3, pc}
_0219A224:
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_0219A1C0

	thumb_func_start FUN_0219A228
FUN_0219A228: ; 0x0219A228
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r1, #0x23
	ldrb r1, [r1]
	adds r5, r0, #0
	cmp r1, #0
	bne _0219A252
	ldr r1, _0219A264 ; =0x00000468
	adds r2, r5, #0
	adds r2, #0xc0
	ldrh r1, [r5, r1]
	ldr r2, [r2]
	adds r0, #0x20
	bl FUN_0219D76C
	adds r5, #0x48
	ldr r1, [r4, #0x4c]
	adds r0, r5, #0
	bl FUN_0219D7D4
	pop {r3, r4, r5, pc}
_0219A252:
	movs r1, #0
	bl FUN_0219A180
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219A180
	pop {r3, r4, r5, pc}
	nop
_0219A264: .word 0x00000468
	thumb_func_end FUN_0219A228

	thumb_func_start FUN_0219A268
FUN_0219A268: ; 0x0219A268
	push {r3, r4, r5, lr}
	adds r2, r1, #0
	adds r4, r0, #0
	adds r0, r2, #0
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219A29A
	movs r5, #0xb2
	adds r1, #0xb0
	adds r2, #0xb4
	lsls r5, r5, #2
	ldr r1, [r1]
	ldr r2, [r2]
	adds r0, r4, r5
	bl FUN_021D4670
	ldr r0, [r4, #0x10]
	adds r1, r4, r5
	bl FUN_021B1928
	ldr r0, [r4, #0x14]
	adds r1, r4, r5
	bl FUN_021B1928
_0219A29A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219A268

	thumb_func_start FUN_0219A29C
FUN_0219A29C: ; 0x0219A29C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r0, #0x23
	ldrb r0, [r0]
	adds r3, r2, #0
	cmp r0, #0
	beq _0219A2B8
	adds r1, #0x21
	ldrb r0, [r1]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r4, [r0, #0x10]
	b _0219A2BA
_0219A2B8:
	ldr r4, [r5, #0x10]
_0219A2BA:
	movs r0, #0x13
	adds r2, r5, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, #0xc8
	bl FUN_021CE7A0
	adds r1, r0, #0
	adds r0, r4, #0
	str r1, [r5, #4]
	bl FUN_021B194C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219A29C

	thumb_func_start FUN_0219A2D8
FUN_0219A2D8: ; 0x0219A2D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r1, #0
	ldr r4, [r5]
	adds r0, r4, #0
	bl FUN_0219A044
	ldr r7, _0219A42C ; =0x0000046B
	adds r6, r0, #0
	movs r0, #2
	adds r1, r7, #0
	strb r0, [r5, r7]
	subs r1, #0x43
	movs r0, #0
	strb r0, [r5, r1]
	adds r1, r7, #0
	subs r1, #0x42
	movs r0, #1
	strb r0, [r5, r1]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A074
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CCFC
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	subs r0, r7, #3
	ldrh r0, [r5, r0]
	adds r1, r7, #0
	movs r2, #0x1b
	subs r1, #0x7b
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	adds r3, r6, #0
	bl FUN_0219E40C
	str r0, [r5, #8]
	adds r1, r7, #3
	movs r0, #1
	strb r0, [r5, r1]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A228
	movs r0, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	adds r0, r7, #0
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r7, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x10]
	movs r0, #1
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	adds r0, r7, #0
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r7, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A268
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_0219A29C
	ldr r0, [r5, #0x10]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0
	movs r3, #1
	bl FUN_0219E4D8
	ldr r0, [r5, #0x14]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #1
	movs r3, #1
	bl FUN_0219E4D8
	ldr r0, [r5, #8]
	bl FUN_0219E584
	ldr r1, _0219A430 ; =FUN_0219BC2C
	subs r0, r7, #7
	str r1, [r5, r0]
	movs r0, #1
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0219A42C: .word 0x0000046B
_0219A430: .word FUN_0219BC2C
	thumb_func_end FUN_0219A2D8

	thumb_func_start FUN_0219A434
FUN_0219A434: ; 0x0219A434
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0219A446
	bl FUN_021CE8B0
	movs r0, #0
	str r0, [r5, #4]
_0219A446:
	movs r4, #0
_0219A448:
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0219A456
	bl FUN_021B18D0
_0219A456:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219A448
	adds r0, r5, #0
	adds r0, #0xc8
	bl FUN_0219CF90
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	bl FUN_0219CF90
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0219A478
	bl FUN_0219E5A0
_0219A478:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _0219A482
	bl FUN_0219E5A0
_0219A482:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219A434

	thumb_func_start FUN_0219A488
FUN_0219A488: ; 0x0219A488
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r1, #0
	ldr r6, [r5]
	adds r0, r6, #0
	bl FUN_0219A044
	ldr r4, _0219A5F4 ; =0x0000046C
	adds r7, r0, #0
	movs r0, #0
	strb r0, [r5, r4]
	subs r1, r4, #1
	movs r0, #2
	strb r0, [r5, r1]
	adds r1, r4, #0
	subs r1, #0x44
	movs r0, #0
	strb r0, [r5, r1]
	adds r1, r4, #0
	subs r1, #0x43
	movs r0, #1
	strb r0, [r5, r1]
	adds r1, r4, #0
	subs r1, #0x42
	movs r0, #0
	strb r0, [r5, r1]
	adds r1, r4, #0
	subs r1, #0x41
	movs r0, #1
	strb r0, [r5, r1]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0219A074
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CCFC
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0219A228
	subs r0, r4, #4
	ldrh r0, [r5, r0]
	adds r1, r4, #0
	movs r2, #0x1b
	subs r1, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	adds r3, r7, #0
	bl FUN_0219E40C
	str r0, [r5, #8]
	adds r1, r4, #2
	movs r0, #1
	strb r0, [r5, r1]
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r1, r5, #0
	str r7, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	adds r0, r4, #0
	subs r0, #0x7c
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r4, #4
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r6, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x10]
	movs r0, #1
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r1, r5, #0
	str r7, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	adds r0, r4, #0
	subs r0, #0x7c
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r4, #4
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r6, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x14]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0219A268
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0219A29C
	ldr r0, [r5, #0x10]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0
	movs r3, #2
	bl FUN_0219E4D8
	ldr r0, [r5, #0x14]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #1
	movs r3, #2
	bl FUN_0219E4D8
	ldr r0, [r5, #8]
	bl FUN_0219E584
	ldr r0, _0219A5F8 ; =FUN_0219BC2C
	subs r4, #8
	str r0, [r5, r4]
	movs r0, #1
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219A5F4: .word 0x0000046C
_0219A5F8: .word FUN_0219BC2C
	thumb_func_end FUN_0219A488

	thumb_func_start FUN_0219A5FC
FUN_0219A5FC: ; 0x0219A5FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r4, r1, #0
	ldr r6, [r4]
	adds r0, r6, #0
	bl FUN_0219A044
	str r0, [sp, #0x1c]
	ldr r0, _0219A878 ; =0x0000046C
	movs r1, #0
	strb r1, [r4, r0]
	movs r2, #2
	subs r3, r0, #1
	strb r2, [r4, r3]
	adds r3, r0, #0
	subs r3, #0x44
	strb r1, [r4, r3]
	adds r3, r0, #0
	subs r3, #0x42
	strb r1, [r4, r3]
	adds r3, r0, #0
	movs r1, #1
	subs r3, #0x43
	strb r1, [r4, r3]
	adds r3, r0, #0
	subs r3, #0x41
	strb r1, [r4, r3]
	adds r1, r6, #0
	adds r1, #0x22
	ldrb r1, [r1]
	cmp r1, #5
	bhi _0219A680
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219A648: ; jump table
	.short _0219A680 - _0219A648 - 2 ; case 0
	.short _0219A654 - _0219A648 - 2 ; case 1
	.short _0219A654 - _0219A648 - 2 ; case 2
	.short _0219A654 - _0219A648 - 2 ; case 3
	.short _0219A666 - _0219A648 - 2 ; case 4
	.short _0219A674 - _0219A648 - 2 ; case 5
_0219A654:
	adds r1, r0, #0
	subs r1, #0x42
	strb r2, [r4, r1]
	adds r1, r0, #0
	movs r2, #3
	subs r1, #0x41
	strb r2, [r4, r1]
	movs r1, #4
	b _0219A67C
_0219A666:
	adds r1, r0, #0
	movs r2, #3
	subs r1, #0x41
	strb r2, [r4, r1]
	subs r0, r0, #1
	strb r2, [r4, r0]
	b _0219A680
_0219A674:
	adds r1, r0, #0
	subs r1, #0x42
	strb r2, [r4, r1]
	movs r1, #3
_0219A67C:
	subs r0, r0, #1
	strb r1, [r4, r0]
_0219A680:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0219A074
	adds r0, r4, #0
	adds r0, #0xc8
	adds r1, r4, #0
	movs r2, #0
	movs r5, #0
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r4, r0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_0219CCFC
	adds r7, r4, #0
	adds r7, #0xc8
_0219A6A8:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A6D2
	lsls r2, r5, #0x18
	adds r0, r7, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	lsls r2, r5, #0x18
	adds r0, r4, r0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
_0219A6D2:
	adds r5, r5, #1
	cmp r5, #4
	blt _0219A6A8
	adds r0, r6, #0
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	bne _0219A72C
	ldr r1, _0219A87C ; =0x00000468
	adds r2, r4, #0
	adds r2, #0xc0
	adds r0, r4, #0
	ldrh r1, [r4, r1]
	ldr r2, [r2]
	adds r0, #0x20
	bl FUN_0219D76C
	adds r0, r4, #0
	ldr r1, [r6, #0x4c]
	adds r0, #0x48
	bl FUN_0219D7D4
	adds r0, r4, #0
	movs r1, #2
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A714
	adds r0, r4, #0
	ldr r1, [r6, #0x50]
	adds r0, #0x70
	bl FUN_0219D7D4
_0219A714:
	adds r0, r4, #0
	movs r1, #3
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A74C
	adds r0, r4, #0
	ldr r1, [r6, #0x54]
	adds r0, #0x98
	bl FUN_0219D7D4
	b _0219A74C
_0219A72C:
	movs r5, #0
_0219A72E:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A746
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219A180
_0219A746:
	adds r5, r5, #1
	cmp r5, #4
	blt _0219A72E
_0219A74C:
	ldr r0, _0219A87C ; =0x00000468
	ldr r1, _0219A87C ; =0x00000468
	ldrh r0, [r4, r0]
	movs r2, #0x1b
	subs r1, #0x78
	lsls r2, r2, #4
	str r0, [sp]
	ldr r3, [sp, #0x1c]
	adds r0, r4, #0
	adds r1, r4, r1
	adds r2, r4, r2
	bl FUN_0219E40C
	str r0, [r4, #8]
	ldr r0, _0219A87C ; =0x00000468
	movs r1, #1
	adds r0, r0, #6
	strb r1, [r4, r0]
	ldr r0, _0219A87C ; =0x00000468
	movs r5, #0
	subs r0, #0x78
	adds r7, r4, r0
	adds r0, r4, #0
	str r0, [sp, #0x20]
	adds r0, #0xc8
	str r0, [sp, #0x20]
_0219A780:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A7D8
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C424
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0
	cmp r5, #0
	beq _0219A7A4
	movs r1, #1
_0219A7A4:
	lsls r2, r5, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	str r0, [sp, #4]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x20]
	str r0, [sp, #0xc]
	adds r0, r6, #0
	adds r0, #0x23
	ldrb r0, [r0]
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, _0219A87C ; =0x00000468
	str r7, [sp, #0x14]
	ldrh r0, [r4, r0]
	str r0, [sp, #0x18]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	lsls r1, r5, #2
	adds r1, r4, r1
	str r0, [r1, #0x10]
_0219A7D8:
	adds r5, r5, #1
	cmp r5, #4
	blt _0219A780
	adds r0, r6, #0
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219A820
	adds r1, r6, #0
	adds r2, r6, #0
	movs r7, #0xb2
	adds r1, #0xb0
	adds r2, #0xb4
	lsls r7, r7, #2
	ldr r1, [r1]
	ldr r2, [r2]
	adds r0, r4, r7
	bl FUN_021D4670
	movs r5, #0
_0219A800:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A81A
	lsls r0, r5, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x10]
	adds r1, r4, r7
	bl FUN_021B1928
_0219A81A:
	adds r5, r5, #1
	cmp r5, #4
	blt _0219A800
_0219A820:
	ldr r2, [sp, #0x1c]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0219A29C
	movs r5, #0
_0219A82C:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219A860
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C424
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r0, r5, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B1968
	adds r1, r0, #0
	lsls r2, r5, #0x18
	ldr r0, [r4, #8]
	lsrs r2, r2, #0x18
	adds r3, r6, #0
	bl FUN_0219E4D8
_0219A860:
	adds r5, r5, #1
	cmp r5, #4
	blt _0219A82C
	ldr r0, [r4, #8]
	bl FUN_0219E584
	ldr r1, _0219A880 ; =FUN_0219BC2C
	ldr r0, _0219A884 ; =0x00000464
	str r1, [r4, r0]
	movs r0, #1
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219A878: .word 0x0000046C
_0219A87C: .word 0x00000468
_0219A880: .word FUN_0219BC2C
_0219A884: .word 0x00000464
	thumb_func_end FUN_0219A5FC

	thumb_func_start FUN_0219A888
FUN_0219A888: ; 0x0219A888
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r1, #0
	ldr r4, [r5]
	adds r0, r4, #0
	bl FUN_0219A044
	adds r6, r0, #0
	ldr r0, _0219AA04 ; =0x0000046B
	movs r1, #2
	strb r1, [r5, r0]
	ldr r1, _0219AA04 ; =0x0000046B
	movs r7, #1
	adds r0, r0, #3
	strb r7, [r5, r0]
	subs r1, #0x43
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AA04 ; =0x0000046B
	ldr r1, _0219AA04 ; =0x0000046B
	subs r0, #0x42
	strb r7, [r5, r0]
	subs r1, #0x41
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AA04 ; =0x0000046B
	ldr r1, _0219AA04 ; =0x0000046B
	subs r0, #0x40
	strb r7, [r5, r0]
	subs r1, #0x3f
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AA04 ; =0x0000046B
	adds r1, r4, #0
	subs r0, #0x3e
	strb r7, [r5, r0]
	adds r0, r5, #0
	bl FUN_0219A074
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CCFC
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A228
	ldr r0, _0219AA04 ; =0x0000046B
	ldr r1, _0219AA04 ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	movs r2, #0x1b
	subs r1, #0x7b
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	adds r3, r6, #0
	bl FUN_0219E40C
	str r0, [r5, #8]
	ldr r0, _0219AA04 ; =0x0000046B
	adds r1, r5, #0
	adds r0, r0, #3
	strb r7, [r5, r0]
	movs r0, #0
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, _0219AA04 ; =0x0000046B
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	ldr r0, _0219AA04 ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x10]
	adds r1, r5, #0
	str r7, [sp]
	movs r0, #3
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r4, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, _0219AA04 ; =0x0000046B
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	ldr r0, _0219AA04 ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A268
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_0219A29C
	ldr r0, [r5, #0x10]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0
	movs r3, #3
	bl FUN_0219E4D8
	ldr r0, [r5, #0x14]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #1
	movs r3, #3
	bl FUN_0219E4D8
	ldr r0, [r5, #8]
	bl FUN_0219E584
	ldr r0, _0219AA04 ; =0x0000046B
	ldr r1, _0219AA08 ; =FUN_0219BC2C
	subs r0, r0, #7
	str r1, [r5, r0]
	movs r0, #1
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0219AA04: .word 0x0000046B
_0219AA08: .word FUN_0219BC2C
	thumb_func_end FUN_0219A888

	thumb_func_start FUN_0219AA0C
FUN_0219AA0C: ; 0x0219AA0C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r1, #0
	ldr r4, [r5]
	adds r0, r4, #0
	bl FUN_0219A044
	adds r6, r0, #0
	ldr r0, _0219AB7C ; =0x0000046B
	movs r1, #2
	strb r1, [r5, r0]
	adds r1, r0, #0
	subs r1, #0x43
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AB7C ; =0x0000046B
	ldr r1, _0219AB7C ; =0x0000046B
	movs r7, #1
	subs r0, #0x42
	strb r7, [r5, r0]
	subs r1, #0x41
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AB7C ; =0x0000046B
	ldr r1, _0219AB7C ; =0x0000046B
	subs r0, #0x40
	strb r7, [r5, r0]
	subs r1, #0x3f
	movs r0, #0
	strb r0, [r5, r1]
	ldr r0, _0219AB7C ; =0x0000046B
	adds r1, r4, #0
	subs r0, #0x3e
	strb r7, [r5, r0]
	adds r0, r5, #0
	bl FUN_0219A074
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CCFC
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CCFC
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219CD7C
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219CD7C
	ldr r0, _0219AB7C ; =0x0000046B
	ldr r1, _0219AB7C ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	movs r2, #0x1b
	subs r1, #0x7b
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	adds r3, r6, #0
	bl FUN_0219E40C
	str r0, [r5, #8]
	ldr r0, _0219AB7C ; =0x0000046B
	adds r1, r4, #0
	adds r0, r0, #3
	strb r7, [r5, r0]
	adds r0, r5, #0
	bl FUN_0219A228
	movs r0, #0
	str r0, [sp]
	str r7, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, _0219AB7C ; =0x0000046B
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	ldr r0, _0219AB7C ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x10]
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	str r6, [sp, #0xc]
	adds r0, #0x23
	ldrb r0, [r0]
	adds r1, #0xc8
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, _0219AB7C ; =0x0000046B
	subs r0, #0x7b
	adds r0, r5, r0
	str r0, [sp, #0x14]
	ldr r0, _0219AB7C ; =0x0000046B
	subs r0, r0, #3
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldr r3, [r4, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	str r0, [r5, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219A268
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_0219A29C
	ldr r0, [r5, #0x10]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0
	movs r3, #1
	bl FUN_0219E4D8
	ldr r0, [r5, #0x14]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #1
	movs r3, #1
	bl FUN_0219E4D8
	ldr r0, [r5, #8]
	bl FUN_0219E584
	ldr r0, _0219AB7C ; =0x0000046B
	ldr r1, _0219AB80 ; =FUN_0219BC2C
	subs r0, r0, #7
	str r1, [r5, r0]
	movs r0, #1
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219AB7C: .word 0x0000046B
_0219AB80: .word FUN_0219BC2C
	thumb_func_end FUN_0219AA0C

	thumb_func_start FUN_0219AB84
FUN_0219AB84: ; 0x0219AB84
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, [r5]
	adds r4, r1, #0
	cmp r2, #0
	bne _0219ABCA
	ldr r6, _0219ABF4 ; =0x0000046B
	movs r0, #2
	strb r0, [r4, r6]
	adds r0, r6, #0
	movs r1, #0
	subs r0, #0x43
	strb r1, [r4, r0]
	adds r0, r6, #0
	movs r1, #1
	subs r0, #0x42
	strb r1, [r4, r0]
	ldr r0, [r4]
	movs r2, #0
	adds r0, #0x21
	ldrb r1, [r0]
	adds r0, r6, #1
	strb r1, [r4, r0]
	adds r1, r6, #1
	ldrb r1, [r4, r1]
	adds r0, r4, #0
	bl FUN_0219C498
	adds r1, r6, #2
	strb r0, [r4, r1]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219ABCA:
	cmp r2, #7
	bhs _0219ABF0
	lsls r3, r2, #2
	ldr r2, _0219ABF8 ; =0x021D6C90
	movs r6, #0x46
	lsls r6, r6, #4
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r4, r6
	blx r2
	cmp r0, #0
	beq _0219ABEC
	movs r0, #0
	str r0, [r4, r6]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219ABEC:
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219ABF0:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219ABF4: .word 0x0000046B
_0219ABF8: .word 0x021D6C90
	thumb_func_end FUN_0219AB84

	thumb_func_start FUN_0219ABFC
FUN_0219ABFC: ; 0x0219ABFC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, [r5]
	adds r4, r1, #0
	cmp r2, #0
	bne _0219AC86
	ldr r0, [r4]
	adds r0, #0x22
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219AC1A
	cmp r0, #1
	beq _0219AC42
	cmp r0, #2
	beq _0219AC3C
_0219AC1A:
	ldr r2, _0219ACB0 ; =0x0000046B
	movs r0, #2
	adds r1, r2, #0
	strb r0, [r4, r2]
	movs r0, #0
	subs r1, #0x43
	strb r0, [r4, r1]
	adds r1, r2, #0
	movs r3, #1
	subs r1, #0x42
	strb r3, [r4, r1]
	adds r1, r2, #0
	subs r1, #0x41
	strb r0, [r4, r1]
	subs r2, #0x40
	strb r3, [r4, r2]
	b _0219AC66
_0219AC3C:
	ldr r0, _0219ACB4 ; =0x00000471
	movs r1, #2
	strb r1, [r4, r0]
_0219AC42:
	ldr r1, _0219ACB0 ; =0x0000046B
	movs r0, #4
	strb r0, [r4, r1]
	adds r0, r1, #0
	movs r2, #0
	subs r0, #0x43
	strb r2, [r4, r0]
	adds r0, r1, #0
	movs r2, #1
	subs r0, #0x42
	strb r2, [r4, r0]
	adds r0, r1, #0
	movs r2, #2
	subs r0, #0x41
	strb r2, [r4, r0]
	movs r0, #3
	subs r1, #0x40
	strb r0, [r4, r1]
_0219AC66:
	ldr r0, [r4]
	ldr r6, _0219ACB8 ; =0x0000046C
	adds r0, #0x21
	ldrb r1, [r0]
	adds r0, r4, #0
	movs r2, #0
	strb r1, [r4, r6]
	bl FUN_0219C498
	adds r1, r6, #1
	strb r0, [r4, r1]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219AC86:
	cmp r2, #7
	bhs _0219ACAC
	lsls r3, r2, #2
	ldr r2, _0219ACBC ; =0x021D6C74
	movs r6, #0x46
	lsls r6, r6, #4
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r4, r6
	blx r2
	cmp r0, #0
	beq _0219ACA8
	movs r0, #0
	str r0, [r4, r6]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219ACA8:
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219ACAC:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219ACB0: .word 0x0000046B
_0219ACB4: .word 0x00000471
_0219ACB8: .word 0x0000046C
_0219ACBC: .word 0x021D6C74
	thumb_func_end FUN_0219ABFC

	thumb_func_start FUN_0219ACC0
FUN_0219ACC0: ; 0x0219ACC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, [r5]
	adds r4, r1, #0
	cmp r2, #0
	bne _0219AD1E
	ldr r6, _0219AD48 ; =0x0000046B
	movs r0, #2
	strb r0, [r4, r6]
	adds r0, r6, #0
	adds r2, r6, #0
	movs r1, #0
	subs r0, #0x43
	strb r1, [r4, r0]
	movs r0, #1
	subs r2, #0x42
	strb r0, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x41
	strb r1, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x40
	strb r0, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x3f
	strb r1, [r4, r2]
	adds r1, r6, #0
	subs r1, #0x3e
	strb r0, [r4, r1]
	ldr r0, [r4]
	movs r2, #0
	adds r0, #0x21
	ldrb r1, [r0]
	adds r0, r6, #1
	strb r1, [r4, r0]
	adds r1, r6, #1
	ldrb r1, [r4, r1]
	adds r0, r4, #0
	bl FUN_0219C498
	adds r1, r6, #2
	strb r0, [r4, r1]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219AD1E:
	cmp r2, #7
	bhs _0219AD44
	lsls r3, r2, #2
	ldr r2, _0219AD4C ; =0x021D6CAC
	movs r6, #0x46
	lsls r6, r6, #4
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r4, r6
	blx r2
	cmp r0, #0
	beq _0219AD40
	movs r0, #0
	str r0, [r4, r6]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219AD40:
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219AD44:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219AD48: .word 0x0000046B
_0219AD4C: .word 0x021D6CAC
	thumb_func_end FUN_0219ACC0

	thumb_func_start FUN_0219AD50
FUN_0219AD50: ; 0x0219AD50
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, [r5]
	adds r4, r1, #0
	cmp r2, #0
	bne _0219ADAE
	ldr r6, _0219ADD8 ; =0x0000046B
	movs r0, #2
	strb r0, [r4, r6]
	adds r0, r6, #0
	adds r2, r6, #0
	movs r1, #0
	subs r0, #0x43
	strb r1, [r4, r0]
	movs r0, #1
	subs r2, #0x42
	strb r0, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x41
	strb r1, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x40
	strb r0, [r4, r2]
	adds r2, r6, #0
	subs r2, #0x3f
	strb r1, [r4, r2]
	adds r1, r6, #0
	subs r1, #0x3e
	strb r0, [r4, r1]
	ldr r0, [r4]
	movs r2, #0
	adds r0, #0x21
	ldrb r1, [r0]
	adds r0, r6, #1
	strb r1, [r4, r0]
	adds r1, r6, #1
	ldrb r1, [r4, r1]
	adds r0, r4, #0
	bl FUN_0219C498
	adds r1, r6, #2
	strb r0, [r4, r1]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219ADAE:
	cmp r2, #7
	bhs _0219ADD4
	lsls r3, r2, #2
	ldr r2, _0219ADDC ; =0x021D6CC8
	movs r6, #0x46
	lsls r6, r6, #4
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r4, r6
	blx r2
	cmp r0, #0
	beq _0219ADD0
	movs r0, #0
	str r0, [r4, r6]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219ADD0:
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219ADD4:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219ADD8: .word 0x0000046B
_0219ADDC: .word 0x021D6CC8
	thumb_func_end FUN_0219AD50

	thumb_func_start FUN_0219ADE0
FUN_0219ADE0: ; 0x0219ADE0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219ADFE
	ldr r1, _0219AF80 ; =0x00000473
	movs r0, #1
	ldrb r2, [r4, r1]
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r4, r1]
	pop {r4, r5, r6, pc}
_0219ADFE:
	ldr r0, [r6]
	cmp r0, #3
	bhi _0219AE34
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219AE10: ; jump table
	.short _0219AE18 - _0219AE10 - 2 ; case 0
	.short _0219AE2C - _0219AE10 - 2 ; case 1
	.short _0219AE5E - _0219AE10 - 2 ; case 2
	.short _0219AEF6 - _0219AE10 - 2 ; case 3
_0219AE18:
	ldr r0, _0219AF84 ; =0x0000046C
	ldrb r0, [r4, r0]
	bl FUN_021B9AD4
	cmp r0, #0
	beq _0219AE34
_0219AE24:
	ldr r0, [r6]
	adds r0, r0, #1
_0219AE28:
	str r0, [r6]
	b _0219AF7A
_0219AE2C:
	bl FUN_021B9B88
	cmp r0, #0
	bne _0219AE36
_0219AE34:
	b _0219AF7A
_0219AE36:
	ldr r5, _0219AF88 ; =0x0000046A
	movs r0, #0
	strb r0, [r4, r5]
	bl FUN_021B9BA0
	adds r1, r5, #4
	strb r0, [r4, r1]
	bl FUN_021B9BB8
	ldr r1, [r4]
	adds r1, #0xad
	strb r0, [r1]
	bl FUN_021B9BA0
	cmp r0, #0
	beq _0219AE5A
	movs r0, #2
_0219AE58:
	b _0219AE28
_0219AE5A:
	movs r0, #3
	b _0219AE58
_0219AE5E:
	movs r5, #0x3f
	lsls r5, r5, #4
	adds r0, r5, #0
	adds r0, #0x18
	adds r2, r4, r5
	adds r3, r4, r0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r4]
	adds r1, r0, #0
	adds r1, #0xa2
	ldrh r2, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	strh r2, [r4, r1]
	adds r1, r0, #0
	adds r1, #0x8c
	ldrh r2, [r1]
	adds r1, r5, #0
	adds r1, #0x32
	adds r0, #0x8e
	strh r2, [r4, r1]
	ldrh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x34
	strh r1, [r4, r0]
	movs r1, #1
	adds r0, r4, #0
	lsls r1, r1, #0xc
	bl FUN_0219DB04
	cmp r0, #0
	beq _0219AECE
	adds r0, r5, #0
	adds r0, #0x4c
	ldr r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x36
	strb r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x37
	ldrb r0, [r4, r0]
	movs r1, #0xf
	bics r0, r1
	adds r1, r5, #0
	adds r1, #0x83
	ldrb r1, [r4, r1]
	lsls r1, r1, #0x1d
	lsrs r2, r1, #0x1f
	movs r1, #0xf
	ands r1, r2
	b _0219AEE2
_0219AECE:
	adds r0, r5, #0
	movs r1, #2
	adds r0, #0x36
	strb r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x37
	ldrb r1, [r4, r0]
	movs r0, #0xf
	bics r1, r0
	movs r0, #1
_0219AEE2:
	orrs r0, r1
	adds r5, #0x37
	strb r0, [r4, r5]
	ldr r0, _0219AF8C ; =0x00000408
	adds r0, r4, r0
	bl FUN_021B9BF8
	cmp r0, #0
	beq _0219AF7A
	b _0219AE24
_0219AEF6:
	ldr r5, _0219AF8C ; =0x00000408
	adds r0, r4, r5
	bl FUN_021B9C4C
	cmp r0, #0
	beq _0219AF7A
	adds r0, r5, #0
	adds r0, #0x18
	ldr r2, [r4]
	ldrh r1, [r4, r0]
	adds r0, r2, #0
	adds r0, #0xa2
	strh r1, [r0]
	adds r3, r4, r5
	adds r2, #0xb8
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	adds r0, r5, #0
	subs r0, #0x18
	adds r3, r4, r5
	adds r2, r4, r0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	adds r0, r5, #0
	adds r0, #0x6b
	ldrb r0, [r4, r0]
	movs r1, #4
	bics r0, r1
	adds r1, r5, #0
	adds r1, #0x1f
	ldrb r1, [r4, r1]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1d
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x6b
	strb r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x1e
	ldrb r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x34
	str r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x1a
	ldrh r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x38
	strh r1, [r4, r0]
	adds r0, r5, #0
	adds r0, #0x1c
	ldrh r0, [r4, r0]
	adds r5, #0x3a
	strh r0, [r4, r5]
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219AF7A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_0219AF80: .word 0x00000473
_0219AF84: .word 0x0000046C
_0219AF88: .word 0x0000046A
_0219AF8C: .word 0x00000408
	thumb_func_end FUN_0219ADE0

	thumb_func_start FUN_0219AF90
FUN_0219AF90: ; 0x0219AF90
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	ldr r5, [r4]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219AFB0
	ldr r1, _0219B18C ; =0x00000473
	movs r0, #1
	ldrb r2, [r4, r1]
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r4, r1]
	pop {r3, r4, r5, r6, r7, pc}
_0219AFB0:
	ldr r0, [r6]
	cmp r0, #0xc
	bls _0219AFB8
	b _0219B182
_0219AFB8:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219AFC4: ; jump table
	.short _0219AFDE - _0219AFC4 - 2 ; case 0
	.short _0219AFEC - _0219AFC4 - 2 ; case 1
	.short _0219AFF8 - _0219AFC4 - 2 ; case 2
	.short _0219B004 - _0219AFC4 - 2 ; case 3
	.short _0219B04A - _0219AFC4 - 2 ; case 4
	.short _0219B084 - _0219AFC4 - 2 ; case 5
	.short _0219B09A - _0219AFC4 - 2 ; case 6
	.short _0219B0B2 - _0219AFC4 - 2 ; case 7
	.short _0219B182 - _0219AFC4 - 2 ; case 8
	.short _0219B182 - _0219AFC4 - 2 ; case 9
	.short _0219B0EE - _0219AFC4 - 2 ; case 10
	.short _0219B14A - _0219AFC4 - 2 ; case 11
	.short _0219B17C - _0219AFC4 - 2 ; case 12
_0219AFDE:
	movs r0, #2
_0219AFE0:
	bl FUN_021BA334
_0219AFE4:
	ldr r0, [r6]
	adds r0, r0, #1
_0219AFE8:
	str r0, [r6]
	b _0219B186
_0219AFEC:
	movs r0, #2
	bl FUN_021BA358
	cmp r0, #0
	beq _0219B00C
	b _0219AFE4
_0219AFF8:
	ldr r0, [r5, #0x24]
	bl FUN_021B9C78
	cmp r0, #0
	beq _0219B00C
	b _0219AFE4
_0219B004:
	bl FUN_021B9D0C
	cmp r0, #0
	bne _0219B00E
_0219B00C:
	b _0219B186
_0219B00E:
	ldr r5, _0219B190 ; =0x00000471
	ldrb r0, [r4, r5]
	cmp r0, #0
	bne _0219B01A
_0219B016:
	movs r0, #0xa
_0219B018:
	b _0219AFE8
_0219B01A:
	subs r0, r5, #3
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _0219B040
	bl FUN_0201FD24
	subs r5, #9
	ldrh r2, [r4, r5]
	ldr r1, _0219B194 ; =0x00007FFF
	ands r2, r1
	adds r1, r1, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BA564
	movs r1, #0xb1
	lsls r1, r1, #2
	str r0, [r4, r1]
_0219B040:
	movs r0, #0x47
	movs r1, #0
	lsls r0, r0, #4
	strb r1, [r4, r0]
	b _0219AFE4
_0219B04A:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r4, r0]
	movs r1, #1
	cmp r0, #0
	beq _0219B058
	movs r1, #3
_0219B058:
	ldr r0, _0219B198 ; =0x00000472
	strb r1, [r4, r0]
	subs r1, r0, #4
	ldrb r1, [r4, r1]
	cmp r1, #0
	beq _0219B076
	ldrb r2, [r4, r0]
	movs r0, #0xb1
	lsls r0, r0, #2
	lsls r1, r2, #2
	adds r1, r5, r1
	ldr r0, [r4, r0]
	ldr r1, [r1, #0x24]
	bl FUN_021BA5A4
_0219B076:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r4, r0]
	adds r0, r0, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _0219AFE0
_0219B084:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r4, r0]
	adds r0, r0, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021BA358
	cmp r0, #0
	beq _0219B186
	b _0219AFE4
_0219B09A:
	ldr r0, _0219B19C ; =0x0000046E
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _0219B0B0
	movs r0, #0xb1
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021B9EC0
	cmp r0, #0
	beq _0219B186
_0219B0B0:
	b _0219AFE4
_0219B0B2:
	ldr r5, _0219B198 ; =0x00000472
	ldrb r0, [r4, r5]
	bl FUN_021B9FC4
	cmp r0, #0
	beq _0219B186
	subs r0, r5, #2
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r5, #2
	strb r1, [r4, r0]
	ldrb r1, [r4, r0]
	subs r0, r5, #1
	ldrb r0, [r4, r0]
	cmp r1, r0
	blo _0219B0EA
	subs r0, r5, #4
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _0219B0E8
	movs r5, #0xb1
	lsls r5, r5, #2
	ldr r0, [r4, r5]
	bl FUN_021BA59C
	movs r0, #0
	str r0, [r4, r5]
_0219B0E8:
	b _0219B016
_0219B0EA:
	movs r0, #4
	b _0219B018
_0219B0EE:
	adds r0, r4, #0
	adds r0, #0xc8
	adds r1, r4, #0
	movs r2, #0
	movs r5, #0
	bl FUN_0219CCFC
	adds r7, r4, #0
	adds r7, #0xc8
_0219B100:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B142
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021B9FE4
	lsls r1, r5, #0x18
	adds r2, r0, #0
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219DA84
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021B9FE4
	lsls r1, r5, #0x18
	adds r2, r0, #0
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219DFC0
	lsls r2, r5, #0x18
	adds r0, r7, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
_0219B142:
	adds r5, r5, #1
	cmp r5, #4
	blo _0219B100
	b _0219AFE4
_0219B14A:
	movs r7, #0x1b
	lsls r7, r7, #4
	adds r0, r4, r7
	adds r1, r4, #0
	movs r2, #1
	bl FUN_0219CCFC
	movs r5, #0
_0219B15A:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B174
	lsls r2, r5, #0x18
	adds r0, r4, r7
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
_0219B174:
	adds r5, r5, #1
	cmp r5, #4
	blo _0219B15A
	b _0219AFE4
_0219B17C:
	bl FUN_021BA040
	b _0219AFE4
_0219B182:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219B186:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219B18C: .word 0x00000473
_0219B190: .word 0x00000471
_0219B194: .word 0x00007FFF
_0219B198: .word 0x00000472
_0219B19C: .word 0x0000046E
	thumb_func_end FUN_0219AF90

	thumb_func_start FUN_0219B1A0
FUN_0219B1A0: ; 0x0219B1A0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r6, r0, #0
	ldr r0, [r6]
	str r1, [sp]
	str r0, [sp, #0xc]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219B1C6
	ldr r1, _0219B3D4 ; =0x00000473
	movs r0, #1
	ldrb r2, [r6, r1]
	add sp, #0x30
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r6, r1]
	pop {r3, r4, r5, r6, r7, pc}
_0219B1C6:
	ldr r0, [sp]
	ldr r0, [r0]
	cmp r0, #0xa
	bls _0219B1D0
	b _0219B3C8
_0219B1D0:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219B1DC: ; jump table
	.short _0219B1F2 - _0219B1DC - 2 ; case 0
	.short _0219B204 - _0219B1DC - 2 ; case 1
	.short _0219B210 - _0219B1DC - 2 ; case 2
	.short _0219B21E - _0219B1DC - 2 ; case 3
	.short _0219B316 - _0219B1DC - 2 ; case 4
	.short _0219B32A - _0219B1DC - 2 ; case 5
	.short _0219B338 - _0219B1DC - 2 ; case 6
	.short _0219B34E - _0219B1DC - 2 ; case 7
	.short _0219B384 - _0219B1DC - 2 ; case 8
	.short _0219B3C8 - _0219B1DC - 2 ; case 9
	.short _0219B3C2 - _0219B1DC - 2 ; case 10
_0219B1F2:
	movs r0, #4
_0219B1F4:
	bl FUN_021BA334
_0219B1F8:
	ldr r0, [sp]
	ldr r0, [r0]
	adds r1, r0, #1
_0219B1FE:
	ldr r0, [sp]
	str r1, [r0]
	b _0219B3CE
_0219B204:
	movs r0, #4
	bl FUN_021BA358
	cmp r0, #0
	beq _0219B226
	b _0219B1F8
_0219B210:
	adds r6, #0xc0
	ldr r0, [r6]
	bl FUN_021BA048
	cmp r0, #0
	beq _0219B226
	b _0219B1F8
_0219B21E:
	bl FUN_021BA0D8
	cmp r0, #0
	bne _0219B228
_0219B226:
	b _0219B3CE
_0219B228:
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, _0219B3D8 ; =0x0000046B
	ldrb r0, [r6, r0]
	cmp r0, #0
	bls _0219B314
_0219B234:
	ldr r0, [sp, #8]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021BA10C
	adds r2, r0, #0
	beq _0219B304
	ldr r0, [sp, #8]
	movs r1, #0x28
	muls r1, r0, r1
	str r1, [sp, #4]
	adds r1, r6, #0
	ldr r0, [sp, #4]
	adds r1, #0x20
	ldr r4, _0219B3DC ; =0x00000468
	adds r0, r1, r0
	ldrh r1, [r6, r4]
	bl FUN_0219D76C
	adds r0, r4, #4
	ldrb r1, [r6, r0]
	ldr r0, [sp, #8]
	cmp r0, r1
	beq _0219B2F2
	ldr r0, [sp, #0xc]
	adds r0, #0xdd
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	beq _0219B2F2
	ldrh r3, [r6, r4]
	movs r0, #0
	movs r1, #2
	movs r2, #0x65
	movs r5, #0
	bl FUN_02048788
	adds r7, r0, #0
	movs r1, #0x18
	bl FUN_020489B8
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_02048800
	adds r0, r4, #0
	bl FUN_0204871C
	adds r7, r0, #0
	b _0219B2A2
_0219B298:
	lsls r2, r5, #1
	ldrh r1, [r7, r2]
	add r0, sp, #0x10
	adds r5, r5, #1
	strh r1, [r0, r2]
_0219B2A2:
	cmp r5, #0xf
	bge _0219B2B0
	adds r0, r4, #0
	bl FUN_02048624
	cmp r5, r0
	blo _0219B298
_0219B2B0:
	bl FUN_02048720
	lsls r1, r5, #1
	add r5, sp, #0x10
	strh r0, [r5, r1]
	adds r0, r4, #0
	bl FUN_02048590
	ldr r0, [sp, #4]
	adds r1, r5, #0
	adds r4, r6, r0
	ldr r0, [r4, #0x20]
	bl FUN_02008B74
	ldr r0, [r4, #0x24]
	bl FUN_02048590
	ldr r3, _0219B3DC ; =0x00000468
	movs r0, #0
	ldrh r3, [r6, r3]
	movs r1, #2
	movs r2, #0x65
	bl FUN_02048788
	adds r7, r0, #0
	movs r1, #0x18
	bl FUN_020489B8
	adds r5, r0, #0
	adds r0, r7, #0
	bl FUN_02048800
	str r5, [r4, #0x24]
_0219B2F2:
	ldr r2, [sp, #4]
	ldr r1, [sp, #8]
	adds r2, r6, r2
	lsls r1, r1, #0x18
	ldr r2, [r2, #0x20]
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_0219DFE8
_0219B304:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	str r0, [sp, #8]
	ldr r0, _0219B3D8 ; =0x0000046B
	ldrb r1, [r6, r0]
	ldr r0, [sp, #8]
	cmp r0, r1
	blo _0219B234
_0219B314:
	b _0219B1F8
_0219B316:
	ldr r0, _0219B3E0 ; =0x00000471
	ldrb r1, [r6, r0]
	cmp r1, #0
	bne _0219B322
_0219B31E:
	movs r1, #0xa
_0219B320:
	b _0219B1FE
_0219B322:
	movs r1, #0
	subs r0, r0, #1
	strb r1, [r6, r0]
	b _0219B1F8
_0219B32A:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r6, r0]
	adds r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _0219B1F4
_0219B338:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r6, r0]
	adds r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021BA358
	cmp r0, #0
	beq _0219B3CE
	b _0219B1F8
_0219B34E:
	movs r0, #0x47
	lsls r0, r0, #4
	ldrb r0, [r6, r0]
	movs r1, #1
	cmp r0, #0
	beq _0219B35C
	movs r1, #3
_0219B35C:
	ldr r0, _0219B3E4 ; =0x00000472
	strb r1, [r6, r0]
	subs r1, r0, #4
	ldrb r1, [r6, r1]
	cmp r1, #0
	beq _0219B37A
	ldrb r0, [r6, r0]
	lsls r1, r0, #2
	ldr r0, [sp, #0xc]
	adds r0, r0, r1
	ldr r0, [r0, #0x48]
	bl FUN_021BA148
	cmp r0, #0
	beq _0219B3CE
_0219B37A:
	ldr r0, [sp]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp]
	str r1, [r0]
_0219B384:
	bl FUN_021BA1F0
	cmp r0, #0
	beq _0219B3CE
	bl FUN_021BA20C
	ldr r4, _0219B3E4 ; =0x00000472
	adds r1, r0, #0
	adds r3, r6, #0
	ldrb r2, [r6, r4]
	movs r0, #0x28
	adds r3, #0x20
	muls r0, r2, r0
	adds r0, r3, r0
	bl FUN_0219D848
	bl FUN_021BA220
	subs r0, r4, #2
	ldrb r0, [r6, r0]
	adds r1, r0, #1
	subs r0, r4, #2
	strb r1, [r6, r0]
	ldrb r1, [r6, r0]
	subs r0, r4, #1
	ldrb r0, [r6, r0]
	cmp r1, r0
	blo _0219B3BE
	b _0219B31E
_0219B3BE:
	movs r1, #5
	b _0219B320
_0219B3C2:
	bl FUN_021BA244
	b _0219B1F8
_0219B3C8:
	add sp, #0x30
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219B3CE:
	movs r0, #0
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219B3D4: .word 0x00000473
_0219B3D8: .word 0x0000046B
_0219B3DC: .word 0x00000468
_0219B3E0: .word 0x00000471
_0219B3E4: .word 0x00000472
	thumb_func_end FUN_0219B1A0

	thumb_func_start FUN_0219B3E8
FUN_0219B3E8: ; 0x0219B3E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	str r1, [sp]
	ldr r5, [r4]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219B40C
	ldr r1, _0219B4E4 ; =0x00000473
	movs r0, #1
	ldrb r2, [r4, r1]
	add sp, #0xc
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r4, r1]
	pop {r4, r5, r6, r7, pc}
_0219B40C:
	ldr r0, [sp]
	ldr r0, [r0]
	cmp r0, #3
	bhi _0219B4D6
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219B420: ; jump table
	.short _0219B428 - _0219B420 - 2 ; case 0
	.short _0219B43E - _0219B420 - 2 ; case 1
	.short _0219B44A - _0219B420 - 2 ; case 2
	.short _0219B45E - _0219B420 - 2 ; case 3
_0219B428:
	bl FUN_021B9D40
	movs r0, #3
	bl FUN_021BA334
_0219B432:
	ldr r0, [sp]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp]
	str r1, [r0]
	b _0219B4DC
_0219B43E:
	movs r0, #3
	bl FUN_021BA358
	cmp r0, #0
	beq _0219B4DC
	b _0219B432
_0219B44A:
	ldr r0, [r5, #0x70]
	bl FUN_02017934
	bl FUN_02007E64
	bl FUN_021B9D4C
	cmp r0, #0
	beq _0219B4DC
	b _0219B432
_0219B45E:
	bl FUN_021B9E3C
	cmp r0, #0
	beq _0219B4DC
	ldr r0, _0219B4E8 ; =0x00000468
	movs r5, #0
	str r0, [sp, #8]
	subs r0, #0x88
	str r0, [sp, #8]
	ldr r0, _0219B4E8 ; =0x00000468
	str r0, [sp, #4]
	subs r0, #0x88
	str r0, [sp, #4]
_0219B478:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B4C0
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D8C8
	cmp r0, #0
	bne _0219B4C0
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021B9E88
	adds r7, r0, #0
	beq _0219B4C0
	lsls r0, r5, #2
	adds r6, r4, r0
	ldr r0, _0219B4E8 ; =0x00000468
	ldrh r0, [r4, r0]
	bl FUN_02007E40
	ldr r1, [sp, #8]
	str r0, [r6, r1]
	bl FUN_02007E20
	ldr r1, [sp, #4]
	adds r2, r0, #0
	ldr r1, [r6, r1]
	adds r0, r7, #0
	blx FUN_0207894C
_0219B4C0:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219E010
	adds r5, r5, #1
	cmp r5, #4
	blo _0219B478
	bl FUN_021B9EB4
	b _0219B432
_0219B4D6:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0219B4DC:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0219B4E4: .word 0x00000473
_0219B4E8: .word 0x00000468
	thumb_func_end FUN_0219B3E8

	thumb_func_start FUN_0219B4EC
FUN_0219B4EC: ; 0x0219B4EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	ldr r7, [r5]
	ldr r6, _0219B64C ; =0x0000046C
	adds r0, r7, #0
	ldrb r4, [r5, r6]
	bl FUN_0219A044
	str r0, [sp, #0x20]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219B51E
	adds r0, r6, #7
	ldrb r1, [r5, r0]
	movs r0, #1
	add sp, #0x34
	bics r1, r0
	adds r2, r1, #0
	movs r0, #1
	orrs r2, r0
	adds r1, r6, #7
	strb r2, [r5, r1]
	pop {r4, r5, r6, r7, pc}
_0219B51E:
	adds r0, r6, #2
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _0219B5BA
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	adds r1, r6, #0
	movs r2, #0x1b
	subs r1, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	bl FUN_0219E40C
	str r0, [r5, #8]
	adds r0, r5, #0
	str r0, [sp, #0x24]
	adds r0, #0x10
	str r0, [sp, #0x24]
	lsls r0, r4, #2
	str r0, [sp, #0x28]
	movs r0, #1
	str r4, [sp]
	adds r2, r7, #0
	adds r1, r5, #0
	str r0, [sp, #0x1c]
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r2, #0x20
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	adds r0, r6, #0
	subs r0, #0x7c
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r7, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x28]
	str r0, [r2, r1]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	adds r2, r4, #0
	movs r3, #1
	bl FUN_0219E4D8
	cmp r4, #0
	beq _0219B5A0
	movs r0, #0
	str r0, [sp, #0x1c]
_0219B5A0:
	movs r0, #1
	str r0, [sp]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r3, [sp, #0x1c]
	ldrb r1, [r1]
	lsls r3, r3, #0x18
	ldr r0, [r5, #8]
	ldr r2, [r7, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0219E510
	b _0219B644
_0219B5BA:
	adds r0, r5, #0
	str r0, [sp, #0x2c]
	adds r0, #0x10
	str r0, [sp, #0x2c]
	lsls r0, r4, #2
	str r0, [sp, #0x30]
	str r4, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r4, #0
	ldr r0, [sp, #0x20]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r6, #0
	subs r0, #0x7c
	adds r2, r7, #0
	adds r1, r5, #0
	str r4, [sp, #0x10]
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	adds r2, #0x20
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r7, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x2c]
	ldr r1, [sp, #0x30]
	ldr r3, [sp, #0x20]
	str r0, [r2, r1]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	movs r2, #0x1b
	subs r6, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r6
	adds r2, r5, r2
	bl FUN_0219E40C
	str r0, [r5, #0xc]
	movs r6, #1
_0219B618:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B632
	lsls r1, r4, #0x18
	ldr r0, [r5, #0xc]
	lsrs r1, r1, #0x18
	adds r2, r6, #0
	bl FUN_0219E554
_0219B632:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219B618
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	ldr r0, [r1, r0]
	ldr r1, [r5, #0xc]
	bl FUN_021B1950
_0219B644:
	movs r0, #1
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0219B64C: .word 0x0000046C
	thumb_func_end FUN_0219B4EC

	thumb_func_start FUN_0219B650
FUN_0219B650: ; 0x0219B650
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x40
	adds r4, r0, #0
	ldr r0, _0219B89C ; =0x0000046C
	ldr r6, [r4]
	ldrb r0, [r4, r0]
	str r0, [sp, #0x1c]
	adds r0, r6, #0
	bl FUN_0219A044
	str r0, [sp, #0x20]
	adds r0, r6, #0
	adds r0, #0x22
	ldrb r0, [r0]
	cmp r0, #0
	bne _0219B674
	movs r0, #2
	b _0219B676
_0219B674:
	movs r0, #1
_0219B676:
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219B694
	ldr r1, _0219B8A0 ; =0x00000473
	movs r0, #1
	ldrb r2, [r4, r1]
	add sp, #0x40
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r4, r1]
	pop {r3, r4, r5, r6, r7, pc}
_0219B694:
	ldr r0, _0219B8A4 ; =0x0000046E
	str r0, [sp, #0x38]
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _0219B6A0
	b _0219B7F8
_0219B6A0:
	ldr r0, [sp, #0x38]
	ldr r1, [sp, #0x38]
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	movs r2, #0x1b
	subs r1, #0x7e
	str r0, [sp]
	lsls r2, r2, #4
	ldr r3, [sp, #0x20]
	adds r0, r4, #0
	adds r1, r4, r1
	adds r2, r4, r2
	bl FUN_0219E40C
	str r0, [r4, #8]
	adds r0, r4, #0
	str r0, [sp, #0x24]
	adds r0, #0x10
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x1c]
	movs r5, #0
	lsls r0, r0, #2
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x1c]
	adds r2, r6, #0
	str r0, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r2, #0x20
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x38]
	adds r1, r4, #0
	subs r0, #0x7e
	str r5, [sp, #0x10]
	adds r0, r4, r0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x38]
	adds r1, #0xc8
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x28]
	str r0, [r2, r1]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x1c]
	adds r3, r7, #0
	bl FUN_0219E4D8
	adds r0, r6, #0
	adds r0, #0x22
	ldrb r0, [r0]
	cmp r0, #2
	bne _0219B7C2
	ldr r1, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_0219C8BC
	str r0, [sp, #0x2c]
	movs r0, #1
	str r0, [sp]
	str r7, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r2, r6, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x38]
	str r5, [sp, #0x10]
	subs r0, #0x7e
	adds r0, r4, r0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x38]
	adds r1, r4, #0
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	adds r2, #0x20
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	str r0, [r4, #0x14]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r4, #8]
	movs r2, #1
	adds r3, r7, #0
	bl FUN_0219E4D8
	movs r0, #3
	str r0, [sp]
	adds r2, r6, #0
	adds r1, r4, #0
	str r7, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r2, #0x20
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x38]
	str r5, [sp, #0x10]
	subs r0, #0x7e
	adds r0, r4, r0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x38]
	adds r1, #0xc8
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	str r0, [r4, #0x1c]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r4, #8]
	movs r2, #3
	adds r3, r7, #0
	bl FUN_0219E4D8
	str r7, [sp]
	adds r1, r6, #0
	adds r1, #0x20
	ldrb r1, [r1]
	ldr r0, [r4, #8]
	ldr r2, [r6, #0x1c]
	ldr r3, [sp, #0x2c]
	bl FUN_0219E510
	b _0219B894
_0219B7C2:
	ldr r0, [sp, #0x38]
	subs r0, r0, #3
	ldrb r0, [r4, r0]
	cmp r0, #0
	bls _0219B894
	ldr r0, [sp, #0x38]
	subs r0, r0, #3
	str r0, [sp, #0x3c]
_0219B7D2:
	ldr r0, [sp, #0x1c]
	cmp r5, r0
	beq _0219B7EC
	adds r1, r6, #0
	str r7, [sp]
	adds r1, #0x20
	lsls r3, r5, #0x18
	ldrb r1, [r1]
	ldr r0, [r4, #8]
	ldr r2, [r6, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0219E510
_0219B7EC:
	ldr r0, [sp, #0x3c]
	adds r5, r5, #1
	ldrb r0, [r4, r0]
	cmp r5, r0
	blo _0219B7D2
	b _0219B894
_0219B7F8:
	adds r0, r4, #0
	str r0, [sp, #0x30]
	adds r0, #0x10
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x1c]
	adds r2, r6, #0
	lsls r0, r0, #2
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x1c]
	movs r5, #0
	str r0, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r1, r4, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x38]
	str r5, [sp, #0x10]
	subs r0, #0x7e
	adds r0, r4, r0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x38]
	adds r2, #0x20
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x30]
	ldr r1, [sp, #0x34]
	str r0, [r2, r1]
	ldr r0, [sp, #0x38]
	ldr r1, [sp, #0x38]
	subs r0, r0, #6
	ldrh r0, [r4, r0]
	movs r2, #0x1b
	subs r1, #0x7e
	str r0, [sp]
	lsls r2, r2, #4
	str r1, [sp, #0x38]
	ldr r3, [sp, #0x20]
	adds r0, r4, #0
	adds r1, r4, r1
	adds r2, r4, r2
	bl FUN_0219E40C
	str r0, [r4, #0xc]
_0219B85E:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B882
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219A1C0
	adds r2, r0, #0
	lsls r1, r5, #0x18
	ldr r0, [r4, #0xc]
	lsrs r1, r1, #0x18
	bl FUN_0219E554
_0219B882:
	adds r5, r5, #1
	cmp r5, #4
	blo _0219B85E
	ldr r1, [sp, #0x30]
	ldr r0, [sp, #0x34]
	ldr r0, [r1, r0]
	ldr r1, [r4, #0xc]
	bl FUN_021B1950
_0219B894:
	movs r0, #1
	add sp, #0x40
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219B89C: .word 0x0000046C
_0219B8A0: .word 0x00000473
_0219B8A4: .word 0x0000046E
	thumb_func_end FUN_0219B650

	thumb_func_start FUN_0219B8A8
FUN_0219B8A8: ; 0x0219B8A8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	ldr r7, [r5]
	ldr r6, _0219BA10 ; =0x0000046C
	adds r0, r7, #0
	ldrb r4, [r5, r6]
	bl FUN_0219A044
	str r0, [sp, #0x20]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219B8DA
	adds r0, r6, #7
	ldrb r1, [r5, r0]
	movs r0, #1
	add sp, #0x34
	bics r1, r0
	adds r2, r1, #0
	movs r0, #1
	orrs r2, r0
	adds r1, r6, #7
	strb r2, [r5, r1]
	pop {r4, r5, r6, r7, pc}
_0219B8DA:
	adds r0, r6, #2
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _0219B976
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	adds r1, r6, #0
	movs r2, #0x1b
	subs r1, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r5, r1
	adds r2, r5, r2
	bl FUN_0219E40C
	str r0, [r5, #8]
	adds r0, r5, #0
	str r0, [sp, #0x24]
	adds r0, #0x10
	str r0, [sp, #0x24]
	lsls r0, r4, #2
	str r0, [sp, #0x28]
	adds r2, r7, #0
	adds r1, r5, #0
	str r4, [sp]
	movs r0, #3
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r2, #0x20
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x1c]
	adds r1, #0xc8
	str r0, [sp, #0x10]
	adds r0, r6, #0
	subs r0, #0x7c
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r7, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x28]
	str r0, [r2, r1]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r5, #8]
	adds r2, r4, #0
	movs r3, #3
	bl FUN_0219E4D8
	cmp r4, #0
	bne _0219B95C
	movs r0, #1
	str r0, [sp, #0x1c]
_0219B95C:
	movs r0, #3
	str r0, [sp]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r3, [sp, #0x1c]
	ldrb r1, [r1]
	lsls r3, r3, #0x18
	ldr r0, [r5, #8]
	ldr r2, [r7, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0219E510
	b _0219BA08
_0219B976:
	adds r0, r5, #0
	str r0, [sp, #0x2c]
	adds r0, #0x10
	str r0, [sp, #0x2c]
	lsls r0, r4, #2
	str r0, [sp, #0x30]
	str r4, [sp]
	movs r0, #3
	str r0, [sp, #4]
	movs r4, #0
	ldr r0, [sp, #0x20]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r6, #0
	subs r0, #0x7c
	adds r2, r7, #0
	adds r1, r5, #0
	str r4, [sp, #0x10]
	adds r0, r5, r0
	str r0, [sp, #0x14]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	adds r2, #0x20
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r7, #0x1c]
	adds r0, r5, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x2c]
	ldr r1, [sp, #0x30]
	ldr r3, [sp, #0x20]
	str r0, [r2, r1]
	subs r0, r6, #4
	ldrh r0, [r5, r0]
	movs r2, #0x1b
	subs r6, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r5, r6
	adds r2, r5, r2
	bl FUN_0219E40C
	str r0, [r5, #0xc]
_0219B9D2:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219B9F6
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219A1C0
	adds r2, r0, #0
	lsls r1, r4, #0x18
	ldr r0, [r5, #0xc]
	lsrs r1, r1, #0x18
	bl FUN_0219E554
_0219B9F6:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219B9D2
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	ldr r0, [r1, r0]
	ldr r1, [r5, #0xc]
	bl FUN_021B1950
_0219BA08:
	movs r0, #1
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0219BA10: .word 0x0000046C
	thumb_func_end FUN_0219B8A8

	thumb_func_start FUN_0219BA14
FUN_0219BA14: ; 0x0219BA14
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	ldr r7, _0219BB90 ; =0x0000046C
	adds r4, r0, #0
	ldrb r0, [r4, r7]
	ldr r6, [r4]
	str r0, [sp, #0x1c]
	adds r0, r6, #0
	bl FUN_0219A044
	str r0, [sp, #0x20]
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219BA48
	adds r0, r7, #7
	ldrb r1, [r4, r0]
	movs r0, #1
	add sp, #0x34
	bics r1, r0
	adds r2, r1, #0
	movs r0, #1
	orrs r2, r0
	adds r1, r7, #7
	strb r2, [r4, r1]
	pop {r4, r5, r6, r7, pc}
_0219BA48:
	adds r0, r7, #2
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _0219BAF2
	subs r0, r7, #4
	ldrh r0, [r4, r0]
	adds r1, r7, #0
	movs r2, #0x1b
	subs r1, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	ldr r3, [sp, #0x20]
	adds r0, r4, #0
	adds r1, r4, r1
	adds r2, r4, r2
	bl FUN_0219E40C
	str r0, [r4, #8]
	adds r0, r4, #0
	str r0, [sp, #0x24]
	adds r0, #0x10
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x1c]
	adds r2, r6, #0
	lsls r0, r0, #2
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x1c]
	adds r1, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r5, #0
	ldr r0, [sp, #0x20]
	str r5, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r7, #0
	subs r0, #0x7c
	str r5, [sp, #0x10]
	adds r0, r4, r0
	str r0, [sp, #0x14]
	subs r0, r7, #4
	ldrh r0, [r4, r0]
	adds r2, #0x20
	adds r1, #0xc8
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	bl FUN_021B16B4
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x28]
	str r0, [r2, r1]
	bl FUN_021B1968
	adds r1, r0, #0
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x1c]
	movs r3, #1
	bl FUN_0219E4D8
	subs r0, r7, #1
	ldrb r0, [r4, r0]
	cmp r0, #0
	bls _0219BB88
	subs r7, r7, #1
_0219BACC:
	ldr r0, [sp, #0x1c]
	cmp r5, r0
	beq _0219BAE8
	movs r0, #1
	str r0, [sp]
	adds r1, r6, #0
	adds r1, #0x20
	lsls r3, r5, #0x18
	ldrb r1, [r1]
	ldr r0, [r4, #8]
	ldr r2, [r6, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0219E510
_0219BAE8:
	ldrb r0, [r4, r7]
	adds r5, r5, #1
	cmp r5, r0
	blo _0219BACC
	b _0219BB88
_0219BAF2:
	adds r0, r4, #0
	str r0, [sp, #0x2c]
	adds r0, #0x10
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x1c]
	adds r2, r6, #0
	lsls r0, r0, #2
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x1c]
	movs r5, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	str r5, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r7, #0
	subs r0, #0x7c
	str r5, [sp, #0x10]
	adds r0, r4, r0
	str r0, [sp, #0x14]
	subs r0, r7, #4
	ldrh r0, [r4, r0]
	adds r1, r4, #0
	adds r2, #0x20
	str r0, [sp, #0x18]
	ldrb r2, [r2]
	ldr r3, [r6, #0x1c]
	adds r0, r4, #0
	adds r1, #0xc8
	bl FUN_021B16B4
	ldr r2, [sp, #0x2c]
	ldr r1, [sp, #0x30]
	ldr r3, [sp, #0x20]
	str r0, [r2, r1]
	subs r0, r7, #4
	ldrh r0, [r4, r0]
	movs r2, #0x1b
	subs r7, #0x7c
	lsls r2, r2, #4
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r4, r7
	adds r2, r4, r2
	bl FUN_0219E40C
	str r0, [r4, #0xc]
_0219BB52:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219BB76
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_0219A1C0
	adds r2, r0, #0
	lsls r1, r5, #0x18
	ldr r0, [r4, #0xc]
	lsrs r1, r1, #0x18
	bl FUN_0219E554
_0219BB76:
	adds r5, r5, #1
	cmp r5, #4
	blo _0219BB52
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	ldr r0, [r1, r0]
	ldr r1, [r4, #0xc]
	bl FUN_021B1950
_0219BB88:
	movs r0, #1
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0219BB90: .word 0x0000046C
	thumb_func_end FUN_0219BA14

	thumb_func_start FUN_0219BB94
FUN_0219BB94: ; 0x0219BB94
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219BBB6
	ldr r1, _0219BC1C ; =0x00000473
	movs r0, #1
	ldrb r2, [r5, r1]
	add sp, #4
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r5, r1]
	pop {r3, r4, r5, r6, pc}
_0219BBB6:
	ldr r0, [r6]
	cmp r0, #0
	bne _0219BC10
	ldr r0, [r5]
	bl FUN_0219A044
	adds r3, r0, #0
	movs r0, #0x13
	str r0, [sp]
	ldr r4, _0219BC20 ; =0x0000046C
	adds r2, r5, #0
	ldrb r1, [r5, r4]
	adds r0, r5, #0
	adds r2, #0xc8
	lsls r1, r1, #2
	adds r1, r5, r1
	ldr r1, [r1, #0x10]
	bl FUN_021CE7A0
	adds r1, r0, #0
	str r1, [r5, #4]
	ldrb r0, [r5, r4]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B194C
	adds r0, r4, #2
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _0219BC02
	ldr r0, _0219BC24 ; =FUN_0219BC6C
	subs r4, #8
	str r0, [r5, r4]
	ldr r0, [r5, #8]
	bl FUN_0219E584
	b _0219BC08
_0219BC02:
	ldr r0, _0219BC28 ; =FUN_0219BD10
	subs r4, #8
	str r0, [r5, r4]
_0219BC08:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _0219BC16
_0219BC10:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_0219BC16:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_0219BC1C: .word 0x00000473
_0219BC20: .word 0x0000046C
_0219BC24: .word FUN_0219BC6C
_0219BC28: .word FUN_0219BD10
	thumb_func_end FUN_0219BB94

	thumb_func_start FUN_0219BC2C
FUN_0219BC2C: ; 0x0219BC2C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r7, #0
	bl FUN_0219E5E0
	movs r4, #0
_0219BC3A:
	lsls r0, r4, #2
	adds r6, r5, r0
	ldr r0, [r6, #0x10]
	cmp r0, #0
	beq _0219BC58
	bl FUN_021B196C
	cmp r0, #0
	beq _0219BC58
	ldr r1, _0219BC68 ; =0x00000448
	ldr r0, [r6, #0x10]
	adds r1, r5, r1
	bl FUN_021B1D98
	movs r7, #1
_0219BC58:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219BC3A
	ldr r0, [r5, #4]
	bl FUN_021CE908
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219BC68: .word 0x00000448
	thumb_func_end FUN_0219BC2C

	thumb_func_start FUN_0219BC6C
FUN_0219BC6C: ; 0x0219BC6C
	push {r4, r5, r6, lr}
	ldr r4, _0219BD04 ; =0x00000473
	adds r5, r0, #0
	ldrb r0, [r5, r4]
	lsls r1, r0, #0x1f
	lsrs r1, r1, #0x1f
	bne _0219BC96
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219BCA0
	ldrb r1, [r5, r4]
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r5, r4]
	adds r0, r5, #0
	bl FUN_0219BD80
	b _0219BCA0
_0219BC96:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _0219BCA0
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219BCA0:
	ldr r0, [r5, #8]
	bl FUN_0219E5E0
	adds r6, r0, #0
	beq _0219BCB4
	ldr r1, _0219BD08 ; =0x00000448
	ldr r0, [r5, #8]
	adds r1, r5, r1
	bl FUN_0219E620
_0219BCB4:
	movs r4, #0
_0219BCB6:
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0219BCD4
	adds r1, r5, r4
	adds r1, #0xc4
	ldrb r1, [r1]
	cmp r1, #0
	bne _0219BCD4
	bl FUN_021B196C
	adds r1, r5, r4
	adds r1, #0xc4
	strb r0, [r1]
_0219BCD4:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219BCB6
	adds r0, r5, #0
	bl FUN_0219BD9C
	cmp r0, #0
	beq _0219BCF8
	ldr r1, _0219BD0C ; =0x0000046C
	ldrb r0, [r5, r1]
	subs r1, #0x24
	adds r1, r5, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B1D98
	movs r6, #1
_0219BCF8:
	ldr r0, [r5, #4]
	bl FUN_021CE908
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	nop
_0219BD04: .word 0x00000473
_0219BD08: .word 0x00000448
_0219BD0C: .word 0x0000046C
	thumb_func_end FUN_0219BC6C

	thumb_func_start FUN_0219BD10
FUN_0219BD10: ; 0x0219BD10
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _0219BD78 ; =0x00000473
	adds r5, r0, #0
	ldrb r0, [r5, r4]
	lsls r1, r0, #0x1f
	lsrs r1, r1, #0x1f
	bne _0219BD3A
	bl FUN_021B9AB0
	cmp r0, #0
	beq _0219BD44
	ldrb r1, [r5, r4]
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r5, r4]
	adds r0, r5, #0
	bl FUN_0219BD80
	b _0219BD44
_0219BD3A:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _0219BD44
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219BD44:
	movs r7, #0
	movs r4, #0
_0219BD48:
	lsls r0, r4, #2
	adds r6, r5, r0
	ldr r0, [r6, #0x10]
	cmp r0, #0
	beq _0219BD66
	bl FUN_021B196C
	cmp r0, #0
	beq _0219BD66
	ldr r1, _0219BD7C ; =0x00000448
	ldr r0, [r6, #0x10]
	adds r1, r5, r1
	bl FUN_021B1D98
	movs r7, #1
_0219BD66:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219BD48
	ldr r0, [r5, #4]
	bl FUN_021CE908
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219BD78: .word 0x00000473
_0219BD7C: .word 0x00000448
	thumb_func_end FUN_0219BD10

	thumb_func_start FUN_0219BD80
FUN_0219BD80: ; 0x0219BD80
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r4, #0
_0219BD86:
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0219BD94
	bl FUN_021B1904
_0219BD94:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219BD86
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219BD80

	thumb_func_start FUN_0219BD9C
FUN_0219BD9C: ; 0x0219BD9C
	movs r2, #0
_0219BD9E:
	lsls r1, r2, #2
	adds r1, r0, r1
	ldr r1, [r1, #0x10]
	cmp r1, #0
	beq _0219BDB6
	adds r1, r0, r2
	adds r1, #0xc4
	ldrb r1, [r1]
	cmp r1, #0
	bne _0219BDB6
	movs r0, #0
	bx lr
_0219BDB6:
	adds r2, r2, #1
	cmp r2, #4
	blo _0219BD9E
	movs r0, #1
	bx lr
	thumb_func_end FUN_0219BD9C

	thumb_func_start FUN_0219BDC0
FUN_0219BDC0: ; 0x0219BDC0
	ldr r0, [r0]
	ldr r0, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BDC0

	thumb_func_start FUN_0219BDC8
FUN_0219BDC8: ; 0x0219BDC8
	ldr r1, _0219BDD4 ; =0x00000473
	ldrb r0, [r0, r1]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	bx lr
	nop
_0219BDD4: .word 0x00000473
	thumb_func_end FUN_0219BDC8

	thumb_func_start FUN_0219BDD8
FUN_0219BDD8: ; 0x0219BDD8
	ldr r0, [r0]
	adds r0, #0x98
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_0219BDD8

	thumb_func_start FUN_0219BDE0
FUN_0219BDE0: ; 0x0219BDE0
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0219BF14
	cmp r0, #1
	bne _0219BE1A
	adds r0, r4, #0
	bl FUN_0219BDC0
	cmp r0, #0
	bne _0219BE1A
	adds r0, r4, #0
	bl FUN_0219BF24
	cmp r0, #0
	bne _0219BE1A
	adds r0, r4, #0
	bl FUN_0219C9C8
	cmp r0, #0
	bne _0219BE1A
	ldr r0, [r4]
	ldr r0, [r0, #0x74]
	bl FUN_02008A68
	cmp r0, #0
	bne _0219BE1A
	movs r0, #1
	pop {r4, pc}
_0219BE1A:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219BDE0

	thumb_func_start FUN_0219BE20
FUN_0219BE20: ; 0x0219BE20
	ldr r1, _0219BE28 ; =0x0000043C
	ldr r3, _0219BE2C ; =FUN_02017C50
	ldr r0, [r0, r1]
	bx r3
	.align 2, 0
_0219BE28: .word 0x0000043C
_0219BE2C: .word FUN_02017C50
	thumb_func_end FUN_0219BE20

	thumb_func_start FUN_0219BE30
FUN_0219BE30: ; 0x0219BE30
	ldr r1, _0219BE38 ; =0x0000043C
	movs r2, #3
	str r2, [r0, r1]
	bx lr
	.align 2, 0
_0219BE38: .word 0x0000043C
	thumb_func_end FUN_0219BE30

	thumb_func_start FUN_0219BE3C
FUN_0219BE3C: ; 0x0219BE3C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #1
	bhi _0219BE80
	ldr r6, _0219BE84 ; =0x00000152
	adds r0, r6, #0
	bl FUN_0203CE38
	bl FUN_0217CB38
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0203CDF4
	cmp r4, #0
	bne _0219BE64
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219BE64:
	movs r1, #2
	adds r0, r5, #0
	lsls r1, r1, #8
	bl FUN_0219DB04
	cmp r0, #0
	bne _0219BE80
	adds r0, r5, #0
	bl FUN_0219C9C8
	cmp r0, #0
	bne _0219BE80
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219BE80:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219BE84: .word 0x00000152
	thumb_func_end FUN_0219BE3C

	thumb_func_start FUN_0219BE88
FUN_0219BE88: ; 0x0219BE88
	ldr r1, [r0]
	ldr r0, [r1]
	cmp r0, #1
	bhi _0219BE96
	adds r1, #0x88
	ldr r0, [r1]
	bx lr
_0219BE96:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BE88

	thumb_func_start FUN_0219BE9C
FUN_0219BE9C: ; 0x0219BE9C
	ldr r0, [r0]
	ldr r0, [r0, #4]
	cmp r0, #3
	bhi _0219BEC8
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219BEB0: ; jump table
	.short _0219BEB8 - _0219BEB0 - 2 ; case 0
	.short _0219BEBC - _0219BEB0 - 2 ; case 1
	.short _0219BEC0 - _0219BEB0 - 2 ; case 2
	.short _0219BEC4 - _0219BEB0 - 2 ; case 3
_0219BEB8:
	movs r0, #1
	bx lr
_0219BEBC:
	movs r0, #3
	bx lr
_0219BEC0:
	movs r0, #5
	bx lr
_0219BEC4:
	movs r0, #5
	bx lr
_0219BEC8:
	movs r0, #5
	bx lr
	thumb_func_end FUN_0219BE9C

	thumb_func_start FUN_0219BECC
FUN_0219BECC: ; 0x0219BECC
	ldr r0, [r0]
	ldr r0, [r0, #4]
	cmp r0, #3
	bhi _0219BEF8
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219BEE0: ; jump table
	.short _0219BEE8 - _0219BEE0 - 2 ; case 0
	.short _0219BEEC - _0219BEE0 - 2 ; case 1
	.short _0219BEF0 - _0219BEE0 - 2 ; case 2
	.short _0219BEF4 - _0219BEE0 - 2 ; case 3
_0219BEE8:
	movs r0, #1
	bx lr
_0219BEEC:
	movs r0, #2
	bx lr
_0219BEF0:
	movs r0, #3
	bx lr
_0219BEF4:
	movs r0, #1
	bx lr
_0219BEF8:
	movs r0, #1
	bx lr
	thumb_func_end FUN_0219BECC

	thumb_func_start FUN_0219BEFC
FUN_0219BEFC: ; 0x0219BEFC
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0219BECC
	lsls r0, r0, #1
	cmp r4, r0
	bhs _0219BF0E
	movs r0, #1
	pop {r4, pc}
_0219BF0E:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219BEFC

	thumb_func_start FUN_0219BF14
FUN_0219BF14: ; 0x0219BF14
	ldr r0, [r0]
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BF14

	thumb_func_start FUN_0219BF1C
FUN_0219BF1C: ; 0x0219BF1C
	ldr r0, [r0]
	adds r0, #0x22
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_0219BF1C

	thumb_func_start FUN_0219BF24
FUN_0219BF24: ; 0x0219BF24
	ldr r0, [r0]
	adds r0, #0x20
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_0219BF24

	thumb_func_start FUN_0219BF2C
FUN_0219BF2C: ; 0x0219BF2C
	ldr r0, [r0]
	adds r0, #0x22
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219BF3A
	movs r0, #1
	bx lr
_0219BF3A:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BF2C

	thumb_func_start FUN_0219BF40
FUN_0219BF40: ; 0x0219BF40
	ldr r0, [r0]
	ldrh r0, [r0, #0x1a]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BF40

	thumb_func_start FUN_0219BF48
FUN_0219BF48: ; 0x0219BF48
	ldr r1, [r0]
	movs r0, #0x4e
	lsls r0, r0, #2
	ldrh r0, [r1, r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BF48

	thumb_func_start FUN_0219BF54
FUN_0219BF54: ; 0x0219BF54
	ldr r1, [r0]
	ldr r0, _0219BF5C ; =0x0000013A
	ldrh r0, [r1, r0]
	bx lr
	.align 2, 0
_0219BF5C: .word 0x0000013A
	thumb_func_end FUN_0219BF54

	thumb_func_start FUN_0219BF60
FUN_0219BF60: ; 0x0219BF60
	push {r3, lr}
	ldr r1, [r0]
	ldr r1, [r1]
	cmp r1, #3
	bhi _0219BF9A
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219BF76: ; jump table
	.short _0219BF7E - _0219BF76 - 2 ; case 0
	.short _0219BF82 - _0219BF76 - 2 ; case 1
	.short _0219BF92 - _0219BF76 - 2 ; case 2
	.short _0219BF96 - _0219BF76 - 2 ; case 3
_0219BF7E:
	movs r0, #0
	pop {r3, pc}
_0219BF82:
	bl FUN_0219C9C8
	cmp r0, #1
	bne _0219BF8E
	movs r0, #2
	pop {r3, pc}
_0219BF8E:
	movs r0, #1
	pop {r3, pc}
_0219BF92:
	movs r0, #2
	pop {r3, pc}
_0219BF96:
	movs r0, #2
	pop {r3, pc}
_0219BF9A:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219BF60

	thumb_func_start FUN_0219BFA0
FUN_0219BFA0: ; 0x0219BFA0
	ldr r0, [r0]
	adds r0, #8
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BFA0

	thumb_func_start FUN_0219BFA8
FUN_0219BFA8: ; 0x0219BFA8
	adds r0, #0xc0
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BFA8

	thumb_func_start FUN_0219BFB0
FUN_0219BFB0: ; 0x0219BFB0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC84
	adds r1, r0, #0
	ldr r0, [r4]
	adds r0, #0x80
	ldr r0, [r0]
	bl FUN_0200D660
	pop {r4, pc}
	thumb_func_end FUN_0219BFB0

	thumb_func_start FUN_0219BFC8
FUN_0219BFC8: ; 0x0219BFC8
	ldr r0, [r0]
	ldr r3, _0219BFD4 ; =FUN_0200D6B4
	adds r0, #0x80
	ldr r0, [r0]
	bx r3
	nop
_0219BFD4: .word FUN_0200D6B4
	thumb_func_end FUN_0219BFC8

	thumb_func_start FUN_0219BFD8
FUN_0219BFD8: ; 0x0219BFD8
	ldr r0, [r0]
	ldr r0, [r0, #0x70]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219BFD8

	thumb_func_start FUN_0219BFE0
FUN_0219BFE0: ; 0x0219BFE0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	bl FUN_0219BF14
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_0219C9C8
	ldr r1, [r5]
	adds r1, #0xde
	ldrb r1, [r1]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	cmp r1, #1
	beq _0219C020
	cmp r6, #1
	bhi _0219C020
	cmp r0, #0
	bne _0219C020
	cmp r4, #0
	beq _0219C020
	adds r0, r7, #0
	bl FUN_021BB084
	adds r1, r0, #0
	ldr r0, [r5]
	adds r0, #0x80
	ldr r0, [r0]
	bl FUN_0200D72C
_0219C020:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219BFE0

	thumb_func_start FUN_0219C024
FUN_0219C024: ; 0x0219C024
	push {r4, lr}
	adds r3, r2, #0
	asrs r2, r1, #8
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	cmp r4, #0
	bne _0219C04A
	strb r2, [r3]
	ldrb r0, [r3]
	cmp r0, #6
	beq _0219C042
	movs r0, #1
	b _0219C044
_0219C042:
	movs r0, #0
_0219C044:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r4, pc}
_0219C04A:
	cmp r2, #6
	beq _0219C08A
	ldr r1, [r0]
	ldr r1, [r1, #4]
	cmp r1, #3
	bhi _0219C06A
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219C062: ; jump table
	.short _0219C06A - _0219C062 - 2 ; case 0
	.short _0219C072 - _0219C062 - 2 ; case 1
	.short _0219C07A - _0219C062 - 2 ; case 2
	.short _0219C082 - _0219C062 - 2 ; case 3
_0219C06A:
	adds r1, r4, #0
	bl FUN_0219C094
	pop {r4, pc}
_0219C072:
	adds r1, r4, #0
	bl FUN_0219C0E0
	pop {r4, pc}
_0219C07A:
	adds r1, r4, #0
	bl FUN_0219C198
	pop {r4, pc}
_0219C082:
	adds r1, r4, #0
	bl FUN_0219C094
	pop {r4, pc}
_0219C08A:
	movs r0, #6
	strb r0, [r3]
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219C024

	thumb_func_start FUN_0219C094
FUN_0219C094: ; 0x0219C094
	push {r4, lr}
	adds r4, r3, #0
	cmp r1, #8
	bhi _0219C0BA
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219C0A8: ; jump table
	.short _0219C0BA - _0219C0A8 - 2 ; case 0
	.short _0219C0BE - _0219C0A8 - 2 ; case 1
	.short _0219C0BE - _0219C0A8 - 2 ; case 2
	.short _0219C0CA - _0219C0A8 - 2 ; case 3
	.short _0219C0BA - _0219C0A8 - 2 ; case 4
	.short _0219C0CE - _0219C0A8 - 2 ; case 5
	.short _0219C0BE - _0219C0A8 - 2 ; case 6
	.short _0219C0BA - _0219C0A8 - 2 ; case 7
	.short _0219C0CE - _0219C0A8 - 2 ; case 8
_0219C0BA:
	movs r0, #0
	pop {r4, pc}
_0219C0BE:
	adds r1, r2, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	b _0219C0DA
_0219C0CA:
	strb r2, [r4]
	b _0219C0DA
_0219C0CE:
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r4, #1]
	movs r0, #2
	pop {r4, pc}
_0219C0DA:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219C094

	thumb_func_start FUN_0219C0E0
FUN_0219C0E0: ; 0x0219C0E0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r2, #0
	adds r4, r3, #0
	cmp r1, #9
	bhi _0219C10C
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219C0F8: ; jump table
	.short _0219C10C - _0219C0F8 - 2 ; case 0
	.short _0219C110 - _0219C0F8 - 2 ; case 1
	.short _0219C12A - _0219C0F8 - 2 ; case 2
	.short _0219C14E - _0219C0F8 - 2 ; case 3
	.short _0219C168 - _0219C0F8 - 2 ; case 4
	.short _0219C182 - _0219C0F8 - 2 ; case 5
	.short _0219C110 - _0219C0F8 - 2 ; case 6
	.short _0219C174 - _0219C0F8 - 2 ; case 7
	.short _0219C182 - _0219C0F8 - 2 ; case 8
	.short _0219C168 - _0219C0F8 - 2 ; case 9
_0219C10C:
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219C110:
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	movs r0, #2
	pop {r4, r5, r6, pc}
_0219C12A:
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0219C55C
	strb r0, [r4, #2]
	movs r0, #3
	pop {r4, r5, r6, pc}
_0219C14E:
	adds r1, r5, #0
	strb r5, [r4]
	bl FUN_0219C55C
	strb r0, [r4, #1]
	ldrb r1, [r4, #1]
	ldrb r0, [r4]
	cmp r0, r1
	bls _0219C164
	strb r1, [r4]
	strb r0, [r4, #1]
_0219C164:
	movs r0, #2
	pop {r4, r5, r6, pc}
_0219C168:
	adds r1, r5, #0
	bl FUN_0219C55C
	strb r0, [r4]
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219C174:
	adds r1, r5, #0
	strb r5, [r4]
	bl FUN_0219C55C
	strb r0, [r4, #1]
	movs r0, #2
	pop {r4, r5, r6, pc}
_0219C182:
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r4, #1]
	movs r0, #2
	strb r0, [r4, #2]
	movs r0, #3
	strb r0, [r4, #3]
	movs r0, #4
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0219C0E0

	thumb_func_start FUN_0219C198
FUN_0219C198: ; 0x0219C198
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r2, #0
	adds r6, r0, #0
	adds r0, r5, #0
	adds r7, r1, #0
	adds r4, r3, #0
	bl FUN_0219D30C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r7, #9
	bhi _0219C1D0
	adds r1, r7, r7
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219C1BC: ; jump table
	.short _0219C1D0 - _0219C1BC - 2 ; case 0
	.short _0219C1D0 - _0219C1BC - 2 ; case 1
	.short _0219C2B6 - _0219C1BC - 2 ; case 2
	.short _0219C32A - _0219C1BC - 2 ; case 3
	.short _0219C380 - _0219C1BC - 2 ; case 4
	.short _0219C3AA - _0219C1BC - 2 ; case 5
	.short _0219C226 - _0219C1BC - 2 ; case 6
	.short _0219C24E - _0219C1BC - 2 ; case 7
	.short _0219C270 - _0219C1BC - 2 ; case 8
	.short _0219C356 - _0219C1BC - 2 ; case 9
_0219C1D0:
	cmp r0, #0
	beq _0219C1FC
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl FUN_0219C4FC
	strb r0, [r4, #2]
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_0219C1FC:
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4]
	lsls r0, r5, #0x17
	lsrs r2, r0, #0x18
	bne _0219C212
	movs r2, #2
	b _0219C218
_0219C212:
	cmp r2, #2
	bne _0219C218
	movs r2, #0
_0219C218:
	movs r0, #2
	adds r1, r5, #0
	bl FUN_0219C4CC
	strb r0, [r4, #1]
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_0219C226:
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl FUN_0219C4FC
	strb r0, [r4, #2]
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_0219C24E:
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4, #1]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #2]
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_0219C270:
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl FUN_0219C4FC
	strb r0, [r4, #2]
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4, #3]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4, #4]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #5]
	movs r0, #6
	pop {r3, r4, r5, r6, r7, pc}
_0219C2B6:
	cmp r0, #0
	beq _0219C2F6
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl FUN_0219C4FC
	strb r0, [r4, #2]
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4, #3]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #4]
	movs r0, #5
	pop {r3, r4, r5, r6, r7, pc}
_0219C2F6:
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4]
	lsls r0, r5, #0x17
	lsrs r2, r0, #0x18
	bne _0219C30C
	movs r2, #2
	b _0219C312
_0219C30C:
	cmp r2, #2
	bne _0219C312
	movs r2, #0
_0219C312:
	movs r0, #2
	adds r1, r5, #0
	bl FUN_0219C4CC
	strb r0, [r4, #1]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4, #2]
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_0219C32A:
	cmp r0, #0
	strb r5, [r4]
	beq _0219C348
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4, #1]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #2]
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_0219C348:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4, #1]
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_0219C356:
	cmp r0, #0
	beq _0219C372
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #1]
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_0219C372:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219C380:
	cmp r0, #0
	beq _0219C39C
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #1]
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_0219C39C:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219C3AA:
	cmp r0, #0
	beq _0219C3EC
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #1]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl FUN_0219C4FC
	strb r0, [r4, #2]
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219C4E4
	strb r0, [r4, #3]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_0219C4E4
	strb r0, [r4, #4]
	strb r5, [r4, #5]
	movs r0, #6
	pop {r3, r4, r5, r6, r7, pc}
_0219C3EC:
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4]
	lsls r0, r5, #0x17
	lsrs r2, r0, #0x18
	bne _0219C402
	movs r2, #2
	b _0219C408
_0219C402:
	cmp r2, #2
	bne _0219C408
	movs r2, #0
_0219C408:
	movs r0, #2
	adds r1, r5, #0
	bl FUN_0219C4CC
	strb r0, [r4, #1]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219C4E4
	strb r0, [r4, #2]
	strb r5, [r4, #3]
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219C198

	thumb_func_start FUN_0219C424
FUN_0219C424: ; 0x0219C424
	push {r4, r5}
	ldr r2, _0219C444 ; =0x00000428
	movs r5, #0
	movs r4, #0
_0219C42C:
	adds r3, r0, r5
	ldrb r3, [r3, r2]
	cmp r1, r3
	bne _0219C436
	adds r4, r4, #1
_0219C436:
	adds r5, r5, #1
	cmp r5, #6
	blo _0219C42C
	adds r0, r4, #0
	pop {r4, r5}
	bx lr
	nop
_0219C444: .word 0x00000428
	thumb_func_end FUN_0219C424

	thumb_func_start FUN_0219C448
FUN_0219C448: ; 0x0219C448
	push {r3, r4}
	cmp r1, #4
	bhs _0219C466
	ldr r2, _0219C46C ; =0x00000428
	movs r4, #0
_0219C452:
	adds r3, r0, r4
	ldrb r3, [r3, r2]
	cmp r1, r3
	bne _0219C460
	movs r0, #1
	pop {r3, r4}
	bx lr
_0219C460:
	adds r4, r4, #1
	cmp r4, #6
	blo _0219C452
_0219C466:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_0219C46C: .word 0x00000428
	thumb_func_end FUN_0219C448

	thumb_func_start FUN_0219C470
FUN_0219C470: ; 0x0219C470
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C470

	thumb_func_start FUN_0219C47C
FUN_0219C47C: ; 0x0219C47C
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, _0219C494 ; =0x0000046C
	ldrb r1, [r0, r1]
	bl FUN_0219C470
	cmp r4, r0
	bne _0219C490
	movs r0, #1
	pop {r4, pc}
_0219C490:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_0219C494: .word 0x0000046C
	thumb_func_end FUN_0219C47C

	thumb_func_start FUN_0219C498
FUN_0219C498: ; 0x0219C498
	push {r4, r5}
	ldr r4, _0219C4C8 ; =0x00000428
	movs r3, #0
_0219C49E:
	adds r5, r0, r3
	ldrb r5, [r5, r4]
	cmp r1, r5
	bne _0219C4B6
	cmp r2, #0
	bne _0219C4B0
	adds r0, r3, #0
	pop {r4, r5}
	bx lr
_0219C4B0:
	subs r2, r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
_0219C4B6:
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	cmp r3, #6
	blo _0219C49E
	movs r0, #6
	pop {r4, r5}
	bx lr
	nop
_0219C4C8: .word 0x00000428
	thumb_func_end FUN_0219C498

	thumb_func_start FUN_0219C4CC
FUN_0219C4CC: ; 0x0219C4CC
	movs r0, #1
	tst r0, r1
	bne _0219C4DC
	lsls r0, r2, #1
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0219C4DC:
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C4CC

	thumb_func_start FUN_0219C4E4
FUN_0219C4E4: ; 0x0219C4E4
	movs r2, #1
	tst r0, r2
	bne _0219C4F0
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x18
	bx lr
_0219C4F0:
	lsls r0, r1, #1
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C4E4

	thumb_func_start FUN_0219C4FC
FUN_0219C4FC: ; 0x0219C4FC
	ldr r0, [r0]
	ldr r3, _0219C504 ; =FUN_0219C4CC
	ldr r0, [r0, #4]
	bx r3
	.align 2, 0
_0219C504: .word FUN_0219C4CC
	thumb_func_end FUN_0219C4FC

	thumb_func_start FUN_0219C508
FUN_0219C508: ; 0x0219C508
	push {r3, lr}
	cmp r0, #3
	bhi _0219C522
	adds r2, r0, r0
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_0219C51A: ; jump table
	.short _0219C522 - _0219C51A - 2 ; case 0
	.short _0219C52A - _0219C51A - 2 ; case 1
	.short _0219C53C - _0219C51A - 2 ; case 2
	.short _0219C552 - _0219C51A - 2 ; case 3
_0219C522:
	movs r2, #0
	bl FUN_0219C4CC
	pop {r3, pc}
_0219C52A:
	lsls r2, r1, #0x17
	lsrs r3, r2, #0x18
	movs r2, #1
	eors r2, r3
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl FUN_0219C4CC
	pop {r3, pc}
_0219C53C:
	lsls r2, r1, #0x17
	lsrs r2, r2, #0x18
	bne _0219C546
	movs r2, #2
	b _0219C54C
_0219C546:
	cmp r2, #2
	bne _0219C54C
	movs r2, #0
_0219C54C:
	bl FUN_0219C4CC
	pop {r3, pc}
_0219C552:
	movs r2, #0
	bl FUN_0219C4CC
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219C508

	thumb_func_start FUN_0219C55C
FUN_0219C55C: ; 0x0219C55C
	ldr r0, [r0]
	ldr r0, [r0, #4]
	cmp r0, #3
	bhi _0219C590
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219C570: ; jump table
	.short _0219C578 - _0219C570 - 2 ; case 0
	.short _0219C580 - _0219C570 - 2 ; case 1
	.short _0219C58C - _0219C570 - 2 ; case 2
	.short _0219C57C - _0219C570 - 2 ; case 3
_0219C578:
	adds r0, r1, #0
	bx lr
_0219C57C:
	adds r0, r1, #0
	bx lr
_0219C580:
	adds r1, r1, #2
	movs r0, #3
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0219C58C:
	adds r0, r1, #0
	bx lr
_0219C590:
	adds r0, r1, #0
	bx lr
	thumb_func_end FUN_0219C55C

	thumb_func_start FUN_0219C594
FUN_0219C594: ; 0x0219C594
	adds r3, r1, #0
	movs r0, #1
	adds r1, r2, #0
	ands r3, r0
	ands r1, r0
	cmp r3, r1
	bne _0219C5A4
	movs r0, #0
_0219C5A4:
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C594

	thumb_func_start FUN_0219C5A8
FUN_0219C5A8: ; 0x0219C5A8
	adds r1, r0, r1
	ldr r0, _0219C5B0 ; =0x00000428
	ldrb r0, [r1, r0]
	bx lr
	.align 2, 0
_0219C5B0: .word 0x00000428
	thumb_func_end FUN_0219C5A8

	thumb_func_start FUN_0219C5B4
FUN_0219C5B4: ; 0x0219C5B4
	push {r3, r4}
	ldr r3, _0219C5E0 ; =0x021D6C64
	movs r4, #0
_0219C5BA:
	ldrb r2, [r3, r4]
	adds r1, r2, #5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r0, r2
	blo _0219C5D0
	cmp r0, r1
	bhi _0219C5D0
	adds r0, r4, #0
	pop {r3, r4}
	bx lr
_0219C5D0:
	adds r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	cmp r4, #4
	blo _0219C5BA
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_0219C5E0: .word 0x021D6C64
	thumb_func_end FUN_0219C5B4

	thumb_func_start FUN_0219C5E4
FUN_0219C5E4: ; 0x0219C5E4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r1, [sp]
	adds r1, r2, #0
	add r2, sp, #8
	adds r7, r3, #0
	bl FUN_0219C024
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r5, #0
	movs r4, #0
	cmp r0, #0
	bls _0219C632
_0219C600:
	add r1, sp, #8
	ldrb r1, [r1, r5]
	ldr r0, [sp]
	bl FUN_0219D1C0
	adds r6, r0, #0
	beq _0219C626
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219C626
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r4, #1
	adds r2, r4, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	strb r0, [r7, r2]
_0219C626:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _0219C600
_0219C632:
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219C5E4

	thumb_func_start FUN_0219C638
FUN_0219C638: ; 0x0219C638
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r6, r1, #0
	bl FUN_0219C5B4
	adds r4, r0, #0
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0219D180
	adds r2, r0, #0
	bmi _0219C666
	lsls r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219C498
	cmp r0, #6
	bne _0219C668
_0219C666:
	movs r0, #6
_0219C668:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219C638

	thumb_func_start FUN_0219C66C
FUN_0219C66C: ; 0x0219C66C
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0219C638
	adds r1, r0, #0
	cmp r1, #6
	beq _0219C682
	adds r0, r4, #0
	bl FUN_0219C71C
	pop {r4, pc}
_0219C682:
	movs r0, #0xff
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219C66C

	thumb_func_start FUN_0219C688
FUN_0219C688: ; 0x0219C688
	ldr r3, _0219C68C ; =FUN_0219C5B4
	bx r3
	.align 2, 0
_0219C68C: .word FUN_0219C5B4
	thumb_func_end FUN_0219C688

	thumb_func_start FUN_0219C690
FUN_0219C690: ; 0x0219C690
	ldr r3, _0219C694 ; =FUN_0219C5A8
	bx r3
	.align 2, 0
_0219C694: .word FUN_0219C5A8
	thumb_func_end FUN_0219C690

	thumb_func_start FUN_0219C698
FUN_0219C698: ; 0x0219C698
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	adds r4, r6, #0
	adds r5, r0, #0
	bl FUN_0219C5A8
	subs r2, r4, #1
	lsls r2, r2, #0x18
	movs r1, #0
	lsrs r4, r2, #0x18
	cmp r6, #0
	beq _0219C6CC
	ldr r3, _0219C6D0 ; =0x00000428
_0219C6B2:
	adds r2, r5, r4
	ldrb r2, [r2, r3]
	cmp r0, r2
	bne _0219C6C0
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
_0219C6C0:
	subs r2, r4, #1
	adds r6, r4, #0
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	cmp r6, #0
	bne _0219C6B2
_0219C6CC:
	adds r0, r1, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219C6D0: .word 0x00000428
	thumb_func_end FUN_0219C698

	thumb_func_start FUN_0219C6D4
FUN_0219C6D4: ; 0x0219C6D4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r6, r2, #0
	adds r4, r7, #0
	adds r5, r0, #0
	str r3, [sp]
	bl FUN_0219C5A8
	strb r0, [r6]
	subs r0, r4, #1
	lsls r0, r0, #0x18
	movs r1, #0
	lsrs r4, r0, #0x18
	cmp r7, #0
	beq _0219C710
	ldrb r3, [r6]
	ldr r0, _0219C718 ; =0x00000428
_0219C6F6:
	adds r2, r5, r4
	ldrb r2, [r2, r0]
	cmp r3, r2
	bne _0219C704
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
_0219C704:
	adds r2, r4, #0
	subs r4, r4, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r2, #0
	bne _0219C6F6
_0219C710:
	ldr r0, [sp]
	strb r1, [r0]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219C718: .word 0x00000428
	thumb_func_end FUN_0219C6D4

	thumb_func_start FUN_0219C71C
FUN_0219C71C: ; 0x0219C71C
	push {r3, r4}
	ldr r2, _0219C778 ; =0x0000046D
	movs r4, #1
	ldrb r2, [r0, r2]
	adds r3, r2, #0
	adds r2, r1, #0
	ands r3, r4
	ands r2, r4
	cmp r3, r2
	beq _0219C732
	movs r4, #0
_0219C732:
	ldr r0, [r0]
	lsls r2, r4, #0x18
	ldr r0, [r0, #4]
	lsrs r2, r2, #0x18
	cmp r0, #0
	bne _0219C74E
	movs r0, #0
	cmp r2, #0
	bne _0219C746
	movs r0, #1
_0219C746:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4}
	bx lr
_0219C74E:
	cmp r0, #1
	bne _0219C764
	lsls r0, r2, #1
	adds r3, r2, r0
	lsls r0, r1, #0x17
	ldr r2, _0219C77C ; =0x021D6C68
	lsrs r1, r0, #0x18
	adds r0, r2, r3
	ldrb r0, [r1, r0]
	pop {r3, r4}
	bx lr
_0219C764:
	lsls r0, r2, #1
	adds r3, r2, r0
	lsls r0, r1, #0x17
	ldr r2, _0219C780 ; =0x021D6C6E
	lsrs r1, r0, #0x18
	adds r0, r2, r3
	ldrb r0, [r1, r0]
	pop {r3, r4}
	bx lr
	nop
_0219C778: .word 0x0000046D
_0219C77C: .word 0x021D6C68
_0219C780: .word 0x021D6C6E
	thumb_func_end FUN_0219C71C

	thumb_func_start FUN_0219C784
FUN_0219C784: ; 0x0219C784
	push {r3, r4}
	ldr r4, [r0]
	movs r3, #1
	adds r2, r1, #0
	ands r2, r3
	lsls r2, r2, #0x18
	ldr r4, [r4, #4]
	lsrs r2, r2, #0x18
	cmp r4, #0
	bne _0219C7B4
	cmp r2, #0
	ldr r1, _0219C7E0 ; =0x0000046D
	beq _0219C7AE
	ldrb r0, [r0, r1]
	cmp r0, #0
	beq _0219C7A6
	movs r3, #0
_0219C7A6:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4}
	bx lr
_0219C7AE:
	ldrb r0, [r0, r1]
	pop {r3, r4}
	bx lr
_0219C7B4:
	ldr r4, _0219C7E0 ; =0x0000046D
	ldrb r0, [r0, r4]
	ands r0, r3
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r2, #0
	beq _0219C7D2
	adds r2, r4, #0
	eors r2, r3
	subs r0, r1, #3
	adds r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4}
	bx lr
_0219C7D2:
	subs r0, r1, #2
	adds r0, r4, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4}
	bx lr
	nop
_0219C7E0: .word 0x0000046D
	thumb_func_end FUN_0219C784

	thumb_func_start FUN_0219C7E4
FUN_0219C7E4: ; 0x0219C7E4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0219BF2C
	cmp r0, #0
	beq _0219C802
	adds r0, r4, #0
	bl FUN_0219BF14
	cmp r0, #1
	beq _0219C802
	cmp r0, #0
	beq _0219C802
	movs r0, #1
	pop {r4, pc}
_0219C802:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219C7E4

	thumb_func_start FUN_0219C808
FUN_0219C808: ; 0x0219C808
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #0xc8
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #0
	bl FUN_0219CFB8
	adds r5, #0xc8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D178
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219C808

	thumb_func_start FUN_0219C828
FUN_0219C828: ; 0x0219C828
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_0219BF2C
	cmp r0, #0
	beq _0219C866
	adds r1, r5, #2
	movs r0, #3
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0219C448
	cmp r0, #0
	beq _0219C866
	adds r0, r4, #0
	adds r0, #0xc8
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl FUN_0219CFB8
	adds r4, #0xc8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0219D178
	pop {r3, r4, r5, pc}
_0219C866:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219C828

	thumb_func_start FUN_0219C86C
FUN_0219C86C: ; 0x0219C86C
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0219BF2C
	cmp r0, #0
	beq _0219C88A
	movs r0, #2
	tst r0, r4
	beq _0219C882
	movs r0, #1
	b _0219C884
_0219C882:
	movs r0, #0
_0219C884:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r4, pc}
_0219C88A:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219C86C

	thumb_func_start FUN_0219C890
FUN_0219C890: ; 0x0219C890
	ldr r1, _0219C898 ; =0x0000046C
	ldr r3, _0219C89C ; =FUN_0219C86C
	ldrb r1, [r0, r1]
	bx r3
	.align 2, 0
_0219C898: .word 0x0000046C
_0219C89C: .word FUN_0219C86C
	thumb_func_end FUN_0219C890

	thumb_func_start FUN_0219C8A0
FUN_0219C8A0: ; 0x0219C8A0
	ldr r1, _0219C8A8 ; =0x0000046C
	ldrb r0, [r0, r1]
	bx lr
	nop
_0219C8A8: .word 0x0000046C
	thumb_func_end FUN_0219C8A0

	thumb_func_start FUN_0219C8AC
FUN_0219C8AC: ; 0x0219C8AC
	ldr r1, _0219C8B4 ; =0x0000046C
	ldr r3, _0219C8B8 ; =FUN_0219C8BC
	ldrb r1, [r0, r1]
	bx r3
	.align 2, 0
_0219C8B4: .word 0x0000046C
_0219C8B8: .word FUN_0219C8BC
	thumb_func_end FUN_0219C8AC

	thumb_func_start FUN_0219C8BC
FUN_0219C8BC: ; 0x0219C8BC
	push {r4, lr}
	adds r2, r1, #2
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r1, r4, #0
	bl FUN_0219C448
	cmp r0, #0
	bne _0219C8D4
	movs r4, #4
_0219C8D4:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_0219C8BC

	thumb_func_start FUN_0219C8D8
FUN_0219C8D8: ; 0x0219C8D8
	cmp r0, r1
	bne _0219C8E0
	movs r0, #1
	bx lr
_0219C8E0:
	adds r2, r1, #2
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r0, r1
	bne _0219C8F2
	movs r0, #1
	bx lr
_0219C8F2:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C8D8

	thumb_func_start FUN_0219C8F8
FUN_0219C8F8: ; 0x0219C8F8
	push {r3, lr}
	adds r2, r1, #0
	ldr r1, _0219C90C ; =0x0000046C
	ldrb r1, [r0, r1]
	bl FUN_0219C910
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	nop
_0219C90C: .word 0x0000046C
	thumb_func_end FUN_0219C8F8

	thumb_func_start FUN_0219C910
FUN_0219C910: ; 0x0219C910
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	movs r1, #1
	adds r3, r4, #0
	ands r3, r1
	adds r4, r3, #0
	eors r4, r1
	cmp r2, #0
	beq _0219C938
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1e
	adds r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	adds r1, r5, #0
	bl FUN_0219C448
	cmp r0, #0
	beq _0219C938
	adds r4, r5, #0
_0219C938:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219C910

	thumb_func_start FUN_0219C93C
FUN_0219C93C: ; 0x0219C93C
	push {r3, r4, r5, lr}
	adds r3, r0, #0
	ldr r0, [r3]
	adds r4, r0, #0
	adds r4, #0x23
	ldrb r4, [r4]
	cmp r4, #0
	bne _0219C962
	ldr r4, _0219C964 ; =0x0000046C
	ldrb r5, [r3, r4]
	cmp r1, r5
	bne _0219C962
	subs r4, r4, #4
	ldrh r3, [r3, r4]
	ldr r0, [r0, #0x78]
	adds r1, r2, #0
	movs r2, #1
	bl FUN_0200842C
_0219C962:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219C964: .word 0x0000046C
	thumb_func_end FUN_0219C93C

	thumb_func_start FUN_0219C968
FUN_0219C968: ; 0x0219C968
	push {r3, r4, r5, lr}
	adds r3, r0, #0
	ldr r0, [r3]
	adds r4, r0, #0
	adds r4, #0x23
	ldrb r4, [r4]
	cmp r4, #0
	bne _0219C98E
	ldr r4, _0219C990 ; =0x0000046C
	ldrb r5, [r3, r4]
	cmp r1, r5
	bne _0219C98E
	subs r4, r4, #4
	ldrh r3, [r3, r4]
	ldr r0, [r0, #0x78]
	adds r1, r2, #0
	movs r2, #1
	bl FUN_02008268
_0219C98E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219C990: .word 0x0000046C
	thumb_func_end FUN_0219C968

	thumb_func_start FUN_0219C994
FUN_0219C994: ; 0x0219C994
	ldr r0, [r0]
	ldr r0, [r0, #0x78]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C994

	thumb_func_start FUN_0219C99C
FUN_0219C99C: ; 0x0219C99C
	ldr r0, [r0]
	ldr r0, [r0, #0x7c]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219C99C

	thumb_func_start FUN_0219C9A4
FUN_0219C9A4: ; 0x0219C9A4
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xb0
	ldr r0, [r0]
	cmp r0, #0
	beq _0219C9BC
	adds r1, #0x23
	ldrb r0, [r1]
	cmp r0, #0
	bne _0219C9BC
	movs r0, #1
	bx lr
_0219C9BC:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219C9A4

	thumb_func_start FUN_0219C9C0
FUN_0219C9C0: ; 0x0219C9C0
	ldr r0, [r0]
	adds r0, #0x23
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_0219C9C0

	thumb_func_start FUN_0219C9C8
FUN_0219C9C8: ; 0x0219C9C8
	cmp r0, #0
	beq _0219C9D8
	ldr r0, [r0]
	adds r0, #0xdd
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	bx lr
_0219C9D8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219C9C8
_0219C9DC:
	.byte 0x00, 0x28, 0x05, 0xD0
	.byte 0x00, 0x68, 0xDD, 0x30, 0x00, 0x78, 0x40, 0x06, 0xC0, 0x0F, 0x70, 0x47, 0x00, 0x20, 0x70, 0x47

	thumb_func_start FUN_0219C9F0
FUN_0219C9F0: ; 0x0219C9F0
	cmp r0, #0
	beq _0219C9FC
	ldr r0, [r0]
	adds r0, #0xdf
	ldrb r0, [r0]
	bx lr
_0219C9FC:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219C9F0
_0219CA00:
	.byte 0x00, 0x28, 0x05, 0xD0, 0x00, 0x68, 0xDD, 0x30, 0x00, 0x78, 0x00, 0x06, 0xC0, 0x0F, 0x70, 0x47
	.byte 0x00, 0x20, 0x70, 0x47

	thumb_func_start FUN_0219CA14
FUN_0219CA14: ; 0x0219CA14
	ldr r1, [r0]
	movs r0, #0x4d
	movs r2, #1
	lsls r0, r0, #2
	str r2, [r1, r0]
	bx lr
	thumb_func_end FUN_0219CA14

	thumb_func_start FUN_0219CA20
FUN_0219CA20: ; 0x0219CA20
	push {r3, lr}
	cmp r0, #0
	beq _0219CA32
	ldr r0, [r0, #8]
	bl FUN_0219F3CC
	bl FUN_021AE360
	pop {r3, pc}
_0219CA32:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219CA20

	thumb_func_start FUN_0219CA38
FUN_0219CA38: ; 0x0219CA38
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219CA38

	thumb_func_start FUN_0219CA3C
FUN_0219CA3C: ; 0x0219CA3C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, [r5]
	adds r6, r1, #0
	adds r2, #0xac
	ldrb r2, [r2]
	cmp r2, #6
	bne _0219CA80
	adds r4, r6, #0
	bl FUN_0219C5A8
	subs r2, r4, #1
	lsls r2, r2, #0x18
	movs r1, #0
	lsrs r4, r2, #0x18
	cmp r6, #0
	beq _0219CA7A
	ldr r3, _0219CA84 ; =0x00000428
_0219CA60:
	adds r2, r5, r4
	ldrb r2, [r2, r3]
	cmp r0, r2
	bne _0219CA6E
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
_0219CA6E:
	subs r2, r4, #1
	adds r6, r4, #0
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	cmp r6, #0
	bne _0219CA60
_0219CA7A:
	ldr r0, [r5]
	adds r0, #0xac
	strb r1, [r0]
_0219CA80:
	pop {r4, r5, r6, pc}
	nop
_0219CA84: .word 0x00000428
	thumb_func_end FUN_0219CA3C

	thumb_func_start FUN_0219CA88
FUN_0219CA88: ; 0x0219CA88
	ldr r2, _0219CA94 ; =0x00000444
	ldr r3, [r0, r2]
	cmp r3, #7
	bne _0219CA92
	str r1, [r0, r2]
_0219CA92:
	bx lr
	.align 2, 0
_0219CA94: .word 0x00000444
	thumb_func_end FUN_0219CA88

	thumb_func_start FUN_0219CA98
FUN_0219CA98: ; 0x0219CA98
	ldr r3, _0219CA9C ; =FUN_0219DEC4
	bx r3
	.align 2, 0
_0219CA9C: .word FUN_0219DEC4
	thumb_func_end FUN_0219CA98

	thumb_func_start FUN_0219CAA0
FUN_0219CAA0: ; 0x0219CAA0
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0xdd
	ldrb r1, [r0]
	movs r0, #1
	adds r2, #0xdd
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219CAA0

	thumb_func_start FUN_0219CAB8
FUN_0219CAB8: ; 0x0219CAB8
	push {r3, r4, r5, lr}
	ldr r1, _0219CAFC ; =0x00000473
	adds r5, r0, #0
	ldrb r0, [r5, r1]
	lsls r2, r0, #0x1c
	lsrs r2, r2, #0x1f
	bne _0219CAF2
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1f
	beq _0219CAD8
	adds r0, r1, #0
	subs r0, #0x43
	ldr r0, [r5, r0]
	subs r1, #0x43
	lsls r0, r0, #1
	str r0, [r5, r1]
_0219CAD8:
	movs r4, #0x43
	lsls r4, r4, #4
	ldr r0, [r5, r4]
	bl FUN_0201381C
	str r0, [r5, r4]
	adds r0, r4, #0
	adds r0, #0x43
	ldrb r1, [r5, r0]
	movs r0, #8
	adds r4, #0x43
	orrs r0, r1
	strb r0, [r5, r4]
_0219CAF2:
	movs r0, #0x43
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	pop {r3, r4, r5, pc}
	nop
_0219CAFC: .word 0x00000473
	thumb_func_end FUN_0219CAB8

	thumb_func_start FUN_0219CB00
FUN_0219CB00: ; 0x0219CB00
	ldr r3, _0219CB24 ; =0x00000473
	ldrb r2, [r0, r3]
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x1f
	bne _0219CB22
	adds r2, r3, #0
	subs r2, #0x3f
	ldr r2, [r0, r2]
	adds r2, r2, r1
	adds r1, r3, #0
	subs r1, #0x3f
	str r2, [r0, r1]
	ldr r1, _0219CB28 ; =0x0001869F
	cmp r2, r1
	bls _0219CB22
	subs r3, #0x3f
	str r1, [r0, r3]
_0219CB22:
	bx lr
	.align 2, 0
_0219CB24: .word 0x00000473
_0219CB28: .word 0x0001869F
	thumb_func_end FUN_0219CB00

	thumb_func_start FUN_0219CB2C
FUN_0219CB2C: ; 0x0219CB2C
	ldr r1, _0219CB48 ; =0x00000434
	ldr r2, [r0, r1]
	adds r1, #0x3f
	ldrb r0, [r0, r1]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1f
	beq _0219CB44
	ldr r0, _0219CB4C ; =0x0001869F
	lsls r2, r2, #1
	cmp r2, r0
	bls _0219CB44
	adds r2, r0, #0
_0219CB44:
	adds r0, r2, #0
	bx lr
	.align 2, 0
_0219CB48: .word 0x00000434
_0219CB4C: .word 0x0001869F
	thumb_func_end FUN_0219CB2C

	thumb_func_start FUN_0219CB50
FUN_0219CB50: ; 0x0219CB50
	ldr r2, _0219CB5C ; =0x00000473
	movs r1, #0x40
	ldrb r3, [r0, r2]
	orrs r1, r3
	strb r1, [r0, r2]
	bx lr
	.align 2, 0
_0219CB5C: .word 0x00000473
	thumb_func_end FUN_0219CB50

	thumb_func_start FUN_0219CB60
FUN_0219CB60: ; 0x0219CB60
	push {r4, r5, r6, lr}
	ldr r6, _0219CBB4 ; =0x00000473
	adds r5, r0, #0
	ldrb r1, [r5, r6]
	movs r0, #0
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1f
	bne _0219CBB2
	ldr r2, [r5]
	ldr r1, [r2]
	cmp r1, #1
	bhi _0219CBA8
	ldr r0, [r2, #0x70]
	bl FUN_02017974
	bl FUN_0200C9BC
	subs r1, r6, #7
	adds r4, r0, #0
	movs r0, #0x1b
	lsls r0, r0, #4
	ldrb r1, [r5, r1]
	adds r0, r5, r0
	bl FUN_0219D414
	adds r1, r0, #0
	ldr r0, [r5]
	adds r0, #0x98
	ldrb r0, [r0]
	bl FUN_021BD860
	cmp r0, r4
	bls _0219CBA4
	adds r0, r4, #0
_0219CBA4:
	ldr r1, _0219CBB8 ; =0x00000438
	str r0, [r5, r1]
_0219CBA8:
	ldr r2, _0219CBB4 ; =0x00000473
	movs r1, #0x10
	ldrb r3, [r5, r2]
	orrs r1, r3
	strb r1, [r5, r2]
_0219CBB2:
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219CBB4: .word 0x00000473
_0219CBB8: .word 0x00000438
	thumb_func_end FUN_0219CB60

	thumb_func_start FUN_0219CBBC
FUN_0219CBBC: ; 0x0219CBBC
	ldr r2, _0219CBC8 ; =0x00000473
	movs r1, #0x20
	ldrb r3, [r0, r2]
	orrs r1, r3
	strb r1, [r0, r2]
	bx lr
	.align 2, 0
_0219CBC8: .word 0x00000473
	thumb_func_end FUN_0219CBBC

	thumb_func_start FUN_0219CBCC
FUN_0219CBCC: ; 0x0219CBCC
	push {r4, lr}
	ldr r4, [r0]
	ldr r3, [r4]
	cmp r3, #1
	bhi _0219CBEC
	adds r4, #0x23
	ldrb r3, [r4]
	cmp r3, #0
	bne _0219CBEC
	cmp r2, #0
	beq _0219CBE6
	movs r2, #5
	b _0219CBE8
_0219CBE6:
	movs r2, #4
_0219CBE8:
	bl FUN_0219CBF0
_0219CBEC:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219CBCC

	thumb_func_start FUN_0219CBF0
FUN_0219CBF0: ; 0x0219CBF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	str r2, [sp]
	bl FUN_021BAC80
	adds r4, r0, #0
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_0219D25C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r4, #0
	bl FUN_0219D25C
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BB084
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BB084
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_0219BFA0
	adds r4, r0, #0
	ldr r3, _0219CC6C ; =0x00000468
	ldr r7, _0219CC70 ; =0x00007FFF
	ldrh r3, [r5, r3]
	adds r0, r6, #0
	ldrh r2, [r4, #0xa]
	adds r6, r3, #0
	ands r6, r7
	adds r3, r7, #1
	orrs r3, r6
	lsls r3, r3, #0x10
	ldr r1, [sp]
	lsrs r3, r3, #0x10
	bl FUN_02020CA4
	ldr r3, _0219CC6C ; =0x00000468
	ldrh r2, [r4, #0xa]
	ldrh r3, [r5, r3]
	ldr r0, [sp, #4]
	ldr r1, [sp]
	adds r4, r3, #0
	ands r4, r7
	adds r3, r7, #1
	orrs r3, r4
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	bl FUN_02020CA4
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219CC6C: .word 0x00000468
_0219CC70: .word 0x00007FFF
	thumb_func_end FUN_0219CBF0

	thumb_func_start FUN_0219CC74
FUN_0219CC74: ; 0x0219CC74
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r4, r1, #0
	bl FUN_0219D250
	adds r5, #0xc8
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D250
	adds r1, r6, #0
	bl FUN_021BAD34
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219CC74

	thumb_func_start FUN_0219CC98
FUN_0219CC98: ; 0x0219CC98
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r0, r2, #0
	adds r4, r1, #0
	str r2, [sp]
	bl FUN_021BC464
	cmp r0, #0
	beq _0219CCF2
	ldr r0, [sp]
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r5, r0, #0
	ldr r0, [sp]
	bl FUN_021BB0A4
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0219D414
	adds r7, r0, #0
	bl FUN_0219D4C8
	adds r4, r0, #0
	ldr r5, _0219CCF8 ; =0x00000000
	beq _0219CCF2
_0219CCD2:
	lsls r1, r5, #0x18
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	str r0, [sp, #4]
	bl FUN_021BB084
	cmp r0, r6
	bne _0219CCEC
	ldr r0, [sp, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0219CCEC:
	adds r5, r5, #1
	cmp r5, r4
	blo _0219CCD2
_0219CCF2:
	ldr r0, [sp]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219CCF8: .word 0x00000000
	thumb_func_end FUN_0219CC98

	thumb_func_start FUN_0219CCFC
FUN_0219CCFC: ; 0x0219CCFC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, #0xe4
	str r1, [r5]
	str r2, [r0]
	movs r4, #0
	adds r6, r5, #4
	movs r7, #0x1c
_0219CD0C:
	adds r0, r4, #0
	muls r0, r7, r0
	adds r0, r6, r0
	bl FUN_0219D474
	adds r4, r4, #1
	cmp r4, #4
	blo _0219CD0C
	movs r1, #0
	adds r2, r1, #0
_0219CD20:
	lsls r0, r1, #2
	adds r0, r5, r0
	adds r0, #0x84
	adds r1, r1, #1
	str r2, [r0]
	cmp r1, #0x18
	blo _0219CD20
	movs r1, #0
_0219CD30:
	lsls r0, r2, #2
	adds r0, r5, r0
	adds r2, r2, #1
	str r1, [r0, #0x74]
	cmp r2, #4
	blo _0219CD30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219CCFC

	thumb_func_start FUN_0219CD40
FUN_0219CD40: ; 0x0219CD40
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r5, r0, #0
	adds r7, r4, #0
_0219CD48:
	lsls r6, r4, #2
	adds r0, r5, r6
	adds r0, #0x84
	ldr r0, [r0]
	cmp r0, #0
	beq _0219CD5E
	bl FUN_021BABF8
	adds r0, r5, r6
	adds r0, #0x84
	str r7, [r0]
_0219CD5E:
	adds r4, r4, #1
	cmp r4, #0x18
	blo _0219CD48
	movs r4, #0
	adds r5, r5, #4
	movs r6, #0x1c
_0219CD6A:
	adds r0, r4, #0
	muls r0, r6, r0
	adds r0, r5, r0
	bl FUN_0219D474
	adds r4, r4, #1
	cmp r4, #4
	blo _0219CD6A
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219CD40

	thumb_func_start FUN_0219CD7C
FUN_0219CD7C: ; 0x0219CD7C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r7, r0, #0
	str r2, [sp, #8]
	adds r2, r7, #0
	adds r2, #0xe4
	str r1, [sp, #4]
	adds r0, r1, #0
	ldr r1, [sp, #8]
	ldr r2, [r2]
	bl FUN_0219DAD4
	adds r1, r7, #4
	str r1, [sp, #0x24]
	ldr r1, [sp, #8]
	movs r2, #0x1c
	muls r2, r1, r2
	str r0, [sp, #0x20]
	str r2, [sp, #0x28]
	bl FUN_0201FE24
	str r0, [sp, #0x1c]
	ldr r1, _0219CF44 ; =0x021D6C64
	ldr r0, [sp, #8]
	movs r4, #0
	ldrb r0, [r1, r0]
	str r0, [sp, #0x10]
	ldr r0, [sp, #8]
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [sp, #0x20]
	str r0, [r1, #0x74]
	ldr r0, [sp, #0x1c]
	ldr r5, [sp, #0x10]
	cmp r0, #0
	bls _0219CDFA
_0219CDC4:
	ldr r0, [sp, #0x20]
	adds r1, r4, #0
	bl FUN_0201FF34
	lsls r6, r5, #2
	adds r1, r5, #0
	movs r2, #0x12
	bl FUN_021BA5C4
	adds r1, r7, r6
	adds r1, #0x84
	str r0, [r1]
	ldr r1, [sp, #0x24]
	ldr r0, [sp, #0x28]
	adds r0, r1, r0
	adds r1, r7, r6
	adds r1, #0x84
	ldr r1, [r1]
	bl FUN_0219D488
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #0x1c]
	adds r4, r4, #1
	cmp r4, r0
	blo _0219CDC4
_0219CDFA:
	ldr r0, [sp, #0x20]
	bl FUN_0219CF50
	adds r6, r0, #0
	cmp r6, #0
	ble _0219CE44
	movs r4, #0
	ldr r5, [sp, #0x10]
	cmp r6, #0
	ble _0219CE44
_0219CE0E:
	lsls r0, r5, #2
	str r0, [sp, #0x2c]
	adds r0, r7, r0
	adds r0, #0x84
	ldr r0, [r0]
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x95
	bne _0219CE38
	ldr r0, [sp, #0x20]
	adds r1, r6, #0
	bl FUN_0201FF34
	adds r1, r0, #0
	ldr r0, [sp, #0x2c]
	adds r0, r7, r0
	adds r0, #0x84
	ldr r0, [r0]
	bl FUN_021BB088
_0219CE38:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	adds r4, r4, #1
	lsrs r5, r0, #0x18
	cmp r4, r6
	blt _0219CE0E
_0219CE44:
	ldr r0, [sp, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _0219CF36
	ldr r0, [sp, #8]
	cmp r0, #1
	bne _0219CF36
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bls _0219CF36
_0219CE5E:
	ldr r0, [sp, #0x10]
	lsls r0, r0, #2
	adds r0, r7, r0
	adds r0, #0x84
	ldr r0, [r0]
	str r0, [sp, #0x18]
	bl FUN_021BAC84
	ldr r1, _0219CF48 ; =0x0000023B
	cmp r0, r1
	bne _0219CF1E
	ldr r0, [sp, #0x18]
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x95
	bne _0219CF1E
	movs r1, #0
	adds r2, r7, #0
	str r1, [sp, #0x14]
	adds r2, #0xe4
	ldr r0, [sp, #4]
	ldr r2, [r2]
	movs r1, #0
	bl FUN_0219DAD4
	adds r6, r0, #0
	bl FUN_0201FE24
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r5, #0
	cmp r4, #0
	bls _0219CEDA
_0219CEA2:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201FF34
	movs r1, #5
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf3
	bne _0219CEC0
	movs r0, #0xf4
_0219CEBC:
	str r0, [sp, #0x14]
	b _0219CEDA
_0219CEC0:
	cmp r0, #0xf4
	bne _0219CEC8
	movs r0, #0xf5
	b _0219CEBC
_0219CEC8:
	cmp r0, #0xf5
	bne _0219CED0
	movs r0, #0xf3
	b _0219CEBC
_0219CED0:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r4
	blo _0219CEA2
_0219CEDA:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _0219CF1E
	movs r4, #0xb
	ldr r0, [sp, #4]
	lsls r4, r4, #6
	ldr r0, [r0, r4]
	cmp r0, #0
	bne _0219CF10
	ldr r0, [sp, #0x18]
	movs r1, #0xf
	bl FUN_021BB1F4
	adds r2, r0, #0
	ldr r1, _0219CF4C ; =0x00000468
	ldr r0, [sp, #4]
	movs r3, #0
	ldrh r0, [r0, r1]
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x14]
	movs r2, #0
	bl FUN_0201C2F8
	ldr r1, [sp, #4]
	str r0, [r1, r4]
_0219CF10:
	movs r2, #0xb
	ldr r1, [sp, #4]
	lsls r2, r2, #6
	ldr r0, [sp, #0x18]
	ldr r1, [r1, r2]
	bl FUN_021BB088
_0219CF1E:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0xc]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x1c]
	cmp r1, r0
	blo _0219CE5E
_0219CF36:
	ldr r1, [sp, #0x24]
	ldr r0, [sp, #0x28]
	adds r0, r1, r0
	bl FUN_0219D494
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219CF44: .word 0x021D6C64
_0219CF48: .word 0x0000023B
_0219CF4C: .word 0x00000468
	thumb_func_end FUN_0219CD7C

	thumb_func_start FUN_0219CF50
FUN_0219CF50: ; 0x0219CF50
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	bl FUN_0201FE24
	subs r5, r0, #1
	bmi _0219CF8A
	movs r7, #0
_0219CF5E:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201FF34
	movs r1, #0x4c
	adds r2, r7, #0
	adds r4, r0, #0
	bl FUN_0201CD24
	cmp r0, #0
	bne _0219CF86
	adds r0, r4, #0
	movs r1, #0xa0
	adds r2, r7, #0
	bl FUN_0201CD24
	cmp r0, #0
	beq _0219CF86
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_0219CF86:
	subs r5, r5, #1
	bpl _0219CF5E
_0219CF8A:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219CF50

	thumb_func_start FUN_0219CF90
FUN_0219CF90: ; 0x0219CF90
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r5, r0, #0
	adds r7, r4, #0
_0219CF98:
	lsls r6, r4, #2
	adds r0, r5, r6
	adds r0, #0x84
	ldr r0, [r0]
	cmp r0, #0
	beq _0219CFAE
	bl FUN_021BABF8
	adds r0, r5, r6
	adds r0, #0x84
	str r7, [r0]
_0219CFAE:
	adds r4, r4, #1
	cmp r4, #0x18
	blo _0219CF98
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219CF90

	thumb_func_start FUN_0219CFB8
FUN_0219CFB8: ; 0x0219CFB8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r4, r2, #0
	str r1, [sp]
	adds r5, r0, #0
	adds r1, r4, #0
	str r3, [sp, #4]
	bl FUN_0219D178
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D408
	adds r6, r0, #0
	ldr r0, [sp, #0xc]
	bl FUN_0201FE24
	adds r4, r0, #0
	movs r1, #0xae
	ldr r0, [sp]
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bl FUN_0201FD54
	movs r2, #0
	movs r1, #6
	add r0, sp, #0x14
_0219CFF0:
	strb r1, [r0, r2]
	adds r2, r2, #1
	cmp r2, #6
	blo _0219CFF0
	movs r0, #0
	str r0, [sp, #8]
	cmp r4, #0
	bls _0219D06A
_0219D000:
	ldr r1, [sp, #8]
	adds r0, r6, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	ldr r1, [sp, #4]
	adds r5, r0, #0
	bl FUN_021BC3C4
	adds r0, r5, #0
	bl FUN_021BB084
	adds r1, r0, #0
	movs r0, #0xae
	ldr r2, [sp]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	bl FUN_0201FD98
	adds r0, r5, #0
	bl FUN_021BC464
	cmp r0, #0
	beq _0219D060
	adds r0, r5, #0
	bl FUN_021BB0A4
	adds r7, r0, #0
	movs r5, #0
	cmp r4, #0
	bls _0219D060
_0219D040:
	lsls r1, r5, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	bl FUN_021BB084
	cmp r7, r0
	bne _0219D05A
	ldr r0, [sp, #8]
	add r1, sp, #0x14
	strb r5, [r1, r0]
	b _0219D060
_0219D05A:
	adds r5, r5, #1
	cmp r5, r4
	blo _0219D040
_0219D060:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	str r0, [sp, #8]
	cmp r0, r4
	blo _0219D000
_0219D06A:
	movs r1, #0xae
	ldr r0, [sp]
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r1, [sp, #0xc]
	bl FUN_020200D8
	movs r5, #0
	cmp r4, #0
	bls _0219D0B6
_0219D07E:
	ldr r0, [sp, #0xc]
	adds r1, r5, #0
	bl FUN_0201FF34
	lsls r1, r5, #0x18
	adds r7, r0, #0
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	adds r1, r7, #0
	str r0, [sp, #0x10]
	bl FUN_021BC47C
	add r0, sp, #0x14
	ldrb r1, [r0, r5]
	cmp r1, #6
	beq _0219D0B0
	ldr r0, [sp, #0xc]
	bl FUN_0201FF34
	adds r1, r0, #0
	ldr r0, [sp, #0x10]
	bl FUN_021BB088
_0219D0B0:
	adds r5, r5, #1
	cmp r5, r4
	blo _0219D07E
_0219D0B6:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219CFB8

	thumb_func_start FUN_0219D0BC
FUN_0219D0BC: ; 0x0219D0BC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r2, #0
	str r1, [sp]
	adds r4, r0, #0
	adds r1, r5, #0
	bl FUN_0219D178
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0219D408
	adds r7, r0, #0
	ldr r0, [sp, #0xc]
	bl FUN_0201FE24
	adds r4, r0, #0
	movs r0, #0xae
	ldr r1, [sp]
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	bl FUN_0201FD54
	ldr r0, _0219D174 ; =0x021D6C64
	ldrb r0, [r0, r5]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #4]
	cmp r4, #0
	bls _0219D160
_0219D0FA:
	movs r5, #0
	cmp r4, #0
	bls _0219D156
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	adds r6, r1, r0
_0219D106:
	lsls r1, r5, #0x18
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	str r0, [sp, #0x10]
	bl FUN_021BAC80
	cmp r6, r0
	bne _0219D150
	ldr r0, [sp, #0x10]
	movs r1, #1
	bl FUN_021BC3C4
	ldr r0, [sp, #0x10]
	bl FUN_021BB084
	adds r1, r0, #0
	movs r0, #0xae
	ldr r2, [sp]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	bl FUN_0201FD98
	ldr r0, [sp, #0x10]
	bl FUN_021BC010
	cmp r0, #0
	beq _0219D156
	ldr r0, [sp]
	ldr r1, [r0]
	ldr r0, [sp, #4]
	adds r1, r1, r0
	adds r1, #0xe1
	movs r0, #1
	strb r0, [r1]
	b _0219D156
_0219D150:
	adds r5, r5, #1
	cmp r5, r4
	blo _0219D106
_0219D156:
	ldr r0, [sp, #4]
	adds r0, r0, #1
	str r0, [sp, #4]
	cmp r0, r4
	blo _0219D0FA
_0219D160:
	movs r1, #0xae
	ldr r0, [sp]
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r1, [sp, #0xc]
	bl FUN_020200D8
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_0219D174: .word 0x021D6C64
	thumb_func_end FUN_0219D0BC

	thumb_func_start FUN_0219D178
FUN_0219D178: ; 0x0219D178
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x74]
	bx lr
	thumb_func_end FUN_0219D178

	thumb_func_start FUN_0219D180
FUN_0219D180: ; 0x0219D180
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #4
	movs r0, #0x1c
	adds r6, r1, #0
	muls r6, r0, r6
	adds r0, r4, r6
	adds r7, r2, #0
	bl FUN_0219D4C8
	movs r5, #0
	str r0, [sp]
	cmp r0, #0
	bls _0219D1B8
_0219D19A:
	lsls r1, r5, #0x18
	adds r0, r4, r6
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BAC80
	cmp r7, r0
	bne _0219D1B0
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_0219D1B0:
	ldr r0, [sp]
	adds r5, r5, #1
	cmp r5, r0
	blo _0219D19A
_0219D1B8:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219D180

	thumb_func_start FUN_0219D1C0
FUN_0219D1C0: ; 0x0219D1C0
	ldr r3, _0219D1C4 ; =FUN_0219D1C8
	bx r3
	.align 2, 0
_0219D1C4: .word FUN_0219D1C8
	thumb_func_end FUN_0219D1C0

	thumb_func_start FUN_0219D1C8
FUN_0219D1C8: ; 0x0219D1C8
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r6, [r7]
	adds r4, r1, #0
	adds r0, r6, #0
	str r1, [sp]
	bl FUN_0219C5A8
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r1, [sp]
	movs r5, #0
	cmp r1, #0
	beq _0219D202
	ldr r1, _0219D224 ; =0x00000428
_0219D1E8:
	adds r2, r6, r4
	ldrb r2, [r2, r1]
	cmp r0, r2
	bne _0219D1F6
	adds r2, r5, #1
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
_0219D1F6:
	subs r3, r4, #1
	adds r2, r4, #0
	lsls r3, r3, #0x18
	lsrs r4, r3, #0x18
	cmp r2, #0
	bne _0219D1E8
_0219D202:
	movs r1, #0x1c
	adds r6, r0, #0
	adds r4, r7, #4
	muls r6, r1, r6
	adds r0, r4, r6
	bl FUN_0219D4C8
	cmp r5, r0
	bhs _0219D21E
	adds r0, r4, r6
	adds r1, r5, #0
	bl FUN_0219D534
	pop {r3, r4, r5, r6, r7, pc}
_0219D21E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219D224: .word 0x00000428
	thumb_func_end FUN_0219D1C8

	thumb_func_start FUN_0219D228
FUN_0219D228: ; 0x0219D228
	adds r3, r0, #4
	movs r0, #0x1c
	muls r0, r1, r0
	adds r0, r3, r0
	ldr r3, _0219D238 ; =FUN_0219D524
	adds r1, r2, #0
	bx r3
	nop
_0219D238: .word FUN_0219D524
	thumb_func_end FUN_0219D228

	thumb_func_start FUN_0219D23C
FUN_0219D23C: ; 0x0219D23C
	adds r3, r0, #4
	movs r0, #0x1c
	muls r0, r1, r0
	adds r0, r3, r0
	ldr r3, _0219D24C ; =FUN_0219D534
	adds r1, r2, #0
	bx r3
	nop
_0219D24C: .word FUN_0219D534
	thumb_func_end FUN_0219D23C

	thumb_func_start FUN_0219D250
FUN_0219D250: ; 0x0219D250
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, #0x84
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D250

	thumb_func_start FUN_0219D25C
FUN_0219D25C: ; 0x0219D25C
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, #0x84
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D25C

	thumb_func_start FUN_0219D268
FUN_0219D268: ; 0x0219D268
	push {r3, r4, r5, lr}
	lsls r1, r1, #0x18
	adds r5, r0, #0
	lsrs r1, r1, #0x18
	adds r4, r2, #0
	bl FUN_0219C784
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_0219C690
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #0x3e
	lsls r0, r0, #4
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _0219D292
	str r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219D292:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219D268

	thumb_func_start FUN_0219D298
FUN_0219D298: ; 0x0219D298
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_0219C9C0
	cmp r0, #0
	bne _0219D2C8
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r4, r4, r0
	lsls r5, r5, #2
	ldr r0, [r4, r5]
	cmp r0, #0
	beq _0219D2C4
	bl FUN_02007E70
	cmp r0, #0
	beq _0219D2C4
	ldr r0, [r4, r5]
	bl FUN_02007F90
	pop {r3, r4, r5, pc}
_0219D2C4:
	movs r0, #0
	pop {r3, r4, r5, pc}
_0219D2C8:
	ldr r0, [r4]
	adds r0, r0, r5
	adds r0, #0x44
	ldrb r0, [r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219D298

	thumb_func_start FUN_0219D2D4
FUN_0219D2D4: ; 0x0219D2D4
	ldr r3, _0219D2D8 ; =FUN_0219A1C0
	bx r3
	.align 2, 0
_0219D2D8: .word FUN_0219A1C0
	thumb_func_end FUN_0219D2D4

	thumb_func_start FUN_0219D2DC
FUN_0219D2DC: ; 0x0219D2DC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_0219A1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219BDC0
	cmp r0, #3
	bne _0219D2F6
	adds r0, r4, #2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0219D2F6:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219D2DC

	thumb_func_start FUN_0219D2FC
FUN_0219D2FC: ; 0x0219D2FC
	movs r1, #0xa
	ldr r2, _0219D308 ; =0x021D6CE4
	muls r1, r0, r1
	adds r0, r2, r1
	bx lr
	nop
_0219D308: .word 0x021D6CE4
	thumb_func_end FUN_0219D2FC

	thumb_func_start FUN_0219D30C
FUN_0219D30C: ; 0x0219D30C
	cmp r0, #2
	beq _0219D314
	cmp r0, #3
	bne _0219D318
_0219D314:
	movs r0, #1
	bx lr
_0219D318:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219D30C

	thumb_func_start FUN_0219D31C
FUN_0219D31C: ; 0x0219D31C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0219D30C
	cmp r0, #0
	bne _0219D33C
	lsls r2, r5, #0x17
	movs r0, #2
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_0219C4CC
	strb r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219D33C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219D31C

	thumb_func_start FUN_0219D340
FUN_0219D340: ; 0x0219D340
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	bl FUN_0219D35C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	cmp r4, r0
	bne _0219D358
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219D358:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219D340

	thumb_func_start FUN_0219D35C
FUN_0219D35C: ; 0x0219D35C
	cmp r0, #0xc
	bhs _0219D364
	movs r0, #0
	b _0219D366
_0219D364:
	movs r0, #1
_0219D366:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_0219D35C

	thumb_func_start FUN_0219D36C
FUN_0219D36C: ; 0x0219D36C
	push {r3, lr}
	bl FUN_0219D35C
	bl FUN_0219D378
	pop {r3, pc}
	thumb_func_end FUN_0219D36C

	thumb_func_start FUN_0219D378
FUN_0219D378: ; 0x0219D378
	cmp r0, #0
	bne _0219D380
	movs r0, #1
	b _0219D382
_0219D380:
	movs r0, #0
_0219D382:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_0219D378

	thumb_func_start FUN_0219D388
FUN_0219D388: ; 0x0219D388
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0219D2FC
	ldrh r3, [r0]
	movs r2, #0
	cmp r3, #0
	bls _0219D3AA
_0219D398:
	adds r1, r0, r2
	ldrb r1, [r1, #4]
	cmp r4, r1
	bne _0219D3A4
	movs r0, #1
	pop {r4, pc}
_0219D3A4:
	adds r2, r2, #1
	cmp r2, r3
	blo _0219D398
_0219D3AA:
	ldrh r1, [r0, #2]
	movs r2, #0
	cmp r1, #0
	bls _0219D3C6
_0219D3B2:
	adds r1, r0, r2
	ldrb r1, [r1, #7]
	cmp r4, r1
	bne _0219D3BE
	movs r0, #1
	pop {r4, pc}
_0219D3BE:
	ldrh r1, [r0, #2]
	adds r2, r2, #1
	cmp r2, r1
	blo _0219D3B2
_0219D3C6:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219D388

	thumb_func_start FUN_0219D3CC
FUN_0219D3CC: ; 0x0219D3CC
	cmp r0, #2
	beq _0219D3D6
	cmp r0, #3
	beq _0219D3DA
	b _0219D3DE
_0219D3D6:
	movs r0, #1
	bx lr
_0219D3DA:
	movs r0, #2
	bx lr
_0219D3DE:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D3CC

	thumb_func_start FUN_0219D3E4
FUN_0219D3E4: ; 0x0219D3E4
	cmp r0, #2
	beq _0219D3EE
	cmp r0, #3
	beq _0219D3F2
	b _0219D3F6
_0219D3EE:
	movs r0, #2
	bx lr
_0219D3F2:
	movs r0, #1
	bx lr
_0219D3F6:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D3E4

	thumb_func_start FUN_0219D3FC
FUN_0219D3FC: ; 0x0219D3FC
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D3FC

	thumb_func_start FUN_0219D408
FUN_0219D408: ; 0x0219D408
	adds r2, r0, #4
	movs r0, #0x1c
	muls r0, r1, r0
	adds r0, r2, r0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D408

	thumb_func_start FUN_0219D414
FUN_0219D414: ; 0x0219D414
	adds r2, r0, #4
	movs r0, #0x1c
	muls r0, r1, r0
	adds r0, r2, r0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D414

	thumb_func_start FUN_0219D420
FUN_0219D420: ; 0x0219D420
	push {r3, lr}
	ldr r0, [r0, #8]
	cmp r0, #0
	beq _0219D432
	bl FUN_0219F3CC
	bl FUN_021ABCB8
	pop {r3, pc}
_0219D432:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219D420

	thumb_func_start FUN_0219D438
FUN_0219D438: ; 0x0219D438
	push {r3, lr}
	bl FUN_0219D414
	bl FUN_0219D4CC
	pop {r3, pc}
	thumb_func_end FUN_0219D438

	thumb_func_start FUN_0219D444
FUN_0219D444: ; 0x0219D444
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	ldr r2, _0219D470 ; =0x0000046E
	adds r5, r0, #0
	ldrb r2, [r5, r2]
	adds r4, r1, #0
	cmp r2, #0
	beq _0219D46C
	bl FUN_0219C448
	cmp r0, #0
	beq _0219D46C
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0219D46C
	adds r1, r6, #0
	bl FUN_021B19F0
_0219D46C:
	pop {r4, r5, r6, pc}
	nop
_0219D470: .word 0x0000046E
	thumb_func_end FUN_0219D444

	thumb_func_start FUN_0219D474
FUN_0219D474: ; 0x0219D474
	movs r3, #0
	strb r3, [r0, #0x18]
	adds r2, r3, #0
_0219D47A:
	lsls r1, r3, #2
	adds r3, r3, #1
	str r2, [r0, r1]
	cmp r3, #6
	blt _0219D47A
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D474

	thumb_func_start FUN_0219D488
FUN_0219D488: ; 0x0219D488
	ldrb r3, [r0, #0x18]
	adds r2, r3, #1
	strb r2, [r0, #0x18]
	lsls r2, r3, #2
	str r1, [r0, r2]
	bx lr
	thumb_func_end FUN_0219D488

	thumb_func_start FUN_0219D494
FUN_0219D494: ; 0x0219D494
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	movs r6, #0
	movs r4, #0
	cmp r0, #0
	bls _0219D4C4
_0219D4A2:
	lsls r0, r4, #2
	ldr r0, [r5, r0]
	bl FUN_021BB3BC
	cmp r0, #0
	beq _0219D4B2
	adds r4, r4, #1
	b _0219D4BC
_0219D4B2:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D558
_0219D4BC:
	ldrb r0, [r5, #0x18]
	adds r6, r6, #1
	cmp r6, r0
	blo _0219D4A2
_0219D4C4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0219D494

	thumb_func_start FUN_0219D4C8
FUN_0219D4C8: ; 0x0219D4C8
	ldrb r0, [r0, #0x18]
	bx lr
	thumb_func_end FUN_0219D4C8

	thumb_func_start FUN_0219D4CC
FUN_0219D4CC: ; 0x0219D4CC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	movs r4, #0
	movs r6, #0
	cmp r0, #0
	ble _0219D4F0
_0219D4DA:
	lsls r0, r4, #2
	ldr r0, [r5, r0]
	bl FUN_021BB3BC
	cmp r0, #0
	beq _0219D4E8
	adds r6, r6, #1
_0219D4E8:
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D4DA
_0219D4F0:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0219D4CC

	thumb_func_start FUN_0219D4F8
FUN_0219D4F8: ; 0x0219D4F8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	adds r4, r1, #0
	movs r6, #0
	cmp r4, r0
	bge _0219D51C
_0219D506:
	lsls r0, r4, #2
	ldr r0, [r5, r0]
	bl FUN_021BB3BC
	cmp r0, #0
	beq _0219D514
	adds r6, r6, #1
_0219D514:
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D506
_0219D51C:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0219D4F8

	thumb_func_start FUN_0219D524
FUN_0219D524: ; 0x0219D524
	ldrb r2, [r0, #0x18]
	cmp r1, r2
	bhs _0219D530
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bx lr
_0219D530:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219D524

	thumb_func_start FUN_0219D534
FUN_0219D534: ; 0x0219D534
	ldrb r2, [r0, #0x18]
	cmp r1, r2
	bhs _0219D540
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bx lr
_0219D540:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219D534

	thumb_func_start FUN_0219D544
FUN_0219D544: ; 0x0219D544
	push {r3, r4}
	lsls r4, r1, #2
	lsls r2, r2, #2
	ldr r3, [r0, r4]
	ldr r1, [r0, r2]
	str r1, [r0, r4]
	str r3, [r0, r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D544

	thumb_func_start FUN_0219D558
FUN_0219D558: ; 0x0219D558
	push {r3, r4}
	ldrb r3, [r0, #0x18]
	lsls r2, r1, #2
	ldr r2, [r0, r2]
	subs r3, r3, #1
	cmp r1, r3
	bge _0219D57C
_0219D566:
	lsls r4, r1, #2
	adds r3, r0, r4
	ldr r3, [r3, #4]
	adds r1, r1, #1
	str r3, [r0, r4]
	ldrb r3, [r0, #0x18]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	subs r3, r3, #1
	cmp r1, r3
	blt _0219D566
_0219D57C:
	lsls r1, r1, #2
	str r2, [r0, r1]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0219D558

	thumb_func_start FUN_0219D584
FUN_0219D584: ; 0x0219D584
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	adds r7, r2, #0
	str r3, [sp]
	cmp r4, #0
	beq _0219D5C8
	cmp r4, #1
	beq _0219D5C8
	adds r0, r4, #0
	ldr r6, [r5]
	bl FUN_0219D3CC
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0219D3E4
	ldr r1, [sp, #4]
	lsls r1, r1, #2
	ldr r2, [r5, r1]
	str r2, [r5]
	lsls r2, r0, #2
	ldr r0, [r5, r2]
	cmp r7, #0
	str r0, [r5, r1]
	str r6, [r5, r2]
	beq _0219D5BE
	str r6, [r7]
_0219D5BE:
	ldr r0, [sp]
	cmp r0, #0
	beq _0219D5C8
	ldr r1, [r5]
	str r1, [r0]
_0219D5C8:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219D584

	thumb_func_start FUN_0219D5CC
FUN_0219D5CC: ; 0x0219D5CC
	ldrb r2, [r0, #0x18]
	movs r3, #0
	cmp r2, #0
	ble _0219D5E8
_0219D5D4:
	lsls r2, r3, #2
	ldr r2, [r0, r2]
	cmp r2, r1
	bne _0219D5E0
	adds r0, r3, #0
	bx lr
_0219D5E0:
	ldrb r2, [r0, #0x18]
	adds r3, r3, #1
	cmp r3, r2
	blt _0219D5D4
_0219D5E8:
	movs r0, #0
	mvns r0, r0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D5CC

	thumb_func_start FUN_0219D5F0
FUN_0219D5F0: ; 0x0219D5F0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	adds r6, r1, #0
	movs r4, #0
	cmp r0, #0
	ble _0219D616
_0219D5FE:
	lsls r0, r4, #2
	ldr r0, [r5, r0]
	bl FUN_021BAC80
	cmp r6, r0
	bne _0219D60E
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
_0219D60E:
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D5FE
_0219D616:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219D5F0

	thumb_func_start FUN_0219D61C
FUN_0219D61C: ; 0x0219D61C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	movs r4, #0
	cmp r0, #0
	ble _0219D640
_0219D628:
	lsls r6, r4, #2
	ldr r0, [r5, r6]
	bl FUN_021BB3BC
	cmp r0, #0
	beq _0219D638
	ldr r0, [r5, r6]
	pop {r4, r5, r6, pc}
_0219D638:
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D628
_0219D640:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219D61C

	thumb_func_start FUN_0219D644
FUN_0219D644: ; 0x0219D644
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	str r0, [sp]
	ldrb r0, [r5, #0x18]
	adds r4, r2, #0
	subs r6, r0, #1
	cmp r6, #0
	ble _0219D668
_0219D656:
	lsls r0, r6, #2
	ldr r0, [r5, r0]
	bl FUN_021BB3BC
	cmp r0, #0
	bne _0219D668
	subs r6, r6, #1
	cmp r6, #0
	bgt _0219D656
_0219D668:
	ldr r0, [sp]
	bl FUN_0219BDC0
	cmp r0, #3
	beq _0219D67E
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_0219C424
	adds r4, r0, #0
	b _0219D680
_0219D67E:
	movs r4, #3
_0219D680:
	ldrb r0, [r5, #0x18]
	cmp r4, r0
	bge _0219D6D0
	lsls r0, r6, #2
	str r0, [sp, #4]
_0219D68A:
	lsls r0, r4, #2
	ldr r7, [r5, r0]
	movs r1, #0x11
	adds r0, r7, #0
	bl FUN_021BB1F4
	cmp r0, #0x95
	bne _0219D6C8
	cmp r4, r6
	bge _0219D6B0
	ldr r0, [sp, #4]
	ldr r0, [r5, r0]
	bl FUN_021BB084
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BB088
	b _0219D6C8
_0219D6B0:
	adds r0, r7, #0
	bl FUN_021BB0A4
	movs r1, #0xb
	ldr r2, [sp]
	lsls r1, r1, #6
	ldr r1, [r2, r1]
	cmp r0, r1
	beq _0219D6C8
	adds r0, r7, #0
	bl FUN_021BB094
_0219D6C8:
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D68A
_0219D6D0:
	movs r4, #0
	cmp r0, #0
	ble _0219D6E6
_0219D6D6:
	lsls r0, r4, #2
	ldr r0, [r5, r0]
	bl FUN_021BC464
	ldrb r0, [r5, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _0219D6D6
_0219D6E6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219D644

	thumb_func_start FUN_0219D6EC
FUN_0219D6EC: ; 0x0219D6EC
	push {r3, r4}
	movs r4, #0
	adds r1, r4, #0
	movs r2, #0x28
_0219D6F4:
	adds r3, r4, #0
	muls r3, r2, r3
	adds r3, r0, r3
	str r1, [r3, #0x20]
	strh r1, [r3, #0x2a]
	adds r4, r4, #1
	str r1, [r3, #0x2c]
	cmp r4, #4
	blo _0219D6F4
	movs r2, #0x3e
	movs r4, #0
	lsls r2, r2, #4
_0219D70C:
	lsls r3, r1, #2
	adds r3, r0, r3
	adds r1, r1, #1
	str r4, [r3, r2]
	cmp r1, #4
	blo _0219D70C
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0219D6EC

	thumb_func_start FUN_0219D71C
FUN_0219D71C: ; 0x0219D71C
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r6, r0, #0
	adds r7, r4, #0
_0219D724:
	movs r0, #0x28
	muls r0, r4, r0
	adds r5, r6, r0
	ldr r0, [r5, #0x20]
	cmp r0, #0
	beq _0219D736
	bl FUN_0203A278
	str r7, [r5, #0x20]
_0219D736:
	ldr r0, [r5, #0x24]
	cmp r0, #0
	beq _0219D744
	bl FUN_0203A278
	movs r0, #0
	str r0, [r5, #0x24]
_0219D744:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219D724
	movs r7, #0x3e
	movs r4, #0
	lsls r7, r7, #4
_0219D750:
	lsls r0, r4, #2
	adds r5, r6, r0
	ldr r0, [r5, r7]
	cmp r0, #0
	beq _0219D762
	bl FUN_0203A278
	movs r0, #0
	str r0, [r5, r7]
_0219D762:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219D750
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219D71C

	thumb_func_start FUN_0219D76C
FUN_0219D76C: ; 0x0219D76C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r0, r1, #0
	bl FUN_02008B0C
	adds r1, r0, #0
	adds r0, r6, #0
	str r1, [r5]
	bl FUN_02008B34
	movs r4, #0
	adds r0, r6, #0
	strh r4, [r5, #0xa]
	bl FUN_02008BFC
	adds r0, #0xea
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	ldr r0, [r5]
	bhi _0219D7A6
	bl FUN_02008BF0
	cmp r0, #0
	beq _0219D7A2
	movs r4, #1
_0219D7A2:
	strh r4, [r5, #8]
	b _0219D7B6
_0219D7A6:
	bl FUN_02008BF0
	cmp r0, #0
	bne _0219D7B2
	movs r0, #0xb6
	b _0219D7B4
_0219D7B2:
	movs r0, #0xb7
_0219D7B4:
	strh r0, [r5, #8]
_0219D7B6:
	ldr r0, [r5]
	movs r1, #0x12
	bl FUN_02008BB0
	str r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x18
	bl FUN_02029BDC
	adds r5, #0x20
	adds r0, r5, #0
	bl FUN_02029BDC
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0219D76C

	thumb_func_start FUN_0219D7D4
FUN_0219D7D4: ; 0x0219D7D4
	push {r3, r4, r5, lr}
	ldr r2, _0219D844 ; =0x00000000
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [r5]
	beq _0219D81E
	ldr r0, [r4]
	movs r1, #0x12
	strh r0, [r5, #0xa]
	ldr r0, [r4, #4]
	strh r0, [r5, #8]
	ldr r0, [r4, #0x14]
	bl FUN_020485D0
	str r0, [r5, #4]
	ldr r0, [r4, #8]
	adds r1, r5, #0
	str r0, [r5, #0xc]
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, #0x10
	movs r2, #8
	blx FUN_0207894C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r0, #0x18
	adds r1, #0x18
	bl FUN_02029EC0
	adds r5, #0x20
	adds r4, #0x20
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02029EC0
	pop {r3, r4, r5, pc}
_0219D81E:
	strh r2, [r5, #0xa]
	strh r2, [r5, #8]
	str r2, [r5, #4]
	adds r1, r2, #0
_0219D826:
	lsls r0, r2, #1
	adds r0, r5, r0
	adds r2, r2, #1
	strh r1, [r0, #0x10]
	cmp r2, #4
	blo _0219D826
	adds r0, r5, #0
	adds r0, #0x18
	bl FUN_02029BDC
	adds r5, #0x20
	adds r0, r5, #0
	bl FUN_02029BDC
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219D844: .word 0x00000000
	thumb_func_end FUN_0219D7D4

	thumb_func_start FUN_0219D848
FUN_0219D848: ; 0x0219D848
	push {r3, r4, r5, lr}
	ldr r2, _0219D8C4 ; =0x00000000
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [r5]
	beq _0219D89E
	ldr r0, [r4]
	movs r1, #0x12
	strh r0, [r5, #0xa]
	ldr r0, [r4, #4]
	strh r0, [r5, #8]
	movs r0, #0x20
	bl FUN_0204855C
	ldr r2, [r4, #0x68]
	adds r1, r4, #0
	adds r1, #0x28
	adds r2, r2, #1
	str r0, [r5, #4]
	bl FUN_020486C4
	ldr r0, [r4, #8]
	adds r1, r5, #0
	str r0, [r5, #0xc]
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, #0x10
	movs r2, #8
	blx FUN_0207894C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r0, #0x18
	adds r1, #0x18
	bl FUN_02029EC0
	adds r5, #0x20
	adds r4, #0x20
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02029EC0
	pop {r3, r4, r5, pc}
_0219D89E:
	strh r2, [r5, #0xa]
	strh r2, [r5, #8]
	str r2, [r5, #4]
	adds r1, r2, #0
_0219D8A6:
	lsls r0, r2, #1
	adds r0, r5, r0
	adds r2, r2, #1
	strh r1, [r0, #0x10]
	cmp r2, #4
	blo _0219D8A6
	adds r0, r5, #0
	adds r0, #0x18
	bl FUN_02029BDC
	adds r5, #0x20
	adds r0, r5, #0
	bl FUN_02029BDC
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219D8C4: .word 0x00000000
	thumb_func_end FUN_0219D848

	thumb_func_start FUN_0219D8C8
FUN_0219D8C8: ; 0x0219D8C8
	movs r2, #0x28
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #0x20]
	cmp r0, #0
	bne _0219D8D8
	movs r0, #1
	bx lr
_0219D8D8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0219D8C8

	thumb_func_start FUN_0219D8DC
FUN_0219D8DC: ; 0x0219D8DC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _0219D900
	movs r0, #0x28
	adds r5, #0x20
	muls r0, r6, r0
	adds r1, r5, r0
	cmp r4, #4
	bhs _0219D900
	lsls r0, r4, #1
	adds r0, r1, r0
	ldrh r0, [r0, #0x10]
	pop {r4, r5, r6, pc}
_0219D900:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219D8DC

	thumb_func_start FUN_0219D904
FUN_0219D904: ; 0x0219D904
	movs r3, #0x28
	muls r3, r1, r3
	adds r1, r0, r3
	ldrh r0, [r1, #0x28]
	str r0, [r2]
	ldr r0, [r1, #0x24]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D904

	thumb_func_start FUN_0219D914
FUN_0219D914: ; 0x0219D914
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0219BF14
	cmp r0, #0
	bne _0219D942
	adds r0, r5, #0
	movs r1, #8
	movs r4, #8
	bl FUN_0219DB04
	cmp r0, #0
	beq _0219D934
	lsls r0, r4, #8
	pop {r3, r4, r5, pc}
_0219D934:
	adds r0, r5, #0
	bl FUN_0219BDC0
	cmp r0, #1
	bne _0219D958
	movs r0, #0x80
	pop {r3, r4, r5, pc}
_0219D942:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _0219D958
	movs r0, #0x28
	muls r0, r4, r0
	adds r0, r5, r0
	ldr r0, [r0, #0x2c]
	pop {r3, r4, r5, pc}
_0219D958:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219D914

	thumb_func_start FUN_0219D95C
FUN_0219D95C: ; 0x0219D95C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _0219D974
	movs r0, #0x28
	muls r0, r4, r0
	adds r0, r5, r0
	ldrh r0, [r0, #0x2a]
	pop {r3, r4, r5, pc}
_0219D974:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219D95C

	thumb_func_start FUN_0219D978
FUN_0219D978: ; 0x0219D978
	movs r2, #0x28
	muls r2, r1, r2
	adds r0, r0, r2
	ldrh r0, [r0, #0x28]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219D978

	thumb_func_start FUN_0219D984
FUN_0219D984: ; 0x0219D984
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_0219BF14
	cmp r0, #2
	bne _0219D9B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _0219D9B8
	cmp r6, #1
	bne _0219D9AE
	movs r0, #0x28
	adds r5, #0x40
	muls r0, r4, r0
	adds r0, r5, r0
	pop {r4, r5, r6, pc}
_0219D9AE:
	movs r0, #0x28
	adds r5, #0x38
	muls r0, r4, r0
	adds r0, r5, r0
	pop {r4, r5, r6, pc}
_0219D9B8:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219D984

	thumb_func_start FUN_0219D9BC
FUN_0219D9BC: ; 0x0219D9BC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _0219D9CE
	movs r0, #0
	pop {r3, r4, r5, pc}
_0219D9CE:
	movs r0, #0x28
	muls r0, r4, r0
	adds r0, r5, r0
	ldr r0, [r0, #0x20]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219D9BC

	thumb_func_start FUN_0219D9D8
FUN_0219D9D8: ; 0x0219D9D8
	ldr r0, [r0]
	ldr r3, _0219D9E4 ; =FUN_02034F10
	adds r0, #0x88
	ldr r0, [r0]
	bx r3
	nop
_0219D9E4: .word FUN_02034F10
	thumb_func_end FUN_0219D9D8

	thumb_func_start FUN_0219D9E8
FUN_0219D9E8: ; 0x0219D9E8
	movs r1, #0xaf
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bx lr
	thumb_func_end FUN_0219D9E8

	thumb_func_start FUN_0219D9F0
FUN_0219D9F0: ; 0x0219D9F0
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0xa6
	lsls r7, r7, #2
	adds r6, r0, #0
	movs r4, #0
	adds r7, #0x10
_0219D9FC:
	lsls r0, r4, #2
	adds r5, r6, r0
	movs r0, #0x12
	bl FUN_0201FD2C
	movs r1, #0xa6
	lsls r1, r1, #2
	str r0, [r5, r1]
	movs r0, #0x12
	bl FUN_0201FD2C
	adds r4, r4, #1
	str r0, [r5, r7]
	cmp r4, #4
	blo _0219D9FC
	movs r0, #0x12
	bl FUN_0201FD2C
	movs r1, #0xae
	lsls r1, r1, #2
	str r0, [r6, r1]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219D9F0

	thumb_func_start FUN_0219DA28
FUN_0219DA28: ; 0x0219DA28
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0xa6
	lsls r0, r0, #2
	movs r7, #0xa6
	str r0, [sp]
	adds r0, #0x10
	lsls r7, r7, #2
	movs r4, #0
	str r0, [sp]
	adds r7, #0x10
_0219DA3E:
	lsls r0, r4, #2
	adds r5, r6, r0
	movs r0, #0xa6
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	cmp r0, #0
	beq _0219DA58
	bl FUN_0203A278
	movs r0, #0xa6
	movs r1, #0
	lsls r0, r0, #2
	str r1, [r5, r0]
_0219DA58:
	ldr r0, [r5, r7]
	cmp r0, #0
	beq _0219DA68
	bl FUN_0203A278
	ldr r0, [sp]
	movs r1, #0
	str r1, [r5, r0]
_0219DA68:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219DA3E
	movs r4, #0xae
	lsls r4, r4, #2
	ldr r0, [r6, r4]
	cmp r0, #0
	beq _0219DA80
	bl FUN_0203A278
	movs r0, #0
	str r0, [r6, r4]
_0219DA80:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219DA28

	thumb_func_start FUN_0219DA84
FUN_0219DA84: ; 0x0219DA84
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	lsls r5, r1, #2
	movs r0, #0xa6
	adds r1, r6, r5
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	adds r7, r2, #0
	cmp r0, #0
	beq _0219DAD2
	bl FUN_0201FD54
	movs r0, #0xa6
	lsls r0, r0, #2
	adds r0, #0x10
	adds r4, r6, r0
	ldr r0, [r4, r5]
	bl FUN_0201FD54
	movs r1, #0xa6
	adds r2, r6, r5
	lsls r1, r1, #2
	ldr r1, [r2, r1]
	adds r0, r7, #0
	bl FUN_020200D8
	ldr r1, [r4, r5]
	adds r0, r7, #0
	bl FUN_020200D8
	ldr r0, [r4, r5]
	bl FUN_0201FE24
	cmp r0, #0
	beq _0219DAD2
	ldr r0, [r4, r5]
	movs r1, #0
	bl FUN_0201FF34
_0219DAD2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219DA84

	thumb_func_start FUN_0219DAD4
FUN_0219DAD4: ; 0x0219DAD4
	push {r3, r4, r5, lr}
	cmp r2, #0
	beq _0219DAF8
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r5, r0, r2
	lsls r4, r1, #2
	ldr r0, [r5, r4]
	bl FUN_0201FE24
	cmp r0, #0
	beq _0219DAF4
	ldr r0, [r5, r4]
	movs r1, #0
	bl FUN_0201FF34
_0219DAF4:
	ldr r0, [r5, r4]
	pop {r3, r4, r5, pc}
_0219DAF8:
	lsls r1, r1, #2
	adds r1, r0, r1
	movs r0, #0xa6
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219DAD4

	thumb_func_start FUN_0219DB04
FUN_0219DB04: ; 0x0219DB04
	ldr r0, [r0]
	ldr r3, _0219DB0C ; =FUN_02017D28
	bx r3
	nop
_0219DB0C: .word FUN_02017D28
	thumb_func_end FUN_0219DB04

	thumb_func_start FUN_0219DB10
FUN_0219DB10: ; 0x0219DB10
	push {r3, lr}
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	bne _0219DB26
	adds r2, #0x84
	ldr r0, [r2]
	bl FUN_020095A0
_0219DB26:
	pop {r3, pc}
	thumb_func_end FUN_0219DB10

	thumb_func_start FUN_0219DB28
FUN_0219DB28: ; 0x0219DB28
	push {r3, lr}
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	bne _0219DB3E
	adds r3, #0x84
	ldr r0, [r3]
	bl FUN_0200955C
_0219DB3E:
	pop {r3, pc}
	thumb_func_end FUN_0219DB28

	thumb_func_start FUN_0219DB40
FUN_0219DB40: ; 0x0219DB40
	ldr r0, [r0]
	adds r0, #0x90
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219DB40

	thumb_func_start FUN_0219DB48
FUN_0219DB48: ; 0x0219DB48
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	movs r4, #0
	bl FUN_0219A044
	cmp r0, #1
	bne _0219DB64
	ldr r0, [r5]
	adds r0, #0x97
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219DB64
	movs r4, #1
_0219DB64:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219DB48

	thumb_func_start FUN_0219DB68
FUN_0219DB68: ; 0x0219DB68
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	adds r1, r0, #0
	adds r1, #0xdd
	ldrb r1, [r1]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	bne _0219DBA0
	bl FUN_0219A044
	cmp r0, #1
	bne _0219DB8A
	adds r0, r4, #0
	bl FUN_0219DB48
	pop {r4, pc}
_0219DB8A:
	adds r0, r4, #0
	bl FUN_0219BF14
	cmp r0, #0
	beq _0219DB98
	cmp r0, #1
	bne _0219DB9C
_0219DB98:
	movs r0, #1
	pop {r4, pc}
_0219DB9C:
	movs r0, #0
	pop {r4, pc}
_0219DBA0:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_0219DB68

	thumb_func_start FUN_0219DBA4
FUN_0219DBA4: ; 0x0219DBA4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r2, #0
	adds r4, r1, #0
	bl FUN_0219CBF0
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219F300
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219DBA4

	thumb_func_start FUN_0219DBBC
FUN_0219DBBC: ; 0x0219DBBC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	str r2, [sp]
	bl FUN_021BAC80
	adds r4, r0, #0
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_0219D25C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r0, #0xc8
	adds r1, r4, #0
	bl FUN_0219D25C
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BB084
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BB084
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_0219BFA0
	adds r4, r0, #0
	ldr r3, _0219DC38 ; =0x00000468
	ldr r7, _0219DC3C ; =0x00007FFF
	ldrh r3, [r5, r3]
	adds r0, r6, #0
	ldrh r2, [r4, #0xa]
	adds r6, r3, #0
	ands r6, r7
	adds r3, r7, #1
	orrs r3, r6
	lsls r3, r3, #0x10
	ldr r1, [sp]
	lsrs r3, r3, #0x10
	bl FUN_02020CB8
	ldr r3, _0219DC38 ; =0x00000468
	ldrh r2, [r4, #0xa]
	ldrh r3, [r5, r3]
	ldr r0, [sp, #4]
	ldr r1, [sp]
	adds r4, r3, #0
	ands r4, r7
	adds r3, r7, #1
	orrs r3, r4
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	bl FUN_02020CB8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219DC38: .word 0x00000468
_0219DC3C: .word 0x00007FFF
	thumb_func_end FUN_0219DBBC

	thumb_func_start FUN_0219DC40
FUN_0219DC40: ; 0x0219DC40
	push {r3, lr}
	ldr r0, [r0, #8]
	cmp r0, #0
	beq _0219DC4C
	bl FUN_0219F320
_0219DC4C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219DC40

	thumb_func_start FUN_0219DC50
FUN_0219DC50: ; 0x0219DC50
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r5, r0, #0
	ldr r1, [r5]
	adds r1, #0x23
	ldrb r1, [r1]
	cmp r1, #0
	bne _0219DC68
	bl FUN_0219C9C8
	cmp r0, #0
	beq _0219DC6A
_0219DC68:
	b _0219DE9A
_0219DC6A:
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #1
	bhi _0219DD62
	ldr r4, _0219DEA0 ; =0x0000046C
	movs r6, #0x1b
	ldrb r2, [r5, r4]
	lsls r6, r6, #4
	adds r0, r5, r6
	adds r1, r5, #0
	bl FUN_0219D0BC
	ldrb r1, [r5, r4]
	adds r0, r5, r6
	bl FUN_0219D178
	adds r7, r0, #0
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #1
	bne _0219DCC8
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219D978
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021BD7C8
	cmp r0, #0
	beq _0219DCC8
	adds r0, r5, #0
	bl FUN_0219BFA0
	adds r1, r0, #0
	subs r2, r4, #4
	ldrh r3, [r5, r2]
	ldr r2, _0219DEA4 ; =0x00007FFF
	ldrh r1, [r1, #0xa]
	ands r3, r2
	adds r2, r2, #1
	orrs r2, r3
	lsls r2, r2, #0x10
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	bl FUN_02020D1C
_0219DCC8:
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #1
	bne _0219DD38
	adds r0, r7, #0
	bl FUN_0201FE24
	movs r4, #0
	str r0, [sp, #0x24]
	cmp r0, #0
	bls _0219DD38
_0219DCDE:
	ldr r0, [r5]
	adds r1, r4, #0
	ldr r0, [r0, #0x24]
	bl FUN_0201FF34
	str r0, [sp, #0x28]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0201FF34
	adds r6, r0, #0
	ldr r0, [sp, #0x28]
	movs r1, #6
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x10
	str r0, [sp, #0x20]
	bl FUN_021BD8C4
	cmp r0, #0
	bne _0219DD16
	adds r0, r6, #0
	movs r1, #6
	ldr r2, [sp, #0x20]
	b _0219DD2C
_0219DD16:
	adds r0, r6, #0
	movs r1, #6
	movs r2, #0
	bl FUN_0201CD24
	ldr r1, [sp, #0x20]
	cmp r1, r0
	beq _0219DD30
	adds r0, r6, #0
	movs r1, #6
	movs r2, #0
_0219DD2C:
	bl FUN_0201CD48
_0219DD30:
	ldr r0, [sp, #0x24]
	adds r4, r4, #1
	cmp r4, r0
	blo _0219DCDE
_0219DD38:
	ldr r1, [r5]
	adds r0, r7, #0
	ldr r1, [r1, #0x24]
	bl FUN_020200D8
	adds r0, r7, #0
	movs r4, #0
	bl FUN_0201FE24
	cmp r0, #0
	bls _0219DD62
_0219DD4E:
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0201FF34
	adds r0, r7, #0
	adds r4, r4, #1
	bl FUN_0201FE24
	cmp r4, r0
	blo _0219DD4E
_0219DD62:
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #0
	bne _0219DD9A
	ldr r1, _0219DEA0 ; =0x0000046C
	adds r0, r5, #0
	ldrb r1, [r5, r1]
	movs r2, #0
	bl FUN_0219C910
	lsls r0, r0, #0x18
	movs r6, #0x1b
	lsrs r4, r0, #0x18
	lsls r6, r6, #4
	adds r0, r5, r6
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #1
	bl FUN_0219CFB8
	adds r0, r5, r6
	adds r1, r4, #0
	bl FUN_0219D178
	ldr r1, [r5]
	ldr r1, [r1, #0x28]
	bl FUN_020200D8
_0219DD9A:
	ldr r0, [r5]
	ldr r0, [r0]
	cmp r0, #4
	beq _0219DE9A
	movs r0, #0
	str r0, [sp, #0x1c]
_0219DDA6:
	ldr r0, _0219DEA0 ; =0x0000046C
	ldr r1, [sp, #0x1c]
	ldrb r0, [r5, r0]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219E088
	str r0, [sp, #0x18]
	ldr r1, [sp, #0x18]
	movs r0, #0
	movs r2, #6
	adds r6, r1, #0
	muls r6, r2, r6
	adds r7, r0, #0
_0219DDC2:
	ldr r1, [r5]
	adds r1, r6, r1
	adds r1, r0, r1
	adds r1, #0xe7
	adds r0, r0, #1
	strb r7, [r1]
	cmp r0, #6
	blo _0219DDC2
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219DE90
	adds r0, r5, #0
	ldr r1, [sp, #0x18]
	adds r0, #0xc8
	bl FUN_0219D408
	str r0, [sp, #0x14]
	bl FUN_0219D4C8
	str r0, [sp, #0x10]
	ldr r1, _0219DEA8 ; =0x021D6C64
	ldr r0, [sp, #0x18]
	str r7, [sp, #0xc]
	ldrb r0, [r1, r0]
	str r7, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bls _0219DE76
_0219DE06:
	ldr r1, [sp]
	ldr r0, [sp, #0x14]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	adds r4, r0, #0
	bl FUN_021BAC80
	ldr r1, [sp, #4]
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	ldr r1, [sp, #0xc]
	adds r0, r1, r0
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r7, r7, r0
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _0219DE52
	ldr r0, [r5]
	adds r1, r6, r0
	ldr r0, [sp, #8]
	adds r1, r0, r1
	adds r1, #0xe7
	movs r0, #2
	b _0219DE68
_0219DE52:
	adds r0, r4, #0
	bl FUN_021BBAE8
	cmp r0, #0
	beq _0219DE6A
	ldr r0, [r5]
	adds r1, r6, r0
	ldr r0, [sp, #8]
	adds r1, r0, r1
	adds r1, #0xe7
	movs r0, #1
_0219DE68:
	strb r0, [r1]
_0219DE6A:
	ldr r0, [sp]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp]
	cmp r1, r0
	blo _0219DE06
_0219DE76:
	ldr r1, [sp, #0xc]
	movs r4, #0x64
	adds r0, r1, #0
	muls r0, r4, r0
	adds r1, r7, #0
	blx FUN_0208D894
	ldr r1, [sp, #0x18]
	ldr r2, [r5]
	lsls r1, r1, #2
	adds r1, r2, r1
	adds r4, #0x9c
	str r0, [r1, r4]
_0219DE90:
	ldr r0, [sp, #0x1c]
	adds r0, r0, #1
	str r0, [sp, #0x1c]
	cmp r0, #4
	blo _0219DDA6
_0219DE9A:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	nop
_0219DEA0: .word 0x0000046C
_0219DEA4: .word 0x00007FFF
_0219DEA8: .word 0x021D6C64
	thumb_func_end FUN_0219DC50

	thumb_func_start FUN_0219DEAC
FUN_0219DEAC: ; 0x0219DEAC
	push {r3, lr}
	bl FUN_0219BF14
	cmp r0, #2
	beq _0219DEBA
	cmp r0, #3
	bne _0219DEBE
_0219DEBA:
	movs r0, #1
	pop {r3, pc}
_0219DEBE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0219DEAC

	thumb_func_start FUN_0219DEC4
FUN_0219DEC4: ; 0x0219DEC4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_0219BF14
	cmp r0, #4
	bne _0219DED4
	movs r0, #1
	b _0219DF2A
_0219DED4:
	ldr r4, _0219DF34 ; =0x00000473
	ldrb r0, [r5, r4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _0219DEE2
	movs r0, #6
	b _0219DF2A
_0219DEE2:
	ldr r0, [r5]
	adds r0, #0xac
	ldrb r0, [r0]
	cmp r0, #6
	beq _0219DEF0
	movs r0, #5
	b _0219DF2A
_0219DEF0:
	adds r0, r4, #0
	subs r0, #0x2b
	adds r0, r5, r0
	bl FUN_021BDAD4
	cmp r0, #0
	beq _0219DF16
	adds r0, r5, #0
	bl FUN_0219BF14
	subs r1, r4, #7
	adds r2, r0, #0
	adds r0, r4, #0
	subs r0, #0x2b
	ldrb r1, [r5, r1]
	adds r0, r5, r0
	bl FUN_021BDAD8
	b _0219DF2A
_0219DF16:
	adds r0, r4, #0
	subs r0, #0x2f
	ldr r0, [r5, r0]
	cmp r0, #7
	bne _0219DF26
	movs r0, #1
	subs r4, #0x2f
	str r0, [r5, r4]
_0219DF26:
	ldr r0, _0219DF38 ; =0x00000444
	ldr r0, [r5, r0]
_0219DF2A:
	ldr r1, [r5]
	adds r1, #0xa8
	str r0, [r1]
	pop {r3, r4, r5, pc}
	nop
_0219DF34: .word 0x00000473
_0219DF38: .word 0x00000444
	thumb_func_end FUN_0219DEC4

	thumb_func_start FUN_0219DF3C
FUN_0219DF3C: ; 0x0219DF3C
	ldr r1, _0219DF44 ; =0x00000442
	ldrh r0, [r0, r1]
	bx lr
	nop
_0219DF44: .word 0x00000442
	thumb_func_end FUN_0219DF3C

	thumb_func_start FUN_0219DF48
FUN_0219DF48: ; 0x0219DF48
	movs r1, #0x11
	lsls r1, r1, #6
	ldrh r0, [r0, r1]
	bx lr
	thumb_func_end FUN_0219DF48

	thumb_func_start FUN_0219DF50
FUN_0219DF50: ; 0x0219DF50
	push {r3, lr}
	ldr r1, [r0]
	adds r1, #0x23
	ldrb r1, [r1]
	cmp r1, #0
	bne _0219DF7A
	movs r1, #0x11
	lsls r1, r1, #6
	ldrh r2, [r0, r1]
	cmp r2, #0
	beq _0219DF76
	adds r1, #0x2c
	ldrb r1, [r0, r1]
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl FUN_021B1DA4
	pop {r3, pc}
_0219DF76:
	movs r0, #0
	pop {r3, pc}
_0219DF7A:
	ldr r1, _0219DF8C ; =0x0000046C
	ldrb r1, [r0, r1]
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl FUN_021B1DA4
	pop {r3, pc}
	nop
_0219DF8C: .word 0x0000046C
	thumb_func_end FUN_0219DF50

	thumb_func_start FUN_0219DF90
FUN_0219DF90: ; 0x0219DF90
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	adds r0, #0x23
	ldrb r0, [r0]
	cmp r0, #0
	beq _0219DFB8
	ldr r5, _0219DFBC ; =0x0000046C
	ldrb r0, [r4, r5]
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B1DD0
	cmp r0, #0
	beq _0219DFBA
	movs r1, #2
	subs r5, #0x28
	str r1, [r4, r5]
	pop {r3, r4, r5, pc}
_0219DFB8:
	movs r0, #0
_0219DFBA:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219DFBC: .word 0x0000046C
	thumb_func_end FUN_0219DF90

	thumb_func_start FUN_0219DFC0
FUN_0219DFC0: ; 0x0219DFC0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0219DFE4 ; =0x0000046C
	adds r4, r2, #0
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	ldr r1, [r5]
	lsls r0, r0, #2
	adds r0, r1, r0
	ldr r1, [r0, #0x24]
	cmp r1, #0
	beq _0219DFE0
	adds r0, r4, #0
	bl FUN_020200D8
_0219DFE0:
	pop {r3, r4, r5, pc}
	nop
_0219DFE4: .word 0x0000046C
	thumb_func_end FUN_0219DFC0

	thumb_func_start FUN_0219DFE8
FUN_0219DFE8: ; 0x0219DFE8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0219E00C ; =0x0000046C
	adds r4, r2, #0
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	ldr r1, [r5]
	lsls r0, r0, #2
	adds r0, r1, r0
	ldr r1, [r0, #0x34]
	cmp r1, #0
	beq _0219E008
	adds r0, r4, #0
	bl FUN_02008B34
_0219E008:
	pop {r3, r4, r5, pc}
	nop
_0219E00C: .word 0x0000046C
	thumb_func_end FUN_0219DFE8

	thumb_func_start FUN_0219E010
FUN_0219E010: ; 0x0219E010
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _0219E034 ; =0x0000046C
	adds r6, r1, #0
	ldrb r0, [r5, r0]
	bl FUN_0219E088
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0219D298
	ldr r1, [r5]
	adds r1, r1, r4
	adds r1, #0x44
	strb r0, [r1]
	pop {r4, r5, r6, pc}
	nop
_0219E034: .word 0x0000046C
	thumb_func_end FUN_0219E010

	thumb_func_start FUN_0219E038
FUN_0219E038: ; 0x0219E038
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bl FUN_0219C9A4
	cmp r0, #0
	beq _0219E080
	ldr r5, _0219E084 ; =0x0000046C
	add r1, sp, #0
	ldrb r0, [r4, r5]
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B1914
	cmp r0, #0
	beq _0219E080
	ldr r1, [r4]
	ldr r2, [sp]
	adds r1, #0xb0
	ldr r1, [r1]
	blx FUN_0207894C
	ldr r0, [r4]
	subs r5, #0x7c
	ldr r1, [sp]
	adds r0, #0xb4
	str r1, [r0]
	ldr r3, [r4]
	adds r2, r4, r5
	adds r3, #0xb8
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
_0219E080:
	pop {r3, r4, r5, pc}
	nop
_0219E084: .word 0x0000046C
	thumb_func_end FUN_0219E038

	thumb_func_start FUN_0219E088
FUN_0219E088: ; 0x0219E088
	cmp r0, r1
	bne _0219E090
	movs r0, #0
	bx lr
_0219E090:
	movs r2, #1
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r3, r0
	bne _0219E0A8
	movs r0, #2
	bx lr
_0219E0A8:
	cmp r1, #1
	bls _0219E0AE
	movs r2, #3
_0219E0AE:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_0219E088

	thumb_func_start FUN_0219E0B4
FUN_0219E0B4: ; 0x0219E0B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5]
	adds r7, r1, #0
	bl FUN_0219A044
	str r0, [sp, #4]
	movs r0, #0x3f
	lsls r0, r0, #4
	adds r0, r5, r0
	bl FUN_021BD0D0
	ldr r1, [r5]
	adds r0, r5, #0
	bl FUN_0219A104
	adds r0, r5, #0
	adds r0, #0xc8
	bl FUN_0219CD40
	movs r0, #0x1b
	lsls r0, r0, #4
	adds r0, r5, r0
	bl FUN_0219CD40
	adds r6, r5, #0
	movs r4, #0
	adds r6, #0xc8
_0219E0EE:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219E124
	movs r0, #0x1b
	lsls r0, r0, #4
	lsls r2, r4, #0x18
	adds r0, r5, r0
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
	lsls r2, r4, #0x18
	adds r0, r6, #0
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_0219CD7C
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	adds r1, r7, #0
	bl FUN_021B1974
_0219E124:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219E0EE
	ldr r0, [r5, #4]
	bl FUN_021CE8B0
	movs r4, #0x13
	movs r0, #0x13
	bl FUN_021CE6A8
	str r4, [sp]
	ldr r1, [r5]
	adds r2, r5, #0
	adds r1, #0x21
	ldrb r1, [r1]
	ldr r3, [sp, #4]
	adds r0, r5, #0
	lsls r1, r1, #2
	adds r1, r5, r1
	ldr r1, [r1, #0x10]
	adds r2, #0xc8
	bl FUN_021CE7A0
	adds r1, r0, #0
	ldr r0, [r5]
	str r1, [r5, #4]
	adds r0, #0x21
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B194C
	ldr r0, [r5, #8]
	bl FUN_0219E584
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219E0B4

	thumb_func_start FUN_0219E170
FUN_0219E170: ; 0x0219E170
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r4, #0
_0219E176:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219E18E
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x10]
	bl FUN_021B19A0
_0219E18E:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219E176
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219E170

	thumb_func_start FUN_0219E198
FUN_0219E198: ; 0x0219E198
	ldr r0, [r0, #8]
	ldr r3, _0219E1A0 ; =FUN_0219F3CC
	bx r3
	nop
_0219E1A0: .word FUN_0219F3CC
	thumb_func_end FUN_0219E198

	thumb_func_start FUN_0219E1A4
FUN_0219E1A4: ; 0x0219E1A4
	adds r2, r0, #0
	movs r1, #0
	adds r2, #0xd2
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd3
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd4
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd5
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd6
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd7
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd8
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xd9
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xda
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xdb
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xdc
	adds r0, #0xd0
	strb r1, [r2]
	strh r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219E1A4

	thumb_func_start FUN_0219E1F0
FUN_0219E1F0: ; 0x0219E1F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	ldr r0, [r0, #8]
	cmp r0, #0
	bne _0219E1FE
	b _0219E33C
_0219E1FE:
	bl FUN_0219F3CC
	ldr r1, [sp]
	adds r4, r0, #0
	ldr r1, [r1]
	str r1, [sp, #0x10]
	bl FUN_021ABCB8
	ldr r1, [sp, #0x10]
	adds r1, #0xd2
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021ABCC0
	ldr r1, [sp, #0x10]
	adds r1, #0xd3
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021AB83C
	ldr r1, [sp, #0x10]
	adds r1, #0xd4
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021AB844
	ldr r1, [sp, #0x10]
	adds r1, #0xd5
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021AB850
	ldr r1, [sp, #0x10]
	adds r1, #0xd6
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021AB85C
	ldr r1, [sp, #0x10]
	adds r1, #0xd7
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021AB868
	ldr r1, [sp, #0x10]
	adds r1, #0xd8
	strb r0, [r1]
	ldr r0, [sp, #0x10]
	adds r0, #0xa8
	ldr r0, [r0]
	cmp r0, #1
	bne _0219E270
	ldr r0, [sp, #0x10]
	movs r1, #1
	adds r0, #0xd9
	strb r1, [r0]
_0219E270:
	movs r1, #0x1b
	ldr r0, [sp]
	lsls r1, r1, #4
	adds r0, r0, r1
	movs r1, #0
	movs r5, #0
	bl FUN_0219D408
	str r0, [sp, #0xc]
	bl FUN_0219D4C8
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	bl FUN_0219D4CC
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	cmp r0, #0
	bls _0219E2CE
	ldr r4, [sp, #0x10]
	ldr r6, [sp, #0x10]
	adds r4, #0xdc
	adds r6, #0xd0
_0219E29E:
	lsls r1, r5, #0x18
	ldr r0, [sp, #0xc]
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	adds r7, r0, #0
	bl FUN_021BACF4
	ldrb r1, [r4]
	adds r0, r1, r0
	strb r0, [r4]
	adds r0, r7, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	ldrh r1, [r6]
	lsrs r0, r0, #0x10
	adds r5, r5, #1
	adds r0, r1, r0
	strh r0, [r6]
	ldr r0, [sp, #8]
	cmp r5, r0
	blo _0219E29E
_0219E2CE:
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	movs r6, #0x1b
	subs r1, r1, r0
	ldr r0, [sp, #0x10]
	lsls r6, r6, #4
	adds r0, #0xdb
	strb r1, [r0]
	ldr r0, [sp]
	movs r1, #1
	adds r0, r0, r6
	bl FUN_0219D408
	adds r5, r0, #0
	bl FUN_0219D4C8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D4CC
	subs r1, r4, r0
	ldr r0, [sp, #0x10]
	movs r4, #3
	adds r0, #0xda
	strb r1, [r0]
	ldr r0, [sp]
	movs r1, #3
	bl FUN_0219C448
	cmp r0, #0
	beq _0219E33C
	ldr r0, [sp]
	adds r1, r4, #0
	adds r0, r0, r6
	bl FUN_0219D408
	adds r5, r0, #0
	beq _0219E33C
	bl FUN_0219D4C8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D4CC
	ldr r1, [sp, #0x10]
	subs r0, r4, r0
	adds r1, #0xda
	lsls r0, r0, #0x18
	ldrb r1, [r1]
	lsrs r0, r0, #0x18
	adds r1, r1, r0
	ldr r0, [sp, #0x10]
	adds r0, #0xda
	str r0, [sp, #0x10]
	strb r1, [r0]
_0219E33C:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219E1F0

	thumb_func_start FUN_0219E340
FUN_0219E340: ; 0x0219E340
	ldr r0, [r0, #0x10]
	ldr r3, _0219E348 ; =FUN_021B19E4
	bx r3
	nop
_0219E348: .word FUN_021B19E4
	thumb_func_end FUN_0219E340

	thumb_func_start FUN_0219E34C
FUN_0219E34C: ; 0x0219E34C
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_0219E34C

	thumb_func_start FUN_0219E350
FUN_0219E350: ; 0x0219E350
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_0219E350

	thumb_func_start FUN_0219E354
FUN_0219E354: ; 0x0219E354
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _0219E3A8 ; =0x0000010D
	movs r2, #0x12
	bl FUN_0204A960
	ldr r4, _0219E3AC ; =0x00000474
	ldr r3, _0219E3B0 ; =0x021DAEC0
	str r0, [r5, r4]
	ldr r0, _0219E3B4 ; =0x00001920
	movs r1, #0x14
	str r0, [sp]
	movs r0, #0x12
	movs r2, #0
	movs r6, #0
	bl FUN_0203A228
	adds r1, r4, #4
	str r0, [r5, r1]
	ldr r0, [r5, r4]
	bl FUN_0219E408
	adds r0, r4, #4
	ldr r0, [r5, r0]
	subs r1, r6, #1
	strb r1, [r0, #8]
	movs r0, #0x12
	bl FUN_021D5E5C
	adds r4, #8
	str r0, [r5, r4]
	adds r0, r5, #0
	bl FUN_0219C9C8
	cmp r0, #2
	bne _0219E3A4
	adds r0, r5, #0
	bl FUN_0219CBBC
_0219E3A4:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_0219E3A8: .word 0x0000010D
_0219E3AC: .word 0x00000474
_0219E3B0: .word 0x021DAEC0
_0219E3B4: .word 0x00001920
	thumb_func_end FUN_0219E354

	thumb_func_start FUN_0219E3B8
FUN_0219E3B8: ; 0x0219E3B8
	push {r3, r4, r5, lr}
	ldr r4, _0219E3D8 ; =0x0000047C
	adds r5, r0, #0
	ldr r0, [r5, r4]
	bl FUN_021D5EA8
	subs r0, r4, #4
	ldr r0, [r5, r0]
	bl FUN_0203A278
	subs r4, #8
	ldr r0, [r5, r4]
	bl FUN_0203A278
	pop {r3, r4, r5, pc}
	nop
_0219E3D8: .word 0x0000047C
	thumb_func_end FUN_0219E3B8

	thumb_func_start FUN_0219E3DC
FUN_0219E3DC: ; 0x0219E3DC
	ldr r1, _0219E3E8 ; =0x00000474
	ldr r0, [r0, r1]
	cmp r0, #0
	bne _0219E3E6
	movs r0, #0
_0219E3E6:
	bx lr
	.align 2, 0
_0219E3E8: .word 0x00000474
	thumb_func_end FUN_0219E3DC

	thumb_func_start FUN_0219E3EC
FUN_0219E3EC: ; 0x0219E3EC
	ldr r1, _0219E3F8 ; =0x00000478
	ldr r0, [r0, r1]
	cmp r0, #0
	bne _0219E3F6
	movs r0, #0
_0219E3F6:
	bx lr
	.align 2, 0
_0219E3F8: .word 0x00000478
	thumb_func_end FUN_0219E3EC

	thumb_func_start FUN_0219E3FC
FUN_0219E3FC: ; 0x0219E3FC
	ldr r1, _0219E404 ; =0x0000047C
	ldr r0, [r0, r1]
	bx lr
	nop
_0219E404: .word 0x0000047C
	thumb_func_end FUN_0219E3FC

	thumb_func_start FUN_0219E408
FUN_0219E408: ; 0x0219E408
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219E408

	thumb_func_start FUN_0219E40C
FUN_0219E40C: ; 0x0219E40C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0xae
	str r0, [sp]
	add r0, sp, #0x20
	str r1, [sp, #8]
	adds r7, r3, #0
	adds r6, r2, #0
	ldrh r0, [r0]
	ldr r1, _0219E4CC ; =0x00000CC4
	ldr r3, _0219E4D0 ; =0x021DAECC
	movs r2, #1
	bl FUN_0203A228
	adds r4, r0, #0
	str r5, [r4, #0xc]
	str r6, [r4, #0x10]
	add r0, sp, #0x20
	ldrh r2, [r0]
	ldr r0, _0219E4CC ; =0x00000CC4
	adds r1, r4, #0
	subs r0, r0, #4
	strh r2, [r4, r0]
	ldr r0, _0219E4CC ; =0x00000CC4
	adds r3, r4, #0
	adds r1, #0xf0
	subs r0, #0x14
	str r1, [r4, r0]
	adds r0, r4, #0
	movs r5, #0
	adds r0, #0xed
	strb r5, [r0]
	ldr r0, _0219E4CC ; =0x00000CC4
	str r5, [r4, #0x44]
	subs r0, #0xa
	strb r5, [r4, r0]
	ldr r0, _0219E4CC ; =0x00000CC4
	ldr r6, [sp, #8]
	subs r0, r0, #5
	strb r5, [r4, r0]
	str r7, [r4, #0x4c]
	adds r3, #0x50
	ldm r6!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r6!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r6!, {r0, r1}
	stm r3!, {r0, r1}
	movs r0, #0x20
	adds r1, r2, #0
	bl FUN_0204855C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [sp, #8]
	bl FUN_021BD0D0
	adds r6, r4, #0
	adds r6, #0x14
	movs r7, #0xc
_0219E488:
	adds r0, r5, #0
	muls r0, r7, r0
	adds r0, r6, r0
	bl FUN_0219F26C
	adds r5, r5, #1
	cmp r5, #4
	blt _0219E488
	ldr r0, [r4, #0x4c]
	adds r3, r4, #0
	str r0, [sp]
	movs r0, #0x33
	lsls r0, r0, #6
	ldrh r0, [r4, r0]
	adds r3, #0xf0
	str r0, [sp, #4]
	ldr r1, [r4, #0xc]
	ldr r2, [r4, #0x10]
	adds r0, r4, #0
	bl FUN_0219F3D0
	str r0, [r4, #0x44]
	bl FUN_021A0024
	adds r1, r4, #0
	adds r1, #0xb0
	str r0, [r1]
	ldr r1, _0219E4D4 ; =FUN_0219E648
	adds r0, r4, #0
	bl FUN_0219E630
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219E4CC: .word 0x00000CC4
_0219E4D0: .word 0x021DAECC
_0219E4D4: .word FUN_0219E648
	thumb_func_end FUN_0219E40C

	thumb_func_start FUN_0219E4D8
FUN_0219E4D8: ; 0x0219E4D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	str r3, [sp]
	adds r4, r2, #0
	adds r7, r1, #0
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	bl FUN_0219D408
	str r0, [sp, #4]
	movs r0, #0xc
	adds r6, r4, #0
	adds r5, #0x14
	muls r6, r0, r6
	adds r0, r5, r6
	adds r1, r4, #0
	adds r2, r7, #0
	movs r3, #1
	bl FUN_0219F284
	ldr r1, [sp, #4]
	ldr r2, [sp]
	adds r0, r5, r6
	bl FUN_0219F28C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219E4D8

	thumb_func_start FUN_0219E510
FUN_0219E510: ; 0x0219E510
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r3, #0
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	adds r6, r2, #0
	bl FUN_0219D408
	movs r3, #0x33
	lsls r3, r3, #6
	adds r7, r0, #0
	ldrh r3, [r5, r3]
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021D4A84
	adds r2, r0, #0
	movs r0, #0xc
	adds r6, r4, #0
	adds r5, #0x14
	muls r6, r0, r6
	adds r0, r5, r6
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0219F284
	add r2, sp, #0x18
	ldrb r2, [r2]
	adds r0, r5, r6
	adds r1, r7, #0
	bl FUN_0219F28C
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219E510

	thumb_func_start FUN_0219E554
FUN_0219E554: ; 0x0219E554
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x10]
	adds r4, r1, #0
	adds r7, r2, #0
	bl FUN_0219D408
	str r0, [sp]
	movs r0, #0xc
	adds r6, r4, #0
	adds r5, #0x14
	muls r6, r0, r6
	adds r0, r5, r6
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl FUN_0219F284
	ldr r1, [sp]
	adds r0, r5, r6
	adds r2, r7, #0
	bl FUN_0219F28C
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219E554

	thumb_func_start FUN_0219E584
FUN_0219E584: ; 0x0219E584
	push {r4, lr}
	ldr r1, _0219E59C ; =FUN_0219E648
	adds r4, r0, #0
	bl FUN_0219E630
	adds r0, r4, #0
	bl FUN_0219F240
	ldr r0, [r4, #0x44]
	bl FUN_0219F438
	pop {r4, pc}
	.align 2, 0
_0219E59C: .word FUN_0219E648
	thumb_func_end FUN_0219E584

	thumb_func_start FUN_0219E5A0
FUN_0219E5A0: ; 0x0219E5A0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	bl FUN_02048590
	ldr r0, [r5, #0x44]
	bl FUN_0219F5B0
	movs r4, #0
	movs r6, #0xc
_0219E5B6:
	adds r0, r4, #0
	muls r0, r6, r0
	adds r1, r5, r0
	ldrb r0, [r1, #0x1f]
	cmp r0, #0xff
	beq _0219E5D2
	ldr r0, [r1, #0x14]
	cmp r0, #0
	beq _0219E5D2
	ldrb r1, [r1, #0x1e]
	cmp r1, #0
	bne _0219E5D2
	bl FUN_021D4B0C
_0219E5D2:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219E5B6
	adds r0, r5, #0
	bl FUN_0203A278
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219E5A0

	thumb_func_start FUN_0219E5E0
FUN_0219E5E0: ; 0x0219E5E0
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xed
	ldrb r1, [r1]
	cmp r1, #2
	beq _0219E610
	ldr r2, [r4]
	adds r1, r4, #4
	blx r2
	cmp r0, #0
	beq _0219E61C
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r2, [r2]
	adds r0, r4, #0
	movs r1, #9
	movs r3, #8
	bl FUN_0219F168
	movs r0, #2
	adds r4, #0xed
	strb r0, [r4]
	b _0219E61C
_0219E610:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E61C
	movs r0, #1
	pop {r4, pc}
_0219E61C:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_0219E5E0

	thumb_func_start FUN_0219E620
FUN_0219E620: ; 0x0219E620
	adds r0, #0xb0
	ldr r0, [r0]
	ldr r2, [r0]
	ldr r0, [r0, #4]
	str r2, [r1]
	str r0, [r1, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219E620

	thumb_func_start FUN_0219E630
FUN_0219E630: ; 0x0219E630
	str r1, [r0]
	movs r1, #0
	str r1, [r0, #4]
	bx lr
	thumb_func_end FUN_0219E630

	thumb_func_start FUN_0219E638
FUN_0219E638: ; 0x0219E638
	ldr r1, _0219E640 ; =FUN_0219E6F0
	ldr r3, _0219E644 ; =FUN_0219E630
	bx r3
	nop
_0219E640: .word FUN_0219E6F0
_0219E644: .word FUN_0219E630
	thumb_func_end FUN_0219E638

	thumb_func_start FUN_0219E648
FUN_0219E648: ; 0x0219E648
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #4
	bhi _0219E6E8
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219E660: ; jump table
	.short _0219E66A - _0219E660 - 2 ; case 0
	.short _0219E676 - _0219E660 - 2 ; case 1
	.short _0219E6B0 - _0219E660 - 2 ; case 2
	.short _0219E6C0 - _0219E660 - 2 ; case 3
	.short _0219E6D4 - _0219E660 - 2 ; case 4
_0219E66A:
	movs r1, #1
	bl FUN_0219F15C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
_0219E676:
	adds r0, r5, #0
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E6E8
	adds r0, r5, #0
	bl FUN_0219F214
	ldr r0, [r5, #0xc]
	bl FUN_0219BF14
	cmp r0, #4
	beq _0219E6A6
	ldr r0, [r5, #0x44]
	bl FUN_0219F5C8
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_0219F040
_0219E69E:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219E6E8
_0219E6A6:
	ldr r1, _0219E6EC ; =FUN_0219ECC4
	adds r0, r5, #0
	bl FUN_0219E630
	b _0219E6E8
_0219E6B0:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E6E8
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219E69E
_0219E6C0:
	movs r1, #0xcb
	lsls r1, r1, #4
	ldr r3, [r5, r1]
	movs r1, #8
	adds r2, r3, #0
	ldr r3, [r3]
	adds r2, #8
	bl FUN_0219F168
	b _0219E69E
_0219E6D4:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E6E8
	adds r0, r5, #0
	bl FUN_0219F214
	adds r0, r5, #0
	bl FUN_0219E638
_0219E6E8:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219E6EC: .word FUN_0219ECC4
	thumb_func_end FUN_0219E648

	thumb_func_start FUN_0219E6F0
FUN_0219E6F0: ; 0x0219E6F0
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #7
	bhi _0219E75E
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219E708: ; jump table
	.short _0219E718 - _0219E708 - 2 ; case 0
	.short _0219E742 - _0219E708 - 2 ; case 1
	.short _0219E74C - _0219E708 - 2 ; case 2
	.short _0219E756 - _0219E708 - 2 ; case 3
	.short _0219E7AC - _0219E708 - 2 ; case 4
	.short _0219E7BC - _0219E708 - 2 ; case 5
	.short _0219E7CE - _0219E708 - 2 ; case 6
	.short _0219E7EE - _0219E708 - 2 ; case 7
_0219E718:
	ldr r0, [r4, #0x44]
	bl FUN_0219FE64
	cmp r0, #0
	beq _0219E73E
_0219E722:
	movs r0, #0xcb
	lsls r0, r0, #4
	ldr r3, [r4, r0]
	adds r0, r4, #0
	adds r2, r3, #0
	ldr r3, [r3]
	movs r1, #8
	adds r2, #8
	bl FUN_0219F168
_0219E736:
	ldr r0, [r5]
_0219E738:
	adds r0, r0, #1
_0219E73A:
	str r0, [r5]
	b _0219E888
_0219E73E:
	ldr r0, [r5]
	b _0219E7A8
_0219E742:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E75E
	b _0219E7B4
_0219E74C:
	movs r1, #3
	bl FUN_0219F15C
	ldr r0, [r5]
	b _0219E7A6
_0219E756:
	bl FUN_0219F1DC
	cmp r0, #0
	bne _0219E760
_0219E75E:
	b _0219E888
_0219E760:
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r4, #0xc]
	bl FUN_0219DF50
	cmp r0, #0
	beq _0219E77A
	ldr r1, _0219E88C ; =FUN_0219EC4C
	adds r0, r4, #0
_0219E774:
	bl FUN_0219E630
	b _0219E888
_0219E77A:
	ldr r0, [r4, #0xc]
	bl FUN_0219DF90
	cmp r0, #0
	beq _0219E78A
	adds r0, r4, #0
	ldr r1, _0219E890 ; =FUN_0219ECC4
	b _0219E774
_0219E78A:
	adds r0, r4, #0
	bl FUN_0219F0EC
	adds r0, r4, #0
	bl FUN_0219E8A0
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #1
	bl FUN_0219F06C
	cmp r0, #0
	ldr r0, [r5]
	beq _0219E7A8
_0219E7A6:
	b _0219E738
_0219E7A8:
	adds r0, r0, #2
	b _0219E73A
_0219E7AC:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E888
_0219E7B4:
	adds r0, r4, #0
	bl FUN_0219F214
	b _0219E736
_0219E7BC:
	ldr r0, [r4, #0x44]
	bl FUN_0219F69C
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219E7CE:
	adds r1, r4, #0
	ldr r0, [r4, #0x44]
	adds r1, #0xb4
	bl FUN_0219F6AC
	str r0, [r4, #0x48]
	ldr r0, [r4, #0xc]
	bl FUN_0219BF24
	cmp r0, #0
	beq _0219E7EC
	adds r0, r4, #0
	adds r0, #0xb4
	bl FUN_0219EFB0
_0219E7EC:
	b _0219E722
_0219E7EE:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E888
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r4, #0x48]
	cmp r0, #6
	bhi _0219E884
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219E80E: ; jump table
	.short _0219E81C - _0219E80E - 2 ; case 0
	.short _0219E84A - _0219E80E - 2 ; case 1
	.short _0219E828 - _0219E80E - 2 ; case 2
	.short _0219E824 - _0219E80E - 2 ; case 3
	.short _0219E86A - _0219E80E - 2 ; case 4
	.short _0219E884 - _0219E80E - 2 ; case 5
	.short _0219E850 - _0219E80E - 2 ; case 6
_0219E81C:
	adds r0, r4, #0
	bl FUN_0219E638
	b _0219E888
_0219E824:
	movs r0, #6
	b _0219E73A
_0219E828:
	ldr r0, [r4, #0xc]
	bl FUN_0219BF14
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0219BDC0
	cmp r5, #0
	bne _0219E844
	cmp r0, #0
	bne _0219E844
	adds r0, r4, #0
	ldr r1, _0219E894 ; =FUN_0219E8A4
	b _0219E774
_0219E844:
	adds r0, r4, #0
	ldr r1, _0219E898 ; =FUN_0219E93C
	b _0219E774
_0219E84A:
	adds r0, r4, #0
	ldr r1, _0219E89C ; =FUN_0219EB24
	b _0219E774
_0219E850:
	ldr r0, [r4, #0x44]
	bl FUN_021A0030
	adds r1, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0219CA3C
	ldr r1, _0219E890 ; =FUN_0219ECC4
	adds r0, r4, #0
	bl FUN_0219E630
	movs r0, #0
	pop {r3, r4, r5, pc}
_0219E86A:
	ldr r0, [r4, #0x44]
	bl FUN_021AC058
	adds r1, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0219CA88
	ldr r1, _0219E890 ; =FUN_0219ECC4
	adds r0, r4, #0
	bl FUN_0219E630
	movs r0, #0
	pop {r3, r4, r5, pc}
_0219E884:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219E888:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219E88C: .word FUN_0219EC4C
_0219E890: .word FUN_0219ECC4
_0219E894: .word FUN_0219E8A4
_0219E898: .word FUN_0219E93C
_0219E89C: .word FUN_0219EB24
	thumb_func_end FUN_0219E6F0

	thumb_func_start FUN_0219E8A0
FUN_0219E8A0: ; 0x0219E8A0
	movs r0, #1
	bx lr
	thumb_func_end FUN_0219E8A0

	thumb_func_start FUN_0219E8A4
FUN_0219E8A4: ; 0x0219E8A4
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219E8BA
	cmp r1, #1
	beq _0219E8C8
	cmp r1, #2
	beq _0219E912
	b _0219E932
_0219E8BA:
	movs r1, #7
	bl FUN_0219F15C
_0219E8C0:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219E932
_0219E8C8:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E932
	ldr r0, [r5, #0xc]
	bl FUN_0219C8A0
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_0219F214
	movs r0, #0xc
	muls r0, r6, r0
	adds r0, r5, r0
	ldr r0, [r0, #0x14]
	movs r1, #0
	bl FUN_021D4B90
	ldrb r0, [r0]
	cmp r0, #0
	bne _0219E8F4
	b _0219E92A
_0219E8F4:
	ldr r0, [r5, #0x44]
	bl FUN_0219FE34
	str r0, [r5, #0x48]
	movs r0, #0xcb
	lsls r0, r0, #4
	ldr r3, [r5, r0]
	adds r0, r5, #0
	adds r2, r3, #0
	ldr r3, [r3]
	movs r1, #8
	adds r2, #8
	bl FUN_0219F168
	b _0219E8C0
_0219E912:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219E932
	adds r0, r5, #0
	bl FUN_0219F214
	ldr r0, [r5, #0x48]
	cmp r0, #0
	beq _0219E92A
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219E92A:
	ldr r1, _0219E938 ; =FUN_0219E93C
	adds r0, r5, #0
	bl FUN_0219E630
_0219E932:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_0219E938: .word FUN_0219E93C
	thumb_func_end FUN_0219E8A4

	thumb_func_start FUN_0219E93C
FUN_0219E93C: ; 0x0219E93C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #6
	bls _0219E94A
	b _0219EA76
_0219E94A:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219E956: ; jump table
	.short _0219E964 - _0219E956 - 2 ; case 0
	.short _0219E97A - _0219E956 - 2 ; case 1
	.short _0219E9AC - _0219E956 - 2 ; case 2
	.short _0219E9EA - _0219E956 - 2 ; case 3
	.short _0219E9FA - _0219E956 - 2 ; case 4
	.short _0219EA0A - _0219E956 - 2 ; case 5
	.short _0219EA28 - _0219E956 - 2 ; case 6
_0219E964:
	ldr r3, _0219EA7C ; =0x00000CB4
	movs r1, #5
	adds r2, r5, r3
	adds r3, r3, #6
	ldrb r3, [r5, r3]
_0219E96E:
	bl FUN_0219F168
_0219E972:
	ldr r0, [r4]
_0219E974:
	adds r0, r0, #1
_0219E976:
	str r0, [r4]
	b _0219EA76
_0219E97A:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EA76
	adds r0, r5, #0
	bl FUN_0219EA84
	cmp r0, #0
	beq _0219E9AA
	adds r0, r5, #0
	bl FUN_0219EAE4
	adds r1, r5, #0
	adds r1, #0xec
	strb r0, [r1]
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r5, #0xec
	movs r1, #4
	movs r2, #0
	adds r3, r5, #0
	bl FUN_0219F1AC
_0219E9AA:
	b _0219E9F8
_0219E9AC:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EA76
	adds r0, r5, #0
	bl FUN_0219F214
	ldr r0, [r5, #0xc]
	bl FUN_0219DF90
	cmp r0, #0
	beq _0219E9CE
_0219E9C4:
	ldr r1, _0219EA80 ; =FUN_0219ECC4
	adds r0, r5, #0
	bl FUN_0219E630
	b _0219EA76
_0219E9CE:
	adds r0, r5, #0
	bl FUN_0219F0EC
	adds r0, r5, #0
	movs r1, #2
	movs r2, #0
	bl FUN_0219F06C
	cmp r0, #0
	ldr r0, [r4]
	beq _0219E9E6
	b _0219E974
_0219E9E6:
	adds r0, r0, #2
	b _0219E976
_0219E9EA:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EA76
	adds r0, r5, #0
	bl FUN_0219F214
_0219E9F8:
	b _0219E972
_0219E9FA:
	bl FUN_0219F214
	ldr r0, [r5, #0x44]
	bl FUN_0219F7E8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
_0219EA0A:
	adds r1, r5, #0
	ldr r0, [r5, #0x44]
	adds r1, #0xb4
	bl FUN_0219F7F4
	str r0, [r5, #0x48]
	movs r0, #0xcb
	lsls r0, r0, #4
	ldr r3, [r5, r0]
	adds r0, r5, #0
	adds r2, r3, #0
	movs r1, #8
	adds r2, #8
	ldr r3, [r3]
	b _0219E96E
_0219EA28:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EA76
	adds r0, r5, #0
	bl FUN_0219F214
	ldr r0, [r5, #0x48]
	cmp r0, #5
	bhi _0219EA70
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219EA48: ; jump table
	.short _0219EA70 - _0219EA48 - 2 ; case 0
	.short _0219EA70 - _0219EA48 - 2 ; case 1
	.short _0219EA54 - _0219EA48 - 2 ; case 2
	.short _0219EA58 - _0219EA48 - 2 ; case 3
	.short _0219EA5C - _0219EA48 - 2 ; case 4
	.short _0219EA6C - _0219EA48 - 2 ; case 5
_0219EA54:
	movs r0, #0
	b _0219E976
_0219EA58:
	movs r0, #5
	b _0219E976
_0219EA5C:
	ldr r0, [r5, #0x44]
	bl FUN_021AC058
	adds r1, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_0219CA88
	b _0219E9C4
_0219EA6C:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219EA70:
	adds r0, r5, #0
	bl FUN_0219E638
_0219EA76:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_0219EA7C: .word 0x00000CB4
_0219EA80: .word FUN_0219ECC4
	thumb_func_end FUN_0219E93C

	thumb_func_start FUN_0219EA84
FUN_0219EA84: ; 0x0219EA84
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_0219BDE0
	cmp r0, #0
	beq _0219EADC
	ldr r0, _0219EAE0 ; =0x00000CBA
	ldrb r1, [r5, r0]
	cmp r1, #0
	beq _0219EADC
	movs r4, #0
	cmp r1, #0
	bls _0219EABE
	adds r7, r5, r0
	subs r6, r0, #6
_0219EAA4:
	adds r1, r5, r4
	ldrb r1, [r1, r6]
	ldr r0, [r5, #0xc]
	bl FUN_0219C690
	cmp r0, #0
	bne _0219EAB6
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0219EAB6:
	ldrb r0, [r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _0219EAA4
_0219EABE:
	ldr r0, [r5, #0xc]
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, #0x10]
	bl FUN_0219D408
	bl FUN_0219D4CC
	cmp r0, #2
	bhs _0219EAD8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0219EAD8:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219EADC:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219EAE0: .word 0x00000CBA
	thumb_func_end FUN_0219EA84

	thumb_func_start FUN_0219EAE4
FUN_0219EAE4: ; 0x0219EAE4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x20
	adds r0, r5, #0
	bl FUN_0219F274
	cmp r0, #0
	beq _0219EB20
	ldr r0, [r5]
	movs r1, #0
	bl FUN_021D4B90
	adds r5, r0, #0
	bl FUN_021BDCBC
	cmp r0, #3
	bne _0219EB20
	ldr r2, [r5]
	ldr r0, [r4, #0x10]
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x1d
	lsls r2, r2, #0x18
	movs r1, #1
	lsrs r2, r2, #0x18
	bl FUN_0219D23C
	bl FUN_021BAC80
	pop {r3, r4, r5, pc}
_0219EB20:
	movs r0, #0x1f
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219EAE4

	thumb_func_start FUN_0219EB24
FUN_0219EB24: ; 0x0219EB24
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #5
	bls _0219EB32
	b _0219EC3A
_0219EB32:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0219EB3E: ; jump table
	.short _0219EB4A - _0219EB3E - 2 ; case 0
	.short _0219EB60 - _0219EB3E - 2 ; case 1
	.short _0219EB9E - _0219EB3E - 2 ; case 2
	.short _0219EBB0 - _0219EB3E - 2 ; case 3
	.short _0219EBC0 - _0219EB3E - 2 ; case 4
	.short _0219EBE6 - _0219EB3E - 2 ; case 5
_0219EB4A:
	ldr r3, _0219EC40 ; =0x00000CB4
	movs r1, #6
	adds r2, r4, r3
	adds r3, r3, #6
	ldrb r3, [r4, r3]
_0219EB54:
	bl FUN_0219F168
	ldr r0, [r5]
_0219EB5A:
	adds r0, r0, #1
_0219EB5C:
	str r0, [r5]
	b _0219EC3A
_0219EB60:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EC3A
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r4, #0xc]
	bl FUN_0219DF90
	cmp r0, #0
	beq _0219EB82
_0219EB78:
	ldr r1, _0219EC44 ; =FUN_0219ECC4
	adds r0, r4, #0
_0219EB7C:
	bl FUN_0219E630
	b _0219EC3A
_0219EB82:
	adds r0, r4, #0
	bl FUN_0219F0EC
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	bl FUN_0219F06C
	cmp r0, #0
	ldr r0, [r5]
	beq _0219EB9A
	b _0219EBAE
_0219EB9A:
	adds r0, r0, #2
	b _0219EB5C
_0219EB9E:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EC3A
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r5]
_0219EBAE:
	b _0219EB5A
_0219EBB0:
	bl FUN_0219F214
	ldr r0, [r4, #0x44]
	bl FUN_0219F788
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_0219EBC0:
	movs r6, #0xcb
	lsls r6, r6, #4
	ldr r1, [r4, r6]
	movs r0, #0
	str r0, [r1]
	str r0, [r1, #4]
	adds r1, r4, #0
	ldr r0, [r4, #0x44]
	adds r1, #0xb4
	bl FUN_0219F794
	str r0, [r4, #0x48]
	ldr r3, [r4, r6]
	adds r0, r4, #0
	adds r2, r3, #0
	movs r1, #8
	adds r2, #8
	ldr r3, [r3]
	b _0219EB54
_0219EBE6:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EC3A
	adds r0, r4, #0
	bl FUN_0219F214
	ldr r0, [r4, #0x48]
	cmp r0, #5
	bhi _0219EC34
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219EC06: ; jump table
	.short _0219EC34 - _0219EC06 - 2 ; case 0
	.short _0219EC12 - _0219EC06 - 2 ; case 1
	.short _0219EC1A - _0219EC06 - 2 ; case 2
	.short _0219EC16 - _0219EC06 - 2 ; case 3
	.short _0219EC20 - _0219EC06 - 2 ; case 4
	.short _0219EC30 - _0219EC06 - 2 ; case 5
_0219EC12:
	movs r0, #0
	b _0219EB5C
_0219EC16:
	movs r0, #4
	b _0219EB5C
_0219EC1A:
	adds r0, r4, #0
	ldr r1, _0219EC48 ; =FUN_0219E93C
	b _0219EB7C
_0219EC20:
	ldr r0, [r4, #0x44]
	bl FUN_021AC058
	adds r1, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0219CA88
	b _0219EB78
_0219EC30:
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219EC34:
	adds r0, r4, #0
	bl FUN_0219E638
_0219EC3A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_0219EC40: .word 0x00000CB4
_0219EC44: .word FUN_0219ECC4
_0219EC48: .word FUN_0219E93C
	thumb_func_end FUN_0219EB24

	thumb_func_start FUN_0219EC4C
FUN_0219EC4C: ; 0x0219EC4C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EC62
	cmp r1, #1
	beq _0219EC7E
	cmp r1, #2
	beq _0219EC96
	b _0219ECBA
_0219EC62:
	adds r0, #0x68
	add r1, sp, #0
	bl FUN_021D49D0
	adds r2, r0, #0
	ldr r3, [sp]
	adds r0, r5, #0
	movs r1, #0xa
	bl FUN_0219F168
_0219EC76:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219ECBA
_0219EC7E:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219ECBA
	adds r0, r5, #0
	bl FUN_0219F214
	adds r0, r5, #0
	movs r1, #0x10
	bl FUN_0219F15C
	b _0219EC76
_0219EC96:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219ECBA
	adds r0, r5, #0
	bl FUN_0219F214
	ldr r0, [r5, #0x44]
	bl FUN_021AC058
	adds r1, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_0219CA88
	ldr r1, _0219ECC0 ; =FUN_0219ECC4
	adds r0, r5, #0
	bl FUN_0219E630
_0219ECBA:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_0219ECC0: .word FUN_0219ECC4
	thumb_func_end FUN_0219EC4C

	thumb_func_start FUN_0219ECC4
FUN_0219ECC4: ; 0x0219ECC4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0219CA98
	adds r5, r0, #0
	adds r0, r4, #0
	adds r0, #0xaa
	strh r5, [r0]
	ldr r0, [r4, #0xc]
	bl FUN_0219C8A0
	adds r1, r4, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r4, #0xc]
	bl FUN_0219BF14
	cmp r0, #3
	bhi _0219ED2C
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219ECF8: ; jump table
	.short _0219ED12 - _0219ECF8 - 2 ; case 0
	.short _0219ED00 - _0219ECF8 - 2 ; case 1
	.short _0219ED06 - _0219ECF8 - 2 ; case 2
	.short _0219ED0C - _0219ECF8 - 2 ; case 3
_0219ED00:
	ldr r1, _0219ED48 ; =FUN_0219EE80
	adds r0, r4, #0
_0219ED04:
	b _0219ED40
_0219ED06:
	adds r0, r4, #0
	ldr r1, _0219ED4C ; =FUN_0219EEC8
	b _0219ED04
_0219ED0C:
	adds r0, r4, #0
	ldr r1, _0219ED50 ; =FUN_0219EE3C
	b _0219ED04
_0219ED12:
	cmp r5, #1
	bne _0219ED1C
	adds r0, r4, #0
	ldr r1, _0219ED54 ; =FUN_0219EDAC
	b _0219ED04
_0219ED1C:
	cmp r5, #0
	beq _0219ED24
	cmp r5, #2
	bne _0219ED2A
_0219ED24:
	adds r0, r4, #0
	ldr r1, _0219ED58 ; =FUN_0219EDF4
	b _0219ED04
_0219ED2A:
	b _0219ED3C
_0219ED2C:
	cmp r5, #1
	bne _0219ED3C
	ldr r0, [r4, #0xc]
	bl FUN_0219BF40
	ldr r1, _0219ED5C ; =0x0000FFFF
	bl FUN_02005DF4
_0219ED3C:
	ldr r1, _0219ED60 ; =FUN_0219ED64
	adds r0, r4, #0
_0219ED40:
	bl FUN_0219E630
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219ED48: .word FUN_0219EE80
_0219ED4C: .word FUN_0219EEC8
_0219ED50: .word FUN_0219EE3C
_0219ED54: .word FUN_0219EDAC
_0219ED58: .word FUN_0219EDF4
_0219ED5C: .word 0x0000FFFF
_0219ED60: .word FUN_0219ED64
	thumb_func_end FUN_0219ECC4

	thumb_func_start FUN_0219ED64
FUN_0219ED64: ; 0x0219ED64
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	cmp r1, #0
	beq _0219ED74
	cmp r1, #1
	beq _0219EDA4
	b _0219EDA8
_0219ED74:
	ldr r0, [r0, #0xc]
	movs r4, #0
	bl FUN_0219C9C0
	cmp r0, #0
	bne _0219ED94
	bl FUN_0203DF28
	movs r1, #3
	tst r0, r1
	bne _0219ED92
	bl FUN_0203DA74
	cmp r0, #0
	beq _0219ED96
_0219ED92:
	b _0219ED94
_0219ED94:
	movs r4, #1
_0219ED96:
	cmp r4, #0
	beq _0219EDA8
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219EDA4:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219EDA8:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219ED64

	thumb_func_start FUN_0219EDAC
FUN_0219EDAC: ; 0x0219EDAC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EDC2
	cmp r1, #1
	beq _0219EDD6
	cmp r1, #2
	beq _0219EDE6
	b _0219EDEC
_0219EDC2:
	adds r5, #0xa8
	movs r1, #0xe
	adds r2, r5, #0
	movs r3, #4
	bl FUN_0219F168
_0219EDCE:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219EDEC
_0219EDD6:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EDEC
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219EDCE
_0219EDE6:
	ldr r1, _0219EDF0 ; =FUN_0219ED64
	bl FUN_0219E630
_0219EDEC:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219EDF0: .word FUN_0219ED64
	thumb_func_end FUN_0219EDAC

	thumb_func_start FUN_0219EDF4
FUN_0219EDF4: ; 0x0219EDF4
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EE0A
	cmp r1, #1
	beq _0219EE1E
	cmp r1, #2
	beq _0219EE2E
	b _0219EE34
_0219EE0A:
	adds r5, #0xa8
	movs r1, #0xf
	adds r2, r5, #0
	movs r3, #4
	bl FUN_0219F168
_0219EE16:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219EE34
_0219EE1E:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EE34
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219EE16
_0219EE2E:
	ldr r1, _0219EE38 ; =FUN_0219ED64
	bl FUN_0219E630
_0219EE34:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219EE38: .word FUN_0219ED64
	thumb_func_end FUN_0219EDF4

	thumb_func_start FUN_0219EE3C
FUN_0219EE3C: ; 0x0219EE3C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EE52
	cmp r1, #1
	beq _0219EE66
	cmp r1, #2
	beq _0219EE76
	b _0219EE7A
_0219EE52:
	adds r5, #0xa8
	movs r1, #0xd
	adds r2, r5, #0
	movs r3, #4
	bl FUN_0219F168
_0219EE5E:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219EE7A
_0219EE66:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EE7A
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219EE5E
_0219EE76:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219EE7A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219EE3C

	thumb_func_start FUN_0219EE80
FUN_0219EE80: ; 0x0219EE80
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EE96
	cmp r1, #1
	beq _0219EEAA
	cmp r1, #2
	beq _0219EEBA
	b _0219EEC0
_0219EE96:
	adds r5, #0xa8
	movs r1, #0xb
	adds r2, r5, #0
	movs r3, #4
	bl FUN_0219F168
_0219EEA2:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219EEC0
_0219EEAA:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EEC0
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219EEA2
_0219EEBA:
	ldr r1, _0219EEC4 ; =FUN_0219ED64
	bl FUN_0219E630
_0219EEC0:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0219EEC4: .word FUN_0219ED64
	thumb_func_end FUN_0219EE80

	thumb_func_start FUN_0219EEC8
FUN_0219EEC8: ; 0x0219EEC8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _0219EEDE
	cmp r1, #1
	beq _0219EEF2
	cmp r1, #2
	beq _0219EF02
	b _0219EF1A
_0219EEDE:
	adds r5, #0xa8
	movs r1, #0xc
	adds r2, r5, #0
	movs r3, #4
	bl FUN_0219F168
_0219EEEA:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _0219EF1A
_0219EEF2:
	bl FUN_0219F1DC
	cmp r0, #0
	beq _0219EF1A
	adds r0, r5, #0
	bl FUN_0219F214
	b _0219EEEA
_0219EF02:
	ldr r0, [r5, #0xc]
	bl FUN_0219BF24
	cmp r0, #0
	bne _0219EF16
	ldr r1, _0219EF20 ; =FUN_0219ED64
	adds r0, r5, #0
	bl FUN_0219E630
	b _0219EF1A
_0219EF16:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0219EF1A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_0219EF20: .word FUN_0219ED64
	thumb_func_end FUN_0219EEC8

	thumb_func_start FUN_0219EF24
FUN_0219EF24: ; 0x0219EF24
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	movs r5, #0
	adds r4, r0, #0
	str r5, [sp, #0xc]
	adds r3, r5, #0
_0219EF30:
	adds r0, r4, r5
	adds r0, #0xe4
	strb r3, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	blo _0219EF30
	adds r0, r4, #0
	adds r0, #0x68
	bl FUN_021D49E0
	adds r0, r4, #0
	add r2, sp, #8
	add r5, sp, #0x10
	adds r0, #0x68
	add r1, sp, #0xc
	adds r2, #1
	add r3, sp, #8
	str r5, [sp]
	bl FUN_021D4A10
	cmp r0, #0
	beq _0219EFAA
	adds r0, r4, #0
	str r0, [sp, #4]
	adds r0, #0x68
	str r0, [sp, #4]
	add r7, sp, #8
_0219EF6A:
	ldrb r1, [r7]
	movs r2, #0
	cmp r1, #0
	bls _0219EF8E
	ldrb r3, [r7, #1]
	movs r0, #0xc
	muls r0, r3, r0
	adds r0, r4, r0
_0219EF7A:
	lsls r3, r2, #2
	adds r2, r2, #1
	ldr r6, [r5, r3]
	adds r3, r0, r3
	lsls r2, r2, #0x18
	adds r3, #0xb4
	lsrs r2, r2, #0x18
	str r6, [r3]
	cmp r2, r1
	blo _0219EF7A
_0219EF8E:
	ldrb r0, [r7, #1]
	add r2, sp, #8
	adds r2, #1
	adds r0, r4, r0
	adds r0, #0xe4
	strb r1, [r0]
	ldr r0, [sp, #4]
	add r1, sp, #0xc
	add r3, sp, #8
	str r5, [sp]
	bl FUN_021D4A10
	cmp r0, #0
	bne _0219EF6A
_0219EFAA:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219EF24

	thumb_func_start FUN_0219EFB0
FUN_0219EFB0: ; 0x0219EFB0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219EFB0

	thumb_func_start FUN_0219EFB4
FUN_0219EFB4: ; 0x0219EFB4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r0, #0xcb
	lsls r0, r0, #4
	adds r6, r2, #0
	ldr r2, [r4, r0]
	movs r0, #0
	str r0, [r2]
	adds r5, r3, #0
	str r0, [r2, #4]
	cmp r1, #4
	bhi _0219F01E
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0219EFD8: ; jump table
	.short _0219F01E - _0219EFD8 - 2 ; case 0
	.short _0219EFEA - _0219EFD8 - 2 ; case 1
	.short _0219EFFC - _0219EFD8 - 2 ; case 2
	.short _0219F00E - _0219EFD8 - 2 ; case 3
	.short _0219EFE2 - _0219EFD8 - 2 ; case 4
_0219EFE2:
	ldr r0, [r4, #0x44]
	bl FUN_0219F5C8
	b _0219F01E
_0219EFEA:
	ldr r0, [r4, #0x44]
	bl FUN_0219F69C
	adds r1, r4, #0
	ldr r0, [r4, #0x44]
	adds r1, #0xb4
	bl FUN_0219F6AC
	b _0219F01E
_0219EFFC:
	ldr r0, [r4, #0x44]
	bl FUN_0219F7E8
	adds r1, r4, #0
	ldr r0, [r4, #0x44]
	adds r1, #0xb4
	bl FUN_0219F7F4
	b _0219F01E
_0219F00E:
	ldr r0, [r4, #0x44]
	bl FUN_0219F788
	adds r1, r4, #0
	ldr r0, [r4, #0x44]
	adds r1, #0xb4
	bl FUN_0219F794
_0219F01E:
	movs r0, #0xcb
	lsls r0, r0, #4
	ldr r0, [r4, r0]
	ldr r1, [r0]
	cmp r1, r5
	bne _0219F03C
	adds r0, #8
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_02043EC4
	cmp r0, #0
	bne _0219F03C
	movs r0, #0
	pop {r4, r5, r6, pc}
_0219F03C:
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219EFB4

	thumb_func_start FUN_0219F040
FUN_0219F040: ; 0x0219F040
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #0x68
	movs r1, #1
	bl FUN_021D48E0
	adds r0, r5, #0
	adds r0, #0x68
	add r1, sp, #0
	adds r2, r4, #0
	bl FUN_021D4904
	adds r2, r0, #0
	ldr r3, [sp]
	adds r0, r5, #0
	movs r1, #0xa
	bl FUN_0219F168
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219F040

	thumb_func_start FUN_0219F06C
FUN_0219F06C: ; 0x0219F06C
	push {r3, r4, lr}
	sub sp, #4
	add r3, sp, #0
	adds r4, r0, #0
	bl FUN_0219F094
	adds r2, r0, #0
	beq _0219F08C
	ldr r3, [sp]
	adds r0, r4, #0
	movs r1, #0xa
	bl FUN_0219F168
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_0219F08C:
	movs r0, #0
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0219F06C

	thumb_func_start FUN_0219F094
FUN_0219F094: ; 0x0219F094
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	str r1, [sp]
	adds r0, #0x68
	adds r1, r2, #0
	str r3, [sp, #4]
	bl FUN_021D48E0
	adds r6, r5, #0
	movs r4, #0
	adds r6, #0x68
	movs r7, #0xc
_0219F0AE:
	adds r0, r4, #0
	muls r0, r7, r0
	adds r1, r5, r0
	ldrb r0, [r1, #0x1f]
	cmp r0, #0xff
	beq _0219F0D4
	ldr r0, [r1, #0x14]
	add r1, sp, #8
	bl FUN_021D4B90
	ldr r3, [sp, #8]
	lsls r1, r4, #0x18
	lsls r3, r3, #0x16
	adds r2, r0, #0
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021D4920
_0219F0D4:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219F0AE
	adds r5, #0x68
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	bl FUN_021D4998
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F094

	thumb_func_start FUN_0219F0EC
FUN_0219F0EC: ; 0x0219F0EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	str r0, [sp, #4]
	adds r0, #0x14
	movs r7, #0
	str r0, [sp, #4]
_0219F0FA:
	movs r0, #0xc
	adds r4, r7, #0
	muls r4, r0, r4
	ldr r0, [sp]
	adds r1, r0, r7
	adds r1, #0xe4
	movs r0, #0
	strb r0, [r1]
	ldr r0, [sp, #4]
	adds r0, r0, r4
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F14C
	ldr r0, [sp, #4]
	add r1, sp, #8
	ldr r0, [r0, r4]
	bl FUN_021D4B90
	adds r2, r0, #0
	ldr r0, [sp, #8]
	lsrs r1, r0, #2
	ldr r0, _0219F158 ; =0x00000000
	beq _0219F14C
	ldr r3, [sp]
	adds r3, r3, r4
	ldr r4, [sp]
	adds r5, r4, r7
	adds r5, #0xe4
_0219F134:
	lsls r4, r0, #2
	ldr r6, [r2]
	adds r4, r3, r4
	adds r4, #0xb4
	str r6, [r4]
	ldrb r4, [r5]
	adds r0, r0, #1
	adds r2, r2, #4
	adds r4, r4, #1
	strb r4, [r5]
	cmp r0, r1
	blo _0219F134
_0219F14C:
	adds r7, r7, #1
	cmp r7, #4
	blo _0219F0FA
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0219F158: .word 0x00000000
	thumb_func_end FUN_0219F0EC

	thumb_func_start FUN_0219F15C
FUN_0219F15C: ; 0x0219F15C
	push {r3, lr}
	movs r2, #0
	movs r3, #0
	bl FUN_0219F168
	pop {r3, pc}
	thumb_func_end FUN_0219F15C

	thumb_func_start FUN_0219F168
FUN_0219F168: ; 0x0219F168
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl FUN_021D4B14
	adds r7, r6, #0
	movs r4, #0
	adds r7, #0x14
_0219F17E:
	movs r0, #0xc
	adds r5, r4, #0
	muls r5, r0, r5
	adds r0, r7, r5
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F19C
	adds r0, r6, r5
	ldr r0, [r0, #0x14]
	ldr r1, [sp]
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	bl FUN_021D4B2C
_0219F19C:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219F17E
	bl FUN_021D4B28
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F168

	thumb_func_start FUN_0219F1AC
FUN_0219F1AC: ; 0x0219F1AC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0xc
	adds r4, r2, #0
	adds r5, #0x14
	muls r4, r0, r4
	adds r0, r5, r4
	adds r6, r1, #0
	adds r7, r3, #0
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F1D8
	ldr r0, [r5, r4]
	bl FUN_021D4B9C
	ldr r0, [r5, r4]
	ldr r3, [sp, #0x18]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021D4B2C
_0219F1D8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F1AC

	thumb_func_start FUN_0219F1DC
FUN_0219F1DC: ; 0x0219F1DC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #1
	adds r7, r6, #0
	str r0, [sp]
	movs r4, #0
	adds r7, #0x14
_0219F1EA:
	movs r0, #0xc
	adds r5, r4, #0
	muls r5, r0, r5
	adds r0, r7, r5
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F20A
	adds r0, r6, r5
	ldr r0, [r0, #0x14]
	bl FUN_021D4B58
	cmp r0, #0
	bne _0219F20A
	movs r0, #0
	str r0, [sp]
_0219F20A:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219F1EA
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219F1DC

	thumb_func_start FUN_0219F214
FUN_0219F214: ; 0x0219F214
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r6, #0
	movs r4, #0
	adds r7, #0x14
_0219F21E:
	movs r0, #0xc
	adds r5, r4, #0
	muls r5, r0, r5
	adds r0, r7, r5
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F236
	adds r0, r6, r5
	ldr r0, [r0, #0x14]
	bl FUN_021D4B9C
_0219F236:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219F21E
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F214

	thumb_func_start FUN_0219F240
FUN_0219F240: ; 0x0219F240
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r6, #0
	movs r4, #0
	adds r7, #0x14
_0219F24A:
	movs r0, #0xc
	adds r5, r4, #0
	muls r5, r0, r5
	adds r0, r7, r5
	bl FUN_0219F274
	cmp r0, #0
	beq _0219F262
	adds r0, r6, r5
	ldr r0, [r0, #0x14]
	bl FUN_021D4AFC
_0219F262:
	adds r4, r4, #1
	cmp r4, #4
	blt _0219F24A
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F240

	thumb_func_start FUN_0219F26C
FUN_0219F26C: ; 0x0219F26C
	movs r1, #0xff
	strb r1, [r0, #0xb]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219F26C

	thumb_func_start FUN_0219F274
FUN_0219F274: ; 0x0219F274
	ldrb r0, [r0, #0xb]
	cmp r0, #0xff
	beq _0219F27E
	movs r0, #1
	bx lr
_0219F27E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219F274

	thumb_func_start FUN_0219F284
FUN_0219F284: ; 0x0219F284
	strb r1, [r0, #0xb]
	str r2, [r0]
	strb r3, [r0, #0xa]
	bx lr
	thumb_func_end FUN_0219F284

	thumb_func_start FUN_0219F28C
FUN_0219F28C: ; 0x0219F28C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	str r1, [r5, #4]
	bl FUN_0219D4C8
	strb r0, [r5, #8]
	strb r4, [r5, #9]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0219F28C

	thumb_func_start FUN_0219F2A0
FUN_0219F2A0: ; 0x0219F2A0
	cmp r1, #4
	bhs _0219F2B6
	movs r2, #0xc
	muls r2, r1, r2
	adds r1, r0, r2
	ldrb r1, [r1, #0x1f]
	cmp r1, #0xff
	beq _0219F2B6
	adds r0, #0x14
	adds r0, r0, r2
	bx lr
_0219F2B6:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219F2A0

	thumb_func_start FUN_0219F2BC
FUN_0219F2BC: ; 0x0219F2BC
	movs r2, #0xc
	muls r2, r1, r2
	adds r1, r0, r2
	ldrb r1, [r1, #0x1f]
	cmp r1, #0xff
	beq _0219F2CE
	adds r0, #0x14
	adds r0, r0, r2
	bx lr
_0219F2CE:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0219F2BC

	thumb_func_start FUN_0219F2D4
FUN_0219F2D4: ; 0x0219F2D4
	push {r3, lr}
	cmp r1, #4
	bhs _0219F2E8
	movs r2, #0xc
	adds r0, #0x14
	muls r2, r1, r2
	adds r0, r0, r2
	bl FUN_0219F274
	pop {r3, pc}
_0219F2E8:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_0219F2D4

	thumb_func_start FUN_0219F2EC
FUN_0219F2EC: ; 0x0219F2EC
	adds r0, r0, r1
	adds r0, #0x30
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_0219F2EC

	thumb_func_start FUN_0219F2F4
FUN_0219F2F4: ; 0x0219F2F4
	movs r3, #0xc
	muls r3, r1, r3
	lsls r1, r2, #2
	adds r0, r0, r3
	ldr r0, [r1, r0]
	bx lr
	thumb_func_end FUN_0219F2F4

	thumb_func_start FUN_0219F300
FUN_0219F300: ; 0x0219F300
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BB084
	adds r2, r4, #0
	adds r2, #0xac
	ldr r2, [r2]
	movs r1, #0x73
	bl FUN_0201CD24
	adds r4, #0xac
	ldr r0, [r4]
	bl FUN_0202D2F4
	pop {r4, pc}
	thumb_func_end FUN_0219F300

	thumb_func_start FUN_0219F320
FUN_0219F320: ; 0x0219F320
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_021BB084
	movs r1, #5
	movs r2, #0
	bl FUN_0201CD24
	movs r7, #1
	adds r4, r0, #0
	lsls r7, r7, #0xe
	ldr r0, [r5, #0xc]
	adds r1, r7, #0
	bl FUN_0219DB04
	adds r6, r0, #0
	ldr r0, [r5, #0xc]
	lsls r1, r7, #1
	bl FUN_0219DB04
	adds r2, r0, #0
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	bl FUN_0202D1D8
	ldr r0, [r5, #0xc]
	movs r1, #7
	bl FUN_0219DB10
	ldr r0, [r5, #0xc]
	movs r1, #0x54
	bl FUN_0219DB10
	movs r0, #0x1f
	bl FUN_02038BF4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F320

	thumb_func_start FUN_0219F370
FUN_0219F370: ; 0x0219F370
	ldr r0, [r0, #0xc]
	ldr r3, _0219F378 ; =FUN_0219CB00
	bx r3
	nop
_0219F378: .word FUN_0219CB00
	thumb_func_end FUN_0219F370

	thumb_func_start FUN_0219F37C
FUN_0219F37C: ; 0x0219F37C
	ldr r0, [r0, #0xc]
	ldr r3, _0219F384 ; =FUN_0219CB50
	bx r3
	nop
_0219F384: .word FUN_0219CB50
	thumb_func_end FUN_0219F37C

	thumb_func_start FUN_0219F388
FUN_0219F388: ; 0x0219F388
	ldr r1, _0219F394 ; =0x00000CBA
	movs r2, #0
	strb r2, [r0, r1]
	adds r1, r1, #5
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_0219F394: .word 0x00000CBA
	thumb_func_end FUN_0219F388

	thumb_func_start FUN_0219F398
FUN_0219F398: ; 0x0219F398
	push {r4, r5}
	ldr r3, _0219F3C8 ; =0x00000CBA
	movs r5, #0
	ldrb r2, [r0, r3]
	cmp r2, #0
	bls _0219F3B4
	subs r3, r3, #6
_0219F3A6:
	adds r4, r0, r5
	ldrb r4, [r4, r3]
	cmp r1, r4
	beq _0219F3C2
	adds r5, r5, #1
	cmp r5, r2
	blo _0219F3A6
_0219F3B4:
	ldr r3, _0219F3C8 ; =0x00000CBA
	adds r2, r0, r2
	ldrb r4, [r0, r3]
	adds r4, r4, #1
	strb r4, [r0, r3]
	subs r0, r3, #6
	strb r1, [r2, r0]
_0219F3C2:
	pop {r4, r5}
	bx lr
	nop
_0219F3C8: .word 0x00000CBA
	thumb_func_end FUN_0219F398

	thumb_func_start FUN_0219F3CC
FUN_0219F3CC: ; 0x0219F3CC
	ldr r0, [r0, #0x44]
	bx lr
	thumb_func_end FUN_0219F3CC

	thumb_func_start FUN_0219F3D0
FUN_0219F3D0: ; 0x0219F3D0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _0219F424 ; =0x00000247
	adds r6, r1, #0
	str r0, [sp]
	add r0, sp, #0x20
	str r3, [sp, #4]
	adds r7, r2, #0
	ldrh r0, [r0, #4]
	ldr r1, _0219F428 ; =0x00002134
	ldr r3, _0219F42C ; =0x021DAEDC
	movs r2, #1
	bl FUN_0203A228
	adds r4, r0, #0
	str r5, [r4]
	str r7, [r4, #8]
	ldr r1, _0219F430 ; =0x00000782
	str r6, [r4, #4]
	movs r0, #0
	strb r0, [r4, r1]
	str r0, [r4, #0x10]
	str r0, [r4, #0x14]
	ldr r0, [sp, #4]
	subs r1, r1, #2
	str r0, [r4, #0xc]
	add r0, sp, #0x20
	ldrh r0, [r0, #4]
	strh r0, [r4, r1]
	ldr r1, [sp, #0x20]
	str r1, [r4, #0x18]
	bl FUN_02020C10
	ldr r1, _0219F434 ; =0x000004A4
	str r0, [r4, r1]
	adds r0, r4, #0
	bl FUN_0219F440
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219F424: .word 0x00000247
_0219F428: .word 0x00002134
_0219F42C: .word 0x021DAEDC
_0219F430: .word 0x00000782
_0219F434: .word 0x000004A4
	thumb_func_end FUN_0219F3D0

	thumb_func_start FUN_0219F438
FUN_0219F438: ; 0x0219F438
	ldr r3, _0219F43C ; =FUN_0219F440
	bx r3
	.align 2, 0
_0219F43C: .word FUN_0219F440
	thumb_func_end FUN_0219F438

	thumb_func_start FUN_0219F440
FUN_0219F440: ; 0x0219F440
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	bl FUN_021BC6FC
	movs r0, #0
	movs r6, #0
	bl FUN_021D59E0
	adds r0, r5, #0
	adds r0, #0x1c
	bl FUN_0219F570
	movs r7, #0x3e
	lsls r7, r7, #4
	adds r0, r5, r7
	bl FUN_0219F580
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	adds r3, r0, #0
	ldr r0, _0219F564 ; =0x00001AB8
	ldr r1, [r5, #4]
	str r0, [sp, #4]
	ldr r2, [r5, #8]
	adds r0, r5, r0
	bl FUN_0219F590
	ldr r4, _0219F568 ; =0x000007A9
	movs r1, #0
	adds r0, r5, r4
	movs r2, #0x18
	blx FUN_020787D4
	adds r0, r4, #0
	adds r0, #0x18
	adds r0, r5, r0
	movs r1, #0
	movs r2, #0x18
	blx FUN_020787D4
	adds r0, r4, #0
	adds r0, #0x30
	adds r0, r5, r0
	movs r1, #0
	movs r2, #4
	blx FUN_020787D4
	adds r0, r7, #0
	adds r0, #0xf4
	movs r2, #0x2a
	adds r0, r5, r0
	movs r1, #0
	lsls r2, r2, #4
	blx FUN_020787D4
	movs r0, #0x7e
	lsls r0, r0, #6
	str r0, [sp]
	adds r0, r5, r0
	bl FUN_021AB770
	adds r0, r5, #0
	bl FUN_021AC108
	adds r7, #0xd8
	adds r0, r5, r7
	bl FUN_021BDA98
	ldr r0, _0219F56C ; =0x00001D78
	adds r0, r5, r0
	bl FUN_021B087C
	ldr r0, [sp, #4]
	adds r0, #0x9c
	str r0, [sp, #4]
	adds r0, r5, r0
	bl FUN_021A8FCC
	bl FUN_0219F5A0
	adds r0, r4, #0
	subs r0, #0x23
	strb r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x22
	strb r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x1f
	ldrb r1, [r5, r0]
	movs r0, #1
	bics r1, r0
	adds r0, r4, #0
	subs r0, #0x1f
	strb r1, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x1f
	ldrb r1, [r5, r0]
	movs r0, #2
	bics r1, r0
	adds r0, r4, #0
	subs r0, #0x1f
	strb r1, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x1f
	ldrb r1, [r5, r0]
	movs r0, #4
	bics r1, r0
	adds r0, r4, #0
	subs r0, #0x1f
	strb r1, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x2d
	strb r6, [r5, r0]
	adds r0, r4, #0
	movs r1, #0x1f
	subs r0, #0x20
	strb r1, [r5, r0]
	ldr r0, [sp]
	movs r1, #6
	subs r0, #8
	str r0, [sp]
	strh r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x25
	strb r1, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x35
	str r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x2b
	strb r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x31
	str r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x1f
	ldrb r1, [r5, r0]
	movs r0, #0x40
	subs r4, #0x1f
	bics r1, r0
	strb r1, [r5, r4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219F564: .word 0x00001AB8
_0219F568: .word 0x000007A9
_0219F56C: .word 0x00001D78
	thumb_func_end FUN_0219F440

	thumb_func_start FUN_0219F570
FUN_0219F570: ; 0x0219F570
	bx pc
	nop
	thumb_func_end FUN_0219F570
_0219F574:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x79, 0xD1, 0x89, 0x06

	thumb_func_start FUN_0219F580
FUN_0219F580: ; 0x0219F580
	bx pc
	nop
	thumb_func_end FUN_0219F580
_0219F584:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA1, 0xD2, 0x89, 0x06

	thumb_func_start FUN_0219F590
FUN_0219F590: ; 0x0219F590
	bx pc
	nop
	thumb_func_end FUN_0219F590
_0219F594:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x85, 0xD3, 0x89, 0x06

	thumb_func_start FUN_0219F5A0
FUN_0219F5A0: ; 0x0219F5A0
	bx pc
	nop
	thumb_func_end FUN_0219F5A0
_0219F5A4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x8B, 0x89, 0x06

	thumb_func_start FUN_0219F5B0
FUN_0219F5B0: ; 0x0219F5B0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0219F5C4 ; =0x000004A4
	ldr r0, [r4, r0]
	bl FUN_0204AB38
	adds r0, r4, #0
	bl FUN_0203A278
	pop {r4, pc}
	.align 2, 0
_0219F5C4: .word 0x000004A4
	thumb_func_end FUN_0219F5B0

	thumb_func_start FUN_0219F5C8
FUN_0219F5C8: ; 0x0219F5C8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	ldr r1, [r6, #0xc]
	movs r0, #0
	str r0, [r1]
	str r0, [sp]
	str r0, [r1, #4]
	ldr r0, [r6, #4]
	bl FUN_0219BFA0
	ldrb r1, [r0, #8]
	cmp r1, #0
	beq _0219F5F4
	adds r0, r6, #0
	movs r2, #0xff
	bl FUN_021A7658
	cmp r0, #0
	beq _0219F5F4
	movs r0, #1
	str r0, [sp]
_0219F5F4:
	movs r0, #0
	str r0, [sp, #4]
_0219F5F8:
	ldr r1, [sp, #4]
	ldr r0, [r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219F2BC
	adds r4, r0, #0
	beq _0219F67C
	ldrb r0, [r4, #9]
	movs r5, #0
	cmp r0, #0
	bls _0219F642
	ldr r0, [sp, #4]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_0219F616:
	lsls r1, r5, #0x18
	ldr r0, [r4, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	cmp r0, #0
	beq _0219F63A
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219F63A
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	adds r0, r6, #0
	adds r1, r7, #0
	adds r3, r2, #0
	bl FUN_021A13D8
_0219F63A:
	ldrb r0, [r4, #9]
	adds r5, r5, #1
	cmp r5, r0
	blo _0219F616
_0219F642:
	ldr r0, [r6, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _0219F67C
	ldr r0, [sp, #4]
	movs r5, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
_0219F656:
	lsls r1, r5, #0x18
	ldr r0, [r4, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	adds r7, r0, #0
	beq _0219F676
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219F676
	ldr r0, [r6, #4]
	ldr r1, [sp, #8]
	adds r2, r7, #0
	bl FUN_0219BFE0
_0219F676:
	adds r5, r5, #1
	cmp r5, #3
	blo _0219F656
_0219F67C:
	ldr r0, [sp, #4]
	adds r0, r0, #1
	str r0, [sp, #4]
	cmp r0, #4
	blo _0219F5F8
	adds r0, r6, #0
	bl FUN_021A14E8
	cmp r0, #0
	beq _0219F694
	movs r0, #1
	str r0, [sp]
_0219F694:
	ldr r0, [sp]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F5C8

	thumb_func_start FUN_0219F69C
FUN_0219F69C: ; 0x0219F69C
	ldr r1, _0219F6A8 ; =0x0000077C
	movs r2, #0
	strb r2, [r0, r1]
	adds r1, r1, #7
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_0219F6A8: .word 0x0000077C
	thumb_func_end FUN_0219F69C

	thumb_func_start FUN_0219F6AC
FUN_0219F6AC: ; 0x0219F6AC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r4, #0
	ldr r1, [r5, #0xc]
	str r4, [r5, #0x14]
	str r4, [r1]
	str r4, [r1, #4]
	ldr r1, _0219F720 ; =0x0000077C
	ldrb r1, [r5, r1]
	cmp r1, #0
	bne _0219F710
	bl FUN_021AC068
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r0, r5, r0
	bl FUN_0219F72C
	ldr r0, _0219F724 ; =0x00001FEC
	adds r2, r4, #0
_0219F6D6:
	adds r1, r5, r4
	adds r4, r4, #1
	strb r2, [r1, r0]
	cmp r4, #4
	blo _0219F6D6
	bl FUN_021BC738
	ldr r0, [r5]
	bl FUN_0219F388
	bl FUN_021BCD34
	adds r0, r5, #0
	bl FUN_0219F73C
	movs r4, #0x7e
	lsls r4, r4, #4
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r5, r4
	movs r3, #6
	bl FUN_021A00E4
	adds r1, r4, #0
	subs r1, #0x5e
	strb r0, [r5, r1]
	movs r0, #1
	subs r4, #0x64
	strb r0, [r5, r4]
_0219F710:
	ldr r4, _0219F728 ; =0x00000783
	adds r0, r5, #0
	ldrb r1, [r5, r4]
	bl FUN_0219FA10
	strb r0, [r5, r4]
	ldr r0, [r5, #0x14]
	pop {r4, r5, r6, pc}
	.align 2, 0
_0219F720: .word 0x0000077C
_0219F724: .word 0x00001FEC
_0219F728: .word 0x00000783
	thumb_func_end FUN_0219F6AC

	thumb_func_start FUN_0219F72C
FUN_0219F72C: ; 0x0219F72C
	bx pc
	nop
	thumb_func_end FUN_0219F72C
_0219F730:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xBD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_0219F73C
FUN_0219F73C: ; 0x0219F73C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	add r6, sp, #4
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021A0D9C
	add r7, sp, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A0E34
	cmp r0, #0
	beq _0219F782
	movs r4, #0xc
_0219F75E:
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _0219F774
	ldr r1, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021A9C68
_0219F774:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A0E34
	cmp r0, #0
	bne _0219F75E
_0219F782:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0219F73C

	thumb_func_start FUN_0219F788
FUN_0219F788: ; 0x0219F788
	ldr r1, _0219F790 ; =0x0000077C
	movs r2, #0
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_0219F790: .word 0x0000077C
	thumb_func_end FUN_0219F788

	thumb_func_start FUN_0219F794
FUN_0219F794: ; 0x0219F794
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r7, #0
	ldr r0, [r5, #0xc]
	str r7, [r5, #0x14]
	str r7, [r0]
	ldr r6, _0219F7E0 ; =0x0000077C
	str r7, [r0, #4]
	ldrb r0, [r5, r6]
	adds r4, r1, #0
	cmp r0, #0
	bne _0219F7D0
	ldr r0, [r5]
	bl FUN_0219F388
	bl FUN_021BCD34
	adds r0, r6, #1
	strb r7, [r5, r0]
	movs r0, #1
	strb r0, [r5, r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0219FCB4
	cmp r0, #0
	beq _0219F7D0
	movs r0, #3
	str r0, [r5, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
_0219F7D0:
	ldr r4, _0219F7E4 ; =0x00000783
	adds r0, r5, #0
	ldrb r1, [r5, r4]
	bl FUN_0219FA10
	strb r0, [r5, r4]
	ldr r0, [r5, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0219F7E0: .word 0x0000077C
_0219F7E4: .word 0x00000783
	thumb_func_end FUN_0219F794

	thumb_func_start FUN_0219F7E8
FUN_0219F7E8: ; 0x0219F7E8
	ldr r1, _0219F7F0 ; =0x0000077C
	movs r2, #0
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_0219F7F0: .word 0x0000077C
	thumb_func_end FUN_0219F7E8

	thumb_func_start FUN_0219F7F4
FUN_0219F7F4: ; 0x0219F7F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	movs r4, #0
	ldr r0, [r5, #0xc]
	str r4, [r5, #0x14]
	str r4, [r0]
	str r4, [r0, #4]
	ldr r0, _0219F9E0 ; =0x0000077C
	adds r6, r1, #0
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _0219F810
	b _0219F98A
_0219F810:
	ldr r0, [r5]
	bl FUN_0219F388
	bl FUN_021BCD34
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_0219F9F0
	ldr r2, _0219F9E0 ; =0x0000077C
	str r0, [sp, #0xc]
	adds r2, #0x64
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r5, r2
	movs r3, #6
	bl FUN_021A00E4
	ldr r1, _0219F9E0 ; =0x0000077C
	adds r1, r1, #6
	strb r0, [r5, r1]
	ldr r0, _0219F9E0 ; =0x0000077C
	adds r0, r0, #7
	strb r4, [r5, r0]
	ldr r0, _0219F9E0 ; =0x0000077C
	adds r0, r0, #6
	ldrb r0, [r5, r0]
	cmp r0, #0
	bls _0219F8BE
	ldr r0, _0219F9E0 ; =0x0000077C
	adds r0, #0x68
	adds r7, r5, r0
	ldr r0, _0219F9E0 ; =0x0000077C
	str r0, [sp, #0x18]
	adds r0, #0x64
	str r0, [sp, #0x18]
	ldr r0, _0219F9E0 ; =0x0000077C
	str r0, [sp, #0x14]
	adds r0, #0x71
	str r0, [sp, #0x14]
	ldr r0, _0219F9E0 ; =0x0000077C
	str r0, [sp, #0x10]
	adds r0, #0x64
	str r0, [sp, #0x10]
	ldr r0, _0219F9E0 ; =0x0000077C
	adds r0, r0, #6
	str r0, [sp, #0x1c]
_0219F872:
	lsls r6, r4, #4
	ldr r0, [r7, r6]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #3
	bne _0219F8B4
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1f
	bne _0219F8B4
	ldr r0, [sp, #0x10]
	adds r1, r5, r6
	ldr r0, [r1, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219F8B4
	adds r0, r5, r6
	str r0, [sp, #8]
	ldr r2, [sp, #8]
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	ldr r1, [r2, r1]
	ldr r2, [r7, r6]
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x1d
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021A1780
	ldr r1, [sp, #8]
	ldr r0, [sp, #0x14]
	movs r2, #1
	strb r2, [r1, r0]
_0219F8B4:
	ldr r0, [sp, #0x1c]
	adds r4, r4, #1
	ldrb r0, [r5, r0]
	cmp r4, r0
	blo _0219F872
_0219F8BE:
	movs r4, #0
	cmp r0, #0
	bls _0219F93C
	ldr r0, _0219F9E4 ; =0x000007E4
	str r0, [sp, #0x20]
	adds r7, r5, r0
	str r0, [sp, #0x2c]
	adds r0, #8
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x28]
	adds r0, #9
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x20]
	subs r0, r0, #4
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x20]
	subs r0, #0x62
	str r0, [sp, #0x20]
_0219F8E4:
	lsls r6, r4, #4
	ldr r0, [r7, r6]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #3
	bne _0219F932
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1f
	bne _0219F932
	ldr r0, [sp, #0x24]
	adds r1, r5, r6
	ldr r0, [r1, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	beq _0219F932
	adds r0, r5, r6
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp]
	ldr r2, [sp, #4]
	ldr r1, [sp, #0x2c]
	ldr r3, [r7, r6]
	ldrb r1, [r2, r1]
	lsls r2, r3, #0x19
	lsls r3, r3, #0x16
	lsrs r2, r2, #0x1d
	lsrs r3, r3, #0x1d
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	adds r0, r5, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021A14BC
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x28]
	movs r2, #1
	strb r2, [r1, r0]
_0219F932:
	ldr r0, [sp, #0x20]
	adds r4, r4, #1
	ldrb r0, [r5, r0]
	cmp r4, r0
	blo _0219F8E4
_0219F93C:
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _0219F984
	ldr r1, _0219F9E8 ; =0x00000782
	movs r4, #0
	ldrb r0, [r5, r1]
	cmp r0, #0
	bls _0219F984
	adds r0, r1, #0
	adds r0, #0x5e
	adds r7, r5, r0
	adds r0, r1, #0
	adds r0, #0x62
	adds r6, r5, r0
	adds r0, r5, r1
	str r0, [sp, #0x30]
_0219F960:
	lsls r1, r4, #4
	ldr r0, [r6, r1]
	lsls r2, r0, #0x1c
	lsrs r2, r2, #0x1c
	cmp r2, #6
	bne _0219F97A
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1f
	bne _0219F97A
	adds r0, r5, #0
	adds r1, r7, r1
	bl FUN_021A07B8
_0219F97A:
	ldr r0, [sp, #0x30]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _0219F960
_0219F984:
	ldr r0, _0219F9E0 ; =0x0000077C
	movs r1, #1
	strb r1, [r5, r0]
_0219F98A:
	adds r0, r5, #0
	bl FUN_021A14E8
	adds r0, r5, #0
	bl FUN_021A8D00
	ldr r4, _0219F9EC ; =0x000004CE
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_0219FFB0
	adds r0, r4, #0
	subs r0, #0xee
	adds r0, r5, r0
	movs r1, #0
	movs r6, #0
	bl FUN_0219FA00
	ldr r1, [sp, #0xc]
	cmp r1, r0
	bne _0219F9C0
	adds r0, r5, #0
	bl FUN_021A8104
	add sp, #0x34
	adds r0, r6, #0
	pop {r4, r5, r6, r7, pc}
_0219F9C0:
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	bne _0219F9D8
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_021A9CB0
	add sp, #0x34
	movs r0, #2
	pop {r4, r5, r6, r7, pc}
_0219F9D8:
	movs r0, #4
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0219F9E0: .word 0x0000077C
_0219F9E4: .word 0x000007E4
_0219F9E8: .word 0x00000782
_0219F9EC: .word 0x000004CE
	thumb_func_end FUN_0219F7F4

	thumb_func_start FUN_0219F9F0
FUN_0219F9F0: ; 0x0219F9F0
	bx pc
	nop
	thumb_func_end FUN_0219F9F0
_0219F9F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_0219FA00
FUN_0219FA00: ; 0x0219FA00
	bx pc
	nop
	thumb_func_end FUN_0219FA00
_0219FA04:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_0219FA10
FUN_0219FA10: ; 0x0219FA10
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp]
	ldr r0, _0219FB64 ; =0x00000782
	adds r4, r1, #0
	ldrb r1, [r5, r0]
	cmp r4, r1
	bhs _0219FAE4
	adds r1, r0, #0
	adds r1, #0x5e
	adds r7, r5, r1
	adds r1, r0, #0
	adds r1, #0x62
	adds r1, r5, r1
	str r1, [sp, #8]
	adds r1, r5, r0
	adds r0, r5, r0
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
_0219FA3A:
	ldr r0, [sp, #8]
	lsls r6, r4, #4
	adds r0, r0, r6
	bl FUN_021BDCBC
	ldr r1, [sp]
	cmp r1, #6
	bne _0219FA62
	cmp r0, #6
	beq _0219FA62
	adds r0, r5, #0
	bl FUN_021A1714
	ldr r2, [sp, #0xc]
	adds r0, r5, #0
	ldrb r2, [r2]
	adds r1, r7, r6
	subs r2, r2, r4
	bl FUN_0219FB7C
_0219FA62:
	adds r0, r5, #0
	adds r1, r7, r6
	bl FUN_021A07B8
	str r0, [sp]
	adds r0, r5, #0
	bl FUN_021A8D00
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	adds r0, r5, #0
	bl FUN_0219FD44
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	cmp r6, #0
	beq _0219FAA8
	movs r0, #4
	str r0, [r5, #0x14]
	add sp, #0x14
	adds r0, r4, #1
	pop {r4, r5, r6, r7, pc}
_0219FAA8:
	ldr r0, [r5, #0x14]
	cmp r0, #6
	bne _0219FAB4
	add sp, #0x14
	adds r0, r4, #1
	pop {r4, r5, r6, r7, pc}
_0219FAB4:
	cmp r0, #1
	bne _0219FABE
	add sp, #0x14
	adds r0, r4, #1
	pop {r4, r5, r6, r7, pc}
_0219FABE:
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _0219FADA
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	movs r0, #3
	str r0, [r5, #0x14]
	add sp, #0x14
	adds r0, r4, #1
	pop {r4, r5, r6, r7, pc}
_0219FADA:
	ldr r0, [sp, #0x10]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _0219FA3A
_0219FAE4:
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _0219FB5A
	adds r0, r5, #0
	bl FUN_021A7F5C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	bl FUN_0219FD44
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	beq _0219FB0C
	movs r0, #4
	str r0, [r5, #0x14]
	ldr r0, _0219FB64 ; =0x00000782
	add sp, #0x14
	ldrb r0, [r5, r0]
	pop {r4, r5, r6, r7, pc}
_0219FB0C:
	cmp r4, #0
	beq _0219FB1C
	movs r0, #3
	str r0, [r5, #0x14]
	ldr r0, _0219FB64 ; =0x00000782
	add sp, #0x14
	ldrb r0, [r5, r0]
	pop {r4, r5, r6, r7, pc}
_0219FB1C:
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r0, r5, r0
	movs r1, #0
	movs r6, #0
	bl FUN_0219FB6C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021AC0B4
	cmp r0, #0
	bne _0219FB3A
	cmp r4, #0
	beq _0219FB58
_0219FB3A:
	ldr r4, _0219FB68 ; =0x000004CE
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_0219FFB0
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_021A9CB0
	movs r0, #2
	str r0, [r5, #0x14]
	ldr r0, _0219FB64 ; =0x00000782
	add sp, #0x14
	ldrb r0, [r5, r0]
	pop {r4, r5, r6, r7, pc}
_0219FB58:
	str r6, [r5, #0x14]
_0219FB5A:
	ldr r0, _0219FB64 ; =0x00000782
	ldrb r0, [r5, r0]
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_0219FB64: .word 0x00000782
_0219FB68: .word 0x000004CE
	thumb_func_end FUN_0219FA10

	thumb_func_start FUN_0219FB6C
FUN_0219FB6C: ; 0x0219FB6C
	bx pc
	nop
	thumb_func_end FUN_0219FB6C
_0219FB70:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_0219FB7C
FUN_0219FB7C: ; 0x0219FB7C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r4, r0, #0
	movs r0, #0
	adds r5, r1, #0
	str r0, [sp, #0xc]
	str r2, [sp]
	adds r0, r2, #0
	bne _0219FB90
	b _0219FC94
_0219FB90:
	ldr r0, _0219FCA0 ; =0x00000436
	str r0, [sp, #0x14]
	adds r0, #0xb
	str r0, [sp, #0x14]
	ldr r0, _0219FCA0 ; =0x00000436
	str r0, [sp, #0x1c]
	adds r0, #0xe
	str r0, [sp, #0x1c]
_0219FBA0:
	ldr r0, [sp, #0xc]
	movs r2, #1
	lsls r7, r0, #4
	ldr r1, [r5, r7]
	adds r0, r4, #0
	adds r6, r5, r7
	bl FUN_021A041C
	ldr r1, _0219FCA4 ; =0x00001FFF
	ldr r2, [r6, #8]
	ands r0, r1
	ldr r1, _0219FCA8 ; =0xFFFFE000
	ands r1, r2
	orrs r0, r1
	str r0, [r6, #8]
	adds r0, r6, #4
	bl FUN_021BDCBC
	str r0, [sp, #8]
	cmp r0, #1
	bne _0219FC4E
	adds r0, r6, #0
	ldr r0, [r0, #4]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _0219FBE0
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _0219FBE2
_0219FBE0:
	movs r0, #0
_0219FBE2:
	str r0, [sp, #4]
	ldr r0, _0219FCAC ; =0x00001D78
	ldr r1, _0219FCA0 ; =0x00000436
	adds r0, r4, r0
	bl FUN_021B088C
	str r0, [sp, #0x10]
	ldr r1, [sp, #4]
	ldr r2, [r5, r7]
	adds r6, r5, r7
	adds r0, r4, #0
	bl FUN_021A03C0
	str r0, [sp, #0x20]
	ldr r2, [r6, #8]
	ldr r0, _0219FCA4 ; =0x00001FFF
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0219FCA4 ; =0x00001FFF
	ands r0, r1
	mov ip, r0
	lsrs r1, r2, #0xd
	movs r0, #7
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #0x1d
	lsrs r3, r0, #0x10
	lsrs r1, r2, #0x16
	movs r0, #7
	ands r0, r1
	ldr r1, [sp, #0x20]
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r0, #0x1d
	lsls r1, r1, #0x1a
	ldr r2, _0219FCA0 ; =0x00000436
	lsrs r0, r0, #7
	lsrs r1, r1, #0xa
	orrs r0, r1
	adds r1, r3, #0
	orrs r1, r0
	mov r0, ip
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, _0219FCAC ; =0x00001D78
	ldr r1, [sp, #0x10]
	adds r0, r4, r0
	adds r2, r2, #3
	bl FUN_021B0910
_0219FC4E:
	ldr r0, [sp, #8]
	cmp r0, #1
	beq _0219FC58
	cmp r0, #5
	bne _0219FC88
_0219FC58:
	ldr r0, _0219FCAC ; =0x00001D78
	ldr r1, [sp, #0x14]
	adds r0, r4, r0
	bl FUN_021B088C
	str r0, [sp, #0x18]
	ldr r1, [r5, r7]
	adds r6, r5, r7
	adds r0, r4, #0
	bl FUN_021A9EA8
	lsls r0, r0, #0x1d
	ldr r2, [r6, #8]
	ldr r1, _0219FCB0 ; =0xFFFF1FFF
	lsrs r0, r0, #0x10
	ands r1, r2
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, _0219FCAC ; =0x00001D78
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	adds r0, r4, r0
	bl FUN_021B0910
_0219FC88:
	ldr r0, [sp, #0xc]
	adds r1, r0, #1
	ldr r0, [sp]
	str r1, [sp, #0xc]
	cmp r1, r0
	blo _0219FBA0
_0219FC94:
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021A0348
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219FCA0: .word 0x00000436
_0219FCA4: .word 0x00001FFF
_0219FCA8: .word 0xFFFFE000
_0219FCAC: .word 0x00001D78
_0219FCB0: .word 0xFFFF1FFF
	thumb_func_end FUN_0219FB7C

	thumb_func_start FUN_0219FCB4
FUN_0219FCB4: ; 0x0219FCB4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r0, #0
	movs r0, #0
	adds r7, r1, #0
	str r0, [sp, #8]
_0219FCC0:
	ldr r1, [sp, #8]
	ldr r0, [r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219F2A0
	cmp r0, #0
	beq _0219FD2A
	ldr r1, [sp, #8]
	adds r0, r7, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219F2EC
	movs r5, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _0219FD2A
	ldr r0, [sp, #8]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0219FCEA:
	lsls r2, r5, #0x18
	adds r0, r7, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219F2F4
	adds r3, r0, #0
	lsls r0, r3, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #3
	bne _0219FD22
	lsls r0, r3, #0x15
	lsrs r0, r0, #0x1f
	bne _0219FD22
	lsls r2, r3, #0x19
	lsls r3, r3, #0x16
	lsrs r2, r2, #0x1d
	lsrs r3, r3, #0x1d
	movs r0, #1
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021A14BC
_0219FD22:
	ldr r0, [sp, #4]
	adds r5, r5, #1
	cmp r5, r0
	blo _0219FCEA
_0219FD2A:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	str r0, [sp, #8]
	cmp r0, #4
	blo _0219FCC0
	adds r0, r6, #0
	bl FUN_021A14E8
	adds r0, r6, #0
	bl FUN_021A8D00
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219FCB4

	thumb_func_start FUN_0219FD44
FUN_0219FD44: ; 0x0219FD44
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	add r0, sp, #0
	strb r4, [r0, #1]
	ldrb r1, [r0, #1]
	strb r1, [r0]
_0219FD52:
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219FD98
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D408
	adds r6, r0, #0
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C470
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_0219D4CC
	adds r6, r0, #0
	cmp r4, #0
	bne _0219FD8E
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
_0219FD8E:
	cmp r6, #0
	beq _0219FD98
	movs r1, #1
	add r0, sp, #0
	strb r1, [r0, r7]
_0219FD98:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219FD52
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	ldr r0, [r5, #4]
	bl FUN_0219C9C8
	cmp r0, #1
	beq _0219FDBE
	ldr r0, [r5, #4]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _0219FDCE
_0219FDBE:
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_021B0358
	cmp r0, #0
	beq _0219FDCE
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219FDCE:
	add r0, sp, #0
	ldrb r1, [r0]
	cmp r1, #0
	beq _0219FDDC
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _0219FDE0
_0219FDDC:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0219FDE0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0219FD44

	thumb_func_start FUN_0219FDE4
FUN_0219FDE4: ; 0x0219FDE4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r4, #0
_0219FDEA:
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _0219FE2A
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C470
	adds r6, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C470
	cmp r6, r0
	bne _0219FE2A
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D408
	bl FUN_0219D4CC
	cmp r0, #0
	beq _0219FE2A
	movs r0, #1
	pop {r4, r5, r6, pc}
_0219FE2A:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219FDEA
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0219FDE4

	thumb_func_start FUN_0219FE34
FUN_0219FE34: ; 0x0219FE34
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0
	movs r4, #0
	bl FUN_0219D228
	adds r1, r0, #0
	ldr r0, [r5, #0xc]
	str r4, [r0]
	str r4, [r0, #4]
	adds r0, r5, #0
	bl FUN_021A106C
	cmp r0, #0
	beq _0219FE5E
	movs r4, #1
_0219FE5E:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219FE34

	thumb_func_start FUN_0219FE64
FUN_0219FE64: ; 0x0219FE64
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r1, [r5, #0xc]
	movs r4, #0
	str r4, [r1]
	str r4, [r1, #4]
	bl FUN_0219FE84
	ldr r0, [r5, #0xc]
	ldr r0, [r0]
	cmp r0, #0
	beq _0219FE7E
	movs r4, #1
_0219FE7E:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0219FE64

	thumb_func_start FUN_0219FE84
FUN_0219FE84: ; 0x0219FE84
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x18]
	cmp r0, #1
	bne _0219FED4
	ldr r6, _0219FED8 ; =0x00001AB8
	movs r4, #0
	movs r7, #1
_0219FE94:
	lsls r1, r4, #0x18
	ldr r0, [r5]
	lsrs r1, r1, #0x18
	bl FUN_0219F2D4
	cmp r0, #0
	beq _0219FECE
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	cmp r0, #2
	beq _0219FEB0
	adds r3, r7, #0
	b _0219FEBE
_0219FEB0:
	lsls r1, r4, #0x18
	adds r0, r5, r6
	lsrs r1, r1, #0x18
	add r2, sp, #0
	bl FUN_0219FEDC
	adds r3, r0, #1
_0219FEBE:
	lsls r2, r4, #0x18
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x29
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021B1474
_0219FECE:
	adds r4, r4, #1
	cmp r4, #4
	blo _0219FE94
_0219FED4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0219FED8: .word 0x00001AB8
	thumb_func_end FUN_0219FE84

	thumb_func_start FUN_0219FEDC
FUN_0219FEDC: ; 0x0219FEDC
	bx pc
	nop
	thumb_func_end FUN_0219FEDC
_0219FEE0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xE1, 0xD6, 0x89, 0x06

	thumb_func_start FUN_0219FEEC
FUN_0219FEEC: ; 0x0219FEEC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r4, #1
	beq _0219FF98
	cmp r4, #0
	beq _0219FF98
	ldr r0, [r5, #8]
	bl FUN_0219D408
	adds r7, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x48
	adds r2, r6, #0
	adds r3, r4, #0
	bl FUN_021B1474
	adds r0, r7, #0
	adds r1, r4, #0
	add r2, sp, #8
	add r3, sp, #4
	bl FUN_0219D584
	ldr r0, [sp, #8]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219FF32
	ldr r1, [sp, #8]
	adds r0, r5, #0
	movs r2, #1
	bl FUN_021A8C08
_0219FF32:
	ldr r0, [sp, #4]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _0219FF86
	movs r0, #2
	bl FUN_021D5AB4
	cmp r0, #0
	beq _0219FF7A
	ldr r0, [sp, #4]
	movs r1, #0x20
	movs r7, #0x20
	bl FUN_021BBB04
	cmp r0, #0
	beq _0219FF60
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r7, #0
	movs r3, #0
	bl FUN_021A9178
_0219FF60:
	ldr r0, [sp, #4]
	movs r1, #0x1e
	movs r7, #0x1e
	bl FUN_021BBB04
	cmp r0, #0
	beq _0219FF7A
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r7, #0
	movs r3, #0
	bl FUN_021A9178
_0219FF7A:
	ldr r0, [sp, #4]
	bl FUN_021BDDB0
	ldr r0, [sp, #4]
	bl FUN_021C281C
_0219FF86:
	ldr r0, [r5, #8]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, _0219FF9C ; =0x00001AB8
	ldr r3, [sp, #4]
	adds r0, r5, r0
	adds r2, r6, #0
	bl FUN_0219FFA0
_0219FF98:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0219FF9C: .word 0x00001AB8
	thumb_func_end FUN_0219FEEC

	thumb_func_start FUN_0219FFA0
FUN_0219FFA0: ; 0x0219FFA0
	bx pc
	nop
	thumb_func_end FUN_0219FFA0
_0219FFA4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xD4, 0x89, 0x06

	thumb_func_start FUN_0219FFB0
FUN_0219FFB0: ; 0x0219FFB0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	movs r5, #0
	adds r0, r1, #0
	strb r5, [r0]
	movs r0, #0
	str r1, [sp]
	str r0, [sp, #4]
	add r7, sp, #8
_0219FFC4:
	ldr r0, _021A0010 ; =0x00001AB8
	ldr r1, [sp, #4]
	adds r0, r6, r0
	adds r2, r7, #0
	bl FUN_021A0014
	adds r4, r0, #0
	beq _0219FFFC
	movs r5, #0
	cmp r4, #0
	bls _0219FFEC
_0219FFDA:
	ldrb r1, [r7, r5]
	ldr r0, [r6]
	bl FUN_0219F398
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r4
	blo _0219FFDA
_0219FFEC:
	ldr r0, [sp]
	movs r5, #1
	ldrb r2, [r0]
	adds r1, r2, #1
	strb r1, [r0]
	adds r1, r0, r2
	ldr r0, [sp, #4]
	strb r0, [r1, #1]
_0219FFFC:
	ldr r0, [sp, #4]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	cmp r0, #4
	blo _0219FFC4
	adds r0, r5, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A0010: .word 0x00001AB8
	thumb_func_end FUN_0219FFB0

	thumb_func_start FUN_021A0014
FUN_021A0014: ; 0x021A0014
	bx pc
	nop
	thumb_func_end FUN_021A0014
_021A0018:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xE1, 0xD6, 0x89, 0x06

	thumb_func_start FUN_021A0024
FUN_021A0024: ; 0x021A0024
	ldr r1, _021A002C ; =0x000004B8
	adds r0, r0, r1
	bx lr
	nop
_021A002C: .word 0x000004B8
	thumb_func_end FUN_021A0024

	thumb_func_start FUN_021A0030
FUN_021A0030: ; 0x021A0030
	ldr r1, _021A0038 ; =0x00000784
	ldrb r0, [r0, r1]
	bx lr
	nop
_021A0038: .word 0x00000784
	thumb_func_end FUN_021A0030

	thumb_func_start FUN_021A003C
FUN_021A003C: ; 0x021A003C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, _021A00D4 ; =0x00001D78
	ldr r1, _021A00D8 ; =0x0000059B
	adds r0, r7, r0
	bl FUN_021B088C
	ldr r1, _021A00DC ; =0x00000782
	str r0, [sp]
	ldrb r0, [r7, r1]
	movs r4, #0
	cmp r0, #0
	bls _021A00C4
	adds r0, r1, #0
	adds r0, #0x5e
	adds r0, r7, r0
	str r0, [sp, #4]
	adds r0, r1, #0
	str r0, [sp, #8]
	adds r0, #0x5e
	str r0, [sp, #8]
	adds r0, r7, r1
	str r0, [sp, #0xc]
_021A006C:
	ldr r1, [sp, #4]
	lsls r0, r4, #4
	adds r1, r1, r0
	ldr r1, [r1, #4]
	lsls r2, r1, #0x1c
	lsrs r2, r2, #0x1c
	cmp r2, #1
	bne _021A0086
	lsls r1, r1, #9
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	b _021A0088
_021A0086:
	movs r5, #0
_021A0088:
	cmp r5, #0
	beq _021A00BA
	adds r1, r7, r0
	ldr r0, [sp, #8]
	ldr r6, [r1, r0]
	movs r1, #0xc
	adds r0, r6, #0
	bl FUN_021BB1F4
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021C5B44
	cmp r0, #0
	beq _021A00BA
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_021A9EEC
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021C5BFC
_021A00BA:
	ldr r0, [sp, #0xc]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _021A006C
_021A00C4:
	ldr r0, _021A00D4 ; =0x00001D78
	ldr r1, [sp]
	ldr r2, _021A00E0 ; =0x000005AA
	adds r0, r7, r0
	bl FUN_021B0910
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A00D4: .word 0x00001D78
_021A00D8: .word 0x0000059B
_021A00DC: .word 0x00000782
_021A00E0: .word 0x000005AA
	thumb_func_end FUN_021A003C

	thumb_func_start FUN_021A00E4
FUN_021A00E4: ; 0x021A00E4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #0x10]
	movs r0, #0
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp, #0x1c]
	movs r7, #0
_021A00F8:
	ldr r0, [sp]
	ldr r1, [sp, #0x1c]
	ldr r0, [r0]
	bl FUN_0219F2A0
	adds r6, r0, #0
	beq _021A01A8
	ldr r0, [sp, #4]
	ldr r1, [sp, #0x1c]
	bl FUN_0219F2EC
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	movs r5, #0
	cmp r0, #0
	bls _021A01A8
_021A011C:
	ldr r0, [sp, #8]
	lsls r1, r7, #4
	adds r4, r0, r1
	ldr r0, [sp, #4]
	ldr r1, [sp, #0x1c]
	ldr r2, [sp, #0x18]
	bl FUN_0219F2F4
	str r0, [r4, #4]
	adds r0, r4, #4
	bl FUN_021BDC48
	cmp r0, #0
	bne _021A01A8
	adds r0, r4, #4
	bl FUN_021BDCBC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	beq _021A016A
	cmp r0, #6
	bne _021A0178
	ldr r0, [r4, #4]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1d
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_0219D3CC
	adds r5, r0, #0
	ldr r0, [r6, #4]
	adds r1, r5, #0
	bl FUN_0219D524
	str r0, [r4]
	movs r0, #1
	str r0, [sp, #0x10]
	b _021A0188
_021A016A:
	ldr r1, [r4, #4]
	ldr r0, [r6, #4]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1d
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	b _021A017C
_021A0178:
	ldr r0, [r6, #4]
	adds r1, r5, #0
_021A017C:
	bl FUN_0219D524
	str r0, [r4]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021A0188:
	ldr r0, [sp, #0x1c]
	strb r0, [r4, #0xc]
	movs r0, #0
	strb r0, [r4, #0xd]
	strb r0, [r4, #0xe]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #0x18]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0x18]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	blo _021A011C
_021A01A8:
	ldr r0, [sp, #0x1c]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x1c]
	cmp r0, #4
	blo _021A00F8
	movs r0, #0
	str r0, [sp, #0xc]
	cmp r7, #0
	bls _021A02BC
	ldr r0, _021A0330 ; =0x00000682
	str r0, [sp, #0x28]
	subs r0, #0x38
	str r0, [sp, #0x28]
	ldr r0, _021A0334 ; =0x00001FFF
	adds r0, r0, #1
	str r0, [sp, #0x30]
_021A01CC:
	ldr r1, [sp]
	ldr r0, _021A0338 ; =0x00001D78
	adds r0, r1, r0
	ldr r1, [sp, #0x28]
	bl FUN_021B088C
	str r0, [sp, #0x20]
	ldr r0, [sp, #0xc]
	lsls r6, r0, #4
	ldr r0, [sp, #8]
	adds r4, r0, r6
	ldr r0, [r0, r6]
	str r0, [sp, #0x24]
	ldr r0, [r4, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #8
	bhi _021A023C
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A01FC: ; jump table
	.short _021A0238 - _021A01FC - 2 ; case 0
	.short _021A0236 - _021A01FC - 2 ; case 1
	.short _021A022A - _021A01FC - 2 ; case 2
	.short _021A0226 - _021A01FC - 2 ; case 3
	.short _021A020E - _021A01FC - 2 ; case 4
	.short _021A0234 - _021A01FC - 2 ; case 5
	.short _021A022E - _021A01FC - 2 ; case 6
	.short _021A0232 - _021A01FC - 2 ; case 7
	.short _021A02AE - _021A01FC - 2 ; case 8
_021A020E:
	ldr r0, [sp]
	ldr r0, [r0, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021A0222
	ldrb r0, [r4, #0xc]
	cmp r0, #1
	bne _021A0222
	b _021A023C
_021A0222:
	movs r5, #4
	b _021A023E
_021A0226:
	movs r5, #3
	b _021A023E
_021A022A:
	movs r5, #2
	b _021A023E
_021A022E:
	movs r5, #1
	b _021A023E
_021A0232:
	b _021A023C
_021A0234:
	b _021A023C
_021A0236:
	b _021A023C
_021A0238:
	ldr r0, _021A033C ; =0x01002000
	b _021A02AC
_021A023C:
	movs r5, #0
_021A023E:
	ldr r0, [r4, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #1
	bne _021A026E
	ldr r0, [sp, #8]
	adds r0, r0, r6
	ldr r0, [r0, #4]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _021A0260
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	b _021A0262
_021A0260:
	movs r1, #0
_021A0262:
	ldr r0, [sp]
	ldr r2, [sp, #0x24]
	bl FUN_021A03C0
	adds r6, r0, #0
	b _021A027C
_021A026E:
	cmp r0, #5
	beq _021A0276
	cmp r0, #7
	bne _021A027A
_021A0276:
	movs r6, #7
	b _021A027C
_021A027A:
	movs r6, #0
_021A027C:
	ldr r0, [sp]
	ldr r1, [sp, #0x24]
	movs r2, #1
	bl FUN_021A041C
	str r0, [sp, #0x2c]
	ldr r1, [sp]
	ldr r0, _021A0338 ; =0x00001D78
	ldr r2, _021A0330 ; =0x00000682
	adds r0, r1, r0
	ldr r1, [sp, #0x20]
	bl FUN_021B0910
	lsls r2, r6, #0x1a
	ldr r1, [sp, #0x2c]
	ldr r0, _021A0334 ; =0x00001FFF
	lsrs r2, r2, #0xa
	ands r1, r0
	lsls r0, r5, #0x1d
	lsrs r0, r0, #7
	orrs r2, r0
	ldr r0, [sp, #0x30]
	orrs r0, r2
	orrs r0, r1
_021A02AC:
	str r0, [r4, #8]
_021A02AE:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	cmp r0, r7
	blo _021A01CC
_021A02BC:
	ldr r0, [sp, #8]
	adds r1, r7, #0
	bl FUN_021A0348
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _021A032A
	movs r5, #0
	cmp r7, #0
	bls _021A0322
_021A02D0:
	ldr r0, [sp, #8]
	lsls r1, r5, #4
	adds r4, r0, r1
	ldr r0, [r4, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #1
	beq _021A02E4
	cmp r0, #5
	bne _021A0318
_021A02E4:
	ldr r1, [sp]
	ldr r0, _021A0338 ; =0x00001D78
	adds r0, r1, r0
	ldr r1, _021A0340 ; =0x00000694
	bl FUN_021B088C
	adds r6, r0, #0
	ldr r0, [sp]
	ldr r1, [r4]
	bl FUN_021A9EA8
	lsls r0, r0, #0x1d
	ldr r2, [r4, #8]
	ldr r1, _021A0344 ; =0xFFFF1FFF
	lsrs r0, r0, #0x10
	ands r1, r2
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, _021A0340 ; =0x00000694
	ldr r1, [sp]
	ldr r0, _021A0338 ; =0x00001D78
	adds r2, r2, #3
	adds r0, r1, r0
	adds r1, r6, #0
	bl FUN_021B0910
_021A0318:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r7
	blo _021A02D0
_021A0322:
	ldr r0, [sp, #8]
	adds r1, r7, #0
	bl FUN_021A0348
_021A032A:
	adds r0, r7, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A0330: .word 0x00000682
_021A0334: .word 0x00001FFF
_021A0338: .word 0x00001D78
_021A033C: .word 0x01002000
_021A0340: .word 0x00000694
_021A0344: .word 0xFFFF1FFF
	thumb_func_end FUN_021A00E4

	thumb_func_start FUN_021A0348
FUN_021A0348: ; 0x021A0348
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #8]
	str r1, [sp, #4]
	adds r0, r1, #0
	beq _021A03BC
_021A0358:
	ldr r0, [sp, #8]
	adds r7, r0, #1
	ldr r0, [sp, #4]
	cmp r7, r0
	bhs _021A03B0
	ldr r0, [sp, #8]
	lsls r1, r0, #4
	ldr r0, [sp]
	adds r4, r0, r1
_021A036A:
	ldr r0, [sp]
	lsls r1, r7, #4
	adds r5, r0, r1
	ldr r1, [r5, #8]
	ldr r0, [r4, #8]
	cmp r0, r1
	bhi _021A03A8
	cmp r0, r1
	bne _021A0386
	movs r0, #2
	bl FUN_021BD100
	cmp r0, #0
	beq _021A03A8
_021A0386:
	adds r3, r4, #0
	add r2, sp, #0xc
	adds r6, r2, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	adds r3, r5, #0
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r6!, {r0, r1}
	stm r5!, {r0, r1}
	ldm r6!, {r0, r1}
	stm r5!, {r0, r1}
_021A03A8:
	ldr r0, [sp, #4]
	adds r7, r7, #1
	cmp r7, r0
	blo _021A036A
_021A03B0:
	ldr r0, [sp, #8]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _021A0358
_021A03BC:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A0348

	thumb_func_start FUN_021A03C0
FUN_021A03C0: ; 0x021A03C0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r0, r5, #0
	movs r1, #6
	adds r7, r2, #0
	bl FUN_020212AC
	adds r0, r0, #7
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _021A0418 ; =0x000006D1
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r5, #0
	bl FUN_021BCE40
	movs r0, #0x18
	adds r1, r4, #0
	bl FUN_021BCDFC
	adds r0, r6, #0
	movs r1, #0x11
	bl FUN_021BC940
	movs r0, #0x18
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _021A0418 ; =0x000006D1
	adds r0, r0, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A0418: .word 0x000006D1
	thumb_func_end FUN_021A03C0

	thumb_func_start FUN_021A041C
FUN_021A041C: ; 0x021A041C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xc
	adds r6, r2, #0
	bl FUN_021BB1F4
	adds r7, r0, #0
	ldr r0, _021A04D0 ; =0x000006EA
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x2f
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #1
	movs r7, #1
	bl FUN_021BCDFC
	movs r0, #0x4a
	movs r1, #0
	bl FUN_021BCDFC
	ldr r2, _021A04D4 ; =0x0000019A
	movs r0, #0x35
	lsls r1, r7, #0xc
	lsls r3, r7, #0x11
	bl FUN_021BCEC8
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BC940
	movs r0, #0x2f
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021BD364
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BBAE8
	cmp r0, #1
	bne _021A04A8
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021A04A8
	movs r0, #0x19
	muls r0, r4, r0
	movs r1, #0x64
	blx FUN_0208D894
	adds r4, r0, #0
_021A04A8:
	ldr r0, _021A04D8 ; =0x00002710
	cmp r4, r0
	bls _021A04B0
	adds r4, r0, #0
_021A04B0:
	cmp r6, #0
	beq _021A04C2
	movs r0, #0x4a
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021A04C2
	ldr r0, _021A04D8 ; =0x00002710
	subs r4, r0, r4
_021A04C2:
	ldr r0, _021A04DC ; =0x0000070A
	bl FUN_021BCD94
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A04D0: .word 0x000006EA
_021A04D4: .word 0x0000019A
_021A04D8: .word 0x00002710
_021A04DC: .word 0x0000070A
	thumb_func_end FUN_021A041C

	thumb_func_start FUN_021A04E0
FUN_021A04E0: ; 0x021A04E0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r6, _021A0524 ; =0x00000782
	adds r5, r0, #0
	str r1, [sp]
	ldrb r0, [r5, r6]
	movs r4, #0
	cmp r0, #0
	bls _021A051E
	adds r7, r5, r6
	adds r6, #0x5e
_021A04F6:
	lsls r0, r4, #4
	str r0, [sp, #4]
	adds r0, r5, r0
	ldr r0, [r0, r6]
	bl FUN_021BAC80
	ldr r1, [sp]
	cmp r1, r0
	bne _021A0516
	movs r0, #0x7e
	lsls r0, r0, #4
	adds r1, r5, r0
	ldr r0, [sp, #4]
	add sp, #8
	adds r0, r1, r0
	pop {r3, r4, r5, r6, r7, pc}
_021A0516:
	ldrb r0, [r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _021A04F6
_021A051E:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A0524: .word 0x00000782
	thumb_func_end FUN_021A04E0

	thumb_func_start FUN_021A0528
FUN_021A0528: ; 0x021A0528
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	ldr r2, _021A0580 ; =0x00000782
	adds r5, r0, #0
	ldrb r0, [r5, r2]
	movs r4, #0
	cmp r0, #0
	bls _021A054E
	adds r2, #0x5e
	adds r3, r5, r2
_021A053C:
	lsls r2, r4, #4
	adds r2, r3, r2
	cmp r2, r1
	bne _021A0548
	adds r4, r4, #1
	b _021A054E
_021A0548:
	adds r4, r4, #1
	cmp r4, r0
	blo _021A053C
_021A054E:
	cmp r4, r0
	bhs _021A057C
	ldr r6, _021A0580 ; =0x00000782
	adds r6, #0x5e
_021A0556:
	lsls r0, r4, #4
	str r0, [sp]
	adds r0, r5, r0
	ldr r0, [r0, r6]
	bl FUN_021BAC80
	cmp r7, r0
	bne _021A0572
	movs r0, #0x7e
	lsls r0, r0, #4
	adds r1, r5, r0
	ldr r0, [sp]
	adds r0, r1, r0
	pop {r3, r4, r5, r6, r7, pc}
_021A0572:
	ldr r0, _021A0580 ; =0x00000782
	adds r4, r4, #1
	ldrb r0, [r5, r0]
	cmp r4, r0
	blo _021A0556
_021A057C:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A0580: .word 0x00000782
	thumb_func_end FUN_021A0528

	thumb_func_start FUN_021A0584
FUN_021A0584: ; 0x021A0584
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, _021A05E8 ; =0x00000782
	str r1, [sp]
	str r0, [sp, #4]
	ldrb r0, [r7, r0]
	adds r5, r2, #0
	cmp r5, r0
	bhs _021A05E2
	ldr r0, [sp, #4]
	adds r0, #0x62
	adds r6, r7, r0
	ldr r0, [sp, #4]
	adds r0, r7, r0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	adds r0, #0x6b
	str r0, [sp, #4]
_021A05AA:
	lsls r4, r5, #4
	ldr r0, [sp, #4]
	adds r1, r7, r4
	ldrb r0, [r1, r0]
	cmp r0, #0
	bne _021A05D8
	adds r0, r6, r4
	bl FUN_021BDCBC
	cmp r0, #1
	bne _021A05D8
	adds r0, r6, r4
	bl FUN_021BDBA8
	ldr r1, [sp]
	cmp r1, r0
	bne _021A05D8
	movs r0, #0x7e
	lsls r0, r0, #4
	adds r0, r7, r0
	add sp, #0xc
	adds r0, r0, r4
	pop {r4, r5, r6, r7, pc}
_021A05D8:
	ldr r0, [sp, #8]
	adds r5, r5, #1
	ldrb r0, [r0]
	cmp r5, r0
	blo _021A05AA
_021A05E2:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A05E8: .word 0x00000782
	thumb_func_end FUN_021A0584

	thumb_func_start FUN_021A05EC
FUN_021A05EC: ; 0x021A05EC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	movs r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_021A0584
	adds r4, r0, #0
	beq _021A063A
_021A05FE:
	ldr r0, [r4]
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021A061E
	ldr r0, [r4]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A061E
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A061E:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A0640
	adds r2, r0, #0
	adds r2, r2, #1
	lsls r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021A0584
	adds r4, r0, #0
	bne _021A05FE
_021A063A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A05EC

	thumb_func_start FUN_021A0640
FUN_021A0640: ; 0x021A0640
	push {r3, r4}
	ldr r2, _021A066C ; =0x00000782
	movs r3, #0
	ldrb r4, [r0, r2]
	cmp r4, #0
	ble _021A0666
	adds r2, #0x5e
	adds r2, r0, r2
_021A0650:
	lsls r0, r3, #4
	adds r0, r2, r0
	cmp r0, r1
	bne _021A0660
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4}
	bx lr
_021A0660:
	adds r3, r3, #1
	cmp r3, r4
	blt _021A0650
_021A0666:
	adds r0, r4, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_021A066C: .word 0x00000782
	thumb_func_end FUN_021A0640

	thumb_func_start FUN_021A0670
FUN_021A0670: ; 0x021A0670
	push {r4, r5, r6, r7}
	ldr r4, _021A0720 ; =0x00000782
	adds r3, r0, #0
	adds r7, r1, #0
	movs r6, #0
	mvns r6, r6
	ldrb r1, [r3, r4]
	mov ip, r6
	adds r0, r2, #0
	cmp r2, r1
	bge _021A069C
	adds r4, #0x5e
	adds r5, r3, r4
_021A068A:
	lsls r4, r0, #4
	adds r4, r5, r4
	cmp r4, r7
	bne _021A0696
	adds r6, r0, #0
	b _021A069C
_021A0696:
	adds r0, r0, #1
	cmp r0, r1
	blt _021A068A
_021A069C:
	cmp r2, r1
	bge _021A06B6
	ldr r0, _021A0724 ; =0x000007ED
_021A06A2:
	lsls r4, r2, #4
	adds r4, r3, r4
	ldrb r4, [r4, r0]
	cmp r4, #0
	bne _021A06B0
	mov ip, r2
	b _021A06B6
_021A06B0:
	adds r2, r2, #1
	cmp r2, r1
	blt _021A06A2
_021A06B6:
	cmp r6, #0
	blt _021A0716
	mov r0, ip
	cmp r0, #0
	blt _021A0716
	mov r0, ip
	cmp r6, r0
	ble _021A0716
	movs r2, #0x21
	lsls r2, r2, #6
	adds r4, r3, r2
	ldm r7!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r7!, {r0, r1}
	stm r4!, {r0, r1}
	mov r0, ip
	cmp r6, r0
	ble _021A06F8
	adds r7, r2, #0
	subs r7, #0x70
	subs r2, #0x60
_021A06E0:
	lsls r0, r6, #4
	adds r0, r3, r0
	adds r5, r0, r7
	adds r4, r0, r2
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	subs r6, r6, #1
	mov r0, ip
	cmp r6, r0
	bgt _021A06E0
_021A06F8:
	mov r0, ip
	lsls r0, r0, #4
	adds r1, r3, r0
	movs r0, #0x21
	lsls r0, r0, #6
	adds r3, r3, r0
	subs r0, #0x60
	adds r2, r1, r0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	mov r0, ip
	pop {r4, r5, r6, r7}
	bx lr
_021A0716:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, r7}
	bx lr
	nop
_021A0720: .word 0x00000782
_021A0724: .word 0x000007ED
	thumb_func_end FUN_021A0670

	thumb_func_start FUN_021A0728
FUN_021A0728: ; 0x021A0728
	push {r4, r5, r6, r7}
	ldr r2, _021A07B4 ; =0x00000782
	adds r6, r0, #0
	adds r3, r1, #0
	ldrb r1, [r6, r2]
	movs r5, #0
	mvns r5, r5
	movs r0, #0
	cmp r1, #0
	ble _021A0752
	adds r2, #0x5e
	adds r4, r6, r2
_021A0740:
	lsls r2, r0, #4
	adds r2, r4, r2
	cmp r2, r3
	bne _021A074C
	adds r5, r0, #0
	b _021A0752
_021A074C:
	adds r0, r0, #1
	cmp r0, r1
	blt _021A0740
_021A0752:
	cmp r5, #0
	blt _021A07AE
	movs r2, #0x21
	lsls r2, r2, #6
	adds r4, r6, r2
	ldm r3!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r4!, {r0, r1}
	adds r0, r2, #0
	subs r0, #0xbe
	ldrb r0, [r6, r0]
	subs r0, r0, #1
	cmp r5, r0
	bge _021A0798
	adds r0, r2, #0
	adds r7, r2, #0
	subs r0, #0x50
	mov ip, r0
	subs r7, #0x60
	subs r2, #0xbe
_021A077C:
	lsls r0, r5, #4
	adds r1, r6, r0
	mov r0, ip
	adds r4, r1, r0
	adds r3, r1, r7
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldrb r0, [r6, r2]
	adds r5, r5, #1
	subs r0, r0, #1
	cmp r5, r0
	blt _021A077C
_021A0798:
	lsls r0, r5, #4
	adds r1, r6, r0
	movs r0, #0x21
	lsls r0, r0, #6
	adds r3, r6, r0
	subs r0, #0x60
	adds r2, r1, r0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
_021A07AE:
	pop {r4, r5, r6, r7}
	bx lr
	nop
_021A07B4: .word 0x00000782
	thumb_func_end FUN_021A0728

	thumb_func_start FUN_021A07B8
FUN_021A07B8: ; 0x021A07B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	ldrb r1, [r6, #0xd]
	adds r4, r0, #0
	cmp r1, #0
	beq _021A07C8
	b _021A09A6
_021A07C8:
	ldr r5, [r6]
	ldr r1, [r6, #4]
	str r1, [sp, #4]
	bl FUN_021AC11C
	movs r0, #1
	strb r0, [r6, #0xd]
	ldr r0, [r4, #0x14]
	cmp r0, #5
	bne _021A07E6
	ldr r0, [sp, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #4
	bne _021A083C
_021A07E6:
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A083C
	ldr r0, [sp, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #6
	beq _021A080E
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A09AC ; =0x00001AB8
	adds r0, r4, r0
	bl FUN_021A09C4
	cmp r0, #0
	beq _021A083C
_021A080E:
	adds r0, r5, #0
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A084C
	ldr r0, [sp, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #4
	bne _021A082E
	ldr r0, [r4, #4]
	bl FUN_0219BF60
	cmp r0, #2
	beq _021A084C
_021A082E:
	adds r0, r5, #0
	movs r1, #3
	movs r6, #3
	bl FUN_021BC1EC
	cmp r0, #0
	bne _021A083E
_021A083C:
	b _021A0996
_021A083E:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021A4264
	b _021A0996
_021A084C:
	ldr r2, [r6, #4]
	adds r0, r4, #0
	lsls r2, r2, #0x1c
	adds r1, r5, #0
	lsrs r2, r2, #0x1c
	bl FUN_021A09D4
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021BB800
	ldr r2, [sp, #4]
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #8
	bhi _021A0952
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A0878: ; jump table
	.short _021A0952 - _021A0878 - 2 ; case 0
	.short _021A08A8 - _021A0878 - 2 ; case 1
	.short _021A08D8 - _021A0878 - 2 ; case 2
	.short _021A0916 - _021A0878 - 2 ; case 3
	.short _021A092E - _021A0878 - 2 ; case 4
	.short _021A0940 - _021A0878 - 2 ; case 5
	.short _021A088A - _021A0878 - 2 ; case 6
	.short _021A094A - _021A0878 - 2 ; case 7
	.short _021A093C - _021A0878 - 2 ; case 8
_021A088A:
	ldr r0, [r4, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021A0952
	ldr r2, [sp, #4]
	ldrb r1, [r6, #0xc]
	lsls r2, r2, #0x19
	lsrs r2, r2, #0x1d
	lsls r2, r2, #0x18
	adds r0, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0219FEEC
	b _021A0952
_021A08A8:
	ldr r7, _021A09B0 ; =0x00001FEC
	ldrb r0, [r4, r7]
	cmp r0, #0
	bne _021A08BA
	adds r0, r4, #0
	bl FUN_021A003C
	movs r0, #1
	strb r0, [r4, r7]
_021A08BA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A0A84
	ldr r1, _021A09B4 ; =0x00001F7C
	ldr r3, _021A09B8 ; =0x003FFFFF
	str r0, [r4, r1]
	ldr r6, [r6, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	add r2, sp, #4
	ands r3, r6
	bl FUN_021A1980
	b _021A0952
_021A08D8:
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1d
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r3, [sp, #4]
	adds r0, r4, #0
	lsls r2, r3, #9
	lsls r3, r3, #1
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	adds r1, r5, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_021AF2EC
	cmp r0, #1
	bne _021A0952
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #1
	bl FUN_021A11F0
	cmp r0, #0
	beq _021A0952
_021A0910:
	movs r0, #5
_021A0912:
	str r0, [r4, #0x14]
	b _021A0952
_021A0916:
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x1d
	lsls r2, r2, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_021A1780
	adds r0, r4, #0
	bl FUN_021A14E8
	b _021A0952
_021A092E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A106C
	cmp r0, #0
	beq _021A0952
	b _021A0910
_021A093C:
	movs r0, #4
	b _021A0912
_021A0940:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A0ED0
	b _021A0952
_021A094A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A9014
_021A0952:
	ldr r0, [sp, #4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	subs r0, r0, #1
	cmp r0, #1
	bhi _021A0970
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021BB800
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_021A9C44
_021A0970:
	ldr r7, _021A09BC ; =0x00001D78
	ldr r1, _021A09C0 ; =0x00000845
	adds r0, r4, r7
	bl FUN_021B088C
	ldr r2, [sp, #4]
	adds r6, r0, #0
	lsls r2, r2, #0x1c
	adds r0, r4, #0
	adds r1, r5, #0
	lsrs r2, r2, #0x1c
	bl FUN_021A0A48
	ldr r2, _021A09C0 ; =0x00000845
	adds r0, r4, r7
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
_021A0996:
	adds r0, r4, #0
	bl FUN_021AC138
	ldr r0, [sp, #4]
	add sp, #8
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	pop {r3, r4, r5, r6, r7, pc}
_021A09A6:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A09AC: .word 0x00001AB8
_021A09B0: .word 0x00001FEC
_021A09B4: .word 0x00001F7C
_021A09B8: .word 0x003FFFFF
_021A09BC: .word 0x00001D78
_021A09C0: .word 0x00000845
	thumb_func_end FUN_021A07B8

	thumb_func_start FUN_021A09C4
FUN_021A09C4: ; 0x021A09C4
	bx pc
	nop
	thumb_func_end FUN_021A09C4
_021A09C8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A09D4
FUN_021A09D4: ; 0x021A09D4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A0A04 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A0A08 ; =0x0000085E
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A0A0C
	ldr r0, _021A0A04 ; =0x00001D78
	ldr r2, _021A0A08 ; =0x0000085E
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #3
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0A04: .word 0x00001D78
_021A0A08: .word 0x0000085E
	thumb_func_end FUN_021A09D4

	thumb_func_start FUN_021A0A0C
FUN_021A0A0C: ; 0x021A0A0C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A0A44 ; =0x0000086E
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0xc
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0A44: .word 0x0000086E
	thumb_func_end FUN_021A0A0C

	thumb_func_start FUN_021A0A48
FUN_021A0A48: ; 0x021A0A48
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A0A80 ; =0x0000087E
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0xc
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0A80: .word 0x0000087E
	thumb_func_end FUN_021A0A48

	thumb_func_start FUN_021A0A84
FUN_021A0A84: ; 0x021A0A84
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r7, r1, #0
	bl FUN_0219BF14
	cmp r0, #1
	bhi _021A0B62
	adds r0, r7, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r4, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	cmp r4, r0
	bne _021A0B62
	adds r0, r7, #0
	bl FUN_021BB084
	adds r4, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219BFA8
	adds r6, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C9C8
	cmp r0, #0
	beq _021A0AC8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0AC8:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0201D4DC
	cmp r0, #0
	bne _021A0B62
	ldr r0, [r5, #4]
	bl FUN_0219BDD8
	adds r6, r0, #0
	cmp r6, #8
	bhs _021A0B62
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r1, r6, #1
	movs r0, #0xa
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r4, r6
	bhi _021A0AFE
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0AFE:
	adds r0, r4, r6
	adds r0, r0, #1
	bl FUN_021BD100
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r6
	bhs _021A0B12
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0B12:
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A0B22
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_021A0B22:
	movs r0, #2
	adds r0, #0xfe
	bl FUN_021BD100
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, [sp]
	subs r1, r4, r6
	cmp r0, r1
	bge _021A0B48
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A0B68
	cmp r0, #0
	bne _021A0B48
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021A0B48:
	subs r2, r4, r6
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [sp]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r2
	bge _021A0B5E
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021A0B5E:
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_021A0B62:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A0A84

	thumb_func_start FUN_021A0B68
FUN_021A0B68: ; 0x021A0B68
	push {r4, r5, r6, lr}
	movs r6, #0x8e
	lsls r6, r6, #4
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A0B68

	thumb_func_start FUN_021A0BA8
FUN_021A0BA8: ; 0x021A0BA8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021A04E0
	adds r4, r0, #0
	beq _021A0C16
	ldrb r0, [r4, #0xd]
	cmp r0, #0
	beq _021A0BD4
	adds r0, r4, #4
	bl FUN_021BDCBC
	cmp r0, #6
	bne _021A0BD4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A0528
	adds r4, r0, #0
_021A0BD4:
	ldrb r0, [r4, #0xd]
	cmp r0, #0
	bne _021A0C16
	ldr r0, [r4]
	adds r1, r4, #4
	bl FUN_021A1930
	cmp r0, #0
	beq _021A0BEA
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0BEA:
	adds r0, r4, #4
	bl FUN_021BDCBC
	cmp r0, #6
	bne _021A0BF8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0BF8:
	ldr r0, _021A0C1C ; =0x00001AB8
	adds r1, r7, #0
	adds r0, r5, r0
	bl FUN_021A0C20
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021BDB64
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A07B8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A0C16:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0C1C: .word 0x00001AB8
	thumb_func_end FUN_021A0BA8

	thumb_func_start FUN_021A0C20
FUN_021A0C20: ; 0x021A0C20
	bx pc
	nop
	thumb_func_end FUN_021A0C20
_021A0C24:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A0C30
FUN_021A0C30: ; 0x021A0C30
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021A04E0
	adds r1, r0, #0
	beq _021A0C52
	ldrb r0, [r1, #0xd]
	cmp r0, #0
	bne _021A0C52
	adds r0, r4, #0
	movs r2, #0
	bl FUN_021A0670
	cmp r0, #0
	blt _021A0C52
	movs r0, #1
	pop {r4, pc}
_021A0C52:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021A0C30

	thumb_func_start FUN_021A0C58
FUN_021A0C58: ; 0x021A0C58
	push {r3, r4, r5, r6, r7, lr}
	movs r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	movs r4, #0
	bl FUN_021A0584
	adds r1, r0, #0
	movs r7, #0
	cmp r1, #0
	beq _021A0C8E
_021A0C6E:
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021A0670
	cmp r0, #0
	blt _021A0C8E
	adds r4, r0, #1
	lsls r2, r4, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021A0584
	adds r1, r0, #0
	ldr r7, _021A0C94 ; =0x00000001
	bne _021A0C6E
_021A0C8E:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0C94: .word 0x00000001
	thumb_func_end FUN_021A0C58

	thumb_func_start FUN_021A0C98
FUN_021A0C98: ; 0x021A0C98
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021A04E0
	adds r1, r0, #0
	beq _021A0CB4
	ldrb r0, [r1, #0xd]
	cmp r0, #0
	bne _021A0CB4
	adds r0, r4, #0
	bl FUN_021A0728
	movs r0, #1
	pop {r4, pc}
_021A0CB4:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021A0C98

	thumb_func_start FUN_021A0CB8
FUN_021A0CB8: ; 0x021A0CB8
	push {r3, lr}
	bl FUN_021A04E0
	cmp r0, #0
	beq _021A0CC6
	movs r1, #1
	strb r1, [r0, #0xd]
_021A0CC6:
	pop {r3, pc}
	thumb_func_end FUN_021A0CB8

	thumb_func_start FUN_021A0CC8
FUN_021A0CC8: ; 0x021A0CC8
	movs r2, #0
	strh r2, [r0]
	movs r1, #6
	strb r2, [r0, #4]
	ldrb r2, [r0, #5]
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	movs r1, #1
	bics r2, r1
	strb r2, [r0, #5]
	ldrb r2, [r0, #5]
	movs r1, #2
	bics r2, r1
	strb r2, [r0, #5]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A0CC8

	thumb_func_start FUN_021A0CE8
FUN_021A0CE8: ; 0x021A0CE8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r2, #0
	adds r0, r3, #0
	adds r4, r1, #0
	str r3, [sp]
	bl FUN_021A0D4C
	adds r6, r0, #0
	adds r0, r7, #0
	bl FUN_021BAC80
	ldr r7, _021A0D48 ; =0x00001AB8
	adds r1, r0, #0
	adds r0, r4, r7
	bl FUN_021A0D5C
	strb r0, [r5, #2]
	movs r0, #6
	strb r0, [r5, #3]
	ldrb r1, [r5, #5]
	movs r0, #1
	bics r1, r0
	strb r1, [r5, #5]
	ldrb r1, [r5, #5]
	movs r0, #2
	bics r1, r0
	strb r1, [r5, #5]
	cmp r6, #1
	bne _021A0D44
	ldr r0, [sp]
	bl FUN_021A0D6C
	cmp r0, #0
	beq _021A0D44
	ldr r0, [sp]
	movs r1, #0
	bl FUN_021A0D7C
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, r7
	bl FUN_021A0D8C
	strb r0, [r5, #3]
_021A0D44:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A0D48: .word 0x00001AB8
	thumb_func_end FUN_021A0CE8

	thumb_func_start FUN_021A0D4C
FUN_021A0D4C: ; 0x021A0D4C
	bx pc
	nop
	thumb_func_end FUN_021A0D4C
_021A0D50:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A0D5C
FUN_021A0D5C: ; 0x021A0D5C
	bx pc
	nop
	thumb_func_end FUN_021A0D5C
_021A0D60:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A0D6C
FUN_021A0D6C: ; 0x021A0D6C
	bx pc
	nop
	thumb_func_end FUN_021A0D6C
_021A0D70:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A0D7C
FUN_021A0D7C: ; 0x021A0D7C
	bx pc
	nop
	thumb_func_end FUN_021A0D7C
_021A0D80:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A0D8C
FUN_021A0D8C: ; 0x021A0D8C
	bx pc
	nop
	thumb_func_end FUN_021A0D8C
_021A0D90:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A0D9C
FUN_021A0D9C: ; 0x021A0D9C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	strb r1, [r0]
	ldr r1, [sp, #8]
	str r0, [sp]
	strb r1, [r0, #1]
	movs r1, #1
	strb r1, [r0, #2]
	ldr r1, [sp, #8]
	movs r7, #0
	strb r1, [r0, #3]
	movs r6, #1
_021A0DBA:
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	ldr r0, [r0]
	bl FUN_0219F2BC
	adds r4, r0, #0
	beq _021A0E0E
	ldrb r0, [r4, #9]
	movs r5, #0
	cmp r0, #0
	bls _021A0E0E
_021A0DD0:
	ldr r0, [r4, #4]
	adds r1, r5, #0
	bl FUN_0219D534
	cmp r0, #0
	beq _021A0DEC
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A0DE8
	adds r0, r6, #0
	b _021A0DEE
_021A0DE8:
	adds r0, r7, #0
	b _021A0DEE
_021A0DEC:
	movs r0, #0
_021A0DEE:
	cmp r0, #0
	beq _021A0E02
	ldr r1, [sp, #8]
	ldr r0, [sp]
	add sp, #0xc
	strb r1, [r0]
	movs r1, #0
	strb r1, [r0, #2]
	strb r5, [r0, #1]
	pop {r4, r5, r6, r7, pc}
_021A0E02:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrb r0, [r4, #9]
	cmp r5, r0
	blo _021A0DD0
_021A0E0E:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	cmp r0, #4
	blo _021A0DBA
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A0D9C

	thumb_func_start FUN_021A0E20
FUN_021A0E20: ; 0x021A0E20
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r1, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021A0E32
	movs r0, #1
	strb r0, [r4, #3]
_021A0E32:
	pop {r4, pc}
	thumb_func_end FUN_021A0E20

	thumb_func_start FUN_021A0E34
FUN_021A0E34: ; 0x021A0E34
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #2]
	adds r4, r2, #0
	str r1, [sp]
	cmp r0, #0
	beq _021A0E46
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A0E46:
	adds r0, r1, #0
	ldrb r1, [r5]
	ldr r0, [r0]
	bl FUN_0219F2A0
	ldrb r1, [r5, #1]
	ldr r0, [r0, #4]
	bl FUN_0219D524
	str r0, [r4]
	ldrb r0, [r5, #1]
	ldrb r1, [r5]
	adds r0, r0, #1
	strb r0, [r5, #1]
	cmp r1, #4
	bhs _021A0EC8
_021A0E66:
	ldr r0, [sp]
	ldr r0, [r0]
	bl FUN_0219F2BC
	adds r4, r0, #0
	beq _021A0EB8
	ldrb r0, [r5, #3]
	cmp r0, #0
	bne _021A0E7C
	ldrb r0, [r4, #9]
	b _021A0E7E
_021A0E7C:
	movs r0, #3
_021A0E7E:
	ldrb r1, [r5, #1]
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r1, r6
	bhs _021A0EB8
	movs r7, #1
_021A0E8A:
	ldr r0, [r4, #4]
	bl FUN_0219D524
	cmp r0, #0
	beq _021A0EA2
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A0EA0
	adds r0, r7, #0
	b _021A0EA4
_021A0EA0:
	b _021A0EA2
_021A0EA2:
	movs r0, #0
_021A0EA4:
	cmp r0, #0
	beq _021A0EAC
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A0EAC:
	ldrb r0, [r5, #1]
	adds r0, r0, #1
	strb r0, [r5, #1]
	ldrb r1, [r5, #1]
	cmp r1, r6
	blo _021A0E8A
_021A0EB8:
	ldrb r0, [r5]
	adds r0, r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	movs r0, #0
	strb r0, [r5, #1]
	cmp r1, #4
	blo _021A0E66
_021A0EC8:
	movs r0, #1
	strb r0, [r5, #2]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A0E34

	thumb_func_start FUN_021A0ED0
FUN_021A0ED0: ; 0x021A0ED0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r7, r0, #0
	ldr r0, [r5, #8]
	adds r1, r7, #0
	bl FUN_0219D408
	adds r1, r6, #0
	bl FUN_0219D5CC
	adds r4, r0, #0
	beq _021A0EF8
	cmp r4, #2
	bne _021A0F22
_021A0EF8:
	movs r0, #0
	lsls r2, r4, #0x18
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x18
	movs r3, #1
	bl FUN_021A0F24
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0xe7
	bl FUN_021A98E0
	lsls r2, r4, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x18
	movs r3, #1
	bl FUN_021A0FCC
_021A0F22:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A0ED0

	thumb_func_start FUN_021A0F24
FUN_021A0F24: ; 0x021A0F24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0219D408
	str r0, [sp, #4]
	ldr r0, [r5, #4]
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_0219C498
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0219C498
	str r0, [sp, #0xc]
	ldr r0, _021A0FB8 ; =0x00001AB8
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	adds r0, r5, r0
	bl FUN_021A0FBC
	ldr r0, [sp, #4]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0219D544
	ldr r0, [sp, #0x28]
	cmp r0, #0
	bne _021A0FB4
	ldr r0, [sp, #0xc]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x44
	adds r2, r4, #0
	bl FUN_021B1474
	ldr r0, [sp, #4]
	adds r1, r6, #0
	bl FUN_0219D524
	adds r4, r0, #0
	ldr r0, [sp, #4]
	adds r1, r7, #0
	bl FUN_0219D524
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A0FA2
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_021BB800
_021A0FA2:
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A0FB4
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021BB800
_021A0FB4:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A0FB8: .word 0x00001AB8
	thumb_func_end FUN_021A0F24

	thumb_func_start FUN_021A0FBC
FUN_021A0FBC: ; 0x021A0FBC
	bx pc
	nop
	thumb_func_end FUN_021A0FBC
_021A0FC0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x79, 0xD6, 0x89, 0x06

	thumb_func_start FUN_021A0FCC
FUN_021A0FCC: ; 0x021A0FCC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0219D408
	adds r7, r0, #0
	adds r1, r4, #0
	bl FUN_0219D534
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_0219D534
	adds r4, r0, #0
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021A1000
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1000
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A0FCC

	thumb_func_start FUN_021A1000
FUN_021A1000: ; 0x021A1000
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A1030
	ldr r7, _021A1034 ; =0x00001D78
	ldr r1, _021A1038 ; =0x00000A99
	adds r0, r5, r7
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A103C
	ldr r2, _021A1038 ; =0x00000A99
	adds r0, r5, r7
	adds r1, r4, #0
	adds r2, r2, #2
	bl FUN_021B0910
_021A1030:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A1034: .word 0x00001D78
_021A1038: .word 0x00000A99
	thumb_func_end FUN_021A1000

	thumb_func_start FUN_021A103C
FUN_021A103C: ; 0x021A103C
	push {r4, r5, r6, lr}
	ldr r6, _021A1068 ; =0x00000AA8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0xa4
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A1068: .word 0x00000AA8
	thumb_func_end FUN_021A103C

	thumb_func_start FUN_021A106C
FUN_021A106C: ; 0x021A106C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r6, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A10F4
	str r0, [sp, #4]
	cmp r0, #0
	beq _021A109E
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A109E:
	cmp r6, r4
	bne _021A10B4
	ldr r0, [r5, #4]
	movs r1, #0x4e
	bl FUN_0219DB10
	ldr r0, [r5, #0xc]
	movs r1, #0x5a
	movs r2, #0x49
	ldr r3, _021A10E8 ; =0xFFFF0000
	b _021A10C6
_021A10B4:
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A10E8 ; =0xFFFF0000
	ldr r2, _021A10EC ; =0x0000036B
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
_021A10C6:
	bl FUN_021B1610
	cmp r6, r4
	bne _021A10E0
	ldr r0, _021A10F0 ; =0x00000786
	ldrb r1, [r5, r0]
	adds r1, r1, #1
	strb r1, [r5, r0]
	ldrb r1, [r5, r0]
	cmp r1, #0x1e
	bls _021A10E0
	movs r1, #0x1e
	strb r1, [r5, r0]
_021A10E0:
	ldr r0, [sp, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A10E8: .word 0xFFFF0000
_021A10EC: .word 0x0000036B
_021A10F0: .word 0x00000786
	thumb_func_end FUN_021A106C

	thumb_func_start FUN_021A10F4
FUN_021A10F4: ; 0x021A10F4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	adds r7, r1, #0
	adds r6, r2, #0
	bl FUN_0219BF60
	cmp r0, #0
	bne _021A1134
	adds r0, r7, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r4, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	cmp r4, r0
	bne _021A1132
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A11A0
	str r0, [sp]
	cmp r0, #0
	beq _021A113A
_021A112E:
	movs r6, #1
	b _021A113A
_021A1132:
	b _021A112E
_021A1134:
	movs r0, #1
	movs r6, #1
	str r0, [sp]
_021A113A:
	cmp r6, #0
	bne _021A118C
	ldr r0, [r5, #8]
	movs r1, #1
	movs r2, #0
	bl FUN_0219D23C
	adds r6, r0, #0
	beq _021A118C
	adds r0, r7, #0
	movs r1, #0xc
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r4, r1
	bhi _021A118C
	lsls r0, r4, #0xc
	blx FUN_0208D688
	lsls r0, r0, #7
	asrs r3, r0, #0xc
	ldr r0, _021A119C ; =0x00000786
	ldrb r1, [r5, r0]
	movs r0, #0x1e
	adds r2, r1, #0
	muls r2, r0, r2
	adds r0, #0xe2
	adds r4, r3, r2
	bl FUN_021BD100
	cmp r0, r4
	blo _021A118C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A118C:
	ldr r2, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_021A11F0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A119C: .word 0x00000786
	thumb_func_end FUN_021A10F4

	thumb_func_start FUN_021A11A0
FUN_021A11A0: ; 0x021A11A0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A11E8
	ldr r6, _021A11EC ; =0x00000B31
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0xb
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
_021A11E8:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A11EC: .word 0x00000B31
	thumb_func_end FUN_021A11A0

	thumb_func_start FUN_021A11F0
FUN_021A11F0: ; 0x021A11F0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	str r3, [sp, #8]
	bl FUN_021BAC80
	bl FUN_0219C688
	str r0, [sp, #0xc]
	ldr r0, [r5, #4]
	bl FUN_0219BF60
	cmp r0, #0
	ldr r0, [r5, #4]
	bne _021A12E4
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [sp, #0xc]
	bl FUN_0219C8D8
	cmp r0, #0
	bne _021A1228
	movs r0, #1
	b _021A122A
_021A1228:
	movs r0, #0
_021A122A:
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r6, #0
	bne _021A126A
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A126A
	ldr r0, _021A131C ; =0x00001D78
	ldr r1, _021A1320 ; =0x00000B58
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1338
	adds r6, r0, #0
	ldr r0, _021A131C ; =0x00001D78
	ldr r2, _021A1320 ; =0x00000B58
	ldr r1, [sp, #0x10]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	cmp r6, #0
	beq _021A126A
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A126A:
	ldr r0, _021A1324 ; =0x0000078A
	ldrb r0, [r5, r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	bne _021A130A
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021A12A0
	ldr r0, _021A131C ; =0x00001D78
	ldr r1, _021A1328 ; =0x00000B68
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1394
	adds r6, r0, #0
	ldr r0, _021A131C ; =0x00001D78
	ldr r2, _021A1328 ; =0x00000B68
	ldr r1, [sp, #0x14]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	b _021A12A2
_021A12A0:
	movs r6, #0
_021A12A2:
	cmp r6, #0
	bne _021A12D8
	cmp r7, #0
	beq _021A12C8
	ldr r0, [r5, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021A12D8
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp]
	ldr r0, _021A132C ; =0xFFFF0000
	movs r1, #0x5c
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r2, #0x4b
	b _021A12D2
_021A12C8:
	ldr r0, _021A132C ; =0xFFFF0000
	movs r1, #0x5c
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0x48
_021A12D2:
	ldr r3, _021A1330 ; =0x0000056A
	bl FUN_021B1610
_021A12D8:
	ldr r1, _021A1324 ; =0x0000078A
	movs r0, #4
	ldrb r2, [r5, r1]
	orrs r0, r2
	strb r0, [r5, r1]
	b _021A130A
_021A12E4:
	bl FUN_0219BF24
	cmp r0, #0
	beq _021A130A
	ldr r4, _021A1324 ; =0x0000078A
	ldrb r0, [r5, r4]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	bne _021A130A
	ldr r0, [r5, #0xc]
	ldr r3, _021A132C ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0xc6
	bl FUN_021B1610
	ldrb r1, [r5, r4]
	movs r0, #4
	orrs r0, r1
	strb r0, [r5, r4]
_021A130A:
	ldr r0, _021A1334 ; =0x000004B8
	ldr r1, [sp, #0xc]
	adds r0, r5, r0
	bl FUN_021BDAAC
	movs r0, #1
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A131C: .word 0x00001D78
_021A1320: .word 0x00000B58
_021A1324: .word 0x0000078A
_021A1328: .word 0x00000B68
_021A132C: .word 0xFFFF0000
_021A1330: .word 0x0000056A
_021A1334: .word 0x000004B8
	thumb_func_end FUN_021A11F0

	thumb_func_start FUN_021A1338
FUN_021A1338: ; 0x021A1338
	push {r4, r5, r6, lr}
	ldr r6, _021A1380 ; =0x00000B9D
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1384
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	nop
_021A1380: .word 0x00000B9D
	thumb_func_end FUN_021A1338

	thumb_func_start FUN_021A1384
FUN_021A1384: ; 0x021A1384
	bx pc
	nop
	thumb_func_end FUN_021A1384
_021A1388:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xC8, 0x89, 0x06

	thumb_func_start FUN_021A1394
FUN_021A1394: ; 0x021A1394
	push {r4, r5, r6, lr}
	ldr r6, _021A13D4 ; =0x00000BB3
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0xd
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	nop
_021A13D4: .word 0x00000BB3
	thumb_func_end FUN_021A1394

	thumb_func_start FUN_021A13D8
FUN_021A13D8: ; 0x021A13D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_0219D408
	str r0, [sp, #0xc]
	ldr r0, [r5, #0xc]
	movs r1, #0x2a
	adds r2, r6, #0
	bl FUN_021B1474
	ldr r0, [r5, #4]
	ldr r1, [sp, #0xc]
	adds r2, r6, #0
	bl FUN_0219D644
	cmp r4, r7
	beq _021A140E
	ldr r0, [sp, #0xc]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0219D544
_021A140E:
	ldr r0, [sp, #0xc]
	adds r1, r4, #0
	bl FUN_0219D524
	str r0, [sp, #0x10]
	bl FUN_021BAC80
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	ldr r2, [sp, #0x10]
	adds r1, r6, #0
	bl FUN_0219BFE0
	ldr r0, [sp, #0x10]
	bl FUN_021BDCEC
	ldr r0, [sp, #0x10]
	bl FUN_021C27C4
	ldr r1, [r5, #0x10]
	ldr r0, [sp, #0x10]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BBC2C
	ldr r0, [sp, #0x10]
	bl FUN_021BBDC0
	ldr r0, _021A14A4 ; =0x000007C1
	movs r2, #1
	adds r0, r5, r0
	str r0, [sp, #0x14]
	adds r1, r0, #0
	ldr r0, [sp, #8]
	strb r2, [r1, r0]
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021A1472
	ldr r0, [r5, #4]
	adds r1, r6, #0
	bl FUN_0219D2D4
	cmp r0, r4
	bhi _021A1472
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #8]
	movs r2, #0
	strb r2, [r1, r0]
_021A1472:
	str r7, [sp]
	ldr r0, [r5, #0x10]
	movs r1, #0x12
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	adds r2, r6, #0
	adds r3, r4, #0
	bl FUN_021B1474
	ldr r0, [r5, #4]
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_0219C498
	adds r1, r0, #0
	ldr r0, _021A14A8 ; =0x00001AB8
	ldr r2, [sp, #8]
	ldr r3, [r5, #8]
	adds r0, r5, r0
	bl FUN_021A14AC
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A14A4: .word 0x000007C1
_021A14A8: .word 0x00001AB8
	thumb_func_end FUN_021A13D8

	thumb_func_start FUN_021A14AC
FUN_021A14AC: ; 0x021A14AC
	bx pc
	nop
	thumb_func_end FUN_021A14AC
_021A14B0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA9, 0xD4, 0x89, 0x06

	thumb_func_start FUN_021A14BC
FUN_021A14BC: ; 0x021A14BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_021A13D8
	ldr r0, [sp, #0x20]
	str r4, [sp]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x3d
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A14BC

	thumb_func_start FUN_021A14E8
FUN_021A14E8: ; 0x021A14E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	ldr r7, _021A15F4 ; =0x00001A68
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r5, r7
	bl FUN_021A1610
	add r0, sp, #8
	adds r1, r5, #0
	bl FUN_021A0D9C
	add r0, sp, #8
	adds r1, r5, #0
	add r2, sp, #4
	bl FUN_021A0E34
	cmp r0, #0
	beq _021A153A
	ldr r6, _021A15F8 ; =0x000007C1
_021A1512:
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r4, r5, r0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021A152C
	ldr r1, [sp, #4]
	adds r0, r5, r7
	bl FUN_021A1620
	movs r0, #0
	strb r0, [r4, r6]
_021A152C:
	add r0, sp, #8
	adds r1, r5, #0
	add r2, sp, #4
	bl FUN_021A0E34
	cmp r0, #0
	bne _021A1512
_021A153A:
	adds r0, r5, r7
	adds r1, r5, #0
	bl FUN_021A1630
	ldr r0, _021A15FC ; =0x00001D78
	ldr r1, _021A1600 ; =0x00000C28
	adds r0, r5, r0
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021A16D4
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	beq _021A1562
	movs r0, #1
	str r0, [sp]
_021A1562:
	ldr r0, _021A15FC ; =0x00001D78
	ldr r2, _021A1604 ; =0x00000C2E
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_021B0910
	adds r0, r5, r7
	bl FUN_021A1640
	adds r0, r5, r7
	bl FUN_021A1650
	str r0, [sp, #4]
	cmp r0, #0
	beq _021A15C0
	ldr r6, _021A1604 ; =0x00000C2E
	adds r6, #0xc
_021A1584:
	ldr r0, _021A15FC ; =0x00001D78
	ldr r1, _021A1604 ; =0x00000C2E
	adds r0, r5, r0
	adds r1, r1, #6
	bl FUN_021B088C
	adds r4, r0, #0
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021A1670
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	beq _021A15A8
	movs r0, #1
	str r0, [sp]
_021A15A8:
	ldr r0, _021A15FC ; =0x00001D78
	adds r1, r4, #0
	adds r0, r5, r0
	adds r2, r6, #0
	bl FUN_021B0910
	adds r0, r5, r7
	bl FUN_021A1660
	str r0, [sp, #4]
	cmp r0, #0
	bne _021A1584
_021A15C0:
	ldr r0, _021A15FC ; =0x00001D78
	ldr r1, _021A1608 ; =0x00000C3D
	adds r0, r5, r0
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021A16F4
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	beq _021A15E0
	movs r0, #1
	str r0, [sp]
_021A15E0:
	ldr r0, _021A15FC ; =0x00001D78
	ldr r2, _021A160C ; =0x00000C43
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_021B0910
	ldr r0, [sp]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021A15F4: .word 0x00001A68
_021A15F8: .word 0x000007C1
_021A15FC: .word 0x00001D78
_021A1600: .word 0x00000C28
_021A1604: .word 0x00000C2E
_021A1608: .word 0x00000C3D
_021A160C: .word 0x00000C43
	thumb_func_end FUN_021A14E8

	thumb_func_start FUN_021A1610
FUN_021A1610: ; 0x021A1610
	bx pc
	nop
	thumb_func_end FUN_021A1610
_021A1614:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A1620
FUN_021A1620: ; 0x021A1620
	bx pc
	nop
	thumb_func_end FUN_021A1620
_021A1624:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A1630
FUN_021A1630: ; 0x021A1630
	bx pc
	nop
	thumb_func_end FUN_021A1630
_021A1634:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xAD, 0xD0, 0x89, 0x06

	thumb_func_start FUN_021A1640
FUN_021A1640: ; 0x021A1640
	bx pc
	nop
	thumb_func_end FUN_021A1640
_021A1644:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A1650
FUN_021A1650: ; 0x021A1650
	bx pc
	nop
	thumb_func_end FUN_021A1650
_021A1654:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A1660
FUN_021A1660: ; 0x021A1660
	bx pc
	nop
	thumb_func_end FUN_021A1660
_021A1664:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A1670
FUN_021A1670: ; 0x021A1670
	push {r4, r5, r6, lr}
	ldr r6, _021A169C ; =0x00000C53
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x55
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A169C: .word 0x00000C53
	thumb_func_end FUN_021A1670

	thumb_func_start FUN_021A16A0
FUN_021A16A0: ; 0x021A16A0
	push {r4, r5, r6, lr}
	ldr r6, _021A16D0 ; =0x00000C65
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x55
	movs r2, #4
	bl FUN_021BC94C
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	nop
_021A16D0: .word 0x00000C65
	thumb_func_end FUN_021A16A0

	thumb_func_start FUN_021A16D4
FUN_021A16D4: ; 0x021A16D4
	push {r3, r4, r5, lr}
	ldr r4, _021A16F0 ; =0x00000C75
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	movs r1, #0x56
	bl FUN_021BC940
	adds r0, r4, #2
	bl FUN_021BCD94
	pop {r3, r4, r5, pc}
	.align 2, 0
_021A16F0: .word 0x00000C75
	thumb_func_end FUN_021A16D4

	thumb_func_start FUN_021A16F4
FUN_021A16F4: ; 0x021A16F4
	push {r3, r4, r5, lr}
	ldr r4, _021A1710 ; =0x00000C83
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	movs r1, #0x57
	bl FUN_021BC940
	adds r0, r4, #2
	bl FUN_021BCD94
	pop {r3, r4, r5, pc}
	.align 2, 0
_021A1710: .word 0x00000C83
	thumb_func_end FUN_021A16F4

	thumb_func_start FUN_021A1714
FUN_021A1714: ; 0x021A1714
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A1738 ; =0x00000C92
	ldr r6, _021A173C ; =0x00001D78
	adds r5, r0, #0
	adds r0, r5, r6
	adds r1, r7, #0
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021A1740
	adds r0, r5, r6
	adds r1, r4, #0
	adds r2, r7, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A1738: .word 0x00000C92
_021A173C: .word 0x00001D78
	thumb_func_end FUN_021A1714

	thumb_func_start FUN_021A1740
FUN_021A1740: ; 0x021A1740
	push {r3, r4, r5, lr}
	ldr r4, _021A175C ; =0x00000CA1
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	movs r1, #0x58
	bl FUN_021BC940
	adds r0, r4, #2
	bl FUN_021BCD94
	pop {r3, r4, r5, pc}
	.align 2, 0
_021A175C: .word 0x00000CA1
	thumb_func_end FUN_021A1740

	thumb_func_start FUN_021A1760
FUN_021A1760: ; 0x021A1760
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	bl FUN_0219C688
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x3b
	adds r3, r4, #0
	bl FUN_021B1474
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A1760

	thumb_func_start FUN_021A1780
FUN_021A1780: ; 0x021A1780
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021A1760
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021A17E8
	cmp r0, #0
	beq _021A17DE
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r1, r0, #0
	add r2, sp, #4
	ldr r0, [r5, #4]
	adds r2, #1
	add r3, sp, #4
	bl FUN_0219C6D4
	ldr r0, _021A17E4 ; =0x000007D9
	adds r2, r5, r0
	add r0, sp, #4
	ldrb r1, [r0, #1]
	ldrb r0, [r2, r1]
	cmp r0, #0xff
	bhs _021A17CC
	adds r0, r0, #1
	strb r0, [r2, r1]
_021A17CC:
	movs r0, #1
	str r0, [sp]
	add r2, sp, #4
	ldrb r1, [r2, #1]
	ldrb r2, [r2]
	adds r0, r5, #0
	adds r3, r6, #0
	bl FUN_021A14BC
_021A17DE:
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_021A17E4: .word 0x000007D9
	thumb_func_end FUN_021A1780

	thumb_func_start FUN_021A17E8
FUN_021A17E8: ; 0x021A17E8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	cmp r2, #0
	bne _021A1840
	bl FUN_021A9CE8
	adds r7, r0, #0
	beq _021A1840
	ldr r1, _021A1860 ; =0x0000078A
	movs r0, #1
	ldrb r2, [r6, r1]
	movs r4, #0
	bics r2, r0
	movs r0, #1
	orrs r0, r2
	strb r0, [r6, r1]
	cmp r7, #0
	bls _021A1836
	adds r0, r1, #1
	str r0, [sp]
_021A1812:
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r1, [sp]
	adds r3, r6, r4
	ldrb r1, [r3, r1]
	adds r0, r6, #0
	bl FUN_021A0BA8
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A1836
	adds r4, r4, #1
	cmp r4, r7
	blo _021A1812
_021A1836:
	ldr r1, _021A1860 ; =0x0000078A
	movs r0, #1
	ldrb r2, [r6, r1]
	bics r2, r0
	strb r2, [r6, r1]
_021A1840:
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A185A
	movs r2, #0x9b
	adds r0, r6, #0
	adds r1, r5, #0
	lsls r2, r2, #2
	bl FUN_021A1864
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A185A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A1860: .word 0x0000078A
	thumb_func_end FUN_021A17E8

	thumb_func_start FUN_021A1864
FUN_021A1864: ; 0x021A1864
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	adds r2, r7, #0
	bl FUN_0219C638
	adds r2, r0, #0
	cmp r2, #6
	beq _021A188E
	ldr r0, [r5, #0xc]
	movs r1, #0x3c
	adds r3, r6, #0
	bl FUN_021B1474
_021A188E:
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A0CB8
	ldr r0, _021A18E4 ; =0x00001D78
	ldr r1, _021A18E8 ; =0x00000D0F
	adds r0, r5, r0
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1900
	ldr r0, _021A18E4 ; =0x00001D78
	ldr r2, _021A18E8 ; =0x00000D0F
	adds r0, r5, r0
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021A8C08
	adds r0, r4, #0
	bl FUN_021BBD30
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x20
	bl FUN_021B1474
	ldr r0, _021A18EC ; =0x00001AB8
	adds r1, r7, #0
	adds r0, r5, r0
	bl FUN_021A18F0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A18E4: .word 0x00001D78
_021A18E8: .word 0x00000D0F
_021A18EC: .word 0x00001AB8
	thumb_func_end FUN_021A1864

	thumb_func_start FUN_021A18F0
FUN_021A18F0: ; 0x021A18F0
	bx pc
	nop
	thumb_func_end FUN_021A18F0
_021A18F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0xD4, 0x89, 0x06

	thumb_func_start FUN_021A1900
FUN_021A1900: ; 0x021A1900
	push {r4, r5, r6, lr}
	ldr r6, _021A192C ; =0x00000D24
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x54
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A192C: .word 0x00000D24
	thumb_func_end FUN_021A1900

	thumb_func_start FUN_021A1930
FUN_021A1930: ; 0x021A1930
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r1, #0
	movs r1, #0x17
	adds r6, r0, #0
	movs r4, #0x17
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A1978
	ldr r0, [r5]
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	cmp r0, #0xa5
	beq _021A1978
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBB54
	bl FUN_021CE400
	adds r4, r0, #0
	ldr r0, [r5]
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	cmp r4, r0
	beq _021A1978
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BADE0
	cmp r0, #0
	beq _021A1978
	add sp, #4
	adds r0, r4, #0
	pop {r3, r4, r5, r6, pc}
_021A1978:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A1930

	thumb_func_start FUN_021A1980
FUN_021A1980: ; 0x021A1980
	push {r4, r5, r6, r7, lr}
	sub sp, #0x4c
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	str r2, [sp, #0x10]
	str r3, [sp, #0x14]
	bl FUN_021BB448
	ldr r6, _021A1CE8 ; =0x000004A8
	str r0, [sp, #0x38]
	ldr r0, [r5, r6]
	bl FUN_021A0CC8
	adds r6, #8
	ldr r0, [r5, r6]
	bl FUN_021A2000
	movs r1, #0
	add r0, sp, #0x44
	strh r1, [r0, #2]
	movs r1, #6
	strb r1, [r0, #4]
	ldr r1, [sp, #0x10]
	adds r0, r4, #0
	bl FUN_021A1930
	adds r6, r0, #0
	beq _021A19D0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_021BD924
	adds r2, r0, #0
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	bl FUN_021BDB38
_021A19D0:
	ldr r0, [sp, #0x10]
	ldr r0, [r0]
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BAFB8
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x10]
	movs r1, #0
	ldr r0, [r0]
	adds r7, r6, #0
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1d
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x3c]
	str r1, [sp, #0x28]
	add r0, sp, #0x44
	strb r1, [r0]
	adds r0, r4, #0
	movs r1, #0x19
	bl FUN_021BBB04
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x34]
	adds r0, r4, #0
	movs r1, #0x1a
	bl FUN_021BBB04
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30]
	ldr r2, [sp, #0x14]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C5B44
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A240C
	ldr r0, [sp, #0x34]
	cmp r0, #0
	bne _021A1A3A
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _021A1A3E
_021A1A3A:
	movs r3, #1
	b _021A1A40
_021A1A3E:
	ldr r3, [sp, #0x28]
_021A1A40:
	lsls r3, r3, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	lsrs r3, r3, #0x18
	bl FUN_021A3B00
	cmp r0, #0
	beq _021A1A54
	b _021A1D34
_021A1A54:
	add r0, sp, #0x44
	adds r0, #2
	str r0, [sp]
	ldr r3, [sp, #0x3c]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A9E30
	cmp r0, #0
	bne _021A1ABE
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A915C
	ldr r3, _021A1CEC ; =0x00001AB4
	adds r0, r5, #0
	ldr r3, [r5, r3]
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AA00C
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	ldr r3, _021A1CEC ; =0x00001AB4
	str r0, [sp]
	ldr r2, [sp, #0x3c]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AE36C
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r3, [sp, #0x24]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A4290
	movs r0, #1
	str r0, [sp, #0x28]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x1a
	bl FUN_021A3F34
	b _021A1D34
_021A1ABE:
	add r0, sp, #0x44
	ldrh r0, [r0, #2]
	cmp r0, #0
	beq _021A1ACA
	movs r0, #1
	b _021A1ACC
_021A1ACA:
	movs r0, #0
_021A1ACC:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x2c]
	beq _021A1B00
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A915C
	ldr r3, [sp, #0x3c]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A26C0
	add r1, sp, #0x44
	ldrh r1, [r1, #2]
	ldr r2, [sp, #0x14]
	adds r0, r4, #0
	bl FUN_021C5B44
	add r0, sp, #0x44
	ldrh r7, [r0, #2]
	ldrb r0, [r0, #4]
	str r0, [sp, #0x3c]
	b _021A1B02
_021A1B00:
	adds r7, r6, #0
_021A1B02:
	ldr r3, _021A1CEC ; =0x00001AB4
	adds r0, r5, #0
	ldr r3, [r5, r3]
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AA00C
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	beq _021A1B68
	ldr r3, _021A1CEC ; =0x00001AB4
	adds r0, r5, #0
	subs r3, r3, #4
	ldr r3, [r5, r3]
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AA00C
	ldr r0, _021A1CEC ; =0x00001AB4
	movs r1, #4
	subs r0, r0, #4
	ldr r0, [r5, r0]
	ldr r2, [r0, #0x10]
	orrs r1, r2
	str r1, [r0, #0x10]
	ldr r0, _021A1CEC ; =0x00001AB4
	ldr r2, _021A1CEC ; =0x00001AB4
	subs r0, r0, #4
	ldr r0, [r5, r0]
	subs r2, r2, #4
	strh r6, [r0, #2]
	ldr r2, [r5, r2]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1E90
	cmp r0, #0
	beq _021A1B7E
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r3, [sp, #0x24]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A4290
	movs r0, #1
	str r0, [sp, #0x28]
	b _021A1D34
_021A1B68:
	ldr r0, _021A1CEC ; =0x00001AB4
	subs r0, r0, #4
	ldr r3, [r5, r0]
	ldr r0, _021A1CEC ; =0x00001AB4
	ldr r2, [r5, r0]
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
_021A1B7E:
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_021A1E20
	movs r0, #0x85
	lsls r0, r0, #4
	adds r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_021A1E30
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	ldr r3, _021A1CF0 ; =0x00001AB0
	str r0, [sp]
	ldr r2, [sp, #0x3c]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AE36C
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_021A1E40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x20]
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_021A1E50
	movs r1, #0x85
	movs r0, #0x85
	lsls r1, r1, #4
	lsls r0, r0, #4
	adds r1, r1, #4
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	bl FUN_021A1E60
	movs r0, #0x85
	lsls r0, r0, #4
	adds r0, r0, #4
	ldr r0, [r5, r0]
	ldr r1, [sp, #0x20]
	bl FUN_021A1E70
	ldr r0, [sp, #0x34]
	cmp r0, #0
	bne _021A1C0E
	ldr r0, [sp, #0x30]
	cmp r0, #0
	bne _021A1C0E
	ldr r0, [sp, #0x24]
	cmp r0, #4
	beq _021A1C0E
	movs r0, #0x85
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r3, [sp, #0x24]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A4290
	movs r0, #1
	str r0, [sp, #0x28]
_021A1C0E:
	ldr r2, _021A1CEC ; =0x00001AB4
	adds r0, r5, #0
	str r2, [sp, #0x40]
	ldr r2, [r5, r2]
	adds r1, r4, #0
	movs r3, #0x22
	bl FUN_021A2154
	ldr r2, [sp, #0x40]
	adds r0, r5, #0
	subs r2, r2, #4
	ldr r2, [r5, r2]
	adds r1, r4, #0
	bl FUN_021A2108
	ldr r0, [sp, #0x40]
	adds r1, r4, #0
	adds r0, #0x30
	adds r0, r5, r0
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A9FB0
	cmp r0, #0
	beq _021A1C5E
	ldr r1, [sp, #0x40]
	adds r0, r5, #0
	adds r1, #0x30
	adds r1, r5, r1
	bl FUN_021AD520
	ldr r0, [sp, #0x40]
	adds r0, #0x30
	str r0, [sp, #0x40]
	adds r0, r5, r0
	bl FUN_021AC390
	b _021A1C68
_021A1C5E:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A915C
_021A1C68:
	ldr r0, _021A1CF4 ; =0x00001F78
	movs r1, #0x22
	strh r7, [r5, r0]
	adds r0, r4, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A1C8C
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x22
	movs r3, #0
	bl FUN_021A9178
	adds r0, r4, #0
	movs r1, #0xe
	bl FUN_021BB800
_021A1C8C:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A3D30
	cmp r0, #0
	bne _021A1D34
	add r0, sp, #0x44
	str r0, [sp]
	ldr r3, [sp, #0x3c]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A22CC
	cmp r0, #0
	bne _021A1D34
	ldr r3, [sp, #0x3c]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A21D4
	cmp r0, #0
	bne _021A1D34
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	adds r0, r5, #0
	ldr r2, [r5, #0x10]
	adds r0, #0x1c
	adds r1, r7, #0
	bl FUN_021A1E80
	ldr r2, _021A1CF0 ; =0x00001AB0
	adds r0, r5, #0
	ldr r2, [r5, r2]
	adds r1, r4, #0
	movs r3, #0x23
	bl FUN_021A2154
	ldr r0, _021A1CF8 ; =0x000004AC
	ldr r3, _021A1CFC ; =0x00000854
	b _021A1D00
	nop
_021A1CE8: .word 0x000004A8
_021A1CEC: .word 0x00001AB4
_021A1CF0: .word 0x00001AB0
_021A1CF4: .word 0x00001F78
_021A1CF8: .word 0x000004AC
_021A1CFC: .word 0x00000854
_021A1D00:
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r2, r7, #0
	bl FUN_021A259C
	cmp r0, #0
	ldr r3, _021A1E18 ; =0x00000854
	beq _021A1D24
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A2038
	b _021A1D34
_021A1D24:
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A2740
	add r1, sp, #0x44
	strb r0, [r1]
_021A1D34:
	adds r0, r4, #0
	movs r1, #3
	bl FUN_021BB800
	ldr r0, [sp, #0x28]
	cmp r0, #0
	bne _021A1D4C
	ldr r0, [sp, #0x34]
	cmp r0, #0
	bne _021A1D4C
	cmp r7, #0xa5
	bne _021A1D90
_021A1D4C:
	str r7, [sp]
	str r6, [sp, #4]
	ldr r3, _021A1E1C ; =0x00001AB0
	add r2, sp, #0x44
	ldr r3, [r5, r3]
	ldrb r2, [r2]
	ldrb r3, [r3, #6]
	ldr r1, [sp, #0x3c]
	adds r0, r4, #0
	bl FUN_021BBF84
	ldr r0, _021A1E1C ; =0x00001AB0
	ldr r0, [r5, r0]
	ldrb r0, [r0, #6]
	str r0, [sp, #0x18]
	add r0, sp, #0x44
	ldrb r0, [r0]
	str r0, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [sp, #0x1c]
	movs r1, #0x18
	str r0, [sp]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x3c]
	bl FUN_021B1474
	b _021A1DA8
_021A1D90:
	adds r0, r4, #0
	movs r1, #3
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021A1DA8
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #3
	movs r3, #0
	bl FUN_021A4264
_021A1DA8:
	ldr r0, [sp, #0x38]
	cmp r0, #0x10
	beq _021A1DC0
	adds r0, r4, #0
	bl FUN_021BB448
	cmp r0, #0x10
	beq _021A1DC0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A3944
_021A1DC0:
	adds r0, r4, #0
	movs r1, #0xb
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A1DE8
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	movs r3, #0
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021A3A44
_021A1DE8:
	add r3, sp, #0x44
	ldrb r3, [r3]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A247C
	add r0, sp, #0x44
	ldrh r1, [r0, #2]
	cmp r1, #0
	beq _021A1E04
	adds r0, r4, #0
	bl FUN_021C5BFC
_021A1E04:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C5BFC
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A1EE8
	add sp, #0x4c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A1E18: .word 0x00000854
_021A1E1C: .word 0x00001AB0
	thumb_func_end FUN_021A1980

	thumb_func_start FUN_021A1E20
FUN_021A1E20: ; 0x021A1E20
	bx pc
	nop
	thumb_func_end FUN_021A1E20
_021A1E24:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A1E30
FUN_021A1E30: ; 0x021A1E30
	bx pc
	nop
	thumb_func_end FUN_021A1E30
_021A1E34:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A1E40
FUN_021A1E40: ; 0x021A1E40
	bx pc
	nop
	thumb_func_end FUN_021A1E40
_021A1E44:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A1E50
FUN_021A1E50: ; 0x021A1E50
	bx pc
	nop
	thumb_func_end FUN_021A1E50
_021A1E54:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x6D, 0xD0, 0x89, 0x06

	thumb_func_start FUN_021A1E60
FUN_021A1E60: ; 0x021A1E60
	bx pc
	nop
	thumb_func_end FUN_021A1E60
_021A1E64:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x01, 0xCF, 0x89, 0x06

	thumb_func_start FUN_021A1E70
FUN_021A1E70: ; 0x021A1E70
	bx pc
	nop
	thumb_func_end FUN_021A1E70
_021A1E74:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A1E80
FUN_021A1E80: ; 0x021A1E80
	bx pc
	nop
	thumb_func_end FUN_021A1E80
_021A1E84:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA5, 0xD1, 0x89, 0x06

	thumb_func_start FUN_021A1E90
FUN_021A1E90: ; 0x021A1E90
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #0xf
	ldrh r4, [r2]
	movs r5, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A1EB6
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_0202143C
	cmp r0, #0
	beq _021A1EB6
	movs r5, #0xd
	b _021A1ECE
_021A1EB6:
	movs r0, #2
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021A1ECE
	adds r0, r4, #0
	movs r1, #9
	bl FUN_0202143C
	cmp r0, #0
	beq _021A1ECE
	movs r5, #0x14
_021A1ECE:
	cmp r5, #0
	beq _021A1EE2
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_021A3F34
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A1EE2:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A1E90

	thumb_func_start FUN_021A1EE8
FUN_021A1EE8: ; 0x021A1EE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r0, #0
	movs r0, #0x4b
	lsls r0, r0, #4
	adds r7, r1, #0
	ldr r1, [r5, r0]
	movs r6, #0
	ldrb r2, [r1]
	cmp r2, #0
	bls _021A1FEC
	ldr r2, _021A1FF0 ; =0x00001AB0
	adds r2, r5, r2
	str r2, [sp, #0x20]
	movs r2, #1
	str r2, [sp, #0x1c]
	adds r2, r5, r0
	str r2, [sp, #0x18]
	ldr r2, _021A1FF0 ; =0x00001AB0
	adds r2, r5, r2
	str r2, [sp, #0x14]
	ldr r2, _021A1FF4 ; =0x00000864
	adds r2, r5, r2
	str r2, [sp, #0x10]
	adds r2, r5, r0
	adds r0, r5, r0
	str r2, [sp, #0x24]
	str r0, [sp, #0xc]
_021A1F20:
	adds r1, r1, r6
	ldrb r1, [r1, #1]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	ldr r1, [sp, #0xc]
	adds r4, r0, #0
	ldr r1, [r1]
	ldr r0, [r5, #8]
	adds r1, r1, r6
	ldrb r1, [r1, #0xd]
	bl FUN_0219D250
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021A1FE0
	ldr r0, _021A1FF8 ; =0x00001D78
	ldr r1, _021A1FFC ; =0x00000E59
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #8]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r3, r7, #0
	bl FUN_021A2548
	ldr r0, _021A1FF8 ; =0x00001D78
	ldr r2, _021A1FFC ; =0x00000E59
	ldr r1, [sp, #8]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	ldr r3, _021A1FF0 ; =0x00001AB0
	adds r0, r5, #0
	ldr r3, [r5, r3]
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AA00C
	ldr r0, [sp, #0x20]
	ldr r2, [sp, #0x1c]
	ldr r1, [r0]
	ldr r3, [sp, #0x14]
	ldr r0, [r1, #0x10]
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	str r0, [r1, #0x10]
	ldr r0, _021A1FF4 ; =0x00000864
	ldr r2, [sp, #0x18]
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r2, [r2]
	ldr r3, [r3]
	adds r2, r2, r6
	ldrb r2, [r2, #7]
	adds r0, r5, #0
	bl FUN_021AE36C
	adds r0, r4, #0
	bl FUN_021BAC80
	bl FUN_021BCBE4
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_021BB1F4
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021C5B44
	ldr r3, [sp, #0x10]
	adds r0, r5, #0
	ldr r3, [r3]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A2740
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021C5C40
	adds r0, r4, #0
	bl FUN_021BAC80
	bl FUN_021BCC24
_021A1FE0:
	ldr r0, [sp, #0x24]
	adds r6, r6, #1
	ldr r1, [r0]
	ldrb r0, [r1]
	cmp r6, r0
	blo _021A1F20
_021A1FEC:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A1FF0: .word 0x00001AB0
_021A1FF4: .word 0x00000864
_021A1FF8: .word 0x00001D78
_021A1FFC: .word 0x00000E59
	thumb_func_end FUN_021A1EE8

	thumb_func_start FUN_021A2000
FUN_021A2000: ; 0x021A2000
	movs r3, #0
	strb r3, [r0]
	movs r2, #0x1f
_021A2006:
	adds r1, r0, r3
	adds r3, r3, #1
	strb r2, [r1, #1]
	cmp r3, #6
	blo _021A2006
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A2000

	thumb_func_start FUN_021A2014
FUN_021A2014: ; 0x021A2014
	push {r3, r4}
	ldrb r4, [r0]
	cmp r4, #6
	bhs _021A2032
	adds r4, r0, r4
	strb r1, [r4, #1]
	ldrb r1, [r0]
	adds r1, r0, r1
	strb r2, [r1, #0xd]
	ldrb r1, [r0]
	adds r1, r0, r1
	strb r3, [r1, #7]
	ldrb r1, [r0]
	adds r1, r1, #1
	strb r1, [r0]
_021A2032:
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A2014

	thumb_func_start FUN_021A2038
FUN_021A2038: ; 0x021A2038
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _021A20F4 ; =0x000004AC
	adds r7, r1, #0
	ldr r1, [r5, r0]
	adds r6, r2, #0
	ldrb r0, [r1]
	cmp r0, #0
	beq _021A20F0
	ldrb r1, [r1, #1]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r4, r0, #0
	ldr r0, _021A20F8 ; =0x00001D78
	ldr r1, _021A20FC ; =0x00000E98
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021A24FC
	ldr r0, _021A20F8 ; =0x00001D78
	ldr r2, _021A20FC ; =0x00000E98
	ldr r1, [sp, #4]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	ldr r7, _021A2100 ; =0x00001AB0
	adds r0, r5, #0
	ldr r3, [r5, r7]
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AA00C
	ldr r0, _021A2104 ; =0x00000864
	ldr r2, _021A20F4 ; =0x000004AC
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp]
	ldr r2, [r5, r2]
	ldr r3, [r5, r7]
	ldrb r2, [r2, #7]
	adds r0, r5, #0
	bl FUN_021AE36C
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A20C8
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_0202143C
	cmp r0, #0
	beq _021A20C8
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0xd
	bl FUN_021A4004
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021A20C8:
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_021BB1F4
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C5B44
	ldr r3, _021A2104 ; =0x00000864
	adds r0, r5, #0
	ldr r3, [r5, r3]
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A2740
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C5C40
_021A20F0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A20F4: .word 0x000004AC
_021A20F8: .word 0x00001D78
_021A20FC: .word 0x00000E98
_021A2100: .word 0x00001AB0
_021A2104: .word 0x00000864
	thumb_func_end FUN_021A2038

	thumb_func_start FUN_021A2108
FUN_021A2108: ; 0x021A2108
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A2150 ; =0x00000EBB
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r7, #0
	adds r4, r2, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0xa2
	bl FUN_021BC940
	movs r0, #0x16
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	adds r0, r7, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A2150: .word 0x00000EBB
	thumb_func_end FUN_021A2108

	thumb_func_start FUN_021A2154
FUN_021A2154: ; 0x021A2154
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2188 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A218C ; =0x00000ECE
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A2190
	ldr r0, _021A2188 ; =0x00001D78
	ldr r2, _021A218C ; =0x00000ECE
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r2, #4
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A2188: .word 0x00001D78
_021A218C: .word 0x00000ECE
	thumb_func_end FUN_021A2154

	thumb_func_start FUN_021A2190
FUN_021A2190: ; 0x021A2190
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A21D0 ; =0x00000EDF
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021BC940
	ldr r0, _021A21D0 ; =0x00000EDF
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A21D0: .word 0x00000EDF
	thumb_func_end FUN_021A2190

	thumb_func_start FUN_021A21D4
FUN_021A21D4: ; 0x021A21D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	str r1, [sp, #8]
	adds r7, r2, #0
	ldr r1, _021A22C0 ; =0x021D6D2C
	adds r6, r0, #0
	str r3, [sp, #0xc]
	movs r2, #0
_021A21E4:
	lsls r0, r2, #1
	ldrh r0, [r1, r0]
	cmp r7, r0
	beq _021A21F2
	adds r2, r2, #1
	cmp r2, #3
	blo _021A21E4
_021A21F2:
	cmp r2, #3
	beq _021A22B8
	ldr r0, [sp, #8]
	movs r1, #0xa
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021A22B8
	ldr r0, [sp, #8]
	bl FUN_021BC6B4
	cmp r0, #0
	bne _021A22B8
	ldr r0, [sp, #8]
	movs r4, #0
	bl FUN_021BAC80
	str r0, [sp, #0x1c]
	movs r5, #0
_021A2218:
	ldr r0, _021A22C0 ; =0x021D6D2C
	lsls r1, r5, #1
	ldrh r1, [r0, r1]
	cmp r7, r1
	beq _021A2240
	lsls r0, r4, #2
	str r0, [sp, #0x20]
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0xc]
	adds r0, r6, #0
	bl FUN_021A05EC
	ldr r1, [sp, #0x20]
	add r2, sp, #0x24
	str r0, [r2, r1]
	cmp r0, #0
	beq _021A2240
	adds r4, r4, #1
	cmp r4, #2
	bhs _021A2246
_021A2240:
	adds r5, r5, #1
	cmp r5, #3
	blo _021A2218
_021A2246:
	cmp r4, #0
	beq _021A22B8
	movs r0, #6
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x24]
	movs r5, #0
	ldr r0, [r0]
	cmp r4, #0
	str r0, [sp, #0x18]
	bls _021A227E
_021A225A:
	lsls r1, r5, #2
	add r0, sp, #0x24
	ldr r0, [r0, r1]
	str r0, [sp, #0x10]
	ldr r1, [sp, #0x10]
	adds r0, r6, #0
	bl FUN_021A0640
	ldr r1, [sp, #0x14]
	cmp r0, r1
	bhs _021A2278
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x10]
	ldr r0, [r0]
	str r0, [sp, #0x18]
_021A2278:
	adds r5, r5, #1
	cmp r5, r4
	blo _021A225A
_021A227E:
	ldr r0, [sp, #0x18]
	bl FUN_021BAC80
	adds r4, r0, #0
	ldr r0, [sp, #8]
	movs r1, #0xa
	bl FUN_021BB800
	ldr r0, [sp, #0x18]
	ldr r1, [sp, #0x1c]
	adds r2, r7, #0
	bl FUN_021BC680
	ldr r0, _021A22C4 ; =0xFFFF0000
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r6, #0xc]
	ldr r2, _021A22C8 ; =0x0000047A
	ldr r3, [sp, #0x1c]
	movs r1, #0x5b
	bl FUN_021B1610
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A0C30
	add sp, #0x2c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A22B8:
	movs r0, #0
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	nop
_021A22C0: .word 0x021D6D2C
_021A22C4: .word 0xFFFF0000
_021A22C8: .word 0x0000047A
	thumb_func_end FUN_021A21D4

	thumb_func_start FUN_021A22CC
FUN_021A22CC: ; 0x021A22CC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r0, _021A2354 ; =0x00001D78
	adds r6, r1, #0
	ldr r1, _021A2358 ; =0x00000F46
	str r3, [sp, #8]
	adds r0, r5, r0
	adds r7, r2, #0
	ldr r4, [sp, #0x30]
	bl FUN_021B088C
	str r0, [sp, #0x10]
	ldr r2, [sp, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A2360
	str r0, [sp, #0xc]
	movs r0, #0
	strb r0, [r4]
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021A2342
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	str r0, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #2
	bne _021A2338
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #8]
	movs r1, #0x30
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A23AC
	movs r0, #1
	strb r0, [r4]
	b _021A2342
_021A2338:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021A9270
_021A2342:
	ldr r0, _021A2354 ; =0x00001D78
	ldr r1, [sp, #0x10]
	ldr r2, _021A235C ; =0x00000F59
	adds r0, r5, r0
	bl FUN_021B0910
	ldr r0, [sp, #0xc]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2354: .word 0x00001D78
_021A2358: .word 0x00000F46
_021A235C: .word 0x00000F59
	thumb_func_end FUN_021A22CC

	thumb_func_start FUN_021A2360
FUN_021A2360: ; 0x021A2360
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A23A8 ; =0x00000F6B
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0xd
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #6
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A23A8: .word 0x00000F6B
	thumb_func_end FUN_021A2360

	thumb_func_start FUN_021A23AC
FUN_021A23AC: ; 0x021A23AC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A23D4 ; =0x00001D78
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, _021A23D8 ; =0x00000F7F
	adds r0, r5, r7
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A23DC
	ldr r2, _021A23D8 ; =0x00000F7F
	adds r0, r5, r7
	adds r1, r6, #0
	adds r2, r2, #5
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A23D4: .word 0x00001D78
_021A23D8: .word 0x00000F7F
	thumb_func_end FUN_021A23AC

	thumb_func_start FUN_021A23DC
FUN_021A23DC: ; 0x021A23DC
	push {r4, r5, r6, lr}
	movs r6, #0xf9
	lsls r6, r6, #4
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #7
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A23DC

	thumb_func_start FUN_021A240C
FUN_021A240C: ; 0x021A240C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A243C ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A2440 ; =0x00000FA1
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A2444
	ldr r0, _021A243C ; =0x00001D78
	ldr r2, _021A2440 ; =0x00000FA1
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A243C: .word 0x00001D78
_021A2440: .word 0x00000FA1
	thumb_func_end FUN_021A240C

	thumb_func_start FUN_021A2444
FUN_021A2444: ; 0x021A2444
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0xfb
	lsls r7, r7, #4
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #3
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A2444

	thumb_func_start FUN_021A247C
FUN_021A247C: ; 0x021A247C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A24B0 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A24B4 ; =0x00000FC1
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A24B8
	ldr r0, _021A24B0 ; =0x00001D78
	ldr r2, _021A24B4 ; =0x00000FC1
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A24B0: .word 0x00001D78
_021A24B4: .word 0x00000FC1
	thumb_func_end FUN_021A247C

	thumb_func_start FUN_021A24B8
FUN_021A24B8: ; 0x021A24B8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0xfd
	adds r4, r1, #0
	lsls r0, r0, #4
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x51
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #4
	bl FUN_021BC940
	movs r0, #0xfd
	lsls r0, r0, #4
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A24B8

	thumb_func_start FUN_021A24FC
FUN_021A24FC: ; 0x021A24FC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2544 ; =0x00000FE3
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #8
	bl FUN_021BC940
	ldr r0, _021A2544 ; =0x00000FE3
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A2544: .word 0x00000FE3
	thumb_func_end FUN_021A24FC

	thumb_func_start FUN_021A2548
FUN_021A2548: ; 0x021A2548
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2598 ; =0x00000FF5
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #9
	bl FUN_021BC940
	ldr r0, _021A2598 ; =0x00000FF5
	adds r0, r0, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A2598: .word 0x00000FF5
	thumb_func_end FUN_021A2548

	thumb_func_start FUN_021A259C
FUN_021A259C: ; 0x021A259C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r6, #0x1f
	add r7, sp, #8
	strb r6, [r7, #1]
	strb r6, [r7]
	add r6, sp, #8
	adds r6, #1
	str r6, [sp]
	add r6, sp, #8
	str r6, [sp, #4]
	adds r5, r0, #0
	ldr r4, [sp, #0x20]
	bl FUN_021A25FC
	ldrb r0, [r7, #1]
	cmp r0, #0x1f
	beq _021A25E2
	ldrb r1, [r7]
	cmp r1, #0x1f
	beq _021A25D0
	ldr r0, _021A25E8 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A25EC
	b _021A25D2
_021A25D0:
	movs r0, #6
_021A25D2:
	strb r0, [r4, #7]
	add r0, sp, #8
	ldrb r0, [r0, #1]
	add sp, #0xc
	strb r0, [r4, #1]
	movs r0, #1
	strb r0, [r4]
	pop {r4, r5, r6, r7, pc}
_021A25E2:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A25E8: .word 0x00001AB8
	thumb_func_end FUN_021A259C

	thumb_func_start FUN_021A25EC
FUN_021A25EC: ; 0x021A25EC
	bx pc
	nop
	thumb_func_end FUN_021A25EC
_021A25F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A25FC
FUN_021A25FC: ; 0x021A25FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r3, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r5, r1, #0
	str r2, [sp, #4]
	ldr r7, [sp, #0x20]
	bl FUN_021A26A0
	adds r4, r0, #0
	ldr r0, _021A2698 ; =0x00001038
	bl FUN_021BCD48
	ldr r1, [sp, #4]
	movs r0, #0x12
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #5
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r5, #0
	cmp r4, #0
	bls _021A2656
_021A263C:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021A26B0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #6
	bl FUN_021BCE40
	adds r5, r5, #1
	cmp r5, r4
	blo _021A263C
_021A2656:
	movs r0, #2
	movs r1, #0x1f
	bl FUN_021BCE84
	movs r0, #4
	movs r1, #0x1f
	bl FUN_021BCDFC
	ldr r0, [sp]
	movs r1, #0x1a
	bl FUN_021BC940
	movs r0, #2
	bl FUN_021BCFB0
	strb r0, [r7]
	movs r0, #4
	bl FUN_021BCFB0
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	ldr r0, _021A269C ; =0x0000104B
	bl FUN_021BCD94
	ldrb r0, [r7]
	cmp r0, #0x1f
	beq _021A2692
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A2692:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2698: .word 0x00001038
_021A269C: .word 0x0000104B
	thumb_func_end FUN_021A25FC

	thumb_func_start FUN_021A26A0
FUN_021A26A0: ; 0x021A26A0
	bx pc
	nop
	thumb_func_end FUN_021A26A0
_021A26A4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A26B0
FUN_021A26B0: ; 0x021A26B0
	bx pc
	nop
	thumb_func_end FUN_021A26B0
_021A26B4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A26C0
FUN_021A26C0: ; 0x021A26C0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r2, r0, #0
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x30
	adds r3, r6, #0
	bl FUN_021B1474
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A26C0

	thumb_func_start FUN_021A26F0
FUN_021A26F0: ; 0x021A26F0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r4, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	cmp r4, r0
	bne _021A270E
	movs r0, #1
	pop {r3, r4, r5, pc}
_021A270E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A26F0

	thumb_func_start FUN_021A2714
FUN_021A2714: ; 0x021A2714
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl FUN_021A26F0
	cmp r0, #0
	beq _021A273C
	cmp r4, #0x96
	bne _021A2730
	ldr r0, [r5, #4]
	movs r1, #0x49
	bl FUN_0219DB10
	pop {r3, r4, r5, pc}
_021A2730:
	cmp r4, #0xa5
	bne _021A273C
	ldr r0, [r5, #4]
	movs r1, #0x4a
	bl FUN_0219DB10
_021A273C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A2714

	thumb_func_start FUN_021A2740
FUN_021A2740: ; 0x021A2740
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r7, r2, #0
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, r7, #0
	adds r6, r3, #0
	bl FUN_02021740
	str r0, [sp, #0x20]
	adds r0, r5, #0
	bl FUN_021BAC80
	str r0, [sp, #0x1c]
	movs r0, #1
	str r0, [sp, #0x18]
	movs r0, #0
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x10]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A2714
	adds r0, r7, #0
	movs r1, #1
	bl FUN_0202143C
	cmp r0, #0
	beq _021A27B6
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A36EC
	cmp r0, #4
	bhi _021A27B6
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A279A: ; jump table
	.short _021A27B6 - _021A279A - 2 ; case 0
	.short _021A27A4 - _021A279A - 2 ; case 1
	.short _021A27AA - _021A279A - 2 ; case 2
	.short _021A27B0 - _021A279A - 2 ; case 3
	.short _021A27B6 - _021A279A - 2 ; case 4
_021A27A4:
	ldr r0, [sp, #0x14]
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
_021A27AA:
	ldr r0, [sp, #0x18]
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
_021A27B0:
	ldr r0, [sp, #0x14]
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
_021A27B6:
	movs r0, #0x86
	lsls r0, r0, #4
	ldr r0, [r4, r0]
	bl FUN_021A2AD4
	ldr r0, [r4, #0xc]
	movs r1, #0x30
	bl FUN_021B14C0
	str r0, [sp, #0xc]
	ldr r0, _021A2ABC ; =0x000004A8
	adds r1, r4, #0
	ldr r0, [r4, r0]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A0CE8
	ldr r0, _021A2AC0 ; =0x00001D78
	ldr r1, _021A2AC4 ; =0x000010B8
	adds r0, r4, r0
	bl FUN_021B088C
	str r0, [sp, #0x24]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021AA100
	str r0, [sp, #8]
	ldr r0, _021A2AC0 ; =0x00001D78
	ldr r2, _021A2AC4 ; =0x000010B8
	ldr r1, [sp, #0x24]
	adds r0, r4, r0
	adds r2, r2, #2
	bl FUN_021B0910
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021A2836
	ldr r0, _021A2ABC ; =0x000004A8
	ldr r2, [r4, r0]
	ldrb r0, [r2, #5]
	lsls r1, r0, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A281C
	movs r1, #1
	bics r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r2, #5]
_021A281C:
	ldr r0, [sp, #8]
	cmp r0, #2
	bne _021A2836
	ldr r2, _021A2ABC ; =0x000004A8
	ldr r3, [sp, #0xc]
	ldr r2, [r4, r2]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A36B4
	add sp, #0x28
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A2836:
	ldr r0, [sp, #0x20]
	cmp r0, #9
	bhi _021A2866
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A2848: ; jump table
	.short _021A285C - _021A2848 - 2 ; case 0
	.short _021A2866 - _021A2848 - 2 ; case 1
	.short _021A2866 - _021A2848 - 2 ; case 2
	.short _021A2866 - _021A2848 - 2 ; case 3
	.short _021A285C - _021A2848 - 2 ; case 4
	.short _021A2866 - _021A2848 - 2 ; case 5
	.short _021A285C - _021A2848 - 2 ; case 6
	.short _021A285C - _021A2848 - 2 ; case 7
	.short _021A285C - _021A2848 - 2 ; case 8
	.short _021A2862 - _021A2848 - 2 ; case 9
_021A285C:
	movs r0, #1
	str r0, [sp, #0x14]
	b _021A2862
_021A2862:
	movs r0, #1
	str r0, [sp, #0x10]
_021A2866:
	adds r0, r6, #0
	bl FUN_021A2AE4
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A2B34
	ldr r0, [sp, #0x14]
	ldr r3, _021A2AC8 ; =0x00001AB0
	str r0, [sp]
	ldr r3, [r4, r3]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021A2BCC
	adds r0, r6, #0
	bl FUN_021A2AF4
	cmp r0, #0
	beq _021A28AE
	ldr r0, _021A2ACC ; =0x0000078A
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	bne _021A28AA
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A9270
_021A28AA:
	movs r0, #0
	str r0, [sp, #0x18]
_021A28AE:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021A2962
	ldr r0, [sp, #0x20]
	cmp r0, #9
	beq _021A28C8
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A3320
_021A28C8:
	ldr r0, _021A2AD0 ; =0x00001F8C
	adds r0, r4, r0
	bl FUN_021B0854
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _021A28E6
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	bl FUN_021A2C50
	cmp r0, #0
	beq _021A28FA
_021A28E6:
	ldr r0, _021A2AD0 ; =0x00001F8C
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, r0
	str r0, [sp]
	ldr r1, [r4, r1]
	adds r0, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A2EC0
_021A28FA:
	ldr r0, _021A2AD0 ; =0x00001F8C
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, r0
	str r0, [sp]
	ldr r1, [r4, r1]
	adds r0, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A2F94
	ldr r0, [sp, #0x20]
	cmp r0, #9
	beq _021A2922
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A33B8
_021A2922:
	adds r0, r6, #0
	bl FUN_021A2B04
	cmp r0, #0
	beq _021A292E
	b _021A2954
_021A292E:
	ldr r0, [sp, #0x10]
	ldr r1, _021A2AC8 ; =0x00001AB0
	str r0, [sp]
	ldr r1, [r4, r1]
	adds r0, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A2C9C
	adds r0, r6, #0
	bl FUN_021A2B14
	cmp r0, #0
	beq _021A2962
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A9270
_021A2954:
	ldr r1, [sp, #0x1c]
	adds r0, r4, #0
	adds r2, r7, #0
	bl FUN_021A2D64
	movs r0, #0
	str r0, [sp, #0x18]
_021A2962:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021A296A
	b _021A2A8E
_021A296A:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _021A298A
	ldr r0, _021A2AD0 ; =0x00001F8C
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, r0
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r1, [r4, r1]
	adds r0, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A4400
	b _021A2A2E
_021A298A:
	ldr r0, [sp, #0x20]
	cmp r0, #0xd
	bhi _021A2A2E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A299C: ; jump table
	.short _021A2A2E - _021A299C - 2 ; case 0
	.short _021A29C8 - _021A299C - 2 ; case 1
	.short _021A29B8 - _021A299C - 2 ; case 2
	.short _021A2A04 - _021A299C - 2 ; case 3
	.short _021A2A2E - _021A299C - 2 ; case 4
	.short _021A29D6 - _021A299C - 2 ; case 5
	.short _021A2A2E - _021A299C - 2 ; case 6
	.short _021A2A2E - _021A299C - 2 ; case 7
	.short _021A2A2E - _021A299C - 2 ; case 8
	.short _021A29E6 - _021A299C - 2 ; case 9
	.short _021A2A12 - _021A299C - 2 ; case 10
	.short _021A2A20 - _021A299C - 2 ; case 11
	.short _021A29F6 - _021A299C - 2 ; case 12
	.short _021A2A20 - _021A299C - 2 ; case 13
_021A29B8:
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A68B4
	b _021A2A2E
_021A29C8:
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A5F78
	b _021A2A2E
_021A29D6:
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A6C74
	b _021A2A2E
_021A29E6:
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A6F28
	b _021A2A2E
_021A29F6:
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A725C
	b _021A2A2E
_021A2A04:
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A6D64
	b _021A2A2E
_021A2A12:
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	bl FUN_021A7598
	b _021A2A2E
_021A2A20:
	ldr r1, _021A2AC8 ; =0x00001AB0
	adds r0, r4, #0
	ldr r1, [r4, r1]
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_021A77F8
_021A2A2E:
	ldr r0, _021A2ABC ; =0x000004A8
	ldr r2, [r4, r0]
	ldrb r0, [r2, #5]
	lsls r1, r0, #0x1f
	lsrs r1, r1, #0x1f
	beq _021A2A7E
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	bne _021A2A4A
	ldr r3, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A36B4
_021A2A4A:
	adds r0, r4, #0
	adds r0, #0x1c
	bl FUN_021A2B24
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A2A72
	adds r0, r7, #0
	movs r1, #2
	bl FUN_0202143C
	cmp r0, #0
	beq _021A2A72
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0xc
	bl FUN_021A9C44
_021A2A72:
	ldr r1, [sp, #0x1c]
	adds r0, r4, #0
	adds r2, r7, #0
	bl FUN_021A2D2C
	b _021A2AA4
_021A2A7E:
	ldr r1, [sp, #0x1c]
	adds r0, r4, #0
	adds r2, r7, #0
	bl FUN_021A2D64
	movs r0, #0
	str r0, [sp, #0x18]
	b _021A2AA4
_021A2A8E:
	ldr r0, _021A2ABC ; =0x000004A8
	ldr r2, [r4, r0]
	ldrb r0, [r2, #5]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _021A2AA4
	ldr r3, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A36B4
_021A2AA4:
	ldr r1, [sp, #0x1c]
	adds r0, r4, #0
	adds r2, r7, #0
	bl FUN_021A2D9C
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A8A64
	ldr r0, [sp, #0x18]
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2ABC: .word 0x000004A8
_021A2AC0: .word 0x00001D78
_021A2AC4: .word 0x000010B8
_021A2AC8: .word 0x00001AB0
_021A2ACC: .word 0x0000078A
_021A2AD0: .word 0x00001F8C
	thumb_func_end FUN_021A2740

	thumb_func_start FUN_021A2AD4
FUN_021A2AD4: ; 0x021A2AD4
	bx pc
	nop
	thumb_func_end FUN_021A2AD4
_021A2AD8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A2AE4
FUN_021A2AE4: ; 0x021A2AE4
	bx pc
	nop
	thumb_func_end FUN_021A2AE4
_021A2AE8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x6D, 0xD0, 0x89, 0x06

	thumb_func_start FUN_021A2AF4
FUN_021A2AF4: ; 0x021A2AF4
	bx pc
	nop
	thumb_func_end FUN_021A2AF4
_021A2AF8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2B04
FUN_021A2B04: ; 0x021A2B04
	bx pc
	nop
	thumb_func_end FUN_021A2B04
_021A2B08:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2B14
FUN_021A2B14: ; 0x021A2B14
	bx pc
	nop
	thumb_func_end FUN_021A2B14
_021A2B18:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2B24
FUN_021A2B24: ; 0x021A2B24
	bx pc
	nop
	thumb_func_end FUN_021A2B24
_021A2B28:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xD9, 0xD1, 0x89, 0x06

	thumb_func_start FUN_021A2B34
FUN_021A2B34: ; 0x021A2B34
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r3, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r6, r1, #0
	str r2, [sp]
	bl FUN_021A2B8C
	adds r0, r7, #0
	bl FUN_021A2B9C
	adds r4, r0, #0
	beq _021A2B86
_021A2B4E:
	ldrh r3, [r6]
	ldr r1, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021A34E4
	cmp r0, #0
	beq _021A2B7C
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021A2BAC
	ldrh r2, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9284
	ldr r0, _021A2B88 ; =0x0000078A
	ldrb r1, [r5, r0]
	movs r0, #0x10
	orrs r1, r0
	ldr r0, _021A2B88 ; =0x0000078A
	strb r1, [r5, r0]
_021A2B7C:
	adds r0, r7, #0
	bl FUN_021A2BBC
	adds r4, r0, #0
	bne _021A2B4E
_021A2B86:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2B88: .word 0x0000078A
	thumb_func_end FUN_021A2B34

	thumb_func_start FUN_021A2B8C
FUN_021A2B8C: ; 0x021A2B8C
	bx pc
	nop
	thumb_func_end FUN_021A2B8C
_021A2B90:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2B9C
FUN_021A2B9C: ; 0x021A2B9C
	bx pc
	nop
	thumb_func_end FUN_021A2B9C
_021A2BA0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2BAC
FUN_021A2BAC: ; 0x021A2BAC
	bx pc
	nop
	thumb_func_end FUN_021A2BAC
_021A2BB0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A2BBC
FUN_021A2BBC: ; 0x021A2BBC
	bx pc
	nop
	thumb_func_end FUN_021A2BBC
_021A2BC0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2BCC
FUN_021A2BCC: ; 0x021A2BCC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r2, #0
	adds r0, r5, #0
	adds r6, r1, #0
	adds r7, r3, #0
	bl FUN_021A2C20
	cmp r0, #1
	bne _021A2C1C
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021A2C30
	str r0, [sp]
	cmp r0, #0
	beq _021A2C1C
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	cmp r4, r0
	bne _021A2C1C
	ldr r0, [r7, #0xc]
	cmp r0, #7
	beq _021A2C1C
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021A2C14
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021A2C1C
_021A2C14:
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021A2C40
_021A2C1C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A2BCC

	thumb_func_start FUN_021A2C20
FUN_021A2C20: ; 0x021A2C20
	bx pc
	nop
	thumb_func_end FUN_021A2C20
_021A2C24:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2C30
FUN_021A2C30: ; 0x021A2C30
	bx pc
	nop
	thumb_func_end FUN_021A2C30
_021A2C34:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A2C40
FUN_021A2C40: ; 0x021A2C40
	bx pc
	nop
	thumb_func_end FUN_021A2C40
_021A2C44:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A2C50
FUN_021A2C50: ; 0x021A2C50
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A2C98 ; =0x000011A4
	adds r5, r0, #0
	adds r6, r2, #0
	adds r0, r7, #0
	adds r4, r1, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCDFC
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x3d
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2C98: .word 0x000011A4
	thumb_func_end FUN_021A2C50

	thumb_func_start FUN_021A2C9C
FUN_021A2C9C: ; 0x021A2C9C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r3, #0
	adds r0, r5, #0
	adds r7, r1, #0
	str r2, [sp]
	ldr r6, [sp, #0x18]
	bl FUN_021A2CEC
	adds r0, r5, #0
	bl FUN_021A2CFC
	adds r4, r0, #0
	beq _021A2CE8
_021A2CB6:
	ldr r0, [sp]
	cmp r0, r4
	beq _021A2CDE
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	beq _021A2CDE
	cmp r6, #0
	bne _021A2CDE
	ldrh r0, [r7]
	movs r1, #0xd
	bl FUN_0202143C
	cmp r0, #0
	bne _021A2CDE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A2D0C
_021A2CDE:
	adds r0, r5, #0
	bl FUN_021A2D1C
	adds r4, r0, #0
	bne _021A2CB6
_021A2CE8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A2C9C

	thumb_func_start FUN_021A2CEC
FUN_021A2CEC: ; 0x021A2CEC
	bx pc
	nop
	thumb_func_end FUN_021A2CEC
_021A2CF0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2CFC
FUN_021A2CFC: ; 0x021A2CFC
	bx pc
	nop
	thumb_func_end FUN_021A2CFC
_021A2D00:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2D0C
FUN_021A2D0C: ; 0x021A2D0C
	bx pc
	nop
	thumb_func_end FUN_021A2D0C
_021A2D10:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A2D1C
FUN_021A2D1C: ; 0x021A2D1C
	bx pc
	nop
	thumb_func_end FUN_021A2D1C
_021A2D20:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2D2C
FUN_021A2D2C: ; 0x021A2D2C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2D5C ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A2D60 ; =0x000011F7
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x25
	bl FUN_021A2DD4
	ldr r0, _021A2D5C ; =0x00001D78
	ldr r2, _021A2D60 ; =0x000011F7
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2D5C: .word 0x00001D78
_021A2D60: .word 0x000011F7
	thumb_func_end FUN_021A2D2C

	thumb_func_start FUN_021A2D64
FUN_021A2D64: ; 0x021A2D64
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2D94 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A2D98 ; =0x00001206
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x26
	bl FUN_021A2DD4
	ldr r0, _021A2D94 ; =0x00001D78
	ldr r2, _021A2D98 ; =0x00001206
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2D94: .word 0x00001D78
_021A2D98: .word 0x00001206
	thumb_func_end FUN_021A2D64

	thumb_func_start FUN_021A2D9C
FUN_021A2D9C: ; 0x021A2D9C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2DCC ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A2DD0 ; =0x00001215
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x27
	bl FUN_021A2DD4
	ldr r0, _021A2DCC ; =0x00001D78
	ldr r2, _021A2DD0 ; =0x00001215
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A2DCC: .word 0x00001D78
_021A2DD0: .word 0x00001215
	thumb_func_end FUN_021A2D9C

	thumb_func_start FUN_021A2DD4
FUN_021A2DD4: ; 0x021A2DD4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A2E08 ; =0x00001224
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	movs r0, #2
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021BC940
	ldr r0, _021A2E08 ; =0x00001224
	adds r0, r0, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A2E08: .word 0x00001224
	thumb_func_end FUN_021A2DD4

	thumb_func_start FUN_021A2E0C
FUN_021A2E0C: ; 0x021A2E0C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, _021A2E9C ; =0x00001AB8
	ldr r1, [r5, #4]
	adds r0, r5, r0
	bl FUN_021A2EA0
	cmp r0, #0
	beq _021A2E3A
	adds r0, r4, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x63
	bne _021A2E3A
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A2E3A:
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, _021A2E9C ; =0x00001AB8
	ldr r1, [r5, #4]
	adds r0, r5, r0
	bl FUN_021A2EB0
	cmp r0, #0
	beq _021A2E60
	adds r0, r6, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x63
	bne _021A2E60
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A2E60:
	adds r0, r4, #0
	movs r1, #0x1c
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A2E70
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A2E70:
	adds r0, r4, #0
	movs r1, #0x1d
	movs r5, #0x1d
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A2E98
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BBB18
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl FUN_021BAC80
	cmp r4, r0
	bne _021A2E98
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A2E98:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A2E9C: .word 0x00001AB8
	thumb_func_end FUN_021A2E0C

	thumb_func_start FUN_021A2EA0
FUN_021A2EA0: ; 0x021A2EA0
	bx pc
	nop
	thumb_func_end FUN_021A2EA0
_021A2EA4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A2EB0
FUN_021A2EB0: ; 0x021A2EB0
	bx pc
	nop
	thumb_func_end FUN_021A2EB0
_021A2EB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A2EC0
FUN_021A2EC0: ; 0x021A2EC0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r0, [sp, #0x20]
	str r3, [sp, #8]
	str r1, [sp, #4]
	adds r6, r2, #0
	str r0, [sp, #0x20]
	bl FUN_021B0854
	ldr r0, [sp, #8]
	bl FUN_021A2F54
	ldr r0, [sp, #8]
	bl FUN_021A2F64
	adds r5, r0, #0
	beq _021A2F4E
_021A2EE4:
	movs r0, #1
	str r0, [sp]
	ldr r3, [sp, #4]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_021AA994
	adds r7, r0, #0
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, [sp, #0x20]
	adds r2, r7, #0
	bl FUN_021B0864
	cmp r7, #0
	bne _021A2F44
	ldr r0, [sp, #8]
	adds r1, r5, #0
	bl FUN_021A2F74
	movs r0, #0
	str r0, [sp]
	movs r0, #0x7e
	lsls r0, r0, #6
	adds r0, r4, r0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r5, #0
	bl FUN_021AB77C
	adds r0, r6, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219C8A0
	cmp r5, r0
	bne _021A2F44
	ldr r0, [r4, #4]
	movs r1, #0x4b
	bl FUN_0219DB10
_021A2F44:
	ldr r0, [sp, #8]
	bl FUN_021A2F84
	adds r5, r0, #0
	bne _021A2EE4
_021A2F4E:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A2EC0

	thumb_func_start FUN_021A2F54
FUN_021A2F54: ; 0x021A2F54
	bx pc
	nop
	thumb_func_end FUN_021A2F54
_021A2F58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2F64
FUN_021A2F64: ; 0x021A2F64
	bx pc
	nop
	thumb_func_end FUN_021A2F64
_021A2F68:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2F74
FUN_021A2F74: ; 0x021A2F74
	bx pc
	nop
	thumb_func_end FUN_021A2F74
_021A2F78:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A2F84
FUN_021A2F84: ; 0x021A2F84
	bx pc
	nop
	thumb_func_end FUN_021A2F84
_021A2F88:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A2F94
FUN_021A2F94: ; 0x021A2F94
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [sp, #0x20]
	adds r4, r3, #0
	str r0, [sp, #0x20]
	adds r0, r4, #0
	str r1, [sp, #8]
	adds r6, r2, #0
	bl FUN_021A30D0
	adds r0, r4, #0
	bl FUN_021A30E0
	adds r7, r0, #0
	beq _021A2FEC
_021A2FB4:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021A2E0C
	cmp r0, #0
	bne _021A2FE2
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #8]
	str r0, [sp]
	movs r0, #0x2b
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A31D0
	cmp r0, #0
	beq _021A2FE2
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A30F0
_021A2FE2:
	adds r0, r4, #0
	bl FUN_021A3100
	adds r7, r0, #0
	bne _021A2FB4
_021A2FEC:
	adds r0, r4, #0
	bl FUN_021A3110
	adds r0, r4, #0
	bl FUN_021A3120
	adds r7, r0, #0
	beq _021A3026
_021A2FFC:
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #8]
	str r0, [sp]
	movs r0, #0x2c
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A31D0
	cmp r0, #0
	beq _021A301C
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A3130
_021A301C:
	adds r0, r4, #0
	bl FUN_021A3140
	adds r7, r0, #0
	bne _021A2FFC
_021A3026:
	ldr r0, [sp, #8]
	movs r1, #3
	ldrh r0, [r0]
	bl FUN_0202143C
	cmp r0, #0
	beq _021A308A
	adds r0, r4, #0
	bl FUN_021A3150
	adds r0, r4, #0
	bl FUN_021A3160
	adds r7, r0, #0
	beq _021A308A
_021A3044:
	adds r0, r7, #0
	movs r1, #7
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A3080
	ldr r3, [sp, #8]
	adds r0, r5, #0
	ldrh r3, [r3]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021AA1C0
	cmp r0, #0
	bne _021A3080
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A3170
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A30C8 ; =0xFFFF0000
	ldr r2, _021A30CC ; =0x0000020B
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
_021A3080:
	adds r0, r4, #0
	bl FUN_021A3180
	adds r7, r0, #0
	bne _021A3044
_021A308A:
	adds r0, r4, #0
	bl FUN_021A3190
	adds r0, r4, #0
	bl FUN_021A31A0
	adds r7, r0, #0
	beq _021A30C4
_021A309A:
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #8]
	str r0, [sp]
	movs r0, #0x2d
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A31D0
	cmp r0, #0
	beq _021A30BA
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021A31B0
_021A30BA:
	adds r0, r4, #0
	bl FUN_021A31C0
	adds r7, r0, #0
	bne _021A309A
_021A30C4:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A30C8: .word 0xFFFF0000
_021A30CC: .word 0x0000020B
	thumb_func_end FUN_021A2F94

	thumb_func_start FUN_021A30D0
FUN_021A30D0: ; 0x021A30D0
	bx pc
	nop
	thumb_func_end FUN_021A30D0
_021A30D4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A30E0
FUN_021A30E0: ; 0x021A30E0
	bx pc
	nop
	thumb_func_end FUN_021A30E0
_021A30E4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A30F0
FUN_021A30F0: ; 0x021A30F0
	bx pc
	nop
	thumb_func_end FUN_021A30F0
_021A30F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3100
FUN_021A3100: ; 0x021A3100
	bx pc
	nop
	thumb_func_end FUN_021A3100
_021A3104:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3110
FUN_021A3110: ; 0x021A3110
	bx pc
	nop
	thumb_func_end FUN_021A3110
_021A3114:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3120
FUN_021A3120: ; 0x021A3120
	bx pc
	nop
	thumb_func_end FUN_021A3120
_021A3124:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3130
FUN_021A3130: ; 0x021A3130
	bx pc
	nop
	thumb_func_end FUN_021A3130
_021A3134:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3140
FUN_021A3140: ; 0x021A3140
	bx pc
	nop
	thumb_func_end FUN_021A3140
_021A3144:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3150
FUN_021A3150: ; 0x021A3150
	bx pc
	nop
	thumb_func_end FUN_021A3150
_021A3154:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3160
FUN_021A3160: ; 0x021A3160
	bx pc
	nop
	thumb_func_end FUN_021A3160
_021A3164:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3170
FUN_021A3170: ; 0x021A3170
	bx pc
	nop
	thumb_func_end FUN_021A3170
_021A3174:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3180
FUN_021A3180: ; 0x021A3180
	bx pc
	nop
	thumb_func_end FUN_021A3180
_021A3184:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3190
FUN_021A3190: ; 0x021A3190
	bx pc
	nop
	thumb_func_end FUN_021A3190
_021A3194:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A31A0
FUN_021A31A0: ; 0x021A31A0
	bx pc
	nop
	thumb_func_end FUN_021A31A0
_021A31A4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A31B0
FUN_021A31B0: ; 0x021A31B0
	bx pc
	nop
	thumb_func_end FUN_021A31B0
_021A31B4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A31C0
FUN_021A31C0: ; 0x021A31C0
	bx pc
	nop
	thumb_func_end FUN_021A31C0
_021A31C4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A31D0
FUN_021A31D0: ; 0x021A31D0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	ldr r0, _021A3260 ; =0x00001D78
	adds r7, r1, #0
	movs r1, #0x4b
	adds r0, r5, r0
	lsls r1, r1, #6
	str r2, [sp, #0x10]
	adds r4, r3, #0
	bl FUN_021B088C
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x30]
	str r4, [sp]
	ldr r6, _021A3264 ; =0x00001AE4
	str r0, [sp, #4]
	adds r0, r5, r6
	str r0, [sp, #8]
	add r0, sp, #0x18
	str r0, [sp, #0xc]
	ldr r2, [sp, #0x34]
	ldr r3, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A3270
	adds r7, r0, #0
	beq _021A324E
	adds r0, r5, r6
	bl FUN_021AC3A8
	cmp r0, #0
	beq _021A3228
	adds r0, r5, #0
	adds r1, r5, r6
	bl FUN_021AD520
	adds r0, r5, r6
	bl FUN_021AC390
	b _021A324E
_021A3228:
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	bne _021A324E
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021A324E
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A3268 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0xd2
	bl FUN_021B1610
_021A324E:
	ldr r0, _021A3260 ; =0x00001D78
	ldr r1, [sp, #0x14]
	ldr r2, _021A326C ; =0x000012DA
	adds r0, r5, r0
	bl FUN_021B0910
	adds r0, r7, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A3260: .word 0x00001D78
_021A3264: .word 0x00001AE4
_021A3268: .word 0xFFFF0000
_021A326C: .word 0x000012DA
	thumb_func_end FUN_021A31D0

	thumb_func_start FUN_021A3270
FUN_021A3270: ; 0x021A3270
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	adds r5, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, [sp, #0x24]
	bl FUN_021B0874
	str r0, [sp, #4]
	ldr r0, [sp, #0x28]
	bl FUN_021AC390
	ldr r4, _021A331C ; =0x000012F2
	adds r0, r4, #0
	bl FUN_021BCD48
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp, #0x20]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r5]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r5, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r1, [r5, #0x10]
	movs r0, #0x4e
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	bl FUN_021BCE40
	ldr r1, [sp, #0x28]
	movs r0, #0x3f
	bl FUN_021BCE40
	ldr r1, [sp, #4]
	movs r0, #0x38
	bl FUN_021BCE40
	movs r0, #0x40
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021BC940
	movs r0, #0x40
	bl FUN_021BCFB0
	adds r5, r0, #0
	movs r0, #0x51
	bl FUN_021BCFB0
	ldr r1, [sp, #0x2c]
	adds r4, #0xd
	str r0, [r1]
	adds r0, r4, #0
	bl FUN_021BCD94
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A331C: .word 0x000012F2
	thumb_func_end FUN_021A3270

	thumb_func_start FUN_021A3320
FUN_021A3320: ; 0x021A3320
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	str r3, [sp]
	adds r0, r3, #0
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021A3378
	ldr r0, [sp]
	bl FUN_021A3388
	adds r4, r0, #0
	beq _021A3374
_021A333A:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021A2E0C
	cmp r0, #0
	bne _021A336A
	ldrh r3, [r6]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AA4A0
	cmp r0, #0
	beq _021A336A
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021A3398
	ldrh r2, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9284
_021A336A:
	ldr r0, [sp]
	bl FUN_021A33A8
	adds r4, r0, #0
	bne _021A333A
_021A3374:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A3320

	thumb_func_start FUN_021A3378
FUN_021A3378: ; 0x021A3378
	bx pc
	nop
	thumb_func_end FUN_021A3378
_021A337C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3388
FUN_021A3388: ; 0x021A3388
	bx pc
	nop
	thumb_func_end FUN_021A3388
_021A338C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3398
FUN_021A3398: ; 0x021A3398
	bx pc
	nop
	thumb_func_end FUN_021A3398
_021A339C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A33A8
FUN_021A33A8: ; 0x021A33A8
	bx pc
	nop
	thumb_func_end FUN_021A33A8
_021A33AC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A33B8
FUN_021A33B8: ; 0x021A33B8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r0, r3, #0
	adds r5, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_021A3428
	cmp r0, #1
	bne _021A33D8
	ldr r0, [sp]
	movs r1, #0
	bl FUN_021A3438
	cmp r0, r7
	beq _021A3424
_021A33D8:
	ldr r0, [sp]
	bl FUN_021A3448
	ldr r0, [sp]
	bl FUN_021A3458
	adds r4, r0, #0
	beq _021A3424
_021A33E8:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_021A3488
	cmp r0, #0
	bne _021A341A
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_021A3544
	cmp r0, #0
	bne _021A341A
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021A3468
	ldrh r2, [r5]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A9284
_021A341A:
	ldr r0, [sp]
	bl FUN_021A3478
	adds r4, r0, #0
	bne _021A33E8
_021A3424:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A33B8

	thumb_func_start FUN_021A3428
FUN_021A3428: ; 0x021A3428
	bx pc
	nop
	thumb_func_end FUN_021A3428
_021A342C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3438
FUN_021A3438: ; 0x021A3438
	bx pc
	nop
	thumb_func_end FUN_021A3438
_021A343C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3448
FUN_021A3448: ; 0x021A3448
	bx pc
	nop
	thumb_func_end FUN_021A3448
_021A344C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3458
FUN_021A3458: ; 0x021A3458
	bx pc
	nop
	thumb_func_end FUN_021A3458
_021A345C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3468
FUN_021A3468: ; 0x021A3468
	bx pc
	nop
	thumb_func_end FUN_021A3468
_021A346C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3478
FUN_021A3478: ; 0x021A3478
	bx pc
	nop
	thumb_func_end FUN_021A3478
_021A347C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3488
FUN_021A3488: ; 0x021A3488
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A34E0 ; =0x00001351
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x1c
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A34E0 ; =0x00001351
	adds r0, r0, #7
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A34E0: .word 0x00001351
	thumb_func_end FUN_021A3488

	thumb_func_start FUN_021A34E4
FUN_021A34E4: ; 0x021A34E4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_0219BDC0
	cmp r0, #2
	bne _021A353E
	cmp r4, #0
	beq _021A350C
	adds r0, r4, #0
	movs r1, #0xb
	bl FUN_0202143C
	cmp r0, #0
	beq _021A350C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A350C:
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_0219D388
	cmp r0, #0
	bne _021A353E
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A353E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A34E4

	thumb_func_start FUN_021A3544
FUN_021A3544: ; 0x021A3544
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021A2E0C
	cmp r0, #0
	beq _021A355E
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A355E:
	ldrh r3, [r4]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021AA510
	cmp r0, #0
	beq _021A3574
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A3574:
	adds r0, r5, #0
	movs r1, #0x20
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3586
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A3586:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_021AA55C
	str r0, [sp]
	ldr r0, _021A36A8 ; =0x000013A6
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	movs r4, #4
	bl FUN_021BCE40
	movs r0, #0x4b
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r7, #0
	movs r1, #6
	bl FUN_021BB1F4
	adds r1, r0, #0
	movs r0, #0x27
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #7
	bl FUN_021BB1F4
	adds r1, r0, #0
	movs r0, #0x28
	bl FUN_021BCDFC
	movs r0, #0x35
	lsls r1, r4, #0xa
	movs r2, #0x29
	lsls r3, r4, #0xf
	bl FUN_021BCEC8
	adds r0, r6, #0
	movs r1, #0x33
	bl FUN_021BC940
	movs r0, #0x27
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #0x28
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	movs r0, #0x4b
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x11
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3626
	cmp r4, #6
	bgt _021A362C
_021A3626:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021A362E
_021A362C:
	movs r4, #6
_021A362E:
	adds r0, r7, #0
	movs r1, #0xe
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A3642
	ldr r1, _021A36AC ; =0x00001333
	movs r0, #0x35
	bl FUN_021BCF58
_021A3642:
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r5, r0, #0
	ldr r0, _021A36B0 ; =0x000013BF
	bl FUN_021BCD94
	ldr r0, [sp, #4]
	adds r0, r0, #6
	subs r1, r0, r4
	bpl _021A365A
	movs r1, #0
_021A365A:
	cmp r1, #0xc
	ble _021A3660
	movs r1, #0xc
_021A3660:
	ldr r0, [sp]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021BD15C
	adds r1, r5, #0
	bl FUN_021BD364
	adds r4, r0, #0
	cmp r4, #0x64
	bls _021A3680
	movs r4, #0x64
_021A3680:
	ldr r0, [r6, #4]
	movs r1, #6
	bl FUN_0219CA38
	cmp r0, #0
	beq _021A368E
	movs r4, #0x64
_021A368E:
	movs r0, #0x64
	bl FUN_021BD100
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	cmp r0, r1
	bhs _021A36A2
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A36A2:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A36A8: .word 0x000013A6
_021A36AC: .word 0x00001333
_021A36B0: .word 0x000013BF
	thumb_func_end FUN_021A3544

	thumb_func_start FUN_021A36B4
FUN_021A36B4: ; 0x021A36B4
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r2, #0
	ldrh r2, [r4]
	cmp r2, #0
	bne _021A36C2
	adds r2, r1, #0
_021A36C2:
	ldrb r1, [r4, #3]
	str r1, [sp]
	str r2, [sp, #4]
	ldrb r1, [r4, #4]
	movs r2, #0x30
	str r1, [sp, #8]
	lsls r1, r3, #0x10
	ldrb r3, [r4, #2]
	ldr r0, [r0, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_021B152C
	movs r0, #0
	strb r0, [r4, #4]
	ldrb r1, [r4, #5]
	movs r0, #2
	orrs r0, r1
	strb r0, [r4, #5]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021A36B4

	thumb_func_start FUN_021A36EC
FUN_021A36EC: ; 0x021A36EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1a
	adds r7, r2, #0
	adds r6, r3, #0
	bl FUN_021BBB04
	cmp r0, #0
	bne _021A37A6
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021AA204
	cmp r0, #0
	beq _021A3734
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A9270
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A3734:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AA278
	cmp r0, #0
	str r6, [sp]
	bne _021A376E
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r3, r7, #0
	bl FUN_021A3808
	cmp r0, #0
	beq _021A3768
	movs r0, #2
	adds r1, r6, #0
	bl FUN_021CE1EC
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x1a
	bl FUN_021A9774
_021A3768:
	add sp, #0x18
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021A376E:
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r3, r7, #0
	bl FUN_021A3808
	cmp r0, #0
	bne _021A3784
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A3784:
	ldr r0, _021A37F0 ; =0x00001D78
	ldr r1, _021A37F4 ; =0x00001414
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AA3D0
	ldr r0, _021A37F0 ; =0x00001D78
	ldr r1, [sp, #8]
	ldr r2, _021A37F8 ; =0x00001416
	adds r0, r5, r0
	bl FUN_021B0910
_021A37A6:
	ldr r0, _021A37FC ; =0x000004A8
	movs r1, #1
	ldr r0, [r5, r0]
	strb r1, [r0, #4]
	ldr r0, _021A37F0 ; =0x00001D78
	ldr r1, _021A3800 ; =0x0000141E
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021AA400
	adds r6, r0, #0
	ldr r0, _021A37F0 ; =0x00001D78
	ldr r1, [sp, #0xc]
	ldr r2, _021A3804 ; =0x00001420
	adds r0, r5, r0
	bl FUN_021B0910
	adds r0, r4, #0
	movs r1, #0xb
	bl FUN_021BB800
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A3944
	movs r0, #4
	cmp r6, #0
	bne _021A37EC
	movs r0, #3
_021A37EC:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A37F0: .word 0x00001D78
_021A37F4: .word 0x00001414
_021A37F8: .word 0x00001416
_021A37FC: .word 0x000004A8
_021A3800: .word 0x0000141E
_021A3804: .word 0x00001420
	thumb_func_end FUN_021A36EC

	thumb_func_start FUN_021A3808
FUN_021A3808: ; 0x021A3808
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp, #8]
	movs r0, #0
	str r0, [sp, #0x18]
	movs r1, #0x1f
	add r0, sp, #0x14
	strb r1, [r0]
	ldr r0, _021A3900 ; =0x00001D78
	ldr r1, _021A3904 ; =0x00001438
	adds r0, r5, r0
	adds r6, r3, #0
	bl FUN_021B088C
	str r0, [sp, #0x10]
	add r0, sp, #0x14
	str r0, [sp]
	add r0, sp, #0x18
	str r0, [sp, #4]
	add r3, sp, #0x30
	ldrh r3, [r3]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AA2C4
	adds r7, r0, #0
	beq _021A3882
	ldr r0, _021A3908 ; =0x0000077F
	ldrb r0, [r5, r0]
	str r0, [sp, #0xc]
	adds r0, r6, #0
	bl FUN_021A3914
	cmp r0, #0
	beq _021A386C
	adds r0, r6, #0
	movs r1, #0
	bl FUN_021A3924
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A390C ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A3934
	str r0, [sp, #0xc]
_021A386C:
	add r0, sp, #0x30
	ldrh r0, [r0]
	movs r1, #0x30
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	bl FUN_021B1474
_021A3882:
	ldr r0, _021A3900 ; =0x00001D78
	ldr r1, [sp, #0x10]
	ldr r2, _021A3910 ; =0x00001445
	adds r0, r5, r0
	bl FUN_021B0910
	cmp r7, #0
	beq _021A38E6
	ldr r0, _021A3900 ; =0x00001D78
	ldr r1, _021A3910 ; =0x00001445
	adds r0, r5, r0
	adds r1, r1, #4
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AA3A0
	ldr r0, _021A3900 ; =0x00001D78
	ldr r2, _021A3910 ; =0x00001445
	adds r0, r5, r0
	adds r1, r6, #0
	adds r2, r2, #6
	bl FUN_021B0910
	adds r0, r4, #0
	bl FUN_021BB470
	cmp r0, #0
	beq _021A38D2
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	movs r3, #1
	bl FUN_021B1474
_021A38D2:
	add r0, sp, #0x14
	ldrb r2, [r0]
	cmp r2, #0x1f
	beq _021A38F8
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	movs r3, #1
	bl FUN_021B1474
	b _021A38F8
_021A38E6:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021A38F8
	add r2, sp, #0x30
	ldrh r2, [r2]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9270
_021A38F8:
	adds r0, r7, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_021A3900: .word 0x00001D78
_021A3904: .word 0x00001438
_021A3908: .word 0x0000077F
_021A390C: .word 0x00001AB8
_021A3910: .word 0x00001445
	thumb_func_end FUN_021A3808

	thumb_func_start FUN_021A3914
FUN_021A3914: ; 0x021A3914
	bx pc
	nop
	thumb_func_end FUN_021A3914
_021A3918:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A3924
FUN_021A3924: ; 0x021A3924
	bx pc
	nop
	thumb_func_end FUN_021A3924
_021A3928:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A3934
FUN_021A3934: ; 0x021A3934
	bx pc
	nop
	thumb_func_end FUN_021A3934
_021A3938:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A3944
FUN_021A3944: ; 0x021A3944
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1a
	movs r6, #0x1a
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A396C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021A9178
	adds r0, r4, #0
	movs r1, #0xb
	bl FUN_021BB800
_021A396C:
	adds r0, r4, #0
	bl FUN_021BB448
	adds r2, r0, #0
	cmp r2, #0x10
	beq _021A398C
_021A3978:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9C68
	adds r0, r4, #0
	bl FUN_021BB448
	adds r2, r0, #0
	cmp r2, #0x10
	bne _021A3978
_021A398C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A3944

	thumb_func_start FUN_021A3990
FUN_021A3990: ; 0x021A3990
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r4, r2, #0
	adds r7, r3, #0
	movs r0, #0
	str r0, [r7]
	adds r0, r4, #0
	adds r6, r1, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A3A36
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021A3A36
	adds r0, r4, #0
	bl FUN_021BB470
	cmp r0, #0
	bne _021A3A36
	adds r0, r4, #0
	movs r1, #7
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021A3A1C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #3
	bl FUN_021A9C44
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #3
	bl FUN_021A9C44
	adds r3, r7, #1
	lsls r3, r3, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	lsrs r3, r3, #0x18
	bl FUN_021A4264
	adds r0, r6, #0
	bl FUN_021BAC80
	bl FUN_021CE21C
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x21
	bl FUN_021A6400
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A3A1C:
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A3A3C ; =0xFFFF0000
	ldr r2, _021A3A40 ; =0x0000020B
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	movs r0, #1
	str r0, [r7]
_021A3A36:
	movs r0, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A3A3C: .word 0xFFFF0000
_021A3A40: .word 0x0000020B
	thumb_func_end FUN_021A3990

	thumb_func_start FUN_021A3A44
FUN_021A3A44: ; 0x021A3A44
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #4
	str r2, [sp]
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021A3A62
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x18
	blo _021A3A64
_021A3A62:
	movs r4, #0x1f
_021A3A64:
	cmp r4, #0x1f
	beq _021A3AE6
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	movs r1, #0x21
	adds r7, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3AB6
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0x21
	movs r3, #0
	bl FUN_021A9178
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #3
	bl FUN_021A9C68
	ldr r0, _021A3AE8 ; =0x00001AB8
	adds r1, r4, #0
	adds r0, r5, r0
	bl FUN_021A3AF0
	cmp r0, #0
	beq _021A3AB6
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	adds r2, r4, #0
	movs r3, #0
	bl FUN_021B1474
	ldr r2, _021A3AEC ; =0x00000465
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A98E0
_021A3AB6:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	movs r3, #0
	movs r4, #0
	bl FUN_021A4264
	ldr r0, [sp]
	cmp r0, #0
	bne _021A3AE6
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A3AE6
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	adds r3, r4, #0
	bl FUN_021B1474
_021A3AE6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A3AE8: .word 0x00001AB8
_021A3AEC: .word 0x00000465
	thumb_func_end FUN_021A3A44

	thumb_func_start FUN_021A3AF0
FUN_021A3AF0: ; 0x021A3AF0
	bx pc
	nop
	thumb_func_end FUN_021A3AF0
_021A3AF4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A3B00
FUN_021A3B00: ; 0x021A3B00
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r3, [sp, #8]
	movs r3, #0
	adds r5, r1, #0
	adds r7, r0, #0
	adds r4, r2, #0
	str r3, [sp, #0xc]
	bl FUN_021A3EBC
	adds r0, r5, #0
	bl FUN_021BBAE8
	str r0, [sp, #0x10]
	cmp r0, #2
	bne _021A3B32
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #2
	movs r6, #2
	bl FUN_021A3D58
	cmp r0, #0
	beq _021A3B9A
_021A3B32:
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021A3EE8
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021BBAE8
	str r0, [sp, #0x10]
	cmp r0, #3
	bne _021A3B54
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _021A3B54
	movs r6, #4
	b _021A3CB8
_021A3B54:
	ldr r0, _021A3D24 ; =0x00001F7C
	ldr r0, [r7, r0]
	cmp r0, #4
	bne _021A3B60
	movs r6, #0x16
	b _021A3CB8
_021A3B60:
	cmp r0, #2
	bne _021A3B68
	movs r6, #0x17
	b _021A3CB8
_021A3B68:
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021A3B8A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BAFB8
	adds r1, r0, #0
	cmp r1, #4
	beq _021A3B8A
	adds r0, r5, #0
	bl FUN_021BADC4
	cmp r0, #0
	bne _021A3B8A
	movs r6, #1
	b _021A3CB8
_021A3B8A:
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #0x1e
	bl FUN_021A3DB0
	adds r6, r0, #0
	beq _021A3B9C
_021A3B9A:
	b _021A3CB8
_021A3B9C:
	adds r0, r5, #0
	movs r1, #6
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A3BAC
	movs r6, #7
	b _021A3CB8
_021A3BAC:
	adds r0, r5, #0
	movs r1, #4
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A3BBC
	movs r6, #6
	b _021A3CB8
_021A3BBC:
	adds r0, r5, #0
	movs r1, #0xd
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3BE0
	cmp r4, #0xa5
	beq _021A3BE0
	adds r0, r5, #0
	movs r1, #0xd
	bl FUN_021BBB54
	bl FUN_021CE400
	cmp r4, r0
	bne _021A3BE0
	movs r6, #9
	b _021A3CB8
_021A3BE0:
	adds r0, r5, #0
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3BFC
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_0202143C
	cmp r0, #0
	beq _021A3BFC
	movs r6, #0xd
	b _021A3CB8
_021A3BFC:
	movs r0, #2
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021A3C16
	adds r0, r4, #0
	movs r1, #9
	bl FUN_0202143C
	cmp r0, #0
	beq _021A3C16
	movs r6, #0x14
	b _021A3CB8
_021A3C16:
	cmp r4, #0xa5
	beq _021A3C86
	adds r0, r5, #0
	movs r1, #0x17
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3C38
	adds r0, r5, #0
	bl FUN_021BBFF8
	cmp r0, #0xa5
	beq _021A3C38
	cmp r0, r4
	beq _021A3C38
_021A3C34:
	movs r6, #0x11
	b _021A3CB8
_021A3C38:
	adds r0, r5, #0
	movs r1, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3C50
	adds r0, r5, #0
	bl FUN_021BBFE8
	cmp r4, r0
	beq _021A3C50
	b _021A3C34
_021A3C50:
	adds r0, r5, #0
	movs r1, #0xb
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3C6A
	adds r0, r4, #0
	bl FUN_02021898
	cmp r0, #0
	bne _021A3C6A
	movs r6, #0xa
	b _021A3CB8
_021A3C6A:
	movs r0, #3
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021A3C86
	ldr r0, [r7, #8]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021D5A88
	cmp r0, #0
	beq _021A3C86
	movs r6, #0xc
	b _021A3CB8
_021A3C86:
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021A3E00
	cmp r0, #0
	beq _021A3C96
	movs r6, #5
	b _021A3CB8
_021A3C96:
	ldr r0, [sp, #0x10]
	cmp r0, #1
	bne _021A3CAA
	movs r0, #0x19
	bl FUN_021BD344
	cmp r0, #0
	beq _021A3CAA
	movs r6, #3
	b _021A3CB8
_021A3CAA:
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021A3E90
	cmp r0, #0
	beq _021A3CB8
	movs r6, #8
_021A3CB8:
	cmp r6, #0
	beq _021A3CCE
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_021A3F34
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A3CCE:
	ldr r0, [sp, #0x10]
	cmp r0, #2
	bne _021A3CEC
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #2
	bl FUN_021A4004
	ldr r2, _021A3D28 ; =0x00000256
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021A8FD8
	b _021A3D1E
_021A3CEC:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021A3D1E
	ldr r0, [sp, #0x10]
	cmp r0, #3
	bne _021A3D1E
	ldr r2, [sp, #0x10]
	adds r0, r7, #0
	adds r1, r5, #0
	movs r3, #0
	bl FUN_021A90D4
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	movs r2, #0x5b
	ldr r0, _021A3D2C ; =0xFFFF0000
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r7, #0xc]
	movs r1, #0x5b
	adds r2, #0xd4
	bl FUN_021B1610
_021A3D1E:
	movs r0, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A3D24: .word 0x00001F7C
_021A3D28: .word 0x00000256
_021A3D2C: .word 0xFFFF0000
	thumb_func_end FUN_021A3B00

	thumb_func_start FUN_021A3D30
FUN_021A3D30: ; 0x021A3D30
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r6, #0xa5
	beq _021A3D54
	movs r3, #0x1f
	bl FUN_021A3DB0
	adds r3, r0, #0
	beq _021A3D54
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A3F34
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A3D54:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A3D30

	thumb_func_start FUN_021A3D58
FUN_021A3D58: ; 0x021A3D58
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A3DAC ; =0x000015B1
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x22
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x1d
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A3DAC ; =0x000015B1
	adds r0, r0, #7
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A3DAC: .word 0x000015B1
	thumb_func_end FUN_021A3D58

	thumb_func_start FUN_021A3DB0
FUN_021A3DB0: ; 0x021A3DB0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A3DFC ; =0x000015CB
	adds r6, r2, #0
	adds r4, r1, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x22
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021BC940
	movs r0, #0x22
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A3DFC ; =0x000015CB
	adds r0, r0, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A3DFC: .word 0x000015CB
	thumb_func_end FUN_021A3DB0

	thumb_func_start FUN_021A3E00
FUN_021A3E00: ; 0x021A3E00
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _021A3E84 ; =0x00001F7C
	adds r4, r1, #0
	ldr r0, [r5, r0]
	cmp r0, #3
	bne _021A3E2C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A3E88 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0xbc
	bl FUN_021B1610
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021A3E2C:
	adds r0, r4, #0
	movs r1, #6
	movs r6, #6
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3E7E
	adds r0, r4, #0
	bl FUN_021BB9E8
	cmp r0, #0
	beq _021A3E6C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021A9178
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A3E88 ; =0xFFFF0000
	ldr r2, _021A3E8C ; =0x0000015F
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	add sp, #4
	movs r0, #0
	pop {r3, r4, r5, r6, pc}
_021A3E6C:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9020
	movs r0, #0x32
	bl FUN_021BD344
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021A3E7E:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_021A3E84: .word 0x00001F7C
_021A3E88: .word 0xFFFF0000
_021A3E8C: .word 0x0000015F
	thumb_func_end FUN_021A3E00

	thumb_func_start FUN_021A3E90
FUN_021A3E90: ; 0x021A3E90
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #7
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A3EB8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9054
	movs r0, #0x32
	bl FUN_021BD344
	cmp r0, #0
	beq _021A3EB8
	movs r0, #1
	pop {r3, r4, r5, pc}
_021A3EB8:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021A3E90

	thumb_func_start FUN_021A3EBC
FUN_021A3EBC: ; 0x021A3EBC
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BBAE8
	adds r6, r0, #0
	cmp r6, #2
	bne _021A3EE4
	adds r0, r4, #0
	bl FUN_021BB970
	cmp r0, #0
	beq _021A3EE4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021A90D4
_021A3EE4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A3EBC

	thumb_func_start FUN_021A3EE8
FUN_021A3EE8: ; 0x021A3EE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r7, r0, #0
	adds r0, r6, #0
	str r2, [sp]
	bl FUN_021BBAE8
	str r0, [sp, #4]
	movs r4, #0
	movs r5, #0
	cmp r0, #3
	bne _021A3F1E
	ldr r0, [sp]
	movs r1, #0xa
	bl FUN_0202143C
	cmp r0, #0
	beq _021A3F12
	movs r5, #1
	b _021A3F1E
_021A3F12:
	movs r0, #0x14
	bl FUN_021BD344
	cmp r0, #0
	beq _021A3F1E
	movs r4, #1
_021A3F1E:
	cmp r4, #0
	beq _021A3F2E
	ldr r2, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r3, #1
	bl FUN_021A90D4
_021A3F2E:
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A3EE8

	thumb_func_start FUN_021A3F34
FUN_021A3F34: ; 0x021A3F34
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r3, #0
	adds r5, r0, #0
	adds r6, r1, #0
	str r2, [sp]
	cmp r4, #5
	bne _021A3F62
	bl FUN_021A9F28
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A8A64
	cmp r0, #0
	beq _021A3FC2
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A3FC2
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A3F62:
	bl FUN_021A4004
	cmp r4, #4
	bgt _021A3F7A
	cmp r4, #2
	blt _021A3FC2
	beq _021A3F80
	cmp r4, #3
	beq _021A3F82
	cmp r4, #4
	beq _021A3F8A
	b _021A3FC2
_021A3F7A:
	cmp r4, #0x17
	beq _021A3F92
	b _021A3FC2
_021A3F80:
	b _021A3FB8
_021A3F82:
	ldr r2, _021A3FEC ; =0x0000025A
	adds r0, r5, #0
	adds r1, r6, #0
_021A3F88:
	b _021A3FBE
_021A3F8A:
	adds r0, r5, #0
	adds r1, r6, #0
	ldr r2, _021A3FF0 ; =0x00000259
	b _021A3F88
_021A3F92:
	movs r0, #2
	bl FUN_021BD56C
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	movs r3, #0
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	adds r3, r7, #0
	bl FUN_021A9774
_021A3FB8:
	ldr r2, _021A3FF4 ; =0x00000256
	adds r0, r5, #0
	adds r1, r6, #0
_021A3FBE:
	bl FUN_021A8FD8
_021A3FC2:
	ldr r0, _021A3FF8 ; =0x00001D78
	ldr r1, _021A3FFC ; =0x00001670
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	ldr r2, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r3, r4, #0
	bl FUN_021AA0BC
	ldr r0, _021A3FF8 ; =0x00001D78
	ldr r2, _021A4000 ; =0x00001672
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B0910
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021A3FEC: .word 0x0000025A
_021A3FF0: .word 0x00000259
_021A3FF4: .word 0x00000256
_021A3FF8: .word 0x00001D78
_021A3FFC: .word 0x00001670
_021A4000: .word 0x00001672
	thumb_func_end FUN_021A3F34

	thumb_func_start FUN_021A4004
FUN_021A4004: ; 0x021A4004
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r0, r1, #0
	str r1, [sp, #8]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BAC80
	adds r5, r0, #0
	cmp r7, #0x19
	bls _021A401E
	b _021A4224
_021A401E:
	adds r0, r7, r7
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A402A: ; jump table
	.short _021A4224 - _021A402A - 2 ; case 0
	.short _021A4206 - _021A402A - 2 ; case 1
	.short _021A405E - _021A402A - 2 ; case 2
	.short _021A4074 - _021A402A - 2 ; case 3
	.short _021A408A - _021A402A - 2 ; case 4
	.short _021A4224 - _021A402A - 2 ; case 5
	.short _021A40A0 - _021A402A - 2 ; case 6
	.short _021A40B4 - _021A402A - 2 ; case 7
	.short _021A40C8 - _021A402A - 2 ; case 8
	.short _021A40DE - _021A402A - 2 ; case 9
	.short _021A4108 - _021A402A - 2 ; case 10
	.short _021A411E - _021A402A - 2 ; case 11
	.short _021A4136 - _021A402A - 2 ; case 12
	.short _021A414C - _021A402A - 2 ; case 13
	.short _021A4162 - _021A402A - 2 ; case 14
	.short _021A4176 - _021A402A - 2 ; case 15
	.short _021A4224 - _021A402A - 2 ; case 16
	.short _021A4224 - _021A402A - 2 ; case 17
	.short _021A40F4 - _021A402A - 2 ; case 18
	.short _021A4234 - _021A402A - 2 ; case 19
	.short _021A419E - _021A402A - 2 ; case 20
	.short _021A4224 - _021A402A - 2 ; case 21
	.short _021A41B4 - _021A402A - 2 ; case 22
	.short _021A41F2 - _021A402A - 2 ; case 23
	.short _021A4224 - _021A402A - 2 ; case 24
	.short _021A4234 - _021A402A - 2 ; case 25
_021A405E:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xda
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4074:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xb9
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A408A:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xc8
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A40A0:
	ldr r0, _021A4238 ; =0xFFFF0000
	ldr r2, _021A423C ; =0x0000016B
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A40B4:
	ldr r0, _021A4238 ; =0xFFFF0000
	ldr r2, _021A4240 ; =0x0000016E
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A40C8:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xf5
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A40DE:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	ldr r2, _021A4244 ; =0x00000253
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A40F4:
	ldr r0, _021A4238 ; =0xFFFF0000
	ldr r2, _021A4248 ; =0x000001BD
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4108:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	ldr r2, _021A424C ; =0x0000023B
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A411E:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	movs r2, #0x91
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	lsls r2, r2, #2
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4136:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	ldr r2, _021A4250 ; =0x0000024D
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A414C:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	ldr r2, _021A4254 ; =0x0000037A
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4162:
	ldr r0, _021A4238 ; =0xFFFF0000
	ldr r2, _021A4258 ; =0x0000037D
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4176:
	ldr r0, [r4, #0xc]
	movs r1, #0x57
	adds r2, r5, #0
	bl FUN_021B1474
	ldr r0, _021A4238 ; =0xFFFF0000
	ldr r2, _021A425C ; =0x000001C3
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	ldr r0, [r4, #0xc]
	movs r1, #0x58
	adds r2, r5, #0
	bl FUN_021B1474
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A419E:
	ldr r0, _021A4238 ; =0xFFFF0000
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	ldr r2, _021A4260 ; =0x0000043E
	movs r1, #0x5b
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A41B4:
	ldr r0, [sp, #8]
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A41D4
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xc2
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A41D4:
	movs r0, #4
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r4, #0xc]
	adds r2, #0xbc
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A41F2:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xc1
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4206:
	ldr r1, [sp, #8]
	adds r0, r4, #0
	adds r2, r6, #0
	bl FUN_021A915C
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0x52
	adds r3, r5, #0
	bl FUN_021B1610
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021A4224:
	ldr r0, _021A4238 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0x47
	adds r3, r5, #0
	bl FUN_021B1610
_021A4234:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A4238: .word 0xFFFF0000
_021A423C: .word 0x0000016B
_021A4240: .word 0x0000016E
_021A4244: .word 0x00000253
_021A4248: .word 0x000001BD
_021A424C: .word 0x0000023B
_021A4250: .word 0x0000024D
_021A4254: .word 0x0000037A
_021A4258: .word 0x0000037D
_021A425C: .word 0x000001C3
_021A4260: .word 0x0000043E
	thumb_func_end FUN_021A4004

	thumb_func_start FUN_021A4264
FUN_021A4264: ; 0x021A4264
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r6, r0, #0
	adds r4, r3, #0
	adds r0, r7, #0
	adds r5, r2, #0
	bl FUN_021BAC80
	lsls r3, r5, #0x18
	str r4, [sp]
	adds r2, r0, #0
	ldr r0, [r6, #0xc]
	movs r1, #0x25
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021BC1E0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A4264

	thumb_func_start FUN_021A4290
FUN_021A4290: ; 0x021A4290
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	ldr r2, [sp, #0x18]
	adds r5, r3, #0
	str r2, [sp]
	adds r2, r5, #0
	adds r3, r6, #0
	adds r4, r0, #0
	adds r7, r1, #0
	bl FUN_021A42B8
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021A437C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A4290

	thumb_func_start FUN_021A42B8
FUN_021A42B8: ; 0x021A42B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	str r2, [sp]
	ldr r5, [sp, #0x20]
	ldr r0, _021A4344 ; =0x000016FF
	adds r7, r1, #0
	str r3, [sp, #4]
	bl FUN_021BCD48
	adds r0, r5, #0
	movs r4, #0
	bl FUN_021A434C
	adds r1, r0, #0
	movs r0, #5
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021A435C
	cmp r0, #0
	beq _021A4302
_021A42E8:
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #6
	bl FUN_021BCE40
	adds r4, r4, #1
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A436C
	cmp r0, #0
	bne _021A42E8
_021A4302:
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r1, [sp, #4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x17
	bl FUN_021BCE40
	movs r0, #0x20
	movs r1, #1
	bl FUN_021BCDFC
	adds r0, r6, #0
	movs r1, #0x4e
	bl FUN_021BC940
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A4348 ; =0x00001714
	bl FUN_021BCD94
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A4344: .word 0x000016FF
_021A4348: .word 0x00001714
	thumb_func_end FUN_021A42B8

	thumb_func_start FUN_021A434C
FUN_021A434C: ; 0x021A434C
	bx pc
	nop
	thumb_func_end FUN_021A434C
_021A4350:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A435C
FUN_021A435C: ; 0x021A435C
	bx pc
	nop
	thumb_func_end FUN_021A435C
_021A4360:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A436C
FUN_021A436C: ; 0x021A436C
	bx pc
	nop
	thumb_func_end FUN_021A436C
_021A4370:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A437C
FUN_021A437C: ; 0x021A437C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r2, #0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r4, r3, #0
	bl FUN_021BADC4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	blo _021A4398
	adds r4, r0, #0
_021A4398:
	cmp r4, #0
	beq _021A43AC
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r4, #0
	bl FUN_021A43B0
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A43AC:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A437C

	thumb_func_start FUN_021A43B0
FUN_021A43B0: ; 0x021A43B0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r6, r1, #0
	movs r1, #5
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_0219CA38
	cmp r0, #0
	bne _021A43FC
	adds r0, r6, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021BAE48
	str r7, [sp]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	movs r1, #4
	adds r3, r4, #0
	bl FUN_021B1474
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BAF0C
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	movs r1, #6
	adds r3, r4, #0
	bl FUN_021B1474
_021A43FC:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A43B0

	thumb_func_start FUN_021A4400
FUN_021A4400: ; 0x021A4400
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r1, #0
	movs r1, #0
	str r1, [sp, #0x10]
	movs r1, #0
	adds r6, r2, #0
	str r1, [sp, #0xc]
	ldr r2, _021A44F4 ; =0x00001FED
	ldr r1, [sp, #0x10]
	adds r5, r0, #0
	strb r1, [r5, r2]
	adds r1, r6, #0
	adds r2, r4, #0
	adds r7, r3, #0
	bl FUN_021A54B8
	movs r0, #0x86
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_021A4500
	ldr r3, _021A44F8 ; =0x000004B4
	ldrh r2, [r4]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AAD38
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A4FC0
	adds r0, r7, #0
	bl FUN_021A4510
	cmp r0, #0
	beq _021A44A4
	ldr r0, _021A44F8 ; =0x000004B4
	ldr r0, [r5, r0]
	bl FUN_021A4C74
	cmp r0, #0
	beq _021A447A
	adds r0, r7, #0
	bl FUN_021A4520
	cmp r0, #1
	bne _021A447A
	ldr r0, [sp, #0x30]
	adds r1, r4, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A4A04
	str r0, [sp, #0x10]
	b _021A4498
_021A447A:
	ldr r0, [sp, #0x30]
	adds r1, r4, #0
	str r0, [sp]
	add r0, sp, #0x14
	str r0, [sp, #4]
	ldr r0, [sp, #0x34]
	adds r2, r6, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r3, r7, #0
	bl FUN_021A4870
	str r0, [sp, #0x10]
	movs r0, #1
	str r0, [sp, #0xc]
_021A4498:
	ldrh r2, [r4]
	ldr r3, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A5B38
_021A44A4:
	ldr r0, [sp, #0x10]
	movs r3, #0x86
	str r0, [sp]
	ldr r0, [sp, #0x34]
	lsls r3, r3, #4
	str r0, [sp, #4]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A5534
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021A44EE
	ldr r0, _021A44FC ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A44E0
	movs r1, #1
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
	ldrb r2, [r0, #5]
	movs r1, #2
	orrs r1, r2
	strb r1, [r0, #5]
_021A44E0:
	ldr r2, _021A44FC ; =0x000004A8
	ldrh r1, [r4]
	ldr r2, [r5, r2]
	ldr r3, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_021A36B4
_021A44EE:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A44F4: .word 0x00001FED
_021A44F8: .word 0x000004B4
_021A44FC: .word 0x000004A8
	thumb_func_end FUN_021A4400

	thumb_func_start FUN_021A4500
FUN_021A4500: ; 0x021A4500
	bx pc
	nop
	thumb_func_end FUN_021A4500
_021A4504:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A4510
FUN_021A4510: ; 0x021A4510
	bx pc
	nop
	thumb_func_end FUN_021A4510
_021A4514:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A4520
FUN_021A4520: ; 0x021A4520
	bx pc
	nop
	thumb_func_end FUN_021A4520
_021A4524:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A4530
FUN_021A4530: ; 0x021A4530
	push {r4, r5, r6, r7, lr}
	sub sp, #0x3c
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x50]
	ldr r7, [sp, #0x58]
	str r0, [sp, #0x50]
	ldr r0, [sp, #0x54]
	str r2, [sp, #0x1c]
	str r0, [sp, #0x54]
	movs r0, #0
	strb r0, [r7]
	str r0, [sp, #0x2c]
	strb r0, [r7, #1]
	adds r0, r2, #0
	str r1, [sp, #0x18]
	str r3, [sp, #0x20]
	bl FUN_021A46E4
	ldr r0, [sp, #0x1c]
	bl FUN_021A46F4
	adds r6, r0, #0
	bne _021A4560
	b _021A46CC
_021A4560:
	movs r0, #0x1f
	str r0, [sp, #0x34]
	ldr r0, _021A46D4 ; =0xFFFF7FFF
	adds r4, r7, #6
	asrs r0, r0, #1
	str r0, [sp, #0x30]
_021A456C:
	ldr r0, [sp, #0x2c]
	lsls r5, r0, #2
	adds r0, r6, #0
	bl FUN_021BAC80
	ldr r3, [sp, #0x20]
	ldrh r1, [r4, r5]
	ldr r2, [sp, #0x34]
	ldrh r3, [r3]
	bics r1, r2
	movs r2, #0x1f
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, r5]
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0x18]
	adds r2, r6, #0
	bl FUN_021AA750
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	ldrh r2, [r4, r5]
	ldr r1, _021A46D8 ; =0xFFFFDFFF
	lsrs r0, r0, #0x12
	ands r1, r2
	orrs r0, r1
	strh r0, [r4, r5]
	ldrh r1, [r4, r5]
	ldr r0, [sp, #0x50]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B086C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1c
	ldrh r2, [r4, r5]
	ldr r1, _021A46DC ; =0xFFFFFE1F
	lsrs r0, r0, #0x17
	ands r1, r2
	orrs r0, r1
	strh r0, [r4, r5]
	ldrh r0, [r4, r5]
	ldr r1, [sp, #0x18]
	ldr r3, [sp, #0x20]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1c
	str r0, [sp]
	ldr r0, [sp, #0x54]
	adds r2, r6, #0
	str r0, [sp, #4]
	ldrh r0, [r4, r5]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x1f
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	add r0, sp, #0x38
	adds r0, #2
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x14]
	bl FUN_021A5958
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	ldrh r2, [r4, r5]
	ldr r1, [sp, #0x30]
	lsrs r0, r0, #0x11
	ands r1, r2
	orrs r0, r1
	strh r0, [r4, r5]
	adds r0, r7, r5
	str r0, [sp, #0x28]
	add r0, sp, #0x38
	ldrh r1, [r0, #2]
	ldr r0, [sp, #0x28]
	strh r1, [r0, #4]
	ldrh r1, [r4, r5]
	lsls r0, r1, #0x11
	lsrs r0, r0, #0x1f
	beq _021A4628
	ldr r0, _021A46D8 ; =0xFFFFDFFF
	ands r0, r1
	strh r0, [r4, r5]
	ldrh r1, [r4, r5]
	ldr r0, _021A46DC ; =0xFFFFFE1F
	ands r1, r0
	movs r0, #0x60
	orrs r0, r1
	strh r0, [r4, r5]
_021A4628:
	adds r0, r6, #0
	bl FUN_021BC5BC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	ldrh r2, [r4, r5]
	ldr r1, _021A46D4 ; =0xFFFF7FFF
	lsrs r0, r0, #0x10
	ands r1, r2
	orrs r0, r1
	strh r0, [r4, r5]
	ldrh r0, [r4, r5]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	bne _021A468C
	adds r0, r7, r5
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x24]
	adds r0, r6, #0
	ldrh r1, [r1, #4]
	bl FUN_021A50B4
	add r1, sp, #0x38
	strh r0, [r1]
	add r0, sp, #0x38
	str r0, [sp]
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0x18]
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021A5158
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1c
	ldrh r2, [r4, r5]
	ldr r1, _021A46E0 ; =0xFFFFE1FF
	lsrs r0, r0, #0x13
	ands r1, r2
	orrs r0, r1
	strh r0, [r4, r5]
	add r0, sp, #0x38
	ldrh r1, [r0]
	ldr r0, [sp, #0x24]
	strh r1, [r0, #4]
	ldrb r0, [r7]
	adds r0, r0, #1
	strb r0, [r7]
	b _021A46A2
_021A468C:
	add r0, sp, #0x38
	ldrh r1, [r0, #2]
	ldr r0, [sp, #0x28]
	strh r1, [r0, #4]
	ldrh r1, [r4, r5]
	ldr r0, _021A46E0 ; =0xFFFFE1FF
	ands r0, r1
	strh r0, [r4, r5]
	ldrb r0, [r7, #1]
	adds r0, r0, #1
	strb r0, [r7, #1]
_021A46A2:
	ldrh r0, [r4, r5]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1c
	str r0, [sp]
	movs r0, #0x7e
	lsls r0, r0, #6
	adds r0, r1, r0
	adds r3, r6, #0
	bl FUN_021AB77C
	ldr r0, [sp, #0x2c]
	adds r0, r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x1c]
	bl FUN_021A4704
	adds r6, r0, #0
	beq _021A46CC
	b _021A456C
_021A46CC:
	ldr r0, [sp, #0x2c]
	strb r0, [r7, #2]
	add sp, #0x3c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A46D4: .word 0xFFFF7FFF
_021A46D8: .word 0xFFFFDFFF
_021A46DC: .word 0xFFFFFE1F
_021A46E0: .word 0xFFFFE1FF
	thumb_func_end FUN_021A4530

	thumb_func_start FUN_021A46E4
FUN_021A46E4: ; 0x021A46E4
	bx pc
	nop
	thumb_func_end FUN_021A46E4
_021A46E8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A46F4
FUN_021A46F4: ; 0x021A46F4
	bx pc
	nop
	thumb_func_end FUN_021A46F4
_021A46F8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A4704
FUN_021A4704: ; 0x021A4704
	bx pc
	nop
	thumb_func_end FUN_021A4704
_021A4708:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A4714
FUN_021A4714: ; 0x021A4714
	ldrb r0, [r0, #2]
	bx lr
	thumb_func_end FUN_021A4714

	thumb_func_start FUN_021A4718
FUN_021A4718: ; 0x021A4718
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	ldr r0, [sp, #0x28]
	adds r6, r1, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x2c]
	str r2, [sp, #4]
	str r0, [sp, #0x2c]
	ldrb r0, [r6, #2]
	str r3, [sp, #8]
	movs r7, #0
	movs r4, #0
	cmp r0, #0
	bls _021A478E
	adds r0, r6, #6
	str r0, [sp, #0x10]
_021A473A:
	lsls r5, r7, #2
	adds r0, r6, r5
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	beq _021A4786
	ldr r1, [sp, #0x10]
	lsls r0, r4, #2
	ldrh r1, [r1, r5]
	str r0, [sp, #0xc]
	ldr r0, [sp]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r0, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [sp, #4]
	ldr r1, [sp, #0xc]
	str r0, [r2, r1]
	adds r0, r6, r5
	ldrh r2, [r0, #4]
	ldr r0, [sp, #8]
	lsls r1, r4, #1
	strh r2, [r0, r1]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x28]
	ldrh r2, [r0, r5]
	lsls r0, r2, #0x17
	lsrs r3, r0, #0x1c
	ldr r0, [sp, #0xc]
	str r3, [r1, r0]
	lsls r0, r2, #0x12
	lsrs r1, r0, #0x1f
	ldr r0, [sp, #0x2c]
	strb r1, [r0, r4]
	adds r4, r4, #1
_021A4786:
	ldrb r0, [r6, #2]
	adds r7, r7, #1
	cmp r7, r0
	blo _021A473A
_021A478E:
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A4718

	thumb_func_start FUN_021A4794
FUN_021A4794: ; 0x021A4794
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r7, r0, #0
	ldrb r0, [r5, #2]
	movs r4, #0
	str r2, [sp]
	cmp r0, #0
	bls _021A47C4
_021A47A4:
	lsls r6, r4, #2
	adds r1, r5, r6
	ldrh r1, [r1, #6]
	ldr r0, [r7, #8]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [sp]
	adds r4, r4, #1
	str r0, [r1, r6]
	ldrb r0, [r5, #2]
	cmp r4, r0
	blo _021A47A4
_021A47C4:
	ldrb r0, [r5, #2]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A4794

	thumb_func_start FUN_021A47C8
FUN_021A47C8: ; 0x021A47C8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	ldr r0, [sp, #0x28]
	adds r6, r1, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x2c]
	str r2, [sp, #4]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	str r3, [sp, #8]
	str r0, [sp, #0x30]
	ldrb r0, [r6, #2]
	movs r7, #0
	movs r4, #0
	cmp r0, #0
	bls _021A484A
	adds r0, r6, #6
	str r0, [sp, #0x10]
_021A47EE:
	lsls r5, r7, #2
	adds r0, r6, r5
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	bne _021A4842
	ldr r1, [sp, #0x10]
	lsls r0, r4, #2
	ldrh r1, [r1, r5]
	str r0, [sp, #0xc]
	ldr r0, [sp]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r0, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [sp, #4]
	ldr r1, [sp, #0xc]
	str r0, [r2, r1]
	adds r0, r6, r5
	ldrh r2, [r0, #4]
	ldr r0, [sp, #8]
	lsls r1, r4, #1
	strh r2, [r0, r1]
	ldr r0, [sp, #0x10]
	ldr r2, [sp, #0x28]
	ldrh r0, [r0, r5]
	lsls r1, r0, #0x17
	lsrs r3, r1, #0x1c
	ldr r1, [sp, #0xc]
	str r3, [r2, r1]
	lsls r1, r0, #0x12
	lsrs r2, r1, #0x1f
	ldr r1, [sp, #0x2c]
	lsls r0, r0, #0x13
	strb r2, [r1, r4]
	lsrs r1, r0, #0x1c
	ldr r0, [sp, #0x30]
	strb r1, [r0, r4]
	adds r4, r4, #1
_021A4842:
	ldrb r0, [r6, #2]
	adds r7, r7, #1
	cmp r7, r0
	blo _021A47EE
_021A484A:
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A47C8

	thumb_func_start FUN_021A4850
FUN_021A4850: ; 0x021A4850
	ldrb r1, [r0, #2]
	movs r3, #0
	movs r2, #0
	cmp r1, #0
	bls _021A486A
_021A485A:
	lsls r1, r2, #2
	adds r1, r0, r1
	ldrh r1, [r1, #4]
	adds r2, r2, #1
	adds r3, r3, r1
	ldrb r1, [r0, #2]
	cmp r2, r1
	blo _021A485A
_021A486A:
	adds r0, r3, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A4850

	thumb_func_start FUN_021A4870
FUN_021A4870: ; 0x021A4870
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r0, r3, #0
	str r1, [sp, #0x10]
	adds r7, r2, #0
	str r3, [sp, #0x14]
	bl FUN_021A49A4
	cmp r0, #1
	bne _021A488C
	movs r4, #1
	lsls r4, r4, #0xc
	b _021A4890
_021A488C:
	movs r4, #3
	lsls r4, r4, #0xa
_021A4890:
	ldr r0, [sp, #0x14]
	movs r6, #0
	bl FUN_021A49B4
	movs r1, #1
	cmp r0, #1
	bhi _021A48A0
	adds r1, r6, #0
_021A48A0:
	ldr r0, [sp, #0x1c]
	movs r2, #1
	bics r0, r2
	movs r2, #1
	ands r1, r2
	orrs r0, r1
	movs r1, #2
	bics r0, r1
	ldr r1, [sp, #0x40]
	ldr r2, _021A4998 ; =0x00000858
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1e
	orrs r0, r1
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	ldr r2, [r5, r2]
	adds r1, r7, #0
	bl FUN_021A49C4
	ldr r2, _021A4998 ; =0x00000858
	ldr r0, [sp, #0x14]
	adds r2, r2, #4
	ldr r2, [r5, r2]
	adds r1, r7, #0
	bl FUN_021A49D4
	ldr r0, [sp, #0x38]
	ldr r2, _021A4998 ; =0x00000858
	str r0, [sp]
	ldr r0, _021A4998 ; =0x00000858
	str r4, [sp, #4]
	adds r0, #0x14
	ldr r0, [r5, r0]
	ldr r3, [sp, #0x10]
	str r0, [sp, #8]
	ldr r2, [r5, r2]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A4530
	ldr r0, [sp, #0x38]
	ldr r2, _021A4998 ; =0x00000858
	str r0, [sp]
	ldr r0, _021A4998 ; =0x00000858
	str r4, [sp, #4]
	adds r0, #0x18
	ldr r0, [r5, r0]
	adds r2, r2, #4
	str r0, [sp, #8]
	ldr r2, [r5, r2]
	ldr r3, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A4530
	ldr r0, [r5, #0xc]
	movs r1, #0x30
	bl FUN_021B14C0
	ldr r1, [sp, #0x3c]
	str r0, [r1]
	ldr r0, _021A4998 ; =0x00000858
	ldr r0, [r5, r0]
	bl FUN_021A49E4
	cmp r0, #0
	beq _021A4960
	ldr r0, _021A4998 ; =0x00000858
	ldr r3, _021A4998 ; =0x00000858
	adds r0, #0x14
	ldr r0, [r5, r0]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldr r0, _021A499C ; =0x000004B4
	adds r2, r7, #0
	ldr r0, [r5, r0]
	str r0, [sp, #4]
	ldr r0, [sp, #0x18]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	bl FUN_021A4C84
	adds r6, r6, r0
	beq _021A4960
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A26F0
	cmp r0, #0
	beq _021A4960
	ldr r0, [r5, #4]
	movs r1, #0x4d
	bl FUN_0219DB10
_021A4960:
	ldr r0, _021A49A0 ; =0x0000085C
	ldr r0, [r5, r0]
	bl FUN_021A49F4
	cmp r0, #0
	beq _021A4990
	ldr r0, _021A49A0 ; =0x0000085C
	ldr r3, _021A49A0 ; =0x0000085C
	adds r0, #0x14
	ldr r0, [r5, r0]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldr r0, _021A499C ; =0x000004B4
	adds r2, r7, #0
	ldr r0, [r5, r0]
	str r0, [sp, #4]
	ldr r0, [sp, #0x18]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	ldr r3, [r5, r3]
	adds r0, r5, #0
	bl FUN_021A4C84
	adds r6, r6, r0
_021A4990:
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A4998: .word 0x00000858
_021A499C: .word 0x000004B4
_021A49A0: .word 0x0000085C
	thumb_func_end FUN_021A4870

	thumb_func_start FUN_021A49A4
FUN_021A49A4: ; 0x021A49A4
	bx pc
	nop
	thumb_func_end FUN_021A49A4
_021A49A8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A49B4
FUN_021A49B4: ; 0x021A49B4
	bx pc
	nop
	thumb_func_end FUN_021A49B4
_021A49B8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A49C4
FUN_021A49C4: ; 0x021A49C4
	bx pc
	nop
	thumb_func_end FUN_021A49C4
_021A49C8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x55, 0xCF, 0x89, 0x06

	thumb_func_start FUN_021A49D4
FUN_021A49D4: ; 0x021A49D4
	bx pc
	nop
	thumb_func_end FUN_021A49D4
_021A49D8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xE1, 0xCF, 0x89, 0x06

	thumb_func_start FUN_021A49E4
FUN_021A49E4: ; 0x021A49E4
	bx pc
	nop
	thumb_func_end FUN_021A49E4
_021A49E8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A49F4
FUN_021A49F4: ; 0x021A49F4
	bx pc
	nop
	thumb_func_end FUN_021A49F4
_021A49F8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A4A04
FUN_021A4A04: ; 0x021A4A04
	push {r4, r5, r6, r7, lr}
	sub sp, #0x4c
	adds r5, r0, #0
	ldr r0, [sp, #0x60]
	adds r6, r1, #0
	str r0, [sp, #0x60]
	movs r0, #0
	str r0, [sp, #0x1c]
	movs r0, #6
	str r0, [sp, #0x14]
	adds r0, r3, #0
	movs r1, #0
	adds r4, r2, #0
	str r3, [sp, #0x10]
	bl FUN_021A4C24
	adds r7, r0, #0
	bl FUN_021BAC80
	ldr r1, _021A4C0C ; =0x00000789
	strb r0, [r5, r1]
	ldr r0, [r5, #4]
	bl FUN_0219BDC8
	cmp r0, #0
	beq _021A4A6E
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A4C10 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A4C34
	str r0, [sp, #0x14]
	cmp r0, #6
	beq _021A4A6E
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A4C10 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A4C44
	adds r2, r0, #0
	ldr r0, _021A4C14 ; =0x0000027E
	movs r1, #0x4e
	str r0, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x14]
	bl FUN_021B1474
_021A4A6E:
	movs r0, #0
	str r0, [sp, #0x24]
	movs r0, #0
	str r0, [sp, #0x20]
	ldr r0, _021A4C18 ; =0x000004B4
	str r0, [sp, #0x2c]
	ldr r0, [r5, r0]
	ldrb r0, [r0]
	cmp r0, #0
	bhi _021A4A84
	b _021A4B9A
_021A4A84:
	ldr r0, [sp, #0x24]
	str r0, [sp, #0x28]
	movs r0, #1
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x3c]
	subs r0, #0xc
	str r0, [sp, #0x3c]
	movs r0, #0x87
	lsls r0, r0, #4
	adds r0, r5, r0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x2c]
	adds r0, r5, r0
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x2c]
	adds r0, r5, r0
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x2c]
	adds r0, r5, r0
	str r0, [sp, #0x44]
	ldr r0, [sp, #0x2c]
	subs r0, #0xc
	str r0, [sp, #0x2c]
_021A4AB4:
	adds r0, r4, #0
	bl FUN_021BBAE8
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x2c]
	ldr r1, [r5, r0]
	ldrb r0, [r1, #5]
	lsls r2, r0, #0x1f
	lsrs r2, r2, #0x1f
	bne _021A4ADA
	ldr r2, [sp, #0x30]
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r1, #5]
	ldrb r2, [r1, #5]
	movs r0, #2
	orrs r0, r2
	strb r0, [r1, #5]
_021A4ADA:
	ldr r0, [sp, #0x3c]
	movs r1, #0x30
	ldr r3, [r5, r0]
	ldrh r0, [r6]
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldrb r2, [r3, #2]
	ldrb r3, [r3, #3]
	ldr r0, [r5, #0xc]
	bl FUN_021B1474
	ldr r0, [sp, #0x60]
	ldr r2, [sp, #0x10]
	str r0, [sp]
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #4]
	movs r0, #0x87
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r3, r6, #0
	bl FUN_021A4530
	ldr r0, [sp, #0x38]
	ldr r1, [sp, #0x28]
	ldr r0, [r0]
	ldr r3, [sp, #0x10]
	str r0, [sp]
	ldr r0, [sp, #0x34]
	adds r2, r4, #0
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #8]
	add r0, sp, #0xc
	str r1, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A4C84
	ldr r1, [sp, #0x1c]
	adds r0, r1, r0
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x20]
	adds r0, r0, #1
	str r0, [sp, #0x20]
	adds r0, r7, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A4B9A
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A4B9A
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #1
	bl FUN_021A543C
	adds r0, r4, #0
	bl FUN_021BBAE8
	cmp r0, #2
	bne _021A4B6E
	ldr r0, [sp, #0x18]
	cmp r0, #2
	bne _021A4B9A
_021A4B6E:
	ldr r0, [sp, #0x40]
	ldr r0, [r0]
	ldrb r0, [r0, #2]
	cmp r0, #0
	beq _021A4B88
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021A3544
	cmp r0, #0
	beq _021A4B9A
_021A4B88:
	ldr r0, [sp, #0x24]
	adds r0, r0, #1
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x44]
	ldr r0, [r0]
	ldrb r1, [r0]
	ldr r0, [sp, #0x24]
	cmp r0, r1
	blo _021A4AB4
_021A4B9A:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021A4BBC
	ldr r1, _021A4C18 ; =0x000004B4
	adds r0, r5, #0
	ldr r1, [r5, r1]
	ldrb r1, [r1, #5]
	bl FUN_021A508C
	ldr r0, _021A4C1C ; =0xFFFF0000
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5a
	movs r2, #0x20
	bl FUN_021B1610
_021A4BBC:
	adds r0, r7, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021A4BDC
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A4C1C ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0
	bl FUN_021B1610
_021A4BDC:
	ldr r0, [sp, #0x14]
	cmp r0, #6
	beq _021A4BFE
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A4C10 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A4C54
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	ldr r3, _021A4C20 ; =0x00000291
	movs r1, #0x4d
	bl FUN_021B1474
_021A4BFE:
	ldr r0, _021A4C0C ; =0x00000789
	movs r1, #0x1f
	strb r1, [r5, r0]
	ldr r0, [sp, #0x1c]
	add sp, #0x4c
	pop {r4, r5, r6, r7, pc}
	nop
_021A4C0C: .word 0x00000789
_021A4C10: .word 0x00001AB8
_021A4C14: .word 0x0000027E
_021A4C18: .word 0x000004B4
_021A4C1C: .word 0xFFFF0000
_021A4C20: .word 0x00000291
	thumb_func_end FUN_021A4A04

	thumb_func_start FUN_021A4C24
FUN_021A4C24: ; 0x021A4C24
	bx pc
	nop
	thumb_func_end FUN_021A4C24
_021A4C28:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A4C34
FUN_021A4C34: ; 0x021A4C34
	bx pc
	nop
	thumb_func_end FUN_021A4C34
_021A4C38:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A4C44
FUN_021A4C44: ; 0x021A4C44
	bx pc
	nop
	thumb_func_end FUN_021A4C44
_021A4C48:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A4C54
FUN_021A4C54: ; 0x021A4C54
	bx pc
	nop
	thumb_func_end FUN_021A4C54
_021A4C58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A4C64
FUN_021A4C64: ; 0x021A4C64
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _021A4C6E
	movs r0, #1
	bx lr
_021A4C6E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A4C64

	thumb_func_start FUN_021A4C74
FUN_021A4C74: ; 0x021A4C74
	ldrb r0, [r0, #3]
	bx lr
	thumb_func_end FUN_021A4C74

	thumb_func_start FUN_021A4C78
FUN_021A4C78: ; 0x021A4C78
	ldrb r2, [r0, #5]
	cmp r2, #3
	bne _021A4C80
	strb r1, [r0, #5]
_021A4C80:
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A4C78

	thumb_func_start FUN_021A4C84
FUN_021A4C84: ; 0x021A4C84
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021A4714
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	beq _021A4CCA
	ldr r0, [sp, #0x2c]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x28]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	adds r1, r6, #0
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r7, #0
	bl FUN_021A4CD0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A53B4
	add sp, #0x10
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A4CCA:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A4C84

	thumb_func_start FUN_021A4CD0
FUN_021A4CD0: ; 0x021A4CD0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x48
	adds r5, r0, #0
	ldr r0, [sp, #0x64]
	str r1, [sp, #0x44]
	str r0, [sp, #0x64]
	adds r0, r1, #0
	str r3, [sp, #0x10]
	ldr r4, [sp, #0x60]
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A4F74 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A4F90
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x10]
	bl FUN_021A4850
	str r0, [sp, #0x2c]
	ldr r0, _021A4F78 ; =0x021DB058
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldr r0, _021A4F7C ; =0x021DB040
	ldr r2, _021A4F80 ; =0x021DB04C
	str r0, [sp, #4]
	ldr r3, _021A4F84 ; =0x021DB046
	adds r0, r5, #0
	bl FUN_021A4718
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r7, #0
	str r0, [sp, #0x24]
	cmp r0, #0
	ble _021A4D82
_021A4D1A:
	ldr r0, _021A4F80 ; =0x021DB04C
	lsls r1, r7, #2
	ldr r0, [r0, r1]
	bl FUN_021BC5BC
	cmp r0, #0
	beq _021A4D7A
	lsls r0, r7, #2
	str r0, [sp, #0x30]
	lsls r0, r7, #1
	str r0, [sp, #0x34]
	ldr r1, _021A4F78 ; =0x021DB058
	ldr r0, [sp, #0x30]
	ldr r3, _021A4F80 ; =0x021DB04C
	ldr r0, [r1, r0]
	ldr r2, [sp, #0x30]
	str r0, [sp]
	ldr r0, _021A4F7C ; =0x021DB040
	ldr r6, _021A4F84 ; =0x021DB046
	ldrb r0, [r0, r7]
	ldr r1, [sp, #0x44]
	str r0, [sp, #4]
	str r4, [sp, #8]
	ldr r2, [r3, r2]
	ldr r3, [sp, #0x34]
	adds r0, r5, #0
	ldrh r3, [r6, r3]
	bl FUN_021A7BF4
	str r0, [sp, #0x38]
	movs r0, #0x86
	lsls r0, r0, #4
	ldr r2, _021A4F80 ; =0x021DB04C
	ldr r1, [sp, #0x30]
	ldr r0, [r5, r0]
	ldr r1, [r2, r1]
	ldr r2, [sp, #0x38]
	movs r3, #1
	bl FUN_021A4FA0
	ldr r0, [sp, #0x34]
	adds r1, r6, #0
	ldrh r1, [r1, r0]
	ldr r0, [sp, #0x38]
	subs r1, r1, r0
	ldr r0, [sp, #0x2c]
	subs r0, r0, r1
	str r0, [sp, #0x2c]
_021A4D7A:
	ldr r0, [sp, #0x24]
	adds r7, r7, #1
	cmp r7, r0
	blt _021A4D1A
_021A4D82:
	ldr r0, [sp, #0x64]
	bl FUN_021A4C64
	cmp r0, #0
	beq _021A4DBA
	ldr r1, [sp, #0x10]
	ldr r2, _021A4F80 ; =0x021DB04C
	adds r0, r5, #0
	bl FUN_021A4794
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r6, #0
	str r0, [sp, #0x20]
	cmp r0, #0
	ble _021A4DBA
_021A4DA2:
	ldr r2, _021A4F80 ; =0x021DB04C
	lsls r3, r6, #2
	ldr r2, [r2, r3]
	ldr r1, [sp, #0x44]
	adds r0, r5, #0
	adds r3, r4, #0
	bl FUN_021A50C8
	ldr r0, [sp, #0x20]
	adds r6, r6, #1
	cmp r6, r0
	blt _021A4DA2
_021A4DBA:
	ldr r0, [sp, #0x64]
	ldr r2, _021A4F80 ; =0x021DB04C
	ldrb r0, [r0, #1]
	ldr r3, _021A4F84 ; =0x021DB046
	adds r1, r0, #1
	ldr r0, [sp, #0x64]
	strb r1, [r0, #1]
	ldr r0, _021A4F78 ; =0x021DB058
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldr r0, _021A4F7C ; =0x021DB040
	str r0, [sp, #4]
	ldr r0, _021A4F88 ; =0x021DB043
	str r0, [sp, #8]
	adds r0, r5, #0
	bl FUN_021A47C8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	bne _021A4DEA
	ldr r0, [sp, #0x2c]
	add sp, #0x48
	pop {r3, r4, r5, r6, r7, pc}
_021A4DEA:
	ldr r0, _021A4F80 ; =0x021DB04C
	ldr r2, [sp, #0x44]
	str r0, [sp]
	ldr r3, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A5268
	ldr r0, [sp, #0x6c]
	ldr r3, _021A4F78 ; =0x021DB058
	lsls r0, r0, #0x1f
	lsrs r6, r0, #0x1f
	ldr r0, _021A4F80 ; =0x021DB04C
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, _021A4F84 ; =0x021DB046
	str r0, [sp, #4]
	ldr r0, _021A4F7C ; =0x021DB040
	str r0, [sp, #8]
	str r6, [sp, #0xc]
	ldr r2, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_021A92F0
	ldr r0, [sp, #0x64]
	bl FUN_021A4C74
	cmp r0, #0
	bne _021A4E34
	str r6, [sp]
	ldr r1, [sp, #0x18]
	ldr r2, _021A4F78 ; =0x021DB058
	ldr r3, _021A4F80 ; =0x021DB04C
	adds r0, r5, #0
	bl FUN_021A9398
	b _021A4E3E
_021A4E34:
	ldr r1, _021A4F8C ; =0x021DB040
	ldr r0, [sp, #0x64]
	ldr r1, [r1, #0x18]
	bl FUN_021A4C78
_021A4E3E:
	str r6, [sp]
	ldr r1, [sp, #0x18]
	ldr r2, _021A4F80 ; =0x021DB04C
	ldr r3, _021A4F7C ; =0x021DB040
	adds r0, r5, #0
	bl FUN_021A951C
	movs r0, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x18]
	cmp r0, #0
	ble _021A4EA4
_021A4E56:
	ldr r0, [sp, #0x14]
	ldr r3, _021A4F84 ; =0x021DB046
	lsls r0, r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x14]
	ldr r2, [sp, #0x3c]
	lsls r6, r0, #2
	movs r0, #0x86
	ldr r1, _021A4F80 ; =0x021DB04C
	lsls r0, r0, #4
	ldrh r2, [r3, r2]
	ldr r0, [r5, r0]
	ldr r1, [r1, r6]
	movs r3, #0
	bl FUN_021A4FB0
	ldr r1, _021A4F84 ; =0x021DB046
	ldr r0, [sp, #0x3c]
	str r4, [sp]
	ldrh r0, [r1, r0]
	ldr r3, _021A4F80 ; =0x021DB04C
	ldr r2, [sp, #0x44]
	str r0, [sp, #4]
	ldr r1, [sp, #0x28]
	ldr r3, [r3, r6]
	adds r0, r5, #0
	bl FUN_021A5308
	ldr r0, _021A4F80 ; =0x021DB04C
	movs r1, #2
	ldr r0, [r0, r6]
	bl FUN_021BB800
	ldr r0, [sp, #0x14]
	adds r1, r0, #1
	ldr r0, [sp, #0x18]
	str r1, [sp, #0x14]
	cmp r1, r0
	blt _021A4E56
_021A4EA4:
	ldr r0, [sp, #0x18]
	movs r6, #0
	cmp r0, #0
	ble _021A4EC8
_021A4EAC:
	ldr r0, _021A4F88 ; =0x021DB043
	ldrb r2, [r0, r6]
	cmp r2, #0
	beq _021A4EC0
	ldr r1, _021A4F80 ; =0x021DB04C
	lsls r3, r6, #2
	ldr r1, [r1, r3]
	adds r0, r5, #0
	bl FUN_021A51D8
_021A4EC0:
	ldr r0, [sp, #0x18]
	adds r6, r6, #1
	cmp r6, r0
	blt _021A4EAC
_021A4EC8:
	ldr r0, [sp, #0x18]
	movs r7, #0
	cmp r0, #0
	ble _021A4F48
_021A4ED0:
	lsls r0, r7, #2
	str r0, [sp, #0x1c]
	ldr r6, _021A4F80 ; =0x021DB04C
	ldr r3, [sp, #0x1c]
	ldr r2, [sp, #0x44]
	ldr r3, [r6, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A57AC
	lsls r0, r7, #1
	ldr r1, _021A4F84 ; =0x021DB046
	str r0, [sp, #0x40]
	ldrh r0, [r1, r0]
	ldr r3, [sp, #0x1c]
	ldr r2, [sp, #0x44]
	str r0, [sp]
	ldr r3, [r6, r3]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A58AC
	ldr r1, _021A4F84 ; =0x021DB046
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #0x1c]
	ldrh r0, [r1, r0]
	ldr r2, [sp, #0x44]
	adds r1, r4, #0
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r3, [r6, r3]
	adds r0, r5, #0
	bl FUN_021A5360
	ldr r1, _021A4F78 ; =0x021DB058
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0x1c]
	ldr r0, [r1, r0]
	ldr r1, _021A4F84 ; =0x021DB046
	str r0, [sp]
	ldr r0, [sp, #0x40]
	adds r3, r6, #0
	ldrh r0, [r1, r0]
	ldr r1, [sp, #0x44]
	str r0, [sp, #4]
	ldr r0, _021A4F7C ; =0x021DB040
	ldrb r0, [r0, r7]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r2, [r3, r2]
	adds r0, r5, #0
	adds r3, r4, #0
	bl FUN_021A7D08
	ldr r0, [sp, #0x18]
	adds r7, r7, #1
	cmp r7, r0
	blt _021A4ED0
_021A4F48:
	ldr r0, [sp, #0x18]
	movs r4, #0
	ldr r6, _021A4F80 ; =0x021DB04C
	cmp r0, #0
	ble _021A4F64
_021A4F52:
	lsls r1, r4, #2
	ldr r1, [r6, r1]
	adds r0, r5, #0
	bl FUN_021A8A64
	ldr r0, [sp, #0x18]
	adds r4, r4, #1
	cmp r4, r0
	blt _021A4F52
_021A4F64:
	ldr r1, [sp, #0x44]
	adds r0, r5, #0
	bl FUN_021A8A64
	ldr r0, [sp, #0x2c]
	add sp, #0x48
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A4F74: .word 0x00001AB8
_021A4F78: .word 0x021DB058
_021A4F7C: .word 0x021DB040
_021A4F80: .word 0x021DB04C
_021A4F84: .word 0x021DB046
_021A4F88: .word 0x021DB043
_021A4F8C: .word 0x021DB040
	thumb_func_end FUN_021A4CD0

	thumb_func_start FUN_021A4F90
FUN_021A4F90: ; 0x021A4F90
	bx pc
	nop
	thumb_func_end FUN_021A4F90
_021A4F94:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A4FA0
FUN_021A4FA0: ; 0x021A4FA0
	bx pc
	nop
	thumb_func_end FUN_021A4FA0
_021A4FA4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x41, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A4FB0
FUN_021A4FB0: ; 0x021A4FB0
	bx pc
	nop
	thumb_func_end FUN_021A4FB0
_021A4FB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x41, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A4FC0
FUN_021A4FC0: ; 0x021A4FC0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r3, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r6, r1, #0
	str r2, [sp]
	bl FUN_021A504C
	adds r0, r7, #0
	bl FUN_021A505C
	adds r4, r0, #0
	beq _021A503C
	movs r0, #1
	str r0, [sp, #8]
_021A4FE0:
	ldr r3, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AA6B4
	cmp r0, #0
	beq _021A5032
	ldr r0, _021A5040 ; =0x000004A8
	ldr r1, [r5, r0]
	ldrb r0, [r1, #5]
	lsls r2, r0, #0x1f
	lsrs r2, r2, #0x1f
	bne _021A5006
	ldr r2, [sp, #8]
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r1, #5]
_021A5006:
	ldr r0, _021A5044 ; =0x00001D78
	ldr r1, _021A5048 ; =0x0000198B
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AA710
	ldr r0, _021A5044 ; =0x00001D78
	ldr r2, _021A5048 ; =0x0000198B
	ldr r1, [sp, #4]
	adds r0, r5, r0
	adds r2, r2, #4
	bl FUN_021B0910
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021A506C
_021A5032:
	adds r0, r7, #0
	bl FUN_021A507C
	adds r4, r0, #0
	bne _021A4FE0
_021A503C:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A5040: .word 0x000004A8
_021A5044: .word 0x00001D78
_021A5048: .word 0x0000198B
	thumb_func_end FUN_021A4FC0

	thumb_func_start FUN_021A504C
FUN_021A504C: ; 0x021A504C
	bx pc
	nop
	thumb_func_end FUN_021A504C
_021A5050:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A505C
FUN_021A505C: ; 0x021A505C
	bx pc
	nop
	thumb_func_end FUN_021A505C
_021A5060:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A506C
FUN_021A506C: ; 0x021A506C
	bx pc
	nop
	thumb_func_end FUN_021A506C
_021A5070:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A507C
FUN_021A507C: ; 0x021A507C
	bx pc
	nop
	thumb_func_end FUN_021A507C
_021A5080:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A508C
FUN_021A508C: ; 0x021A508C
	push {r3, lr}
	cmp r1, #3
	bge _021A50A0
	ldr r0, [r0, #0xc]
	ldr r3, _021A50B0 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x4f
	bl FUN_021B1610
	pop {r3, pc}
_021A50A0:
	ble _021A50AE
	ldr r0, [r0, #0xc]
	ldr r3, _021A50B0 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x4e
	bl FUN_021B1610
_021A50AE:
	pop {r3, pc}
	.align 2, 0
_021A50B0: .word 0xFFFF0000
	thumb_func_end FUN_021A508C

	thumb_func_start FUN_021A50B4
FUN_021A50B4: ; 0x021A50B4
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r4, r0
	bls _021A50C4
	adds r4, r0, #0
_021A50C4:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_021A50B4

	thumb_func_start FUN_021A50C8
FUN_021A50C8: ; 0x021A50C8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A50FC ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A5100 ; =0x000019BA
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A5104
	ldr r0, _021A50FC ; =0x00001D78
	ldr r2, _021A5100 ; =0x000019BA
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r2, #4
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A50FC: .word 0x00001D78
_021A5100: .word 0x000019BA
	thumb_func_end FUN_021A50C8

	thumb_func_start FUN_021A5104
FUN_021A5104: ; 0x021A5104
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A5154 ; =0x000019CD
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x45
	bl FUN_021BC940
	ldr r0, _021A5154 ; =0x000019CD
	adds r0, r0, #7
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5154: .word 0x000019CD
	thumb_func_end FUN_021A5104

	thumb_func_start FUN_021A5158
FUN_021A5158: ; 0x021A5158
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r2, #0
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r4, [sp, #0x18]
	adds r0, r5, #0
	movs r1, #0xd
	str r3, [sp]
	bl FUN_021BB1F4
	ldrh r1, [r4]
	cmp r0, r1
	ble _021A5176
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A5176:
	ldr r0, _021A51D4 ; =0x000019EF
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x51
	bl FUN_021BCE40
	movs r0, #0x3a
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x74
	bl FUN_021BC940
	movs r0, #0x3a
	bl FUN_021BCFB0
	adds r6, r0, #0
	ldr r0, _021A51D4 ; =0x000019EF
	adds r0, r0, #7
	bl FUN_021BCD94
	cmp r6, #0
	beq _021A51D0
	adds r0, r5, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	subs r0, r0, #1
	strh r0, [r4]
_021A51D0:
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A51D4: .word 0x000019EF
	thumb_func_end FUN_021A5158

	thumb_func_start FUN_021A51D8
FUN_021A51D8: ; 0x021A51D8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	cmp r4, #1
	beq _021A51F0
	cmp r4, #3
	b _021A5200
_021A51F0:
	ldr r0, _021A5228 ; =0xFFFF0000
	ldr r2, _021A522C ; =0x00000202
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	pop {r3, r4, r5, r6, r7, pc}
_021A5200:
	ldr r0, _021A5230 ; =0x00001D78
	ldr r1, _021A5234 ; =0x00001A14
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021A5238
	ldr r0, _021A5230 ; =0x00001D78
	ldr r2, _021A5234 ; =0x00001A14
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #3
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5228: .word 0xFFFF0000
_021A522C: .word 0x00000202
_021A5230: .word 0x00001D78
_021A5234: .word 0x00001A14
	thumb_func_end FUN_021A51D8

	thumb_func_start FUN_021A5238
FUN_021A5238: ; 0x021A5238
	push {r4, r5, r6, lr}
	ldr r6, _021A5264 ; =0x00001A27
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x75
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A5264: .word 0x00001A27
	thumb_func_end FUN_021A5238

	thumb_func_start FUN_021A5268
FUN_021A5268: ; 0x021A5268
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _021A52A4 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A52A8 ; =0x00001A39
	adds r0, r5, r0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021B088C
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	adds r1, r4, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A52AC
	ldr r0, _021A52A4 ; =0x00001D78
	ldr r2, _021A52A8 ; =0x00001A39
	ldr r1, [sp, #4]
	adds r0, r5, r0
	adds r2, r2, #5
	bl FUN_021B0910
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A52A4: .word 0x00001D78
_021A52A8: .word 0x00001A39
	thumb_func_end FUN_021A5268

	thumb_func_start FUN_021A52AC
FUN_021A52AC: ; 0x021A52AC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, _021A5300 ; =0x00001A4F
	adds r4, r2, #0
	adds r5, r3, #0
	ldr r6, [sp, #0x18]
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #5
	adds r1, r5, #0
	bl FUN_021BCE40
	movs r4, #0
	cmp r5, #0
	bls _021A52EE
_021A52D8:
	lsls r0, r4, #2
	ldr r0, [r6, r0]
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #6
	bl FUN_021BCE40
	adds r4, r4, #1
	cmp r4, r5
	blo _021A52D8
_021A52EE:
	adds r0, r7, #0
	movs r1, #0x44
	bl FUN_021BC940
	ldr r0, _021A5304 ; =0x00001A57
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5300: .word 0x00001A4F
_021A5304: .word 0x00001A57
	thumb_func_end FUN_021A52AC

	thumb_func_start FUN_021A5308
FUN_021A5308: ; 0x021A5308
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r7, r0, #0
	str r3, [sp, #0x10]
	adds r0, r2, #0
	adds r5, r1, #0
	ldr r4, [sp, #0x38]
	bl FUN_021BAC80
	adds r6, r0, #0
	ldr r0, [sp, #0x10]
	bl FUN_021BAC80
	str r0, [sp, #0x14]
	ldrb r0, [r4, #6]
	ldrh r1, [r4]
	add r2, sp, #0x18
	strh r1, [r2]
	add r1, sp, #0x38
	ldrh r1, [r1, #4]
	strh r1, [r2, #2]
	strb r0, [r2, #4]
	strb r6, [r2, #5]
	ldr r0, [sp, #0x10]
	strb r5, [r2, #6]
	add r1, sp, #0x18
	bl FUN_021BC088
	str r5, [sp]
	ldrb r0, [r4, #6]
	ldr r2, [sp, #0x14]
	movs r1, #0x2d
	str r0, [sp, #4]
	ldrh r0, [r4]
	adds r3, r6, #0
	str r0, [sp, #8]
	add r0, sp, #0x38
	ldrh r0, [r0, #4]
	str r0, [sp, #0xc]
	ldr r0, [r7, #0xc]
	bl FUN_021B1474
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A5308

	thumb_func_start FUN_021A5360
FUN_021A5360: ; 0x021A5360
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_02021740
	cmp r0, #4
	beq _021A539E
	cmp r0, #6
	beq _021A538A
	cmp r0, #7
	bne _021A53B0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r6, #0
	bl FUN_021A67C8
	pop {r3, r4, r5, r6, r7, pc}
_021A538A:
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _021A53B0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A67C8
	pop {r3, r4, r5, r6, r7, pc}
_021A539E:
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _021A53B0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A5E1C
_021A53B0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A5360

	thumb_func_start FUN_021A53B4
FUN_021A53B4: ; 0x021A53B4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A53E8 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A53EC ; =0x00001AA2
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A53F0
	ldr r0, _021A53E8 ; =0x00001D78
	ldr r2, _021A53EC ; =0x00001AA2
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r2, #3
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A53E8: .word 0x00001D78
_021A53EC: .word 0x00001AA2
	thumb_func_end FUN_021A53B4

	thumb_func_start FUN_021A53F0
FUN_021A53F0: ; 0x021A53F0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A5438 ; =0x00001AB7
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	movs r0, #0x32
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x4d
	bl FUN_021BC940
	ldr r0, _021A5438 ; =0x00001AB7
	adds r0, r0, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A5438: .word 0x00001AB7
	thumb_func_end FUN_021A53F0

	thumb_func_start FUN_021A543C
FUN_021A543C: ; 0x021A543C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021BB380
	cmp r0, #0
	beq _021A5472
	ldr r0, _021A5474 ; =0x00001D78
	ldr r1, _021A5478 ; =0x00001ACC
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A547C
	ldr r0, _021A5474 ; =0x00001D78
	ldr r2, _021A5478 ; =0x00001ACC
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #6
	bl FUN_021B0910
_021A5472:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A5474: .word 0x00001D78
_021A5478: .word 0x00001ACC
	thumb_func_end FUN_021A543C

	thumb_func_start FUN_021A547C
FUN_021A547C: ; 0x021A547C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A54B4 ; =0x00001ADF
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x2e
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x91
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A54B4: .word 0x00001ADF
	thumb_func_end FUN_021A547C

	thumb_func_start FUN_021A54B8
FUN_021A54B8: ; 0x021A54B8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A54E8 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A54EC ; =0x00001AEA
	adds r6, r2, #0
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A54F0
	ldr r0, _021A54E8 ; =0x00001D78
	ldr r2, _021A54EC ; =0x00001AEA
	adds r0, r5, r0
	adds r1, r7, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A54E8: .word 0x00001D78
_021A54EC: .word 0x00001AEA
	thumb_func_end FUN_021A54B8

	thumb_func_start FUN_021A54F0
FUN_021A54F0: ; 0x021A54F0
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A5530 ; =0x00001AFA
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r7, #0
	adds r4, r2, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x81
	bl FUN_021BC940
	adds r0, r7, #7
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5530: .word 0x00001AFA
	thumb_func_end FUN_021A54F0

	thumb_func_start FUN_021A5534
FUN_021A5534: ; 0x021A5534
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	adds r7, r1, #0
	str r2, [sp, #0xc]
	adds r4, r3, #0
	ldr r6, [sp, #0x2c]
	bl FUN_021A57C4
	ldr r0, _021A5600 ; =0x00001D78
	ldr r1, _021A5604 ; =0x00001B17
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0x10]
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x84
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A563C
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x83
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A563C
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x85
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A563C
	adds r0, r4, #0
	bl FUN_021A560C
	adds r0, r4, #0
	bl FUN_021A561C
	adds r1, r0, #0
	beq _021A55B6
_021A55A4:
	adds r0, r5, #0
	movs r2, #1
	bl FUN_021A543C
	adds r0, r4, #0
	bl FUN_021A562C
	adds r1, r0, #0
	bne _021A55A4
_021A55B6:
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x86
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A563C
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x87
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021A563C
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	str r6, [sp]
	bl FUN_021A5768
	ldr r0, _021A5600 ; =0x00001D78
	ldr r1, [sp, #0x10]
	ldr r2, _021A5608 ; =0x00001B2B
	adds r0, r5, r0
	bl FUN_021B0910
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A5600: .word 0x00001D78
_021A5604: .word 0x00001B17
_021A5608: .word 0x00001B2B
	thumb_func_end FUN_021A5534

	thumb_func_start FUN_021A560C
FUN_021A560C: ; 0x021A560C
	bx pc
	nop
	thumb_func_end FUN_021A560C
_021A5610:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A561C
FUN_021A561C: ; 0x021A561C
	bx pc
	nop
	thumb_func_end FUN_021A561C
_021A5620:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A562C
FUN_021A562C: ; 0x021A562C
	bx pc
	nop
	thumb_func_end FUN_021A562C
_021A5630:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A563C
FUN_021A563C: ; 0x021A563C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	adds r5, r2, #0
	str r0, [sp, #0x2c]
	adds r0, r5, #0
	adds r7, r1, #0
	adds r4, r3, #0
	bl FUN_021A5728
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, _021A5720 ; =0x00001B3B
	movs r6, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r1, [sp, #0x28]
	movs r0, #0x4d
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r0, [sp, #4]
	movs r7, #0
	cmp r0, #0
	bls _021A56D6
_021A568E:
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A5738
	adds r4, r0, #0
	ldr r0, [sp, #0x2c]
	add r2, sp, #0xc
	cmp r0, #0
	beq _021A56AA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A5748
	b _021A56B2
_021A56AA:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A5758
_021A56B2:
	cmp r0, #0
	beq _021A56CE
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #8]
	adds r0, r0, r1
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r6, #6
	bl FUN_021BCE40
	adds r6, r6, #1
_021A56CE:
	ldr r0, [sp, #4]
	adds r7, r7, #1
	cmp r7, r0
	blo _021A568E
_021A56D6:
	cmp r6, #0
	beq _021A5714
	movs r0, #5
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x47
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x48
	movs r1, #0
	bl FUN_021BCE84
	ldr r1, [sp, #8]
	movs r0, #0x32
	bl FUN_021BCE40
	ldr r0, [sp]
	movs r1, #0x82
	bl FUN_021BC940
	movs r0, #0x48
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021A5714
	ldr r0, [sp]
	ldr r1, [sp, #0x30]
	bl FUN_021BC940
_021A5714:
	ldr r0, _021A5724 ; =0x00001B62
	bl FUN_021BCD94
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5720: .word 0x00001B3B
_021A5724: .word 0x00001B62
	thumb_func_end FUN_021A563C

	thumb_func_start FUN_021A5728
FUN_021A5728: ; 0x021A5728
	bx pc
	nop
	thumb_func_end FUN_021A5728
_021A572C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5738
FUN_021A5738: ; 0x021A5738
	bx pc
	nop
	thumb_func_end FUN_021A5738
_021A573C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A5748
FUN_021A5748: ; 0x021A5748
	bx pc
	nop
	thumb_func_end FUN_021A5748
_021A574C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5758
FUN_021A5758: ; 0x021A5758
	bx pc
	nop
	thumb_func_end FUN_021A5758
_021A575C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x3D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5768
FUN_021A5768: ; 0x021A5768
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A57A8 ; =0x00001B71
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r7, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x4d
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x88
	bl FUN_021BC940
	adds r0, r7, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A57A8: .word 0x00001B71
	thumb_func_end FUN_021A5768

	thumb_func_start FUN_021A57AC
FUN_021A57AC: ; 0x021A57AC
	push {r3, r4, r5, lr}
	ldrh r1, [r1]
	adds r5, r0, #0
	adds r4, r3, #0
	bl FUN_021AB1BC
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A5840
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021A57AC

	thumb_func_start FUN_021A57C4
FUN_021A57C4: ; 0x021A57C4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldrb r0, [r1, #6]
	adds r5, r3, #0
	cmp r0, #9
	bne _021A580C
	adds r0, r5, #0
	bl FUN_021A5810
	adds r0, r5, #0
	bl FUN_021A5820
	adds r4, r0, #0
	beq _021A580C
	movs r7, #3
_021A57E2:
	adds r0, r4, #0
	bl FUN_021BBAE8
	cmp r0, #3
	bne _021A5802
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021A5802
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	movs r3, #1
	bl FUN_021A90D4
_021A5802:
	adds r0, r5, #0
	bl FUN_021A5830
	adds r4, r0, #0
	bne _021A57E2
_021A580C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A57C4

	thumb_func_start FUN_021A5810
FUN_021A5810: ; 0x021A5810
	bx pc
	nop
	thumb_func_end FUN_021A5810
_021A5814:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5820
FUN_021A5820: ; 0x021A5820
	bx pc
	nop
	thumb_func_end FUN_021A5820
_021A5824:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5830
FUN_021A5830: ; 0x021A5830
	bx pc
	nop
	thumb_func_end FUN_021A5830
_021A5834:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A5840
FUN_021A5840: ; 0x021A5840
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #5
	adds r6, r2, #0
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021A5860
	adds r0, r4, #0
	movs r1, #6
	bl FUN_021BB800
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A5860:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AB24C
	cmp r0, #0
	beq _021A587A
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BB800
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A587A:
	cmp r6, #0x64
	blo _021A589E
	ldr r7, _021A58A4 ; =0x00001D78
	ldr r1, _021A58A8 ; =0x00001BBD
	adds r0, r5, r7
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB2D8
	ldr r2, _021A58A8 ; =0x00001BBD
	adds r0, r5, r7
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
_021A589E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A58A4: .word 0x00001D78
_021A58A8: .word 0x00001BBD
	thumb_func_end FUN_021A5840

	thumb_func_start FUN_021A58AC
FUN_021A58AC: ; 0x021A58AC
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	adds r7, r2, #0
	adds r6, r3, #0
	bl FUN_02021740
	cmp r0, #8
	bne _021A58EE
	ldrh r0, [r4]
	movs r1, #0x19
	bl FUN_020212AC
	adds r1, r0, #0
	ldr r0, [sp, #0x18]
	bl FUN_021BD390
	adds r3, r0, #0
	lsls r3, r3, #0x10
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	lsrs r3, r3, #0x10
	bl FUN_021A58F4
	cmp r0, #0
	beq _021A58EE
	ldr r2, _021A58F0 ; =0x00000383
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A98E0
_021A58EE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A58F0: .word 0x00000383
	thumb_func_end FUN_021A58AC

	thumb_func_start FUN_021A58F4
FUN_021A58F4: ; 0x021A58F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _021A594C ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A5950 ; =0x00001C02
	str r3, [sp]
	adds r0, r5, r0
	adds r7, r2, #0
	bl FUN_021B088C
	str r0, [sp, #4]
	ldr r3, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	movs r6, #0
	bl FUN_021AB44C
	adds r7, r0, #0
	beq _021A5938
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A6E60
	cmp r0, #0
	bne _021A5938
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	movs r3, #1
	bl FUN_021A6E3C
	adds r6, r0, #0
_021A5938:
	ldr r0, _021A594C ; =0x00001D78
	ldr r1, [sp, #4]
	ldr r2, _021A5954 ; =0x00001C10
	adds r0, r5, r0
	bl FUN_021B0910
	adds r0, r6, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A594C: .word 0x00001D78
_021A5950: .word 0x00001C02
_021A5954: .word 0x00001C10
	thumb_func_end FUN_021A58F4

	thumb_func_start FUN_021A5958
FUN_021A5958: ; 0x021A5958
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r4, r3, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	str r1, [sp, #4]
	adds r7, r2, #0
	ldr r6, [sp, #0x38]
	bl FUN_0202176C
	str r0, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, _021A5B30 ; =0x00001C31
	bl FUN_021BCD48
	ldr r1, [sp, #0x30]
	movs r0, #0x38
	bl FUN_021BCE40
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x45
	adds r1, r6, #0
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldr r1, [sp, #0x10]
	movs r0, #0x1a
	bl FUN_021BCE40
	movs r0, #0x37
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x46
	bl FUN_021BC940
	movs r0, #0x37
	bl FUN_021BCFB0
	str r0, [sp, #8]
	cmp r0, #0
	beq _021A59DE
	movs r0, #1
	str r0, [sp, #0xc]
	b _021A5B14
_021A59DE:
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_021AADE4
	str r0, [sp, #0x14]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r7, #0
	adds r3, r4, #0
	str r6, [sp]
	bl FUN_021AAECC
	str r0, [sp, #0x18]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r7, #0
	adds r3, r4, #0
	str r6, [sp]
	bl FUN_021AAFCC
	adds r7, r0, #0
	ldr r0, [sp, #4]
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0x18]
	adds r3, r7, #0
	bl FUN_021BD298
	movs r2, #4
	ldr r1, [sp, #0x34]
	lsls r2, r2, #0xa
	adds r7, r0, #0
	cmp r1, r2
	beq _021A5A34
	bl FUN_021BD364
	adds r7, r0, #0
_021A5A34:
	adds r0, r5, #0
	bl FUN_021A65A0
	ldrb r1, [r4, #6]
	bl FUN_021BD48C
	adds r1, r0, #0
	movs r0, #1
	lsls r0, r0, #0xc
	cmp r1, r0
	beq _021A5A52
	adds r0, r7, #0
	bl FUN_021BD364
	adds r7, r0, #0
_021A5A52:
	cmp r6, #0
	beq _021A5A58
	lsls r7, r7, #1
_021A5A58:
	ldr r0, [r5, #4]
	movs r1, #7
	bl FUN_0219CA38
	cmp r0, #0
	bne _021A5A90
	adds r0, r5, #0
	bl FUN_021AE34C
	cmp r0, #0
	beq _021A5A90
	ldr r0, [sp, #0x3c]
	cmp r0, #0
	beq _021A5A78
	movs r0, #0x55
	b _021A5A86
_021A5A78:
	movs r0, #0x10
	bl FUN_021BD100
	movs r1, #0x64
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
_021A5A86:
	muls r0, r7, r0
	movs r1, #0x64
	blx FUN_0208D894
	adds r7, r0, #0
_021A5A90:
	ldrb r2, [r4, #6]
	cmp r2, #0x11
	beq _021A5AA8
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021AB144
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BD364
	adds r7, r0, #0
_021A5AA8:
	ldr r1, [sp, #0x30]
	adds r0, r7, #0
	bl FUN_021BD2C0
	adds r4, r0, #0
	ldr r0, [sp, #0x10]
	cmp r0, #1
	bne _021A5ADA
	ldr r0, [sp, #4]
	bl FUN_021BBAE8
	cmp r0, #4
	bne _021A5ADA
	ldr r0, [sp, #4]
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x3e
	beq _021A5ADA
	movs r0, #0x32
	muls r0, r4, r0
	movs r1, #0x64
	blx FUN_0208D894
	adds r4, r0, #0
_021A5ADA:
	cmp r4, #0
	bne _021A5AE0
	movs r4, #1
_021A5AE0:
	movs r1, #1
	lsls r1, r1, #0xc
	movs r0, #0x35
	movs r2, #0x29
	lsls r3, r1, #5
	bl FUN_021BCEC8
	movs r0, #0x32
	adds r1, r4, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x47
	bl FUN_021BC940
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x32
	bl FUN_021BCFB0
	adds r1, r4, #0
	bl FUN_021BD364
	str r0, [sp, #8]
_021A5B14:
	adds r0, r5, #0
	movs r1, #0x48
	bl FUN_021BC940
	ldr r0, _021A5B34 ; =0x00001C9D
	bl FUN_021BCD94
	ldr r1, [sp, #0x40]
	ldr r0, [sp, #8]
	strh r0, [r1]
	ldr r0, [sp, #0xc]
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_021A5B30: .word 0x00001C31
_021A5B34: .word 0x00001C9D
	thumb_func_end FUN_021A5958

	thumb_func_start FUN_021A5B38
FUN_021A5B38: ; 0x021A5B38
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A5B9E
	add r0, sp, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021AA804
	adds r6, r0, #0
	beq _021A5B9E
	ldr r7, _021A5BA4 ; =0x00001AE4
	ldr r2, _021A5BA8 ; =0x0000017A
	adds r0, r5, r7
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, r7
	bl FUN_021AC3E0
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _021A5B90
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A5BAC
	cmp r0, #0
	beq _021A5B9E
_021A5B90:
	ldr r3, _021A5BA4 ; =0x00001AE4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r5, r3
	bl FUN_021A5BC0
_021A5B9E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A5BA4: .word 0x00001AE4
_021A5BA8: .word 0x0000017A
	thumb_func_end FUN_021A5B38

	thumb_func_start FUN_021A5BAC
FUN_021A5BAC: ; 0x021A5BAC
	push {r3, lr}
	bl FUN_021AAE88
	cmp r0, #0
	beq _021A5BBA
	movs r0, #1
	pop {r3, pc}
_021A5BBA:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021A5BAC

	thumb_func_start FUN_021A5BC0
FUN_021A5BC0: ; 0x021A5BC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r3, #0
	rsbs r2, r2, #0
	beq _021A5C12
	movs r3, #1
	bl FUN_021A96CC
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021BB800
	cmp r4, #0
	beq _021A5BEC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	adds r0, r4, #0
	bl FUN_021AC390
_021A5BEC:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #1
	movs r4, #1
	bl FUN_021A543C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A8A64
	cmp r0, #0
	beq _021A5C0E
	adds r0, r5, #0
	bl FUN_0219FD44
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
_021A5C0E:
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
_021A5C12:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A5BC0

	thumb_func_start FUN_021A5C18
FUN_021A5C18: ; 0x021A5C18
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	bl FUN_021BB380
	adds r6, r0, #0
	adds r0, r7, #0
	movs r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A5CDC ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A5CE4
	cmp r0, #0
	beq _021A5CD6
	ldr r1, _021A5CE0 ; =0x00001D78
	adds r0, r5, r1
	subs r1, #0x7e
	bl FUN_021B088C
	lsls r2, r6, #0x10
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x10
	bl FUN_021A5CF4
	cmp r0, #0
	bne _021A5C5C
	movs r4, #1
_021A5C5C:
	cmp r4, #0
	beq _021A5CCA
	ldr r0, [r5, #0xc]
	movs r1, #0x42
	bl FUN_021B14C0
	lsls r1, r6, #0x10
	ldr r2, _021A5CE0 ; =0x00001D78
	str r0, [sp]
	adds r0, r5, r2
	lsrs r1, r1, #0x10
	subs r2, #0x74
	bl FUN_021B08CC
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AA928
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #2
	beq _021A5C8E
	movs r4, #0
_021A5C8E:
	ldr r2, _021A5CE0 ; =0x00001D78
	ldr r1, [sp, #4]
	adds r0, r5, r2
	subs r2, #0x6f
	bl FUN_021B0910
	cmp r4, #0
	beq _021A5CCA
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, [r5, #0xc]
	ldr r1, [sp]
	movs r2, #0x42
	bl FUN_021B152C
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x10
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021A5CCA
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	movs r3, #1
	bl FUN_021A5D40
_021A5CCA:
	ldr r2, _021A5CE0 ; =0x00001D78
	ldr r1, [sp, #8]
	adds r0, r5, r2
	subs r2, #0x62
	bl FUN_021B0910
_021A5CD6:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A5CDC: .word 0x00001AB8
_021A5CE0: .word 0x00001D78
	thumb_func_end FUN_021A5C18

	thumb_func_start FUN_021A5CE4
FUN_021A5CE4: ; 0x021A5CE4
	bx pc
	nop
	thumb_func_end FUN_021A5CE4
_021A5CE8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A5CF4
FUN_021A5CF4: ; 0x021A5CF4
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A5D3C ; =0x00001D29
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x2d
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x90
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A5D3C: .word 0x00001D29
	thumb_func_end FUN_021A5CF4

	thumb_func_start FUN_021A5D40
FUN_021A5D40: ; 0x021A5D40
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	str r3, [sp]
	bl FUN_021BAC80
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_021BB380
	ldr r7, _021A5E00 ; =0x00001D78
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r7, #0
	str r0, [sp, #8]
	adds r0, r5, r7
	subs r1, #0x3b
	bl FUN_021B088C
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AB628
	adds r0, r5, r7
	subs r7, #0x39
	ldr r1, [sp, #0xc]
	adds r2, r7, #0
	bl FUN_021B0910
	cmp r6, #0
	bne _021A5D92
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xf
	bl FUN_021A9C44
_021A5D92:
	adds r0, r4, #0
	bl FUN_021C278C
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	movs r1, #0x1e
	adds r3, r6, #0
	bl FUN_021B1474
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB384
	cmp r6, #0
	beq _021A5DB6
	adds r0, r4, #0
	bl FUN_021C27C4
_021A5DB6:
	ldr r6, _021A5E00 ; =0x00001D78
	adds r1, r6, #0
	adds r0, r5, r6
	subs r1, #0x2b
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB664
	adds r0, r5, r6
	subs r6, #0x29
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021B0910
	ldr r0, [sp]
	cmp r0, #0
	beq _021A5DFC
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BBF70
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	movs r1, #0x17
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #8
	bl FUN_021A9C8C
_021A5DFC:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A5E00: .word 0x00001D78
	thumb_func_end FUN_021A5D40

	thumb_func_start FUN_021A5E04
FUN_021A5E04: ; 0x021A5E04
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r2, #0
	bl FUN_021A973C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A8A64
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A5E04

	thumb_func_start FUN_021A5E1C
FUN_021A5E1C: ; 0x021A5E1C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r1, #0
	add r1, sp, #0x10
	str r1, [sp]
	ldrh r1, [r5]
	adds r7, r0, #0
	str r2, [sp, #0xc]
	adds r4, r3, #0
	bl FUN_021A5E5C
	adds r6, r0, #0
	beq _021A5E56
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A5E56
	str r6, [sp]
	ldr r0, [sp, #0x10]
	ldrh r3, [r5]
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r1, [sp, #0xc]
	adds r0, r7, #0
	adds r2, r4, #0
	bl FUN_021A6094
_021A5E56:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A5E1C

	thumb_func_start FUN_021A5E5C
FUN_021A5E5C: ; 0x021A5E5C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0xb
	adds r6, r2, #0
	str r3, [sp, #4]
	ldr r5, [sp, #0x28]
	bl FUN_020212AC
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_020214DC
	add r1, sp, #0xc
	strh r0, [r1]
	adds r0, r1, #0
	ldrh r1, [r0]
	strh r1, [r0, #2]
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	add r0, sp, #0xc
	mov r1, sp
	ldrh r0, [r0, #2]
	subs r1, r1, #4
	add r2, sp, #0x10
	strh r0, [r1]
	ldr r0, [r1]
	adds r1, r6, #0
	bl FUN_021BD4C4
	ldr r0, _021A5F6C ; =0x00001D8C
	bl FUN_021BCD48
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r4, #0
	bl FUN_021BCE40
	ldr r1, [sp, #8]
	movs r0, #0x1d
	bl FUN_021BCDFC
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	ldr r1, [sp, #0x10]
	movs r0, #0x1e
	bl FUN_021BCE84
	movs r0, #0x26
	adds r1, r7, #0
	bl FUN_021BCDFC
	ldr r0, [sp]
	movs r1, #0x64
	bl FUN_021BC940
	movs r0, #0x1d
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x26
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _021A5F70 ; =0x0000FFFF
	cmp r4, r0
	bne _021A5F1A
	movs r4, #0
_021A5F1A:
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp, #0x10]
	ldr r0, _021A5F74 ; =0x00001D9F
	bl FUN_021BCD94
	cmp r7, #0
	bne _021A5F66
	cmp r4, #0
	beq _021A5F66
	movs r0, #0x64
	bl FUN_021BD100
	cmp r0, r6
	bhs _021A5F3E
	movs r0, #1
	b _021A5F40
_021A5F3E:
	movs r0, #0
_021A5F40:
	cmp r0, #0
	beq _021A5F4E
	ldr r0, [sp, #0x10]
	add sp, #0x14
	str r0, [r5]
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_021A5F4E:
	ldr r0, [sp]
	movs r1, #0
	ldr r0, [r0, #4]
	bl FUN_0219CA38
	cmp r0, #0
	beq _021A5F66
	ldr r0, [sp, #0x10]
	add sp, #0x14
	str r0, [r5]
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_021A5F66:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A5F6C: .word 0x00001D8C
_021A5F70: .word 0x0000FFFF
_021A5F74: .word 0x00001D9F
	thumb_func_end FUN_021A5E5C

	thumb_func_start FUN_021A5F78
FUN_021A5F78: ; 0x021A5F78
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	movs r1, #0xb
	adds r4, r2, #0
	str r3, [sp, #0xc]
	bl FUN_020212AC
	str r0, [sp, #0x14]
	adds r0, r7, #0
	bl FUN_020214DC
	add r1, sp, #0x24
	strh r0, [r1]
	adds r0, r1, #0
	ldrh r1, [r0]
	strh r1, [r0, #2]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xc]
	bl FUN_021A6054
	cmp r0, #0
	beq _021A603E
	ldr r0, [sp, #0xc]
	bl FUN_021A6064
	ldr r0, [sp, #0xc]
	bl FUN_021A6074
	adds r6, r0, #0
	beq _021A6020
	mov r0, sp
	str r0, [sp, #0x18]
	subs r0, r0, #4
	str r0, [sp, #0x18]
	add r0, sp, #0x24
	ldrh r0, [r0, #2]
	str r0, [sp, #0x1c]
	movs r0, #1
	str r0, [sp, #0x20]
_021A5FCE:
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	add r2, sp, #0x28
	strh r1, [r0]
	ldr r0, [r0]
	adds r1, r4, #0
	bl FUN_021BD4C4
	ldr r0, [sp, #0x14]
	adds r2, r6, #0
	str r0, [sp]
	ldr r1, [sp, #0x28]
	add r0, sp, #4
	str r1, [r0]
	movs r0, #1
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r3, r7, #0
	bl FUN_021A6094
	cmp r0, #0
	beq _021A6016
	ldr r0, _021A604C ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A6012
	ldr r1, [sp, #0x20]
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
_021A6012:
	movs r0, #1
	str r0, [sp, #0x10]
_021A6016:
	ldr r0, [sp, #0xc]
	bl FUN_021A6084
	adds r6, r0, #0
	bne _021A5FCE
_021A6020:
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _021A6048
	ldr r0, _021A6050 ; =0x0000078A
	ldrb r0, [r5, r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	bne _021A6048
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A9270
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
_021A603E:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A9270
_021A6048:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A604C: .word 0x000004A8
_021A6050: .word 0x0000078A
	thumb_func_end FUN_021A5F78

	thumb_func_start FUN_021A6054
FUN_021A6054: ; 0x021A6054
	bx pc
	nop
	thumb_func_end FUN_021A6054
_021A6058:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6064
FUN_021A6064: ; 0x021A6064
	bx pc
	nop
	thumb_func_end FUN_021A6064
_021A6068:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6074
FUN_021A6074: ; 0x021A6074
	bx pc
	nop
	thumb_func_end FUN_021A6074
_021A6078:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6084
FUN_021A6084: ; 0x021A6084
	bx pc
	nop
	thumb_func_end FUN_021A6084
_021A6088:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6094
FUN_021A6094: ; 0x021A6094
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r6, _021A6134 ; =0x00001AE4
	adds r5, r0, #0
	adds r0, r5, r6
	adds r7, r1, #0
	str r2, [sp, #0xc]
	ldr r4, [sp, #0x28]
	bl FUN_021AC390
	ldr r0, _021A6138 ; =0x0000FFFF
	cmp r4, r0
	bne _021A60CA
	ldr r2, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r5, r6
	bl FUN_021A613C
	adds r4, r0, #0
	beq _021A60C4
	ldr r0, _021A6138 ; =0x0000FFFF
	cmp r4, r0
	bne _021A60DA
_021A60C4:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A60CA:
	adds r0, r5, r6
	str r0, [sp]
	ldr r3, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A6198
_021A60DA:
	add r0, sp, #0x2c
	str r0, [sp]
	ldr r2, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r4, #0
	bl FUN_021A61EC
	ldr r0, _021A6134 ; =0x00001AE4
	adds r0, r5, r0
	bl FUN_021AC3A8
	movs r6, #1
	cmp r0, #0
	beq _021A60FA
	movs r6, #0
_021A60FA:
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	adds r2, r7, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r3, r4, #0
	str r6, [sp, #8]
	bl FUN_021A6248
	cmp r0, #0
	beq _021A612E
	cmp r6, #0
	bne _021A6128
	ldr r4, _021A6134 ; =0x00001AE4
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_021AD520
	adds r0, r5, r4
	bl FUN_021AC390
_021A6128:
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A612E:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6134: .word 0x00001AE4
_021A6138: .word 0x0000FFFF
	thumb_func_end FUN_021A6094

	thumb_func_start FUN_021A613C
FUN_021A613C: ; 0x021A613C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A6194 ; =0x00001E11
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x3f
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x1d
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x60
	bl FUN_021BC940
	movs r0, #0x1d
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A6194 ; =0x00001E11
	adds r0, r0, #7
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6194: .word 0x00001E11
	thumb_func_end FUN_021A613C

	thumb_func_start FUN_021A6198
FUN_021A6198: ; 0x021A6198
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A61E8 ; =0x00001E28
	adds r6, r2, #0
	adds r4, r1, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x3f
	bl FUN_021BCE40
	movs r0, #0x1d
	adds r1, r4, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x61
	bl FUN_021BC940
	ldr r0, _021A61E8 ; =0x00001E28
	adds r0, r0, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A61E8: .word 0x00001E28
	thumb_func_end FUN_021A6198

	thumb_func_start FUN_021A61EC
FUN_021A61EC: ; 0x021A61EC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A6244 ; =0x00001E3E
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	ldr r4, [sp, #0x18]
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x1d
	bl FUN_021BCE40
	ldr r1, [r4]
	movs r0, #0x1e
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x62
	bl FUN_021BC940
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [r4]
	ldr r0, _021A6244 ; =0x00001E3E
	adds r0, r0, #7
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6244: .word 0x00001E3E
	thumb_func_end FUN_021A61EC

	thumb_func_start FUN_021A6248
FUN_021A6248: ; 0x021A6248
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r6, [sp, #0x28]
	adds r5, r0, #0
	str r6, [sp]
	movs r6, #0
	str r6, [sp, #4]
	ldr r6, [sp, #0x2c]
	adds r4, r1, #0
	adds r7, r2, #0
	str r3, [sp, #0x10]
	str r6, [sp, #8]
	bl FUN_021A6290
	cmp r0, #0
	bne _021A6288
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x10]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	adds r1, r4, #0
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r7, #0
	bl FUN_021A6400
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A6288:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A6248

	thumb_func_start FUN_021A6290
FUN_021A6290: ; 0x021A6290
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r2, #0
	add r2, sp, #0x20
	ldrb r2, [r2, #4]
	adds r4, r3, #0
	add r3, sp, #0x20
	str r2, [sp]
	ldr r3, [r3]
	adds r2, r4, #0
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_021A631C
	adds r2, r0, #0
	beq _021A62C6
	ldr r0, [sp, #0x28]
	cmp r0, #0
	beq _021A62C0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r3, r4, #0
	bl FUN_021A97CC
_021A62C0:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021A62C6:
	ldr r1, _021A6314 ; =0x00001D78
	adds r0, r5, r1
	adds r1, #0xfb
	bl FUN_021B088C
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	adds r3, r4, #0
	bl FUN_021A662C
	str r0, [sp, #4]
	cmp r0, #0
	beq _021A6300
	ldr r0, [sp, #0x28]
	cmp r0, #0
	beq _021A6300
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_021A6694
	ldr r1, _021A6318 ; =0x0000078A
	movs r0, #0x10
	ldrb r2, [r5, r1]
	orrs r0, r2
	strb r0, [r5, r1]
_021A6300:
	ldr r0, _021A6314 ; =0x00001D78
	movs r2, #0x7a
	ldr r1, [sp, #8]
	adds r0, r5, r0
	lsls r2, r2, #6
	bl FUN_021B0910
	ldr r0, [sp, #4]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A6314: .word 0x00001D78
_021A6318: .word 0x0000078A
	thumb_func_end FUN_021A6290

	thumb_func_start FUN_021A631C
FUN_021A631C: ; 0x021A631C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A633C
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r0, #2
	beq _021A633C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A633C:
	cmp r4, #6
	bge _021A6356
	adds r0, r5, #0
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021A6356
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r0, #0
	bne _021A6356
	movs r0, #3
	pop {r4, r5, r6, pc}
_021A6356:
	adds r0, r6, #0
	bl FUN_021A65A0
	cmp r0, #1
	bne _021A6368
	cmp r4, #3
	bne _021A6368
	movs r0, #3
	pop {r4, r5, r6, pc}
_021A6368:
	cmp r4, #5
	bne _021A638E
	adds r0, r5, #0
	bl FUN_021BB03C
	movs r1, #8
	adds r6, r0, #0
	bl FUN_021CE5A4
	cmp r0, #0
	bne _021A638A
	adds r0, r6, #0
	movs r1, #3
	bl FUN_021CE5A4
	cmp r0, #0
	beq _021A638E
_021A638A:
	movs r0, #2
	pop {r4, r5, r6, pc}
_021A638E:
	cmp r4, #4
	bne _021A63A6
	adds r0, r5, #0
	bl FUN_021BB03C
	movs r1, #9
	bl FUN_021CE5A4
	cmp r0, #0
	beq _021A63A6
	movs r0, #2
	pop {r4, r5, r6, pc}
_021A63A6:
	cmp r4, #3
	bne _021A63BE
	adds r0, r5, #0
	bl FUN_021BB03C
	movs r1, #0xe
	bl FUN_021CE5A4
	cmp r0, #0
	beq _021A63BE
	movs r0, #2
	pop {r4, r5, r6, pc}
_021A63BE:
	cmp r4, #0x12
	bne _021A63D6
	adds r0, r5, #0
	bl FUN_021BB03C
	movs r1, #0xb
	bl FUN_021CE5A4
	cmp r0, #0
	beq _021A63D6
	movs r0, #2
	pop {r4, r5, r6, pc}
_021A63D6:
	cmp r4, #0xe
	bne _021A63E8
	adds r0, r5, #0
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021A63E8
	movs r0, #3
	pop {r4, r5, r6, pc}
_021A63E8:
	cmp r4, #0x10
	bne _021A63FC
	adds r0, r5, #0
	movs r1, #0x10
	bl FUN_021BB1F4
	cmp r0, #0x79
	bne _021A63FC
	movs r0, #3
	pop {r4, r5, r6, pc}
_021A63FC:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A631C

	thumb_func_start FUN_021A6400
FUN_021A6400: ; 0x021A6400
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r3, #0
	add r3, sp, #0x20
	adds r7, r2, #0
	ldr r3, [r3]
	adds r2, r6, #0
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_021A9774
	cmp r6, #7
	bhi _021A6472
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A6426: ; jump table
	.short _021A6472 - _021A6426 - 2 ; case 0
	.short _021A6446 - _021A6426 - 2 ; case 1
	.short _021A6456 - _021A6426 - 2 ; case 2
	.short _021A644E - _021A6426 - 2 ; case 3
	.short _021A643E - _021A6426 - 2 ; case 4
	.short _021A6436 - _021A6426 - 2 ; case 5
	.short _021A645E - _021A6426 - 2 ; case 6
	.short _021A6466 - _021A6426 - 2 ; case 7
_021A6436:
	ldr r2, _021A656C ; =0x00000257
	adds r0, r4, #0
	adds r1, r5, #0
_021A643C:
	b _021A646E
_021A643E:
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x96
	b _021A646C
_021A6446:
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _021A6570 ; =0x0000025A
	b _021A643C
_021A644E:
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _021A6574 ; =0x00000259
	b _021A643C
_021A6456:
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _021A6578 ; =0x00000256
	b _021A643C
_021A645E:
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _021A657C ; =0x0000025B
	b _021A643C
_021A6466:
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x97
_021A646C:
	lsls r2, r2, #2
_021A646E:
	bl FUN_021A8FD8
_021A6472:
	ldr r0, [sp, #0x24]
	cmp r0, #0
	beq _021A649C
	add r1, sp, #0x20
	ldr r3, _021A6580 ; =0x00001AE4
	ldr r1, [r1]
	adds r0, r6, #0
	adds r2, r5, #0
	adds r3, r4, r3
	bl FUN_021A6590
	ldr r1, _021A6580 ; =0x00001AE4
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021AD520
	ldr r0, _021A6580 ; =0x00001AE4
	adds r0, r4, r0
	bl FUN_021AC390
	b _021A64A8
_021A649C:
	ldr r1, [sp, #0x2c]
	cmp r1, #0
	beq _021A64A8
	adds r0, r4, #0
	bl FUN_021AD520
_021A64A8:
	cmp r6, #3
	bne _021A64F6
	adds r0, r5, #0
	bl FUN_021BAC84
	movs r1, #0x7b
	lsls r1, r1, #2
	cmp r0, r1
	bne _021A64F6
	adds r0, r5, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	cmp r0, #1
	bne _021A64F6
	adds r0, r5, #0
	bl FUN_021BDD78
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021BBF18
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0x4f
	movs r3, #0
	bl FUN_021B1474
	adds r0, r5, #0
	bl FUN_021BDCEC
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0xde
	bl FUN_021A98E0
_021A64F6:
	ldr r0, _021A6584 ; =0x00001D78
	ldr r1, _021A6588 ; =0x00001F10
	adds r0, r4, r0
	bl FUN_021B088C
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_021BD5C0
	cmp r0, #0
	beq _021A651E
	ldr r0, [sp, #0x20]
	adds r1, r5, #0
	str r0, [sp]
	adds r0, r4, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021A66E0
	b _021A654C
_021A651E:
	cmp r6, #0x10
	bne _021A6540
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A6798
	adds r0, r5, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x7f
	bne _021A654C
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A7ACC
	b _021A654C
_021A6540:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021A6740
_021A654C:
	ldr r0, _021A6584 ; =0x00001D78
	ldr r1, [sp, #4]
	ldr r2, _021A658C ; =0x00001F1F
	adds r0, r4, r0
	bl FUN_021B0910
	ldr r0, [sp, #0x28]
	cmp r0, #0
	bne _021A6568
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #3
	bl FUN_021A543C
_021A6568:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A656C: .word 0x00000257
_021A6570: .word 0x0000025A
_021A6574: .word 0x00000259
_021A6578: .word 0x00000256
_021A657C: .word 0x0000025B
_021A6580: .word 0x00001AE4
_021A6584: .word 0x00001D78
_021A6588: .word 0x00001F10
_021A658C: .word 0x00001F1F
	thumb_func_end FUN_021A6400

	thumb_func_start FUN_021A6590
FUN_021A6590: ; 0x021A6590
	bx pc
	nop
	thumb_func_end FUN_021A6590
_021A6594:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xED, 0xC4, 0x89, 0x06

	thumb_func_start FUN_021A65A0
FUN_021A65A0: ; 0x021A65A0
	push {r4, r5, r6, lr}
	ldr r6, _021A65DC ; =0x00001F33
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	adds r0, r4, #0
	movs r1, #0x7a
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #4
	bl FUN_021BCD94
	cmp r4, #0
	bne _021A65D6
	bl FUN_021D59F0
	adds r5, r0, #0
_021A65D6:
	adds r0, r5, #0
	pop {r4, r5, r6, pc}
	nop
_021A65DC: .word 0x00001F33
	thumb_func_end FUN_021A65A0

	thumb_func_start FUN_021A65E0
FUN_021A65E0: ; 0x021A65E0
	push {r4, r5, r6, lr}
	ldr r6, _021A6624 ; =0x00001F4D
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	movs r5, #2
	bl FUN_021BCE40
	ldr r2, _021A6628 ; =0x0000019A
	movs r0, #0x35
	lsls r1, r5, #0xb
	lsls r3, r5, #0x10
	bl FUN_021BCEC8
	adds r0, r4, #0
	movs r1, #0x7b
	bl FUN_021BC940
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A6624: .word 0x00001F4D
_021A6628: .word 0x0000019A
	thumb_func_end FUN_021A65E0

	thumb_func_start FUN_021A662C
FUN_021A662C: ; 0x021A662C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A668C ; =0x00001F65
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	cmp r4, #0
	beq _021A664A
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	b _021A664C
_021A664A:
	movs r1, #0x1f
_021A664C:
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x1d
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x65
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A6690 ; =0x00001F6C
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A668C: .word 0x00001F65
_021A6690: .word 0x00001F6C
	thumb_func_end FUN_021A662C

	thumb_func_start FUN_021A6694
FUN_021A6694: ; 0x021A6694
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A66DC ; =0x00001F7A
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCDFC
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCDFC
	movs r0, #0x1d
	adds r1, r7, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x67
	bl FUN_021BC940
	ldr r0, _021A66DC ; =0x00001F7A
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A66DC: .word 0x00001F7A
	thumb_func_end FUN_021A6694

	thumb_func_start FUN_021A66E0
FUN_021A66E0: ; 0x021A66E0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A6738 ; =0x00001F8E
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	cmp r4, #0
	beq _021A670C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	b _021A670E
_021A670C:
	movs r1, #0x1f
_021A670E:
	lsls r1, r1, #0x18
	movs r0, #3
	lsrs r1, r1, #0x18
	bl FUN_021BCE40
	movs r0, #0x1d
	adds r1, r7, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x1e
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x68
	bl FUN_021BC940
	ldr r0, _021A673C ; =0x00001F97
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6738: .word 0x00001F8E
_021A673C: .word 0x00001F97
	thumb_func_end FUN_021A66E0

	thumb_func_start FUN_021A6740
FUN_021A6740: ; 0x021A6740
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A6790 ; =0x00001FA5
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	cmp r4, #0
	beq _021A676C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	b _021A676E
_021A676C:
	movs r1, #0x1f
_021A676E:
	lsls r1, r1, #0x18
	movs r0, #3
	lsrs r1, r1, #0x18
	bl FUN_021BCE40
	movs r0, #0x1d
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x69
	bl FUN_021BC940
	ldr r0, _021A6794 ; =0x00001FAD
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6790: .word 0x00001FA5
_021A6794: .word 0x00001FAD
	thumb_func_end FUN_021A6740

	thumb_func_start FUN_021A6798
FUN_021A6798: ; 0x021A6798
	push {r4, r5, r6, lr}
	ldr r6, _021A67C4 ; =0x00001FB9
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x6a
	bl FUN_021BC934
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A67C4: .word 0x00001FB9
	thumb_func_end FUN_021A6798

	thumb_func_start FUN_021A67C8
FUN_021A67C8: ; 0x021A67C8
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r3, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A67FC
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A6800
	cmp r0, #0
	beq _021A67FC
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A6954
_021A67FC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A67C8

	thumb_func_start FUN_021A6800
FUN_021A6800: ; 0x021A6800
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	movs r1, #0x12
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _021A68B0 ; =0x00001FDE
	str r0, [sp, #4]
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	movs r4, #0
	bl FUN_021BCE84
	movs r0, #0x26
	adds r1, r6, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x51
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	movs r0, #0x26
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #4]
	adds r0, #0xa
	str r0, [sp, #4]
	bl FUN_021BCD94
	cmp r7, #0
	bne _021A68A8
	movs r0, #0x64
	bl FUN_021BD100
	cmp r0, r6
	bhs _021A688C
	movs r4, #1
_021A688C:
	cmp r4, #0
	beq _021A6896
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A6896:
	ldr r0, [r5, #4]
	movs r1, #0
	bl FUN_0219CA38
	cmp r0, #0
	beq _021A68A8
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A68A8:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A68B0: .word 0x00001FDE
	thumb_func_end FUN_021A6800

	thumb_func_start FUN_021A68B4
FUN_021A68B4: ; 0x021A68B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	str r3, [sp, #4]
	adds r0, r3, #0
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021A690C
	ldr r0, [sp, #4]
	bl FUN_021A691C
	adds r3, r0, #0
	beq _021A6902
	movs r4, #1
_021A68D2:
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021A6954
	cmp r0, #0
	beq _021A68F8
	ldr r0, _021A6908 ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A68F8
	bics r2, r4
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
_021A68F8:
	ldr r0, [sp, #4]
	bl FUN_021A692C
	adds r3, r0, #0
	bne _021A68D2
_021A6902:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A6908: .word 0x000004A8
	thumb_func_end FUN_021A68B4

	thumb_func_start FUN_021A690C
FUN_021A690C: ; 0x021A690C
	bx pc
	nop
	thumb_func_end FUN_021A690C
_021A6910:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A691C
FUN_021A691C: ; 0x021A691C
	bx pc
	nop
	thumb_func_end FUN_021A691C
_021A6920:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A692C
FUN_021A692C: ; 0x021A692C
	bx pc
	nop
	thumb_func_end FUN_021A692C
_021A6930:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A693C
FUN_021A693C: ; 0x021A693C
	ldr r1, _021A6950 ; =0x00000778
	ldr r2, [r0, r1]
	adds r2, r2, #1
	str r2, [r0, r1]
	bne _021A694A
	movs r2, #1
	str r2, [r0, r1]
_021A694A:
	ldr r1, _021A6950 ; =0x00000778
	ldr r0, [r0, r1]
	bx lr
	.align 2, 0
_021A6950: .word 0x00000778
	thumb_func_end FUN_021A693C

	thumb_func_start FUN_021A6954
FUN_021A6954: ; 0x021A6954
	push {r4, r5, r6, r7, lr}
	sub sp, #0x3c
	adds r6, r0, #0
	ldr r0, [sp, #0x50]
	str r1, [sp, #0x18]
	str r0, [sp, #0x50]
	movs r0, #0
	str r0, [sp, #0x30]
	adds r0, r2, #0
	str r2, [sp, #0x1c]
	adds r7, r3, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021A693C
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x18]
	ldrh r0, [r0]
	bl FUN_020215A4
	str r0, [sp, #0x2c]
	movs r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	bls _021A6A50
_021A698C:
	ldr r1, [sp, #0x18]
	movs r0, #0
	str r0, [sp, #0x20]
	str r7, [sp]
	add r0, sp, #0x38
	str r0, [sp, #4]
	add r0, sp, #0x34
	str r0, [sp, #8]
	ldrh r1, [r1]
	ldr r2, [sp, #0x28]
	ldr r3, [sp, #0x1c]
	adds r0, r6, #0
	bl FUN_021A6A60
	ldr r0, [sp, #0x38]
	cmp r0, #0
	beq _021A6A44
	cmp r0, #0xa
	beq _021A69D8
	ldr r0, [sp, #0x34]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [sp, #0x20]
	str r4, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	adds r2, r7, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x10]
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r3, [sp, #0x38]
	adds r0, r6, #0
	bl FUN_021A6AF8
	str r0, [sp, #0x20]
	b _021A6A0E
_021A69D8:
	movs r5, #1
_021A69DA:
	ldr r0, [sp, #0x34]
	adds r1, r4, #0
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	adds r2, r7, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x50]
	adds r3, r5, #0
	str r0, [sp, #0x10]
	movs r0, #1
	str r0, [sp, #0x14]
	adds r0, r6, #0
	bl FUN_021A6AF8
	cmp r0, #0
	beq _021A6A04
	movs r0, #1
	str r0, [sp, #0x20]
_021A6A04:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #6
	blo _021A69DA
_021A6A0E:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021A6A44
	ldr r0, _021A6A58 ; =0x00001D78
	ldr r1, _021A6A5C ; =0x00002047
	adds r0, r6, r0
	bl FUN_021B088C
	adds r5, r0, #0
	ldr r0, [sp, #0x34]
	ldr r2, [sp, #0x18]
	str r0, [sp]
	ldrh r2, [r2]
	ldr r3, [sp, #0x38]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB400
	ldr r0, _021A6A58 ; =0x00001D78
	ldr r2, _021A6A5C ; =0x00002047
	adds r0, r6, r0
	adds r1, r5, #0
	adds r2, r2, #2
	bl FUN_021B0910
	movs r0, #1
	str r0, [sp, #0x30]
_021A6A44:
	ldr r0, [sp, #0x28]
	adds r1, r0, #1
	ldr r0, [sp, #0x2c]
	str r1, [sp, #0x28]
	cmp r1, r0
	blo _021A698C
_021A6A50:
	ldr r0, [sp, #0x30]
	add sp, #0x3c
	pop {r4, r5, r6, r7, pc}
	nop
_021A6A58: .word 0x00001D78
_021A6A5C: .word 0x00002047
	thumb_func_end FUN_021A6954

	thumb_func_start FUN_021A6A60
FUN_021A6A60: ; 0x021A6A60
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x20]
	ldr r5, [sp, #0x1c]
	adds r6, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r4, #0
	adds r7, r3, #0
	bl FUN_02021640
	str r0, [r5]
	ldr r0, _021A6AF0 ; =0x00002063
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp, #0x18]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldr r1, [r5]
	movs r0, #0x1f
	bl FUN_021BCDFC
	ldr r1, [r4]
	movs r0, #0x20
	bl FUN_021BCDFC
	movs r0, #0x35
	movs r1, #1
	bl FUN_021BCDFC
	adds r0, r6, #0
	movs r1, #0x59
	bl FUN_021BC940
	movs r0, #0x1f
	bl FUN_021BCFB0
	str r0, [r5]
	movs r0, #0x20
	bl FUN_021BCFB0
	str r0, [r4]
	movs r0, #0x35
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bls _021A6ADC
	ldr r0, [r4]
	muls r1, r0, r1
	str r1, [r4]
_021A6ADC:
	ldr r0, _021A6AF4 ; =0x00002072
	bl FUN_021BCD94
	ldr r0, [r5]
	cmp r0, #8
	bne _021A6AEC
	movs r0, #0
	str r0, [r5]
_021A6AEC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A6AF0: .word 0x00002063
_021A6AF4: .word 0x00002072
	thumb_func_end FUN_021A6A60

	thumb_func_start FUN_021A6AF8
FUN_021A6AF8: ; 0x021A6AF8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r3, #0
	add r3, sp, #0x28
	str r1, [sp, #8]
	ldrh r1, [r3, #8]
	ldr r6, [sp, #0x28]
	adds r4, r2, #0
	str r1, [sp]
	str r6, [sp, #4]
	ldrb r3, [r3, #4]
	adds r1, r4, #0
	adds r2, r7, #0
	adds r5, r0, #0
	bl FUN_021A6C1C
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021BB554
	cmp r0, #0
	bne _021A6B4A
	ldr r0, [sp, #0x38]
	cmp r0, #0
	beq _021A6B44
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021A95A4
	ldr r1, _021A6C08 ; =0x0000078A
	movs r0, #0x10
	ldrb r2, [r5, r1]
	orrs r0, r2
	strb r0, [r5, r1]
_021A6B44:
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021A6B4A:
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	beq _021A6B7C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, [sp, #8]
	cmp r0, r3
	beq _021A6B7C
	ldr r0, [sp, #0x38]
	cmp r0, #0
	beq _021A6B76
	ldr r0, _021A6C0C ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0xd2
	bl FUN_021B1610
_021A6B76:
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021A6B7C:
	movs r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x34]
	str r6, [sp]
	str r0, [sp, #4]
	ldr r3, [sp, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021AB308
	cmp r0, #0
	beq _021A6BD6
	add r0, sp, #0x28
	ldrh r0, [r0, #8]
	adds r1, r4, #0
	adds r2, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x3c]
	adds r3, r6, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_021A95E4
	ldr r0, _021A6C10 ; =0x00001D78
	ldr r1, _021A6C14 ; =0x000020AD
	adds r0, r5, r0
	bl FUN_021B088C
	str r6, [sp]
	str r0, [sp, #0x10]
	ldr r1, [sp, #8]
	adds r0, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021AB3B4
	ldr r0, _021A6C10 ; =0x00001D78
	ldr r2, _021A6C14 ; =0x000020AD
	ldr r1, [sp, #0x10]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	b _021A6C02
_021A6BD6:
	ldr r0, [sp, #0x38]
	cmp r0, #0
	beq _021A6BFE
	ldr r7, _021A6C10 ; =0x00001D78
	ldr r1, _021A6C18 ; =0x000020B6
	adds r0, r5, r7
	bl FUN_021B088C
	adds r6, r0, #0
	ldr r2, [sp, #0x34]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB378
	ldr r2, _021A6C18 ; =0x000020B6
	adds r0, r5, r7
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
_021A6BFE:
	movs r0, #0
	str r0, [sp, #0xc]
_021A6C02:
	ldr r0, [sp, #0xc]
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A6C08: .word 0x0000078A
_021A6C0C: .word 0xFFFF0000
_021A6C10: .word 0x00001D78
_021A6C14: .word 0x000020AD
_021A6C18: .word 0x000020B6
	thumb_func_end FUN_021A6AF8

	thumb_func_start FUN_021A6C1C
FUN_021A6C1C: ; 0x021A6C1C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A6C6C ; =0x000020D1
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #3
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x1f
	adds r1, r6, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x1c]
	movs r0, #0x20
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x5a
	bl FUN_021BC940
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A6C70 ; =0x000020D8
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6C6C: .word 0x000020D1
_021A6C70: .word 0x000020D8
	thumb_func_end FUN_021A6C1C

	thumb_func_start FUN_021A6C74
FUN_021A6C74: ; 0x021A6C74
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r6, r1, #0
	adds r5, r0, #0
	ldrh r0, [r6]
	movs r1, #0xb
	adds r7, r2, #0
	str r3, [sp, #0xc]
	bl FUN_020212AC
	str r0, [sp, #0x10]
	ldrh r0, [r6]
	bl FUN_020214DC
	add r1, sp, #0x20
	strh r0, [r1]
	ldrh r2, [r1]
	mov r0, sp
	subs r0, r0, #4
	strh r2, [r1, #2]
	strh r2, [r0]
	ldr r0, [r0]
	adds r1, r7, #0
	add r2, sp, #0x24
	bl FUN_021BD4C4
	ldr r0, [sp, #0xc]
	bl FUN_021A6D34
	ldr r0, [sp, #0xc]
	bl FUN_021A6D44
	adds r4, r0, #0
	beq _021A6D2C
	movs r0, #1
	str r0, [sp, #0x14]
	str r0, [sp, #0x1c]
	ldr r0, _021A6D30 ; =0x000004A8
	adds r0, r5, r0
	str r0, [sp, #0x18]
_021A6CC4:
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_021A6954
	cmp r0, #0
	beq _021A6CEE
	ldr r0, _021A6D30 ; =0x000004A8
	ldr r1, [r5, r0]
	ldrb r0, [r1, #5]
	lsls r2, r0, #0x1f
	lsrs r2, r2, #0x1f
	bne _021A6CEE
	ldr r2, [sp, #0x14]
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r1, #5]
_021A6CEE:
	ldr r0, [sp, #0x10]
	ldrh r3, [r6]
	str r0, [sp]
	ldr r1, [sp, #0x24]
	add r0, sp, #4
	str r1, [r0]
	movs r0, #1
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021A6094
	cmp r0, #0
	beq _021A6D22
	ldr r0, [sp, #0x18]
	ldr r0, [r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A6D22
	ldr r1, [sp, #0x1c]
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
_021A6D22:
	ldr r0, [sp, #0xc]
	bl FUN_021A6D54
	adds r4, r0, #0
	bne _021A6CC4
_021A6D2C:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A6D30: .word 0x000004A8
	thumb_func_end FUN_021A6C74

	thumb_func_start FUN_021A6D34
FUN_021A6D34: ; 0x021A6D34
	bx pc
	nop
	thumb_func_end FUN_021A6D34
_021A6D38:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6D44
FUN_021A6D44: ; 0x021A6D44
	bx pc
	nop
	thumb_func_end FUN_021A6D44
_021A6D48:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6D54
FUN_021A6D54: ; 0x021A6D54
	bx pc
	nop
	thumb_func_end FUN_021A6D54
_021A6D58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6D64
FUN_021A6D64: ; 0x021A6D64
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	str r3, [sp, #8]
	adds r0, r3, #0
	str r1, [sp, #4]
	bl FUN_021A6E0C
	ldr r0, [sp, #8]
	bl FUN_021A6E1C
	adds r4, r0, #0
	beq _021A6DF6
	movs r7, #1
_021A6D80:
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A6E60
	cmp r0, #0
	bne _021A6DD2
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021AB538
	adds r2, r0, #0
	lsls r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	movs r3, #1
	bl FUN_021A6E3C
	cmp r0, #0
	beq _021A6DEC
	ldr r0, _021A6DFC ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A6DC6
	bics r2, r7
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
_021A6DC6:
	ldr r0, _021A6E00 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	ldr r2, _021A6E04 ; =0x00000183
	b _021A6DE6
_021A6DD2:
	adds r0, r4, #0
	bl FUN_021BB388
	cmp r0, #0
	beq _021A6DEC
	ldr r0, _021A6E00 ; =0xFFFF0000
	ldr r2, _021A6E08 ; =0x0000037D
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
_021A6DE6:
	adds r3, r6, #0
	bl FUN_021B1610
_021A6DEC:
	ldr r0, [sp, #8]
	bl FUN_021A6E2C
	adds r4, r0, #0
	bne _021A6D80
_021A6DF6:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021A6DFC: .word 0x000004A8
_021A6E00: .word 0xFFFF0000
_021A6E04: .word 0x00000183
_021A6E08: .word 0x0000037D
	thumb_func_end FUN_021A6D64

	thumb_func_start FUN_021A6E0C
FUN_021A6E0C: ; 0x021A6E0C
	bx pc
	nop
	thumb_func_end FUN_021A6E0C
_021A6E10:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6E1C
FUN_021A6E1C: ; 0x021A6E1C
	bx pc
	nop
	thumb_func_end FUN_021A6E1C
_021A6E20:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6E2C
FUN_021A6E2C: ; 0x021A6E2C
	bx pc
	nop
	thumb_func_end FUN_021A6E2C
_021A6E30:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A6E3C
FUN_021A6E3C: ; 0x021A6E3C
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	adds r2, r3, #0
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021A6E84
	cmp r0, #0
	bne _021A6E5C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A6ED8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A6E5C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A6E3C

	thumb_func_start FUN_021A6E60
FUN_021A6E60: ; 0x021A6E60
	push {r4, lr}
	adds r4, r1, #0
	adds r0, r4, #0
	bl FUN_021BB3BC
	cmp r0, #0
	bne _021A6E72
	movs r0, #1
	pop {r4, pc}
_021A6E72:
	adds r0, r4, #0
	bl FUN_021BB388
	cmp r0, #0
	beq _021A6E80
	movs r0, #1
	pop {r4, pc}
_021A6E80:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021A6E60

	thumb_func_start FUN_021A6E84
FUN_021A6E84: ; 0x021A6E84
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xf
	adds r6, r2, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A6EC4
	cmp r6, #0
	beq _021A6EBE
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A6ECC ; =0xFFFF0000
	ldr r2, _021A6ED0 ; =0x00000377
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	ldr r1, _021A6ED4 ; =0x0000078A
	movs r0, #0x20
	ldrb r2, [r5, r1]
	orrs r0, r2
	strb r0, [r5, r1]
_021A6EBE:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021A6EC4:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021A6ECC: .word 0xFFFF0000
_021A6ED0: .word 0x00000377
_021A6ED4: .word 0x0000078A
	thumb_func_end FUN_021A6E84

	thumb_func_start FUN_021A6ED8
FUN_021A6ED8: ; 0x021A6ED8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A6F10 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A6F18
	adds r2, r0, #0
	cmp r2, #6
	beq _021A6F00
	ldr r0, [r5, #0xc]
	ldr r3, _021A6F14 ; =0x00000263
	movs r1, #0x4d
	bl FUN_021B1474
_021A6F00:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021A96CC
	pop {r4, r5, r6, pc}
	nop
_021A6F10: .word 0x00001AB8
_021A6F14: .word 0x00000263
	thumb_func_end FUN_021A6ED8

	thumb_func_start FUN_021A6F18
FUN_021A6F18: ; 0x021A6F18
	bx pc
	nop
	thumb_func_end FUN_021A6F18
_021A6F1C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A6F28
FUN_021A6F28: ; 0x021A6F28
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	adds r5, r0, #0
	movs r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	str r0, [sp, #0x14]
	adds r0, r7, #0
	movs r1, #0xf
	str r3, [sp, #0x10]
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x34]
	ldr r0, _021A713C ; =0x0000217B
	str r0, [sp, #0x38]
	adds r0, #0x31
	str r0, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x3c]
_021A6F52:
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	bl FUN_021A7150
	ldr r1, [sp, #0x14]
	adds r1, r1, #1
	str r1, [sp, #0x14]
	adds r4, r0, #0
	bne _021A6F66
	b _021A7136
_021A6F66:
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A6F52
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #0x30]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021A2E0C
	cmp r0, #0
	bne _021A6F96
	ldrh r3, [r6]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AA4A0
	cmp r0, #0
	beq _021A6F96
	b _021A6FA6
_021A6F96:
	ldrh r3, [r6]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021A34E4
	cmp r0, #0
	beq _021A6FB2
_021A6FA6:
	ldrh r2, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9284
	b _021A6F52
_021A6FB2:
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [sp, #0x34]
	cmp r0, r1
	bhs _021A6FC6
	b _021A6FD6
_021A6FC6:
	ldr r0, _021A7140 ; =0x00001F8C
	ldr r1, [sp, #0x30]
	adds r0, r5, r0
	bl FUN_021B086C
	str r0, [sp, #0x2c]
	cmp r0, #0
	bne _021A6FE0
_021A6FD6:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A92CC
	b _021A6F52
_021A6FE0:
	ldr r0, _021A7144 ; =0x00001D78
	ldr r1, _021A713C ; =0x0000217B
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0x28]
	ldrh r3, [r6]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AA5F4
	cmp r0, #0
	bne _021A6FFE
	b _021A7114
_021A6FFE:
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A7148 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A7160
	str r0, [sp, #0x24]
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	add r1, sp, #0x40
	strh r0, [r1]
	ldr r0, [sp, #0x2c]
	bl FUN_021BD328
	str r0, [sp, #0x20]
	movs r0, #0
	str r0, [sp, #0x1c]
	str r0, [sp, #0x18]
	ldr r0, _021A714C ; =0x000004A8
	ldr r1, [r5, r0]
	ldrb r0, [r1, #5]
	lsls r2, r0, #0x1f
	lsrs r2, r2, #0x1f
	bne _021A7040
	ldr r2, [sp, #0x3c]
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r1, #5]
_021A7040:
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	beq _021A706E
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A7210
	add r1, sp, #0x40
	strh r0, [r1]
	add r2, sp, #0x40
	ldrh r2, [r2]
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	movs r3, #1
	bl FUN_021A7170
	movs r0, #1
	str r0, [sp, #0x1c]
	b _021A70B6
_021A706E:
	add r0, sp, #0x40
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl FUN_021A5158
	cmp r0, #0
	bne _021A7090
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A7190
	b _021A70B6
_021A7090:
	str r0, [sp]
	add r0, sp, #0x40
	ldrh r0, [r0]
	ldr r3, [sp, #0x20]
	adds r1, r4, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A71D8
	add r2, sp, #0x40
	ldrh r2, [r2]
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	movs r3, #0
	bl FUN_021A7180
	movs r0, #1
	str r0, [sp, #0x18]
_021A70B6:
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _021A70D0
	str r6, [sp]
	add r0, sp, #0x40
	ldrh r0, [r0]
	adds r2, r7, #0
	adds r3, r4, #0
	str r0, [sp, #4]
	ldr r1, [sp, #0x24]
	adds r0, r5, #0
	bl FUN_021A5308
_021A70D0:
	ldr r0, [sp, #0x2c]
	adds r1, r7, #0
	str r0, [sp]
	add r0, sp, #0x40
	ldrh r0, [r0]
	adds r2, r4, #0
	adds r3, r6, #0
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021A7D08
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021A70FA
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _021A710A
_021A70FA:
	movs r0, #0
	str r0, [sp]
	ldr r2, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r6, #0
	bl FUN_021A5768
_021A710A:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A8A64
	b _021A7128
_021A7114:
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	bne _021A7128
	ldrh r2, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9284
_021A7128:
	ldr r0, _021A7144 ; =0x00001D78
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x38]
	adds r0, r5, r0
	bl FUN_021B0910
	b _021A6F52
_021A7136:
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	nop
_021A713C: .word 0x0000217B
_021A7140: .word 0x00001F8C
_021A7144: .word 0x00001D78
_021A7148: .word 0x00001AB8
_021A714C: .word 0x000004A8
	thumb_func_end FUN_021A6F28

	thumb_func_start FUN_021A7150
FUN_021A7150: ; 0x021A7150
	bx pc
	nop
	thumb_func_end FUN_021A7150
_021A7154:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A7160
FUN_021A7160: ; 0x021A7160
	bx pc
	nop
	thumb_func_end FUN_021A7160
_021A7164:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A7170
FUN_021A7170: ; 0x021A7170
	bx pc
	nop
	thumb_func_end FUN_021A7170
_021A7174:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x41, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A7180
FUN_021A7180: ; 0x021A7180
	bx pc
	nop
	thumb_func_end FUN_021A7180
_021A7184:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x41, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A7190
FUN_021A7190: ; 0x021A7190
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r7, r2, #0
	str r3, [sp, #4]
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BB7F8
	ldr r0, [r5, #0xc]
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021B1474
	ldrh r0, [r7]
	ldr r3, [sp, #4]
	movs r1, #0x32
	str r0, [sp]
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	adds r2, r4, #0
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	movs r1, #0x34
	adds r2, r4, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A7190

	thumb_func_start FUN_021A71D8
FUN_021A71D8: ; 0x021A71D8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r2, #0
	add r2, sp, #0x18
	ldrh r2, [r2, #4]
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r3, #0
	bl FUN_021A9BA4
	ldrh r5, [r5]
	adds r0, r6, #0
	bl FUN_021BAC80
	lsls r3, r7, #0x18
	str r5, [sp]
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0x32
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	ldr r2, [sp, #0x18]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A51D8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A71D8

	thumb_func_start FUN_021A7210
FUN_021A7210: ; 0x021A7210
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BAC80
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BC5D0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #8]
	movs r1, #0x34
	bl FUN_021B1474
	ldrh r0, [r6]
	lsls r3, r7, #0x18
	ldr r2, [sp, #8]
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x32
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A7CB0
	ldr r0, [sp, #4]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A7210

	thumb_func_start FUN_021A725C
FUN_021A725C: ; 0x021A725C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	str r1, [sp, #0x10]
	movs r0, #0
	adds r6, r3, #0
	str r0, [sp, #0x14]
	adds r0, r6, #0
	adds r4, r2, #0
	bl FUN_021A72D0
	adds r0, r6, #0
	bl FUN_021A72E0
	adds r2, r0, #0
	beq _021A72C8
	movs r7, #1
_021A727E:
	add r0, sp, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_021A7300
	cmp r0, #0
	beq _021A72AE
	ldr r0, _021A72CC ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A72BE
	bics r2, r7
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
	b _021A72BE
_021A72AE:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _021A72BE
	ldr r2, [sp, #0x10]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9270
_021A72BE:
	adds r0, r6, #0
	bl FUN_021A72F0
	adds r2, r0, #0
	bne _021A727E
_021A72C8:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A72CC: .word 0x000004A8
	thumb_func_end FUN_021A725C

	thumb_func_start FUN_021A72D0
FUN_021A72D0: ; 0x021A72D0
	bx pc
	nop
	thumb_func_end FUN_021A72D0
_021A72D4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A72E0
FUN_021A72E0: ; 0x021A72E0
	bx pc
	nop
	thumb_func_end FUN_021A72E0
_021A72E4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A72F0
FUN_021A72F0: ; 0x021A72F0
	bx pc
	nop
	thumb_func_end FUN_021A72F0
_021A72F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A7300
FUN_021A7300: ; 0x021A7300
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	ldr r7, [sp, #0x30]
	str r1, [sp, #4]
	movs r1, #0
	adds r5, r0, #0
	adds r4, r2, #0
	str r1, [r7]
	cmp r3, #0
	beq _021A7318
	movs r6, #1
	b _021A731E
_021A7318:
	bl FUN_021A74BC
	adds r6, r0, #0
_021A731E:
	cmp r6, #2
	bne _021A7328
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7328:
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	str r0, [sp, #0x10]
	cmp r0, #6
	bne _021A7344
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7344:
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021A7354
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7354:
	adds r0, r4, #0
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A7366
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7366:
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021A737C
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x18
	blo _021A737E
_021A737C:
	movs r0, #0x1f
_021A737E:
	cmp r0, #0x1f
	beq _021A7388
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7388:
	ldr r0, _021A74A4 ; =0x00001D78
	ldr r1, _021A74A8 ; =0x0000222C
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0xc]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021A753C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	beq _021A73B4
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #0
	beq _021A73B4
	movs r0, #1
	str r0, [r7]
_021A73B4:
	ldr r0, _021A74A4 ; =0x00001D78
	ldr r1, [sp, #0xc]
	ldr r2, _021A74AC ; =0x00002234
	adds r0, r5, r0
	bl FUN_021B0910
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021A73CC
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A73CC:
	add r2, sp, #0x14
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x10]
	adds r2, #1
	add r3, sp, #0x14
	bl FUN_0219C6D4
	cmp r6, #1
	bne _021A7450
	add r7, sp, #0x14
	ldrb r1, [r7, #1]
	ldr r0, [r5]
	bl FUN_0219F2A0
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021A74E4
	adds r6, r0, #0
	bmi _021A744A
	ldrb r1, [r7, #1]
	lsls r2, r6, #0x18
	ldr r0, [r5, #8]
	lsrs r2, r2, #0x18
	bl FUN_0219D228
	bl FUN_021BAC80
	add r2, sp, #0x30
	adds r7, r0, #0
	ldrh r2, [r2, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1864
	ldr r1, [sp, #0x3c]
	cmp r1, #0
	beq _021A741E
	adds r0, r5, #0
	bl FUN_021AD520
_021A741E:
	movs r0, #0
	str r0, [sp]
	add r2, sp, #0x14
	ldrb r1, [r2, #1]
	lsls r3, r6, #0x18
	ldrb r2, [r2]
	adds r0, r5, #0
	lsrs r3, r3, #0x18
	bl FUN_021A14BC
	ldr r0, _021A74B0 ; =0xFFFF0000
	ldr r2, _021A74B4 ; =0x0000034D
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r3, r7, #0
	bl FUN_021B1610
	adds r0, r5, #0
	bl FUN_021A14E8
	b _021A749E
_021A744A:
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7450:
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	bl FUN_0219C688
	adds r7, r0, #0
	ldr r0, [sp, #0x38]
	cmp r0, #0
	bne _021A7484
	ldr r0, [sp, #4]
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r6
	bls _021A7484
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7484:
	ldr r0, _021A74B8 ; =0x000004B8
	adds r1, r7, #0
	adds r0, r5, r0
	bl FUN_021BDAAC
	add r2, sp, #0x30
	ldrh r2, [r2, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A1864
	movs r0, #5
	str r0, [r5, #0x14]
_021A749E:
	movs r0, #1
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A74A4: .word 0x00001D78
_021A74A8: .word 0x0000222C
_021A74AC: .word 0x00002234
_021A74B0: .word 0xFFFF0000
_021A74B4: .word 0x0000034D
_021A74B8: .word 0x000004B8
	thumb_func_end FUN_021A7300

	thumb_func_start FUN_021A74BC
FUN_021A74BC: ; 0x021A74BC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	adds r4, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219BF14
	cmp r4, #0
	bne _021A74DE
	cmp r0, #0
	bne _021A74DA
	movs r0, #0
	pop {r3, r4, r5, pc}
_021A74DA:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021A74DE:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A74BC

	thumb_func_start FUN_021A74E4
FUN_021A74E4: ; 0x021A74E4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r4, r0, #0
	ldr r0, [r6, #4]
	bl FUN_0219D4C8
	adds r7, r0, #0
	ldrb r1, [r6, #0xb]
	ldr r0, [r4, #4]
	bl FUN_0219D2DC
	adds r4, r0, #0
	movs r5, #0
	cmp r4, r7
	bhs _021A7522
_021A7504:
	lsls r1, r4, #0x18
	ldr r0, [r6, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021A751C
	add r0, sp, #0
	strb r4, [r0, r5]
	adds r5, r5, #1
_021A751C:
	adds r4, r4, #1
	cmp r4, r7
	blo _021A7504
_021A7522:
	cmp r5, #0
	beq _021A7534
	adds r0, r5, #0
	bl FUN_021BD100
	add r1, sp, #0
	add sp, #8
	ldrb r0, [r1, r0]
	pop {r3, r4, r5, r6, r7, pc}
_021A7534:
	movs r0, #0
	mvns r0, r0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A74E4

	thumb_func_start FUN_021A753C
FUN_021A753C: ; 0x021A753C
	push {r4, r5, r6, lr}
	ldr r6, _021A7584 ; =0x000022BD
	adds r5, r0, #0
	adds r0, r6, #0
	adds r4, r2, #0
	bl FUN_021BCD48
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x8b
	bl FUN_021BC940
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A7588
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	nop
_021A7584: .word 0x000022BD
	thumb_func_end FUN_021A753C

	thumb_func_start FUN_021A7588
FUN_021A7588: ; 0x021A7588
	bx pc
	nop
	thumb_func_end FUN_021A7588
_021A758C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x2D, 0xC9, 0x89, 0x06

	thumb_func_start FUN_021A7598
FUN_021A7598: ; 0x021A7598
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	adds r6, r2, #0
	bl FUN_02021708
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	beq _021A75EE
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021A7700
	adds r2, r0, #0
	adds r2, r2, #5
	lsls r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x18
	bl FUN_021A7658
	cmp r0, #0
	beq _021A75E2
	ldr r0, _021A7648 ; =0x000004A8
	ldr r2, [r5, r0]
	ldrb r1, [r2, #5]
	lsls r0, r1, #0x1f
	lsrs r0, r0, #0x1f
	bne _021A7644
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r2, #5]
	pop {r3, r4, r5, r6, r7, pc}
_021A75E2:
	ldrh r2, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9270
	pop {r3, r4, r5, r6, r7, pc}
_021A75EE:
	ldr r0, _021A764C ; =0x00001D78
	ldr r1, _021A7650 ; =0x000022D8
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	ldrh r2, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A77BC
	adds r0, r5, #0
	bl FUN_021AC464
	movs r7, #1
	cmp r0, #2
	beq _021A7612
	movs r7, #0
_021A7612:
	ldr r0, _021A764C ; =0x00001D78
	ldr r1, [sp]
	ldr r2, _021A7654 ; =0x000022DC
	adds r0, r5, r0
	bl FUN_021B0910
	cmp r7, #0
	beq _021A763A
	ldr r0, _021A7648 ; =0x000004A8
	ldr r2, [r5, r0]
	ldrb r1, [r2, #5]
	lsls r0, r1, #0x1f
	lsrs r0, r0, #0x1f
	bne _021A7644
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r2, #5]
	pop {r3, r4, r5, r6, r7, pc}
_021A763A:
	ldrh r2, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9270
_021A7644:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A7648: .word 0x000004A8
_021A764C: .word 0x00001D78
_021A7650: .word 0x000022D8
_021A7654: .word 0x000022DC
	thumb_func_end FUN_021A7598

	thumb_func_start FUN_021A7658
FUN_021A7658: ; 0x021A7658
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021A767C
	cmp r0, #0
	beq _021A7676
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A76A8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021A7676:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A7658

	thumb_func_start FUN_021A767C
FUN_021A767C: ; 0x021A767C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r5, #5
	blo _021A768A
	movs r0, #0
	pop {r3, r4, r5, pc}
_021A768A:
	bl FUN_021D59F0
	cmp r5, r0
	bne _021A76A2
	cmp r4, #0xff
	bne _021A769E
	bl FUN_021D5A00
	cmp r0, #0xff
	bne _021A76A2
_021A769E:
	movs r0, #0
	pop {r3, r4, r5, pc}
_021A76A2:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A767C

	thumb_func_start FUN_021A76A8
FUN_021A76A8: ; 0x021A76A8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021D5A10
	ldr r0, [r5, #0xc]
	movs r1, #0x3f
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A76D0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021A76A8

	thumb_func_start FUN_021A76D0
FUN_021A76D0: ; 0x021A76D0
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A76F8 ; =0x00001D78
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, _021A76FC ; =0x00002313
	adds r0, r5, r7
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB4F0
	ldr r2, _021A76FC ; =0x00002313
	adds r0, r5, r7
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A76F8: .word 0x00001D78
_021A76FC: .word 0x00002313
	thumb_func_end FUN_021A76D0

	thumb_func_start FUN_021A7700
FUN_021A7700: ; 0x021A7700
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A774C ; =0x00002327
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	movs r0, #0x39
	adds r1, r4, #0
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x24
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x7c
	bl FUN_021BC940
	movs r0, #0x24
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A774C: .word 0x00002327
	thumb_func_end FUN_021A7700

	thumb_func_start FUN_021A7750
FUN_021A7750: ; 0x021A7750
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021A7750

	non_word_aligned_thumb_func_start FUN_021A7752
FUN_021A7752: ; 0x021A7752
	push {r3, r4, r5, r6, r7, lr}
	add r7, sp, #0x20
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r1, [r7]
	adds r0, r4, #0
	adds r6, r3, #0
	bl FUN_021D5A34
	cmp r0, #0
	beq _021A7780
	lsls r2, r4, #0x18
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x20]
	movs r1, #0x21
	lsrs r2, r2, #0x18
	bl FUN_021B1474
	movs r0, #1
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
_021A7780:
	cmp r6, #0
	beq _021A77B0
	ldr r0, [r7]
	bl FUN_021CE318
	adds r6, r0, #0
	cmp r6, #0x1f
	beq _021A77B0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021D5A64
	lsls r2, r4, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x22
	lsrs r2, r2, #0x18
	adds r3, r6, #0
	bl FUN_021B1474
	movs r0, #1
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
_021A77B0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
	thumb_func_end FUN_021A7752

	thumb_func_start FUN_021A77BC
FUN_021A77BC: ; 0x021A77BC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A77F4 ; =0x00002370
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCDFC
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x9e
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A77F4: .word 0x00002370
	thumb_func_end FUN_021A77BC

	thumb_func_start FUN_021A77F8
FUN_021A77F8: ; 0x021A77F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r0, r3, #0
	adds r4, r1, #0
	adds r6, r2, #0
	str r3, [sp, #4]
	bl FUN_021A78EC
	cmp r0, #0
	bne _021A78CC
	ldrh r1, [r4]
	cmp r1, #0xa4
	beq _021A7828
	ldr r0, _021A78D0 ; =0x0000011D
	cmp r1, r0
	bne _021A7856
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A78FC
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_021A7828:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A7B24
	cmp r0, #0
	beq _021A78CC
	ldr r0, _021A78D4 ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A78CC
	movs r1, #1
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
	ldrb r2, [r0, #5]
	movs r1, #2
	add sp, #0x10
	orrs r1, r2
	strb r1, [r0, #5]
	pop {r3, r4, r5, r6, r7, pc}
_021A7856:
	ldr r0, _021A78D8 ; =0x00001D78
	ldr r1, _021A78DC ; =0x0000238F
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #8]
	adds r0, r5, #0
	bl FUN_021AC464
	adds r7, r0, #0
	add r0, sp, #0xc
	str r0, [sp]
	ldr r3, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A7DF4
	cmp r0, #0
	beq _021A78A0
	adds r0, r5, #0
	bl FUN_021AC464
	adds r7, r0, #0
	cmp r7, #2
	bne _021A78A0
	ldr r0, _021A78D4 ; =0x000004A8
	ldr r0, [r5, r0]
	ldrb r2, [r0, #5]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	bne _021A78A0
	movs r1, #1
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r0, #5]
_021A78A0:
	cmp r7, #1
	bhi _021A78C0
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021A78C0
	ldr r0, _021A78E0 ; =0x0000078A
	ldrb r0, [r5, r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	bne _021A78C0
	ldr r0, [r5, #0xc]
	ldr r3, _021A78E4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x47
	bl FUN_021B1610
_021A78C0:
	ldr r0, _021A78D8 ; =0x00001D78
	ldr r1, [sp, #8]
	ldr r2, _021A78E8 ; =0x000023A9
	adds r0, r5, r0
	bl FUN_021B0910
_021A78CC:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A78D0: .word 0x0000011D
_021A78D4: .word 0x000004A8
_021A78D8: .word 0x00001D78
_021A78DC: .word 0x0000238F
_021A78E0: .word 0x0000078A
_021A78E4: .word 0xFFFF0000
_021A78E8: .word 0x000023A9
	thumb_func_end FUN_021A77F8

	thumb_func_start FUN_021A78EC
FUN_021A78EC: ; 0x021A78EC
	bx pc
	nop
	thumb_func_end FUN_021A78EC
_021A78F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A78FC
FUN_021A78FC: ; 0x021A78FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r0, r2, #0
	movs r1, #0
	bl FUN_021A7A9C
	str r0, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #0x10
	bl FUN_021BB1F4
	adds r4, r0, #0
	ldr r0, [sp, #0x10]
	movs r1, #0x10
	bl FUN_021BB1F4
	adds r6, r0, #0
	cmp r4, r6
	beq _021A793E
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021A7AAC
	cmp r0, #0
	bne _021A793E
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021A7ABC
	cmp r0, #0
	beq _021A7940
_021A793E:
	b _021A7A7A
_021A7940:
	adds r0, r7, #0
	bl FUN_021BAC80
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	bl FUN_021BAC80
	str r0, [sp, #8]
	ldr r0, _021A7A8C ; =0x000004A8
	ldr r1, [r5, r0]
	ldrb r0, [r1, #5]
	lsls r2, r0, #0x1f
	lsrs r2, r2, #0x1f
	bne _021A7966
	movs r2, #1
	bics r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r1, #5]
_021A7966:
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #8]
	movs r1, #0x4a
	bl FUN_021B1474
	ldr r0, _021A7A90 ; =0xFFFF0000
	movs r2, #0x7f
	str r0, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0xc]
	movs r1, #0x5b
	lsls r2, r2, #2
	bl FUN_021B1610
	ldr r0, _021A7A94 ; =0x00001D78
	ldr r1, _021A7A98 ; =0x000023C4
	adds r0, r5, r0
	str r1, [sp, #0x14]
	bl FUN_021B088C
	lsls r2, r4, #0x10
	lsls r3, r6, #0x10
	str r0, [sp, #0x18]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x10
	bl FUN_021AB694
	lsls r2, r6, #0x10
	lsls r3, r4, #0x10
	ldr r1, [sp, #8]
	adds r0, r5, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x10
	bl FUN_021AB694
	ldr r0, _021A7A94 ; =0x00001D78
	ldr r2, [sp, #0x14]
	ldr r1, [sp, #0x18]
	adds r0, r5, r0
	adds r2, r2, #3
	bl FUN_021B0910
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021BBF10
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	bl FUN_021BBF10
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	bl FUN_021BDDCC
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #0xc]
	movs r1, #0x58
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #8]
	movs r1, #0x58
	bl FUN_021B1474
	cmp r4, r6
	beq _021A7A2A
	ldr r0, _021A7A94 ; =0x00001D78
	ldr r1, [sp, #0x14]
	adds r0, r5, r0
	adds r1, #0x10
	bl FUN_021B088C
	str r0, [sp, #0x1c]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021AB6D4
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_021AB6D4
	ldr r0, _021A7A94 ; =0x00001D78
	ldr r2, [sp, #0x14]
	ldr r1, [sp, #0x1c]
	adds r2, #0x13
	adds r0, r5, r0
	str r2, [sp, #0x14]
	bl FUN_021B0910
_021A7A2A:
	adds r0, r7, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	bne _021A7A50
	cmp r4, #0x67
	bne _021A7A44
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A543C
_021A7A44:
	cmp r4, #0x7f
	bne _021A7A50
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A7ACC
_021A7A50:
	ldr r0, [sp, #0x10]
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	bne _021A7A86
	cmp r6, #0x67
	bne _021A7A6A
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	movs r2, #0
	bl FUN_021A543C
_021A7A6A:
	cmp r6, #0x7f
	bne _021A7A86
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_021A7ACC
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A7A7A:
	ldr r0, [r5, #0xc]
	ldr r3, _021A7A90 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x47
	bl FUN_021B1610
_021A7A86:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A7A8C: .word 0x000004A8
_021A7A90: .word 0xFFFF0000
_021A7A94: .word 0x00001D78
_021A7A98: .word 0x000023C4
	thumb_func_end FUN_021A78FC

	thumb_func_start FUN_021A7A9C
FUN_021A7A9C: ; 0x021A7A9C
	bx pc
	nop
	thumb_func_end FUN_021A7A9C
_021A7AA0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A7AAC
FUN_021A7AAC: ; 0x021A7AAC
	bx pc
	nop
	thumb_func_end FUN_021A7AAC
_021A7AB0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xDD, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021A7ABC
FUN_021A7ABC: ; 0x021A7ABC
	bx pc
	nop
	thumb_func_end FUN_021A7ABC
_021A7AC0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xDD, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021A7ACC
FUN_021A7ACC: ; 0x021A7ACC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	add r7, sp, #4
	adds r4, r0, #0
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021A0D9C
	adds r0, r7, #0
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	beq _021A7B1E
	movs r6, #0
_021A7AF4:
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021A7B10
	ldr r1, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A543C
_021A7B10:
	adds r0, r7, #0
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	bne _021A7AF4
_021A7B1E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A7ACC

	thumb_func_start FUN_021A7B24
FUN_021A7B24: ; 0x021A7B24
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021A7BC6
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BD3C8
	adds r6, r0, #0
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, r6
	ble _021A7BB8
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A7BD8 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A7BE4
	adds r7, r0, #0
	cmp r7, #6
	beq _021A7BB8
	adds r0, r5, #0
	adds r1, r4, #0
	rsbs r2, r6, #0
	movs r3, #1
	bl FUN_021A96CC
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021A543C
	lsls r1, r6, #0x10
	adds r0, r4, #0
	lsrs r1, r1, #0x10
	bl FUN_021BC59C
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	lsls r3, r6, #0x10
	ldr r0, [r5, #0xc]
	movs r1, #0x27
	lsrs r3, r3, #0x10
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	movs r1, #0x51
	adds r2, r7, #0
	bl FUN_021B1474
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A7BDC ; =0xFFFF0000
	ldr r2, _021A7BE0 ; =0x00000311
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A7BB8:
	adds r0, r5, #0
	movs r1, #0x7b
	movs r2, #0
	movs r3, #0
	bl FUN_021A9904
	b _021A7BD2
_021A7BC6:
	movs r2, #0xc5
	adds r0, r5, #0
	adds r1, r4, #0
	lsls r2, r2, #2
	bl FUN_021A98E0
_021A7BD2:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A7BD8: .word 0x00001AB8
_021A7BDC: .word 0xFFFF0000
_021A7BE0: .word 0x00000311
	thumb_func_end FUN_021A7B24

	thumb_func_start FUN_021A7BE4
FUN_021A7BE4: ; 0x021A7BE4
	bx pc
	nop
	thumb_func_end FUN_021A7BE4
_021A7BE8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A7BF4
FUN_021A7BF4: ; 0x021A7BF4
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021A7BF4

	non_word_aligned_thumb_func_start FUN_021A7BF6
FUN_021A7BF6: ; 0x021A7BF6
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r4, [sp, #0x40]
	adds r5, r0, #0
	ldr r0, [sp, #0x38]
	ldrh r7, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x30]
	adds r6, r1, #0
	bl FUN_021BAC80
	str r7, [sp]
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x10]
	movs r1, #0x54
	bl FUN_021B1474
	ldr r1, [sp, #0x30]
	ldr r2, _021A7CAC ; =0x00000317
	adds r0, r5, #0
	bl FUN_021A98E0
	movs r7, #0
	str r7, [sp]
	adds r0, r5, #0
	movs r1, #1
	add r2, sp, #0x38
	add r3, sp, #0x30
	bl FUN_021A9398
	str r7, [sp]
	adds r0, r5, #0
	movs r1, #1
	add r2, sp, #0x30
	add r3, sp, #0x3c
	bl FUN_021A951C
	ldr r0, [sp, #0x30]
	add r1, sp, #0x34
	bl FUN_021BC5DC
	cmp r0, #0
	beq _021A7C5A
	ldr r1, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_021A7CB0
_021A7C5A:
	add r7, sp, #0x34
	ldrh r0, [r7]
	adds r1, r4, #0
	adds r2, r6, #0
	str r0, [sp]
	ldr r3, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_021A58AC
	ldrh r0, [r7]
	adds r1, r4, #0
	adds r2, r6, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r3, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_021A5360
	ldr r0, [sp, #0x38]
	adds r1, r6, #0
	str r0, [sp]
	ldrh r0, [r7]
	adds r3, r4, #0
	str r0, [sp, #4]
	add r0, sp, #0x38
	ldrb r0, [r0, #4]
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	ldr r2, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_021A7D08
	ldrh r0, [r7]
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	nop
_021A7CAC: .word 0x00000317
	thumb_func_end FUN_021A7BF6

	thumb_func_start FUN_021A7CB0
FUN_021A7CB0: ; 0x021A7CB0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	ldr r0, _021A7CF0 ; =0x00001AB8
	adds r1, r4, #0
	adds r0, r5, r0
	bl FUN_021A7CF8
	adds r7, r0, #0
	ldr r2, _021A7CF4 ; =0x0000031A
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A98E0
	adds r0, r6, #0
	bl FUN_021BC5B0
	ldr r0, [r5, #0xc]
	movs r1, #0x28
	adds r2, r4, #0
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	movs r1, #0x52
	adds r2, r7, #0
	bl FUN_021B1474
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A7CF0: .word 0x00001AB8
_021A7CF4: .word 0x0000031A
	thumb_func_end FUN_021A7CB0

	thumb_func_start FUN_021A7CF8
FUN_021A7CF8: ; 0x021A7CF8
	bx pc
	nop
	thumb_func_end FUN_021A7CF8
_021A7CFC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A7D08
FUN_021A7D08: ; 0x021A7D08
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	ldr r0, _021A7D50 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021A7D54 ; =0x0000246E
	adds r0, r5, r0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021B088C
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x28]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	adds r2, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	adds r3, r7, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021A7D58
	ldr r0, _021A7D50 ; =0x00001D78
	ldr r2, _021A7D54 ; =0x0000246E
	ldr r1, [sp, #0x10]
	adds r0, r5, r0
	adds r2, r2, #3
	bl FUN_021B0910
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021A7D50: .word 0x00001D78
_021A7D54: .word 0x0000246E
	thumb_func_end FUN_021A7D08

	thumb_func_start FUN_021A7D58
FUN_021A7D58: ; 0x021A7D58
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r7, r1, #0
	adds r4, r3, #0
	bl FUN_021BAC80
	ldr r6, _021A7DF0 ; =0x00002487
	str r0, [sp]
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r4, #2]
	movs r0, #0x14
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x38
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r1, [r4, #8]
	movs r0, #0x1a
	bl FUN_021BCE40
	ldr r1, [sp, #0x1c]
	movs r0, #0x32
	bl FUN_021BCE40
	ldr r1, [sp, #0x20]
	movs r0, #0x45
	bl FUN_021BCE40
	ldr r1, [sp, #0x24]
	movs r0, #0x46
	bl FUN_021BCE40
	movs r0, #0x47
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x4a
	bl FUN_021BC940
	adds r0, r5, #0
	movs r1, #0x4b
	bl FUN_021BC940
	adds r0, r5, #0
	movs r1, #0x4c
	bl FUN_021BC940
	adds r6, #0x11
	adds r0, r6, #0
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A7DF0: .word 0x00002487
	thumb_func_end FUN_021A7D58

	thumb_func_start FUN_021A7DF4
FUN_021A7DF4: ; 0x021A7DF4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	ldr r0, _021A7EA8 ; =0x000024AA
	adds r4, r2, #0
	str r1, [sp]
	adds r6, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021A7EB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_021A7EC0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #5
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCE84
	movs r5, #0
	cmp r4, #0
	bls _021A7E5E
_021A7E40:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021A7ED0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #6
	bl FUN_021BCE40
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r4
	blo _021A7E40
_021A7E5E:
	ldr r1, [sp]
	movs r0, #0x12
	ldrh r1, [r1]
	bl FUN_021BCE40
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _021A7E78
	cmp r4, #0
	beq _021A7E80
	adds r0, r7, #0
	movs r1, #0xa0
	b _021A7E7C
_021A7E78:
	adds r0, r7, #0
	movs r1, #0xa1
_021A7E7C:
	bl FUN_021BC940
_021A7E80:
	movs r0, #0x51
	bl FUN_021BCFB0
	ldr r1, [sp, #0x20]
	str r0, [r1]
	ldr r0, _021A7EAC ; =0x000024CA
	bl FUN_021BCD94
	adds r0, r7, #0
	bl FUN_021AC464
	cmp r0, #0
	beq _021A7EA0
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A7EA0:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A7EA8: .word 0x000024AA
_021A7EAC: .word 0x000024CA
	thumb_func_end FUN_021A7DF4

	thumb_func_start FUN_021A7EB0
FUN_021A7EB0: ; 0x021A7EB0
	bx pc
	nop
	thumb_func_end FUN_021A7EB0
_021A7EB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A7EC0
FUN_021A7EC0: ; 0x021A7EC0
	bx pc
	nop
	thumb_func_end FUN_021A7EC0
_021A7EC4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A7ED0
FUN_021A7ED0: ; 0x021A7ED0
	bx pc
	nop
	thumb_func_end FUN_021A7ED0
_021A7ED4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A7EE0
FUN_021A7EE0: ; 0x021A7EE0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021A7F2C
	add r6, sp, #4
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021A0D9C
	add r7, sp, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A0E34
	cmp r0, #0
	beq _021A7F1E
_021A7F08:
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_021A7F3C
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A0E34
	cmp r0, #0
	bne _021A7F08
_021A7F1E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A7F4C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021A7EE0

	thumb_func_start FUN_021A7F2C
FUN_021A7F2C: ; 0x021A7F2C
	bx pc
	nop
	thumb_func_end FUN_021A7F2C
_021A7F30:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A7F3C
FUN_021A7F3C: ; 0x021A7F3C
	bx pc
	nop
	thumb_func_end FUN_021A7F3C
_021A7F40:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021A7F4C
FUN_021A7F4C: ; 0x021A7F4C
	bx pc
	nop
	thumb_func_end FUN_021A7F4C
_021A7F50:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xAD, 0xD0, 0x89, 0x06

	thumb_func_start FUN_021A7F5C
FUN_021A7F5C: ; 0x021A7F5C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A80C8 ; =0x00000854
	adds r4, r0, #0
	adds r1, r7, #0
	subs r1, #0xd6
	ldrb r1, [r4, r1]
	movs r5, #0
	ldr r6, [r4, r7]
	cmp r1, #0
	bne _021A7F82
	adds r1, r6, #0
	bl FUN_021A7EE0
	movs r0, #1
	subs r7, #0xd6
	strb r0, [r4, r7]
	adds r0, r4, #0
	bl FUN_021A8234
_021A7F82:
	ldr r0, _021A80CC ; =0x0000077E
	ldrb r1, [r4, r0]
	cmp r1, #6
	bls _021A7F8C
	b _021A80C4
_021A7F8C:
	adds r2, r1, r1
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_021A7F98: ; jump table
	.short _021A80C4 - _021A7F98 - 2 ; case 0
	.short _021A7FA6 - _021A7F98 - 2 ; case 1
	.short _021A7FD4 - _021A7F98 - 2 ; case 2
	.short _021A7FFA - _021A7F98 - 2 ; case 3
	.short _021A801E - _021A7F98 - 2 ; case 4
	.short _021A8032 - _021A7F98 - 2 ; case 5
	.short _021A8058 - _021A7F98 - 2 ; case 6
_021A7FA6:
	adds r1, r1, #1
	strb r1, [r4, r0]
	ldr r0, [r4, #0xc]
	movs r1, #0x56
	movs r2, #0
	movs r5, #0
	bl FUN_021B1474
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A881C
	cmp r0, #0
	beq _021A7FC6
_021A7FC2:
	movs r5, #1
	b _021A80C4
_021A7FC6:
	adds r0, r4, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A7FD4
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7FD4:
	ldr r0, _021A80CC ; =0x0000077E
	movs r2, #0x76
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A8328
	cmp r0, #0
	beq _021A7FEC
	b _021A7FC2
_021A7FEC:
	adds r0, r4, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A7FFA
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A7FFA:
	ldr r0, _021A80CC ; =0x0000077E
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A842C
	cmp r0, #0
	beq _021A8010
	b _021A7FC2
_021A8010:
	adds r0, r4, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A801E
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A801E:
	ldr r0, _021A80CC ; =0x0000077E
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	adds r0, r4, #0
	bl FUN_021A868C
	adds r0, r4, #0
	bl FUN_021A8724
_021A8032:
	ldr r0, _021A80CC ; =0x0000077E
	movs r2, #0x77
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A8328
	cmp r0, #0
	beq _021A804A
	b _021A7FC2
_021A804A:
	adds r0, r4, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A8058
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021A8058:
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0x78
	bl FUN_021A8328
	ldr r0, _021A80CC ; =0x0000077E
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	adds r0, r6, #0
	bl FUN_021A80D4
	adds r0, r6, #0
	bl FUN_021A80E4
	adds r5, r0, #0
	beq _021A80A2
	movs r7, #0x2e
_021A807C:
	adds r0, r5, #0
	bl FUN_021BBC48
	adds r0, r5, #0
	bl FUN_021BC6C8
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_021B1474
	adds r0, r6, #0
	bl FUN_021A80F4
	adds r5, r0, #0
	bne _021A807C
_021A80A2:
	adds r0, r4, #0
	bl FUN_021A8104
	bl FUN_021BC86C
	ldr r1, [r4, #0x10]
	ldr r0, _021A80D0 ; =0x0000270F
	cmp r1, r0
	bhs _021A80B8
	adds r0, r1, #1
	str r0, [r4, #0x10]
_021A80B8:
	ldr r1, _021A80CC ; =0x0000077E
	movs r0, #0
	strb r0, [r4, r1]
	subs r1, #0xa
	str r0, [r4, r1]
	pop {r3, r4, r5, r6, r7, pc}
_021A80C4:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A80C8: .word 0x00000854
_021A80CC: .word 0x0000077E
_021A80D0: .word 0x0000270F
	thumb_func_end FUN_021A7F5C

	thumb_func_start FUN_021A80D4
FUN_021A80D4: ; 0x021A80D4
	bx pc
	nop
	thumb_func_end FUN_021A80D4
_021A80D8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A80E4
FUN_021A80E4: ; 0x021A80E4
	bx pc
	nop
	thumb_func_end FUN_021A80E4
_021A80E8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A80F4
FUN_021A80F4: ; 0x021A80F4
	bx pc
	nop
	thumb_func_end FUN_021A80F4
_021A80F8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8104
FUN_021A8104: ; 0x021A8104
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	cmp r0, #2
	bne _021A820C
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	adds r6, r0, #0
	ldr r0, [r5, #4]
	adds r1, r6, #0
	movs r2, #0
	adds r7, r6, #0
	bl FUN_0219C910
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r6, r4
	bls _021A8134
	adds r7, r4, #0
	adds r4, r6, #0
_021A8134:
	ldr r0, [r5, #8]
	adds r1, r7, #0
	bl FUN_0219D408
	adds r6, r0, #0
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D408
	str r0, [sp, #8]
	adds r0, r6, #0
	bl FUN_0219D4CC
	cmp r0, #1
	bne _021A820C
	ldr r0, [sp, #8]
	bl FUN_0219D4CC
	cmp r0, #1
	bne _021A820C
	adds r0, r6, #0
	bl FUN_0219D61C
	adds r6, r0, #0
	ldr r0, [sp, #8]
	bl FUN_0219D61C
	str r0, [sp, #0xc]
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	ldr r0, [sp, #0xc]
	bl FUN_021BAC80
	str r0, [sp, #0x10]
	ldr r0, _021A8210 ; =0x00001AB8
	adds r1, r6, #0
	adds r0, r5, r0
	bl FUN_021A8214
	str r0, [sp, #0x14]
	ldr r0, _021A8210 ; =0x00001AB8
	ldr r1, [sp, #0x10]
	adds r0, r5, r0
	bl FUN_021A8224
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	cmp r0, #6
	beq _021A820C
	ldr r0, [sp, #0x18]
	cmp r0, #6
	beq _021A820C
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x14]
	bl FUN_0219C698
	adds r6, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x18]
	bl FUN_0219C698
	str r0, [sp, #0x1c]
	cmp r6, r0
	bne _021A820C
	ldr r0, [sp, #0x14]
	bl FUN_0219D30C
	cmp r0, #0
	bne _021A820C
	ldr r0, [sp, #0x1c]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x50
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_021B1474
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021A0F24
	movs r0, #1
	str r0, [sp]
	ldr r2, [sp, #0x1c]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #1
	bl FUN_021A0F24
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021A0FCC
	ldr r2, [sp, #0x1c]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #1
	bl FUN_021A0FCC
_021A820C:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A8210: .word 0x00001AB8
	thumb_func_end FUN_021A8104

	thumb_func_start FUN_021A8214
FUN_021A8214: ; 0x021A8214
	bx pc
	nop
	thumb_func_end FUN_021A8214
_021A8218:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A8224
FUN_021A8224: ; 0x021A8224
	bx pc
	nop
	thumb_func_end FUN_021A8224
_021A8228:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A8234
FUN_021A8234: ; 0x021A8234
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	ldr r0, [r7, #4]
	bl FUN_0219BE88
	str r0, [sp, #0x14]
	cmp r0, #0
	beq _021A8320
	bl FUN_02034F14
	str r0, [sp, #0x10]
	cmp r0, #0
	beq _021A8320
	cmp r0, #3
	beq _021A8320
	ldr r0, [r7, #4]
	bl FUN_0219C8A0
	str r0, [sp, #0xc]
	ldr r0, [r7]
	ldr r1, [sp, #0xc]
	bl FUN_0219F2A0
	str r0, [sp, #8]
	ldrb r0, [r0, #9]
	movs r4, #0
	movs r6, #0
	cmp r0, #0
	bls _021A82BC
_021A8270:
	ldr r0, [r7, #8]
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	bl FUN_0219D228
	adds r5, r0, #0
	beq _021A828C
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A828A
	movs r0, #1
	b _021A828E
_021A828A:
	b _021A828C
_021A828C:
	movs r0, #0
_021A828E:
	cmp r0, #0
	beq _021A82AE
	adds r0, r5, #0
	bl FUN_021BB388
	cmp r0, #0
	bne _021A82AE
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r2, r6, #1
	lsls r2, r2, #0x18
	adds r1, r6, #0
	lsrs r6, r2, #0x18
	add r2, sp, #0x18
	strb r0, [r2, r1]
_021A82AE:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #8]
	ldrb r0, [r0, #9]
	cmp r4, r0
	blo _021A8270
_021A82BC:
	cmp r6, #0
	beq _021A8320
	bl FUN_02043F58
	adds r1, r0, #0
	movs r3, #0
	cmp r6, #0
	beq _021A82D4
	adds r1, r3, #0
	adds r2, r6, #0
	blx FUN_0208D638
_021A82D4:
	add r0, sp, #0x18
	ldrb r4, [r0, r1]
	ldr r0, [r7, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	movs r1, #0xe
	adds r5, r0, #0
	bl FUN_021BB1F4
	adds r2, r0, #0
	ldr r0, [sp, #0x10]
	cmp r0, #1
	bne _021A82F2
	lsrs r2, r2, #1
_021A82F2:
	cmp r2, #0
	beq _021A8320
	lsls r2, r2, #0x10
	adds r0, r7, #0
	adds r1, r5, #0
	lsrs r2, r2, #0x10
	movs r3, #0
	bl FUN_021A6E3C
	cmp r0, #0
	beq _021A8320
	ldr r0, _021A8324 ; =0xFFFF0000
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r7, #0xc]
	movs r1, #0x5a
	movs r2, #0x53
	movs r3, #4
	bl FUN_021B1610
	ldr r0, [sp, #0x14]
	bl FUN_02034F18
_021A8320:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A8324: .word 0xFFFF0000
	thumb_func_end FUN_021A8234

	thumb_func_start FUN_021A8328
FUN_021A8328: ; 0x021A8328
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r0, r1, #0
	str r1, [sp]
	str r2, [sp, #4]
	bl FUN_021A83D0
	ldr r0, _021A83C8 ; =0x00001D78
	ldr r7, _021A83CC ; =0x000025BC
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B088C
	adds r4, r0, #0
	ldr r2, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x1f
	bl FUN_021A8400
	ldr r0, _021A83C8 ; =0x00001D78
	adds r1, r4, #0
	adds r0, r5, r0
	adds r2, r7, #2
	bl FUN_021B0910
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	bne _021A83BE
	ldr r0, [sp]
	bl FUN_021A83E0
	adds r4, r0, #0
	beq _021A83BE
	adds r0, r7, #0
	str r0, [sp, #8]
	adds r0, #8
	str r0, [sp, #8]
	adds r7, #0xa
_021A837A:
	ldr r0, _021A83C8 ; =0x00001D78
	ldr r1, [sp, #8]
	adds r0, r5, r0
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r2, [sp, #4]
	adds r0, r5, #0
	bl FUN_021A8400
	ldr r0, _021A83C8 ; =0x00001D78
	adds r1, r6, #0
	adds r0, r5, r0
	adds r2, r7, #0
	bl FUN_021B0910
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A8A64
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	bne _021A83BE
	ldr r0, [sp]
	bl FUN_021A83F0
	adds r4, r0, #0
	bne _021A837A
_021A83BE:
	adds r0, r5, #0
	bl FUN_021A8D00
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A83C8: .word 0x00001D78
_021A83CC: .word 0x000025BC
	thumb_func_end FUN_021A8328

	thumb_func_start FUN_021A83D0
FUN_021A83D0: ; 0x021A83D0
	bx pc
	nop
	thumb_func_end FUN_021A83D0
_021A83D4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A83E0
FUN_021A83E0: ; 0x021A83E0
	bx pc
	nop
	thumb_func_end FUN_021A83E0
_021A83E4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A83F0
FUN_021A83F0: ; 0x021A83F0
	bx pc
	nop
	thumb_func_end FUN_021A83F0
_021A83F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8400
FUN_021A8400: ; 0x021A8400
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A8428 ; =0x000025D3
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	movs r0, #2
	adds r1, r4, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BC940
	adds r0, r7, #3
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A8428: .word 0x000025D3
	thumb_func_end FUN_021A8400

	thumb_func_start FUN_021A842C
FUN_021A842C: ; 0x021A842C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r6, r1, #0
	ldr r1, _021A851C ; =0x021D6D34
	adds r5, r0, #0
	ldrb r2, [r1]
	add r0, sp, #0x10
	add r7, sp, #0x18
	strb r2, [r0, #8]
	ldrb r2, [r1, #1]
	strb r2, [r0, #9]
	ldrb r2, [r1, #2]
	strb r2, [r0, #0xa]
	ldrb r2, [r1, #3]
	strb r2, [r0, #0xb]
	ldrb r2, [r1, #4]
	strb r2, [r0, #0xc]
	ldrb r1, [r1, #5]
	strb r1, [r0, #0xd]
	adds r0, r6, #0
	bl FUN_021A8524
	movs r4, #0
	str r0, [sp, #8]
	cmp r0, #0
	bls _021A8476
_021A8460:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A8534
	bl FUN_021BAC80
	strb r0, [r7, r4]
	ldr r0, [sp, #8]
	adds r4, r4, #1
	cmp r4, r0
	blo _021A8460
_021A8476:
	movs r0, #0
	str r0, [sp, #4]
_021A847A:
	ldr r0, [sp, #4]
	bl FUN_021A8544
	ldr r1, [sp, #4]
	adds r1, r1, #1
	str r1, [sp, #4]
	adds r7, r0, #0
	beq _021A84F6
	ldr r0, [sp, #8]
	movs r4, #0
	cmp r0, #0
	bls _021A84EC
_021A8492:
	add r1, sp, #0x18
	ldrb r1, [r1, r4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A84E4
	adds r0, r6, #0
	adds r1, r7, #0
	add r2, sp, #0x14
	add r3, sp, #0x10
	bl FUN_021BB8A4
	cmp r0, #0
	beq _021A84E4
	ldr r0, _021A8520 ; =0x00001D78
	movs r1, #0x26
	adds r0, r5, r0
	lsls r1, r1, #8
	bl FUN_021B088C
	str r5, [sp]
	add r2, sp, #0x14
	str r0, [sp, #0xc]
	ldr r2, [r2]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021A8554
	ldr r0, _021A8520 ; =0x00001D78
	movs r2, #0x26
	lsls r2, r2, #8
	ldr r1, [sp, #0xc]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
_021A84E4:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	cmp r4, r0
	blo _021A8492
_021A84EC:
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A847A
_021A84F6:
	add r0, sp, #0x18
	bl FUN_021BD8D4
	ldr r2, [sp, #8]
	ldr r3, [sp, #4]
	str r0, [sp]
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x15
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	adds r0, r5, #0
	bl FUN_021A8D00
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A851C: .word 0x021D6D34
_021A8520: .word 0x00001D78
	thumb_func_end FUN_021A842C

	thumb_func_start FUN_021A8524
FUN_021A8524: ; 0x021A8524
	bx pc
	nop
	thumb_func_end FUN_021A8524
_021A8528:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8534
FUN_021A8534: ; 0x021A8534
	bx pc
	nop
	thumb_func_end FUN_021A8534
_021A8538:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021A8544
FUN_021A8544: ; 0x021A8544
	bx pc
	nop
	thumb_func_end FUN_021A8544
_021A8548:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x81, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021A8554
FUN_021A8554: ; 0x021A8554
	bx pc
	nop
	thumb_func_end FUN_021A8554
_021A8558:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x39, 0xB9, 0x89, 0x06

	thumb_func_start FUN_021A8564
FUN_021A8564: ; 0x021A8564
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, _021A8614 ; =0x00001D78
	adds r5, r1, #0
	ldr r1, _021A8618 ; =0x00002624
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r4, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021A863C
	adds r7, r0, #0
	beq _021A8604
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A5BAC
	cmp r0, #0
	beq _021A8604
	cmp r6, #0xa
	bhi _021A85E2
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A85A8: ; jump table
	.short _021A85E2 - _021A85A8 - 2 ; case 0
	.short _021A85E2 - _021A85A8 - 2 ; case 1
	.short _021A85E2 - _021A85A8 - 2 ; case 2
	.short _021A85E2 - _021A85A8 - 2 ; case 3
	.short _021A85C6 - _021A85A8 - 2 ; case 4
	.short _021A85BE - _021A85A8 - 2 ; case 5
	.short _021A85E2 - _021A85A8 - 2 ; case 6
	.short _021A85E2 - _021A85A8 - 2 ; case 7
	.short _021A85E2 - _021A85A8 - 2 ; case 8
	.short _021A85D6 - _021A85A8 - 2 ; case 9
	.short _021A85CE - _021A85A8 - 2 ; case 10
_021A85BE:
	ldr r2, _021A861C ; =0x00000257
	adds r0, r4, #0
	adds r1, r5, #0
_021A85C4:
	b _021A85DE
_021A85C6:
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x96
	b _021A85DC
_021A85CE:
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _021A8620 ; =0x00000273
	b _021A85C4
_021A85D6:
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x9d
_021A85DC:
	lsls r2, r2, #2
_021A85DE:
	bl FUN_021A8FD8
_021A85E2:
	ldr r0, _021A8624 ; =0x00001AE4
	adds r0, r4, r0
	bl FUN_021AC390
	ldr r0, _021A8624 ; =0x00001AE4
	adds r1, r5, #0
	adds r0, r4, r0
	adds r2, r6, #0
	bl FUN_021A862C
	ldr r3, _021A8624 ; =0x00001AE4
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r4, r3
	bl FUN_021A5BC0
_021A8604:
	ldr r0, _021A8614 ; =0x00001D78
	ldr r1, [sp]
	ldr r2, _021A8628 ; =0x00002644
	adds r0, r4, r0
	bl FUN_021B0910
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A8614: .word 0x00001D78
_021A8618: .word 0x00002624
_021A861C: .word 0x00000257
_021A8620: .word 0x00000273
_021A8624: .word 0x00001AE4
_021A8628: .word 0x00002644
	thumb_func_end FUN_021A8564

	thumb_func_start FUN_021A862C
FUN_021A862C: ; 0x021A862C
	bx pc
	nop
	thumb_func_end FUN_021A862C
_021A8630:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x5D, 0xBA, 0x89, 0x06

	thumb_func_start FUN_021A863C
FUN_021A863C: ; 0x021A863C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021A8688 ; =0x00002652
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x1d
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x32
	adds r1, r7, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x6b
	bl FUN_021BC940
	movs r0, #0x32
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021A8688 ; =0x00002652
	adds r0, r0, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A8688: .word 0x00002652
	thumb_func_end FUN_021A863C

	thumb_func_start FUN_021A868C
FUN_021A868C: ; 0x021A868C
	adds r1, r0, #0
	ldr r0, _021A8694 ; =0x021A869D
	ldr r3, _021A8698 ; =FUN_06898D54
	bx r3
	.align 2, 0
_021A8694: .word 0x021A869D
_021A8698: .word FUN_06898D54
	thumb_func_end FUN_021A868C
_021A869C:
	.byte 0x03, 0x1C, 0x10, 0x1C
	.byte 0x1A, 0x1C, 0x01, 0x4B, 0x18, 0x47, 0xC0, 0x46, 0xAD, 0x86, 0x1A, 0x02

	thumb_func_start FUN_021A86AC
FUN_021A86AC: ; 0x021A86AC
	push {r3, lr}
	adds r3, r2, #0
	movs r2, #0
	mvns r2, r2
	cmp r1, #0xd
	bhi _021A870E
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021A86C4: ; jump table
	.short _021A86E0 - _021A86C4 - 2 ; case 0
	.short _021A86E4 - _021A86C4 - 2 ; case 1
	.short _021A86E8 - _021A86C4 - 2 ; case 2
	.short _021A86EC - _021A86C4 - 2 ; case 3
	.short _021A86F0 - _021A86C4 - 2 ; case 4
	.short _021A86F4 - _021A86C4 - 2 ; case 5
	.short _021A86F8 - _021A86C4 - 2 ; case 6
	.short _021A86FC - _021A86C4 - 2 ; case 7
	.short _021A8700 - _021A86C4 - 2 ; case 8
	.short _021A870E - _021A86C4 - 2 ; case 9
	.short _021A870E - _021A86C4 - 2 ; case 10
	.short _021A8704 - _021A86C4 - 2 ; case 11
	.short _021A8708 - _021A86C4 - 2 ; case 12
	.short _021A870C - _021A86C4 - 2 ; case 13
_021A86E0:
	movs r2, #0x7e
	b _021A870E
_021A86E4:
	movs r2, #0x82
	b _021A870E
_021A86E8:
	movs r2, #0x86
	b _021A870E
_021A86EC:
	movs r2, #0x8a
	b _021A870E
_021A86F0:
	movs r2, #0x8e
	b _021A870E
_021A86F4:
	movs r2, #0x92
	b _021A870E
_021A86F8:
	movs r2, #0x96
	b _021A870E
_021A86FC:
	movs r2, #0x9a
	b _021A870E
_021A8700:
	movs r2, #0x9e
	b _021A870E
_021A8704:
	movs r2, #0xa6
	b _021A870E
_021A8708:
	movs r2, #0xaa
	b _021A870E
_021A870C:
	movs r2, #0xae
_021A870E:
	cmp r2, #0
	blt _021A871E
	ldr r1, _021A8720 ; =0xFFFF0000
	str r1, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	bl FUN_021B1610
_021A871E:
	pop {r3, pc}
	.align 2, 0
_021A8720: .word 0xFFFF0000
	thumb_func_end FUN_021A86AC

	thumb_func_start FUN_021A8724
FUN_021A8724: ; 0x021A8724
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _021A873C ; =0x021A8741
	adds r1, r4, #0
	bl FUN_021D5AA0
	ldr r0, [r4, #0xc]
	movs r1, #0x2f
	movs r2, #0
	bl FUN_021B1474
	pop {r4, pc}
	.align 2, 0
_021A873C: .word 0x021A8741
	thumb_func_end FUN_021A8724
_021A8740:
	.byte 0x02, 0x1C, 0x08, 0x1C, 0x01, 0x4B, 0x11, 0x1C, 0x18, 0x47, 0xC0, 0x46, 0x51, 0x87, 0x1A, 0x02

	thumb_func_start FUN_021A8750
FUN_021A8750: ; 0x021A8750
	push {r3, r4, r5, r6, r7, lr}
	movs r2, #0
	adds r5, r1, #0
	adds r4, r0, #0
	mvns r2, r2
	cmp r5, #7
	bhi _021A8788
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A876A: ; jump table
	.short _021A8788 - _021A876A - 2 ; case 0
	.short _021A877A - _021A876A - 2 ; case 1
	.short _021A877E - _021A876A - 2 ; case 2
	.short _021A8788 - _021A876A - 2 ; case 3
	.short _021A8788 - _021A876A - 2 ; case 4
	.short _021A8788 - _021A876A - 2 ; case 5
	.short _021A8782 - _021A876A - 2 ; case 6
	.short _021A8786 - _021A876A - 2 ; case 7
_021A877A:
	movs r2, #0x74
	b _021A8788
_021A877E:
	movs r2, #0x76
	b _021A8788
_021A8782:
	movs r2, #0xb3
	b _021A8788
_021A8786:
	movs r2, #0xb5
_021A8788:
	cmp r2, #0
	blt _021A8796
	ldr r0, [r4, #0xc]
	ldr r3, _021A87E4 ; =0xFFFF0000
	movs r1, #0x5a
	bl FUN_021B1610
_021A8796:
	lsls r2, r5, #0x18
	ldr r0, [r4, #0xc]
	movs r1, #0x24
	lsrs r2, r2, #0x18
	bl FUN_021B1474
	cmp r5, #7
	bne _021A87E0
	ldr r6, _021A87E8 ; =0x00000868
	adds r0, r4, #0
	ldr r1, [r4, r6]
	bl FUN_021A7EE0
	ldr r0, [r4, r6]
	bl FUN_021A87EC
	ldr r0, [r4, r6]
	bl FUN_021A87FC
	adds r5, r0, #0
	beq _021A87E0
	movs r7, #0
_021A87C2:
	adds r0, r5, #0
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021A87D6
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl FUN_021A543C
_021A87D6:
	ldr r0, [r4, r6]
	bl FUN_021A880C
	adds r5, r0, #0
	bne _021A87C2
_021A87E0:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A87E4: .word 0xFFFF0000
_021A87E8: .word 0x00000868
	thumb_func_end FUN_021A8750

	thumb_func_start FUN_021A87EC
FUN_021A87EC: ; 0x021A87EC
	bx pc
	nop
	thumb_func_end FUN_021A87EC
_021A87F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A87FC
FUN_021A87FC: ; 0x021A87FC
	bx pc
	nop
	thumb_func_end FUN_021A87FC
_021A8800:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A880C
FUN_021A880C: ; 0x021A880C
	bx pc
	nop
	thumb_func_end FUN_021A880C
_021A8810:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A881C
FUN_021A881C: ; 0x021A881C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	str r1, [sp, #8]
	bl FUN_021D5A24
	adds r2, r0, #0
	beq _021A8842
	ldr r0, [r5, #0xc]
	movs r1, #0x40
	bl FUN_021B1474
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021A76D0
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021A8842:
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021A65A0
	adds r6, r0, #0
	ldr r0, [sp, #8]
	bl FUN_021A8908
	ldr r0, [sp, #8]
	bl FUN_021A8918
	adds r4, r0, #0
	beq _021A88D8
	ldr r0, _021A88FC ; =0x000026CF
	str r0, [sp, #0x10]
	adds r0, #0xc
	str r0, [sp, #0x10]
_021A8866:
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021A88CE
	adds r0, r4, #0
	movs r1, #5
	bl FUN_021BB41C
	cmp r0, #0
	bne _021A88CE
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BB41C
	cmp r0, #0
	bne _021A88CE
	ldr r0, _021A8900 ; =0x00001D78
	ldr r1, _021A88FC ; =0x000026CF
	adds r0, r5, r0
	bl FUN_021B088C
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BD428
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A8938
	adds r3, r0, #0
	beq _021A88BA
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021A89A4
	movs r0, #1
	str r0, [sp, #0xc]
_021A88BA:
	ldr r0, _021A8900 ; =0x00001D78
	ldr r2, [sp, #0x10]
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B0910
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A8A64
_021A88CE:
	ldr r0, [sp, #8]
	bl FUN_021A8928
	adds r4, r0, #0
	bne _021A8866
_021A88D8:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021A88F0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	ldr r1, _021A8904 ; =0x00000255
	adds r0, r5, #0
	movs r2, #6
	movs r3, #6
	bl FUN_021AAC3C
_021A88F0:
	adds r0, r5, #0
	bl FUN_021A8D00
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021A88FC: .word 0x000026CF
_021A8900: .word 0x00001D78
_021A8904: .word 0x00000255
	thumb_func_end FUN_021A881C

	thumb_func_start FUN_021A8908
FUN_021A8908: ; 0x021A8908
	bx pc
	nop
	thumb_func_end FUN_021A8908
_021A890C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8918
FUN_021A8918: ; 0x021A8918
	bx pc
	nop
	thumb_func_end FUN_021A8918
_021A891C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8928
FUN_021A8928: ; 0x021A8928
	bx pc
	nop
	thumb_func_end FUN_021A8928
_021A892C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021A8938
FUN_021A8938: ; 0x021A8938
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _021A89A0 ; =0x000026F1
	adds r7, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	adds r5, r2, #0
	str r3, [sp]
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x39
	adds r1, r5, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	ldr r1, [sp]
	movs r0, #0x32
	bl FUN_021BCDFC
	adds r0, r7, #0
	movs r1, #0x7f
	bl FUN_021BC940
	movs r0, #0x32
	bl FUN_021BCFB0
	adds r7, r0, #0
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	adds r6, #9
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl FUN_021BCD94
	cmp r4, #0
	bne _021A899A
	adds r5, r7, #0
_021A899A:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A89A0: .word 0x000026F1
	thumb_func_end FUN_021A8938

	thumb_func_start FUN_021A89A4
FUN_021A89A4: ; 0x021A89A4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_021BAC80
	str r0, [sp, #8]
	cmp r7, #3
	beq _021A89D8
	cmp r7, #4
	bne _021A89E2
	ldr r7, _021A8A5C ; =0x00001AE4
	movs r2, #0x63
	adds r0, r5, r7
	movs r1, #2
	lsls r2, r2, #2
_021A89CA:
	bl FUN_021AC3B8
	ldr r1, [sp, #8]
	adds r0, r5, r7
	bl FUN_021AC3E0
	b _021A89EA
_021A89D8:
	ldr r7, _021A8A5C ; =0x00001AE4
	movs r1, #2
	adds r0, r5, r7
	ldr r2, _021A8A60 ; =0x0000018F
	b _021A89CA
_021A89E2:
	ldr r0, _021A8A5C ; =0x00001AE4
	adds r0, r5, r0
	bl FUN_021AC390
_021A89EA:
	cmp r4, #0
	ble _021A8A56
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021A5BAC
	cmp r0, #0
	beq _021A8A56
	ldr r7, _021A8A5C ; =0x00001AE4
	adds r0, r5, #0
	adds r1, r5, r7
	bl FUN_021AD520
	adds r0, r5, r7
	bl FUN_021AC390
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_021ABB90
	adds r2, r0, #0
	movs r0, #0
	movs r7, #0x29
	str r0, [sp]
	lsls r7, r7, #4
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #6
	bl FUN_021AAC3C
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, r4
	bgt _021A8A4A
	movs r0, #0
	str r0, [sp]
	subs r7, #0x3b
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #6
	movs r3, #6
	bl FUN_021AAC3C
_021A8A4A:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	movs r3, #0
	bl FUN_021A5BC0
_021A8A56:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021A8A5C: .word 0x00001AE4
_021A8A60: .word 0x0000018F
	thumb_func_end FUN_021A89A4

	thumb_func_start FUN_021A8A64
FUN_021A8A64: ; 0x021A8A64
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	ldr r0, _021A8B68 ; =0x000007A9
	adds r5, r4, r0
	ldrb r0, [r5, r6]
	cmp r0, #0
	bne _021A8B60
	adds r0, r7, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021A8B60
	movs r0, #1
	strb r0, [r5, r6]
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r0, r4, r0
	adds r1, r6, #0
	bl FUN_021A8B78
	movs r1, #1
	ldr r0, [r4, #4]
	lsls r1, r1, #9
	bl FUN_0219DB04
	cmp r0, #0
	beq _021A8AB0
	adds r0, r6, #0
	bl FUN_0219C688
	cmp r0, #0
	bne _021A8AC8
_021A8AB0:
	ldr r0, _021A8B6C ; =0x00000789
	ldrb r0, [r4, r0]
	cmp r0, r6
	beq _021A8AC8
	ldr r0, _021A8B70 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0
	adds r3, r6, #0
	bl FUN_021B1610
_021A8AC8:
	ldr r0, [r4, #0xc]
	movs r1, #0x39
	adds r2, r6, #0
	bl FUN_021B1474
	movs r2, #0
	str r2, [sp, #4]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A8C08
	adds r0, r7, #0
	bl FUN_021BBCAC
	adds r0, r6, #0
	bl FUN_0219C688
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219C8A0
	cmp r5, r0
	bne _021A8B1C
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021A8B98
	adds r5, #0x1e
	cmp r5, r0
	bgt _021A8B12
	movs r0, #1
	str r0, [sp, #4]
_021A8B12:
	ldr r0, [r4, #4]
	ldr r2, [sp, #4]
	adds r1, r7, #0
	bl FUN_0219CBCC
_021A8B1C:
	ldr r0, _021A8B74 ; =0x00001AB8
	adds r1, r6, #0
	adds r0, r4, r0
	bl FUN_021A8B88
	adds r0, r6, #0
	bl FUN_0219C688
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219C8A0
	adds r1, r0, #0
	cmp r5, r1
	bne _021A8B40
	ldr r0, [r4, #4]
	movs r1, #0x4c
	b _021A8B56
_021A8B40:
	adds r0, r5, #0
	bl FUN_0219C8D8
	cmp r0, #0
	bne _021A8B5A
	ldr r0, [r4, #4]
	movs r1, #0x19
	bl FUN_0219DB10
	ldr r0, [r4, #4]
	movs r1, #0x52
_021A8B56:
	bl FUN_0219DB10
_021A8B5A:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A8B60:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A8B68: .word 0x000007A9
_021A8B6C: .word 0x00000789
_021A8B70: .word 0xFFFF0000
_021A8B74: .word 0x00001AB8
	thumb_func_end FUN_021A8A64

	thumb_func_start FUN_021A8B78
FUN_021A8B78: ; 0x021A8B78
	bx pc
	nop
	thumb_func_end FUN_021A8B78
_021A8B7C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xE5, 0xD2, 0x89, 0x06

	thumb_func_start FUN_021A8B88
FUN_021A8B88: ; 0x021A8B88
	bx pc
	nop
	thumb_func_end FUN_021A8B88
_021A8B8C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0xD4, 0x89, 0x06

	thumb_func_start FUN_021A8B98
FUN_021A8B98: ; 0x021A8B98
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	movs r6, #1
	bl FUN_0219BE9C
	adds r7, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	str r0, [sp]
	movs r4, #0
_021A8BB0:
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C690
	adds r1, r0, #0
	ldr r0, [sp]
	bl FUN_0219C8D8
	cmp r0, #0
	bne _021A8BEA
	ldr r0, _021A8BF4 ; =0x00001AB8
	lsls r1, r4, #0x18
	adds r0, r5, r0
	lsrs r1, r1, #0x18
	bl FUN_021A8BF8
	adds r1, r0, #0
	cmp r1, #0x1f
	beq _021A8BEA
	ldr r0, [r5, #8]
	bl FUN_0219D250
	movs r1, #0xf
	bl FUN_021BB1F4
	cmp r0, r6
	bls _021A8BEA
	adds r6, r0, #0
_021A8BEA:
	adds r4, r4, #1
	cmp r4, r7
	bls _021A8BB0
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A8BF4: .word 0x00001AB8
	thumb_func_end FUN_021A8B98

	thumb_func_start FUN_021A8BF8
FUN_021A8BF8: ; 0x021A8BF8
	bx pc
	nop
	thumb_func_end FUN_021A8BF8
_021A8BFC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x85, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A8C08
FUN_021A8C08: ; 0x021A8C08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r7, r2, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A8CD0
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021A3A44
	cmp r7, #0
	bne _021A8C3E
	adds r0, r6, #0
	bl FUN_021BDD78
	adds r0, r6, #0
	bl FUN_021C278C
	b _021A8C4A
_021A8C3E:
	adds r0, r6, #0
	bl FUN_021BDDA0
	adds r0, r6, #0
	bl FUN_021C280C
_021A8C4A:
	adds r0, r6, #0
	bl FUN_021C5C9C
	add r0, sp, #4
	adds r1, r5, #0
	bl FUN_021A0D9C
	add r0, sp, #4
	adds r1, r5, #0
	bl FUN_021A0E20
	add r0, sp, #4
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	beq _021A8C98
	movs r7, #0x2c
_021A8C70:
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021BBAA4
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	adds r1, r7, #0
	adds r3, r4, #0
	bl FUN_021B1474
	add r0, sp, #4
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	bne _021A8C70
_021A8C98:
	adds r0, r4, #0
	bl FUN_021D5A78
	ldr r0, [r5, #0xc]
	movs r1, #0x23
	adds r2, r4, #0
	bl FUN_021B1474
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	bne _021A8CCA
	adds r0, r6, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x7f
	bne _021A8CCA
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A7ACC
_021A8CCA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A8C08

	thumb_func_start FUN_021A8CD0
FUN_021A8CD0: ; 0x021A8CD0
	push {r4, r5, r6, lr}
	ldr r6, _021A8CFC ; =0x000027E8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0xa3
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A8CFC: .word 0x000027E8
	thumb_func_end FUN_021A8CD0

	thumb_func_start FUN_021A8D00
FUN_021A8D00: ; 0x021A8D00
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	ldr r0, [r5, #4]
	bl FUN_0219BE3C
	cmp r0, #0
	beq _021A8DE2
	movs r6, #0x3e
	lsls r6, r6, #4
	ldr r1, [sp, #4]
	adds r0, r5, r6
	bl FUN_021A8DEC
	str r0, [sp]
	ldr r0, [r5, #8]
	ldr r1, [sp, #4]
	bl FUN_0219D250
	bl FUN_021BC6EC
	ldr r0, [sp]
	ldr r4, [sp, #4]
	cmp r0, #0
	bls _021A8DE2
	ldr r0, _021A8DE8 ; =0x0000078A
	adds r0, r5, r0
	str r0, [sp, #8]
_021A8D48:
	lsls r2, r4, #0x18
	adds r0, r5, r6
	movs r1, #0
	lsrs r2, r2, #0x18
	bl FUN_021A8DFC
	cmp r0, #0
	bne _021A8DDA
	lsls r2, r4, #0x18
	adds r0, r5, r6
	movs r1, #0
	lsrs r2, r2, #0x18
	bl FUN_021A8E0C
	adds r1, r0, #0
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	ldr r0, [r5, #8]
	movs r1, #0
	bl FUN_0219D250
	bl FUN_021BC6EC
	ldr r0, [r5, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021A8DBE
	ldr r0, [sp, #8]
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	bne _021A8DBE
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	beq _021A8DBE
	adds r0, r5, #0
	bl FUN_0219FDE4
	cmp r0, #0
	beq _021A8DBE
	ldr r0, [r5, #4]
	bl FUN_0219BF40
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x55
	bl FUN_021B1474
	ldr r0, _021A8DE8 ; =0x0000078A
	ldrb r1, [r5, r0]
	movs r0, #2
	orrs r1, r0
	ldr r0, _021A8DE8 ; =0x0000078A
	strb r1, [r5, r0]
_021A8DBE:
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A8E2C
	cmp r0, #0
	beq _021A8DCE
	movs r0, #1
	str r0, [sp, #4]
_021A8DCE:
	lsls r2, r4, #0x18
	adds r0, r5, r6
	movs r1, #0
	lsrs r2, r2, #0x18
	bl FUN_021A8E1C
_021A8DDA:
	ldr r0, [sp]
	adds r4, r4, #1
	cmp r4, r0
	blo _021A8D48
_021A8DE2:
	ldr r0, [sp, #4]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A8DE8: .word 0x0000078A
	thumb_func_end FUN_021A8D00

	thumb_func_start FUN_021A8DEC
FUN_021A8DEC: ; 0x021A8DEC
	bx pc
	nop
	thumb_func_end FUN_021A8DEC
_021A8DF0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_021A8DFC
FUN_021A8DFC: ; 0x021A8DFC
	bx pc
	nop
	thumb_func_end FUN_021A8DFC
_021A8E00:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0xD3, 0x89, 0x06

	thumb_func_start FUN_021A8E0C
FUN_021A8E0C: ; 0x021A8E0C
	bx pc
	nop
	thumb_func_end FUN_021A8E0C
_021A8E10:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xD3, 0x89, 0x06

	thumb_func_start FUN_021A8E1C
FUN_021A8E1C: ; 0x021A8E1C
	bx pc
	nop
	thumb_func_end FUN_021A8E1C
_021A8E20:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x45, 0xD3, 0x89, 0x06

	thumb_func_start FUN_021A8E2C
FUN_021A8E2C: ; 0x021A8E2C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BAC80
	bl FUN_0219D35C
	cmp r0, #1
	bne _021A8E9E
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, #8]
	bl FUN_0219D408
	adds r7, r0, #0
	ldr r3, _021A8EA4 ; =0x00001B0C
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r5, r3
	bl FUN_021AEE4C
	ldr r0, [r5, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021A8E90
	adds r0, r4, #0
	bl FUN_021BAC84
	adds r4, r0, #0
	movs r1, #1
	ldr r0, [r5, #4]
	lsls r1, r1, #0xe
	bl FUN_0219DB04
	adds r6, r0, #0
	movs r1, #1
	ldr r0, [r5, #4]
	lsls r1, r1, #0xf
	bl FUN_0219DB04
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0202D2B8
_021A8E90:
	ldr r2, _021A8EA4 ; =0x00001B0C
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r5, r2
	bl FUN_021A8EA8
	pop {r3, r4, r5, r6, r7, pc}
_021A8E9E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A8EA4: .word 0x00001B0C
	thumb_func_end FUN_021A8E2C

	thumb_func_start FUN_021A8EA8
FUN_021A8EA8: ; 0x021A8EA8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r5, r0, #0
	movs r0, #0
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	movs r7, #0
	str r0, [sp, #0x24]
_021A8EB8:
	ldr r0, [sp, #0x24]
	movs r1, #0xc
	muls r1, r0, r1
	ldr r0, [sp, #0x18]
	adds r6, r0, r1
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _021A8F5A
	ldr r1, [sp, #0x24]
	ldr r0, [sp, #0x14]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	movs r1, #0xf
	adds r4, r0, #0
	bl FUN_021BB1F4
	cmp r0, #0x64
	bge _021A8F5A
	ldrb r0, [r6, #4]
	ldr r7, [r6]
	cmp r0, #0
	beq _021A8EEC
	movs r0, #0x2b
	b _021A8EEE
_021A8EEC:
	movs r0, #0x2a
_021A8EEE:
	str r0, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #0x20]
	ldr r2, [sp, #0x1c]
	ldr r0, _021A8F6C ; =0xFFFF0000
	str r7, [sp]
	str r0, [sp, #4]
	lsls r2, r2, #0x10
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x20]
	movs r1, #0x5a
	lsrs r2, r2, #0x10
	bl FUN_021B1610
	ldrb r0, [r6, #6]
	ldrb r3, [r6, #5]
	ldr r2, [sp, #0x20]
	str r0, [sp]
	ldrb r0, [r6, #7]
	movs r1, #0x3e
	str r0, [sp, #4]
	ldrb r0, [r6, #8]
	str r0, [sp, #8]
	ldrb r0, [r6, #9]
	str r0, [sp, #0xc]
	ldrb r0, [r6, #0xa]
	str r0, [sp, #0x10]
	ldr r0, [r5, #0xc]
	bl FUN_021B1474
	movs r6, #0x13
	str r7, [sp, #0x28]
	lsls r6, r6, #6
_021A8F34:
	adds r0, r4, #0
	add r1, sp, #0x28
	adds r2, r5, r6
	bl FUN_021BC1F8
	cmp r0, #0
	bne _021A8F34
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #0x20]
	movs r1, #0x45
	adds r3, r7, #0
	bl FUN_021B1474
	ldr r0, [r5, #4]
	movs r1, #0x1b
	adds r2, r7, #0
	bl FUN_0219DB28
	movs r7, #1
_021A8F5A:
	ldr r0, [sp, #0x24]
	adds r0, r0, #1
	str r0, [sp, #0x24]
	cmp r0, #6
	blo _021A8EB8
	adds r0, r7, #0
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	nop
_021A8F6C: .word 0xFFFF0000
	thumb_func_end FUN_021A8EA8

	thumb_func_start FUN_021A8F70
FUN_021A8F70: ; 0x021A8F70
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r7, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021A8FC8
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021A9C68
	adds r0, r4, #0
	movs r1, #0x1a
	movs r7, #0x1a
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A8FB0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	movs r3, #0
	bl FUN_021A9178
_021A8FB0:
	ldr r0, [r5, #0xc]
	movs r1, #0x31
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A0CB8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021A8FC8:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A8F70

	thumb_func_start FUN_021A8FCC
FUN_021A8FCC: ; 0x021A8FCC
	movs r1, #0x22
	movs r2, #0
	lsls r1, r1, #4
	str r2, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021A8FCC

	thumb_func_start FUN_021A8FD8
FUN_021A8FD8: ; 0x021A8FD8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021A9000 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021A9004
	adds r2, r0, #0
	cmp r2, #6
	beq _021A8FFE
	ldr r0, [r5, #0xc]
	movs r1, #0x4d
	adds r3, r4, #0
	bl FUN_021B1474
_021A8FFE:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021A9000: .word 0x00001AB8
	thumb_func_end FUN_021A8FD8

	thumb_func_start FUN_021A9004
FUN_021A9004: ; 0x021A9004
	bx pc
	nop
	thumb_func_end FUN_021A9004
_021A9008:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A9014
FUN_021A9014: ; 0x021A9014
	movs r2, #0x35
	ldr r3, _021A901C ; =FUN_021A98E0
	lsls r2, r2, #4
	bx r3
	.align 2, 0
_021A901C: .word FUN_021A98E0
	thumb_func_end FUN_021A9014

	thumb_func_start FUN_021A9020
FUN_021A9020: ; 0x021A9020
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	ldr r4, _021A904C ; =0x0000025B
	adds r6, r1, #0
	adds r2, r4, #0
	adds r5, r0, #0
	bl FUN_021A8FD8
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A9050 ; =0xFFFF0000
	subs r4, #0xff
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r2, r4, #0
	bl FUN_021B1610
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_021A904C: .word 0x0000025B
_021A9050: .word 0xFFFF0000
	thumb_func_end FUN_021A9020

	thumb_func_start FUN_021A9054
FUN_021A9054: ; 0x021A9054
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #7
	bl FUN_021BBB18
	lsls r0, r0, #0x18
	movs r2, #0x97
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	lsls r2, r2, #2
	bl FUN_021A8FD8
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	movs r2, #0x5b
	ldr r0, _021A9094 ; =0xFFFF0000
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r2, #0xf2
	bl FUN_021B1610
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_021A9094: .word 0xFFFF0000
	thumb_func_end FUN_021A9054

	thumb_func_start FUN_021A9098
FUN_021A9098: ; 0x021A9098
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x36
	adds r2, r7, #0
	bl FUN_021B1474
	adds r0, r5, #0
	adds r1, r4, #0
	rsbs r2, r6, #0
	movs r3, #1
	bl FUN_021A96CC
	ldr r0, _021A90D0 ; =0xFFFF0000
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r2, #0x50
	adds r3, r7, #0
	bl FUN_021B1610
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A90D0: .word 0xFFFF0000
	thumb_func_end FUN_021A9098

	thumb_func_start FUN_021A90D4
FUN_021A90D4: ; 0x021A90D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r6, r2, #0
	str r3, [sp, #4]
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BBA30
	ldr r0, [r5, #0xc]
	movs r1, #0x10
	adds r2, r4, #0
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	movs r1, #0x35
	adds r2, r4, #0
	movs r3, #0
	bl FUN_021B1474
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _021A9152
	cmp r6, #2
	beq _021A9114
	cmp r6, #3
	beq _021A912A
	b _021A9140
_021A9114:
	ldr r0, _021A9158 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r2, #0xdd
	adds r3, r4, #0
	bl FUN_021B1610
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021A912A:
	ldr r0, _021A9158 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r2, #0xcb
	adds r3, r4, #0
	bl FUN_021B1610
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021A9140:
	ldr r0, _021A9158 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r2, #0xfb
	adds r3, r4, #0
	bl FUN_021B1610
_021A9152:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A9158: .word 0xFFFF0000
	thumb_func_end FUN_021A90D4

	thumb_func_start FUN_021A915C
FUN_021A915C: ; 0x021A915C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x59
	adds r3, r4, #0
	bl FUN_021B1474
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021A915C

	thumb_func_start FUN_021A9178
FUN_021A9178: ; 0x021A9178
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r3, #0
	cmp r4, #0
	beq _021A91E6
	adds r0, r6, #0
	bl FUN_021BAC80
	str r0, [sp]
	cmp r7, #0
	beq _021A919E
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBB54
	str r0, [r7]
_021A919E:
	cmp r4, #6
	bge _021A91D0
	adds r0, r6, #0
	bl FUN_021BBA30
	ldr r0, [r5, #0xc]
	ldr r2, [sp]
	movs r1, #0x10
	bl FUN_021B1474
	ldr r0, _021A91EC ; =0x00001AB8
	ldr r1, [sp]
	adds r0, r5, r0
	bl FUN_021A91F0
	cmp r0, #6
	beq _021A91E6
	ldr r0, [r5, #0xc]
	ldr r2, [sp]
	movs r1, #0x35
	movs r3, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021A91D0:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBA78
	lsls r3, r4, #0x10
	ldr r0, [r5, #0xc]
	ldr r2, [sp]
	movs r1, #0x11
	lsrs r3, r3, #0x10
	bl FUN_021B1474
_021A91E6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A91EC: .word 0x00001AB8
	thumb_func_end FUN_021A9178

	thumb_func_start FUN_021A91F0
FUN_021A91F0: ; 0x021A91F0
	bx pc
	nop
	thumb_func_end FUN_021A91F0
_021A91F4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A9200
FUN_021A9200: ; 0x021A9200
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	movs r4, #0
	bl FUN_021BBAE8
	ldr r1, [r5]
	cmp r1, #0
	bgt _021A9216
	beq _021A926C
	b _021A925C
_021A9216:
	cmp r1, #0x26
	bgt _021A925C
	cmp r1, #0x24
	blt _021A925C
	beq _021A922A
	cmp r1, #0x25
	beq _021A9232
	cmp r1, #0x26
	beq _021A924E
	b _021A925C
_021A922A:
	cmp r0, #0
	beq _021A9230
	adds r4, r0, #0
_021A9230:
	b _021A9268
_021A9232:
	cmp r0, #0
	beq _021A923C
	adds r4, r0, #0
	movs r0, #6
	b _021A926A
_021A923C:
	adds r0, r6, #0
	movs r1, #6
	movs r6, #6
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A924C
	adds r4, r6, #0
_021A924C:
	b _021A9268
_021A924E:
	adds r0, r6, #0
	bl FUN_021BD664
	cmp r0, #0
	bne _021A926E
	str r4, [r5]
	pop {r4, r5, r6, pc}
_021A925C:
	adds r0, r6, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021A9268
	ldr r4, [r5]
_021A9268:
	movs r0, #0
_021A926A:
	str r0, [r5]
_021A926C:
	adds r0, r4, #0
_021A926E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A9200

	thumb_func_start FUN_021A9270
FUN_021A9270: ; 0x021A9270
	push {r3, lr}
	ldr r0, [r0, #0xc]
	ldr r3, _021A9280 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x47
	bl FUN_021B1610
	pop {r3, pc}
	.align 2, 0
_021A9280: .word 0xFFFF0000
	thumb_func_end FUN_021A9270

	thumb_func_start FUN_021A9284
FUN_021A9284: ; 0x021A9284
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A92A4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xd5
	bl FUN_021B1610
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021A92A4: .word 0xFFFF0000
	thumb_func_end FUN_021A9284

	thumb_func_start FUN_021A92A8
FUN_021A92A8: ; 0x021A92A8
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A92C8 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xd2
	bl FUN_021B1610
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021A92C8: .word 0xFFFF0000
	thumb_func_end FUN_021A92A8

	thumb_func_start FUN_021A92CC
FUN_021A92CC: ; 0x021A92CC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A92EC ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xd8
	bl FUN_021B1610
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021A92EC: .word 0xFFFF0000
	thumb_func_end FUN_021A92CC

	thumb_func_start FUN_021A92F0
FUN_021A92F0: ; 0x021A92F0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r6, r0, #0
	ldr r0, [sp, #0x34]
	adds r4, r2, #0
	str r0, [sp, #0x34]
	movs r0, #0
	str r0, [sp, #0x10]
	movs r0, #0
	movs r5, #0
	str r1, [sp, #4]
	str r3, [sp, #8]
	ldr r7, [sp, #0x30]
	str r0, [sp, #0x14]
	cmp r4, #0
	bls _021A934C
_021A9310:
	lsls r0, r5, #2
	str r0, [sp, #0xc]
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x34]
	lsls r3, r5, #1
	ldrh r2, [r2, r3]
	ldr r1, [r7, r1]
	adds r0, r6, #0
	bl FUN_021A9BA4
	ldr r1, [sp, #8]
	ldr r0, [sp, #0xc]
	ldr r0, [r1, r0]
	cmp r0, #3
	ble _021A9338
	ldr r1, [sp, #0x14]
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x14]
_021A9338:
	cmp r0, #3
	bge _021A9346
	ldr r0, [sp, #0x10]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
_021A9346:
	adds r5, r5, #1
	cmp r5, r4
	blo _021A9310
_021A934C:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _021A9356
	movs r3, #2
	b _021A9360
_021A9356:
	ldr r0, [sp, #0x10]
	movs r3, #3
	cmp r0, #0
	bne _021A9360
	movs r3, #1
_021A9360:
	ldr r0, [sp, #4]
	lsls r2, r4, #0x18
	ldrh r0, [r0]
	lsls r3, r3, #0x18
	movs r1, #0x33
	str r0, [sp]
	ldr r0, [r6, #0xc]
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	movs r5, #0
	cmp r4, #0
	bls _021A9392
_021A937C:
	lsls r0, r5, #2
	ldr r0, [r7, r0]
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, [r6, #0xc]
	bl FUN_021B1600
	adds r5, r5, #1
	cmp r5, r4
	blo _021A937C
_021A9392:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A92F0

	thumb_func_start FUN_021A9398
FUN_021A9398: ; 0x021A9398
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x18]
	adds r5, r1, #0
	adds r4, r2, #0
	str r3, [sp, #0x10]
	movs r7, #0
	movs r0, #0
	cmp r5, #0
	bls _021A93D2
_021A93B0:
	lsls r1, r0, #2
	ldr r2, [r4, r1]
	cmp r2, #3
	ble _021A93BE
	adds r1, r7, #1
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
_021A93BE:
	cmp r2, #3
	bge _021A93CC
	ldr r1, [sp, #0x18]
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x18]
_021A93CC:
	adds r0, r0, #1
	cmp r0, r5
	blo _021A93B0
_021A93D2:
	ldr r0, [sp, #0x38]
	cmp r0, #0
	bne _021A93DA
	b _021A94EA
_021A93DA:
	cmp r7, #0
	beq _021A9458
	movs r0, #0
	movs r6, #0
	str r0, [sp, #0x14]
	cmp r5, #0
	bls _021A940E
_021A93E8:
	lsls r1, r6, #2
	ldr r0, [r4, r1]
	cmp r0, #3
	ble _021A9408
	ldr r0, [sp, #0x10]
	ldr r0, [r0, r1]
	bl FUN_021BAC80
	ldr r1, [sp, #0x14]
	adds r2, r1, #0
	adds r2, r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x14]
	add r2, sp, #0x1c
	strb r0, [r2, r1]
_021A9408:
	adds r6, r6, #1
	cmp r6, r5
	blo _021A93E8
_021A940E:
	add r3, sp, #0x1c
	cmp r7, #1
	beq _021A941E
	cmp r7, #2
	beq _021A942C
	cmp r7, #3
	beq _021A943E
	b _021A9458
_021A941E:
	ldr r0, _021A9518 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [sp, #0xc]
	movs r2, #6
	ldr r0, [r0, #0xc]
	b _021A9452
_021A942C:
	ldrb r0, [r3, #1]
	movs r1, #0x5b
	movs r2, #9
	str r0, [sp]
	ldr r0, _021A9518 ; =0xFFFF0000
	str r0, [sp, #4]
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0xc]
	b _021A9452
_021A943E:
	ldrb r0, [r3, #1]
	movs r1, #0x5b
	movs r2, #0xc
	str r0, [sp]
	ldrb r0, [r3, #2]
	str r0, [sp, #4]
	ldr r0, _021A9518 ; =0xFFFF0000
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0xc]
_021A9452:
	ldrb r3, [r3]
	bl FUN_021B1610
_021A9458:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021A9514
	movs r6, #0
	movs r7, #0
	cmp r5, #0
	bls _021A9488
_021A9466:
	lsls r1, r6, #2
	ldr r0, [r4, r1]
	cmp r0, #3
	bge _021A9482
	ldr r0, [sp, #0x10]
	ldr r0, [r0, r1]
	bl FUN_021BAC80
	adds r2, r7, #1
	lsls r2, r2, #0x18
	adds r1, r7, #0
	lsrs r7, r2, #0x18
	add r2, sp, #0x1c
	strb r0, [r2, r1]
_021A9482:
	adds r6, r6, #1
	cmp r6, r5
	blo _021A9466
_021A9488:
	ldr r0, [sp, #0x18]
	add r3, sp, #0x1c
	cmp r0, #1
	beq _021A949C
	cmp r0, #2
	beq _021A94B2
	cmp r0, #3
	beq _021A94CC
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A949C:
	ldr r0, _021A9518 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [sp, #0xc]
	ldrb r3, [r3]
	ldr r0, [r0, #0xc]
	movs r2, #0xf
	bl FUN_021B1610
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A94B2:
	ldrb r0, [r3, #1]
	movs r1, #0x5b
	movs r2, #0x12
	str r0, [sp]
	ldr r0, _021A9518 ; =0xFFFF0000
	str r0, [sp, #4]
	ldr r0, [sp, #0xc]
	ldrb r3, [r3]
	ldr r0, [r0, #0xc]
	bl FUN_021B1610
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A94CC:
	ldrb r0, [r3, #1]
	movs r1, #0x5b
	movs r2, #0x15
	str r0, [sp]
	ldrb r0, [r3, #2]
	str r0, [sp, #4]
	ldr r0, _021A9518 ; =0xFFFF0000
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	ldrb r3, [r3]
	ldr r0, [r0, #0xc]
	bl FUN_021B1610
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A94EA:
	cmp r7, #0
	beq _021A9500
	ldr r0, [sp, #0xc]
	ldr r3, _021A9518 ; =0xFFFF0000
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	movs r2, #0x4e
	bl FUN_021B1610
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_021A9500:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021A9514
	ldr r0, [sp, #0xc]
	ldr r3, _021A9518 ; =0xFFFF0000
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	movs r2, #0x4f
	bl FUN_021B1610
_021A9514:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A9518: .word 0xFFFF0000
	thumb_func_end FUN_021A9398

	thumb_func_start FUN_021A951C
FUN_021A951C: ; 0x021A951C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	str r2, [sp, #4]
	str r3, [sp, #8]
	ldr r7, [sp, #0x20]
	ldr r4, _021A956C ; =0x00000000
	beq _021A9566
_021A952E:
	ldr r0, [sp, #8]
	ldrb r0, [r0, r4]
	cmp r0, #0
	beq _021A9560
	cmp r7, #0
	beq _021A9554
	ldr r0, [sp, #4]
	lsls r1, r4, #2
	ldr r0, [r0, r1]
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A9570 ; =0xFFFF0000
	movs r2, #6
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	lsls r2, r2, #6
	b _021A955C
_021A9554:
	ldr r0, [r5, #0xc]
	ldr r3, _021A9570 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x51
_021A955C:
	bl FUN_021B1610
_021A9560:
	adds r4, r4, #1
	cmp r4, r6
	blo _021A952E
_021A9566:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021A956C: .word 0x00000000
_021A9570: .word 0xFFFF0000
	thumb_func_end FUN_021A951C

	thumb_func_start FUN_021A9574
FUN_021A9574: ; 0x021A9574
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0x57
	bl FUN_021B1474
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021A9574

	thumb_func_start FUN_021A958C
FUN_021A958C: ; 0x021A958C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0x58
	bl FUN_021B1474
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021A958C

	thumb_func_start FUN_021A95A4
FUN_021A95A4: ; 0x021A95A4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	cmp r6, #0
	str r4, [sp]
	ldr r0, _021A95E0 ; =0xFFFF0000
	ble _021A95CE
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	movs r2, #0x99
	bl FUN_021B1610
	add sp, #8
	pop {r4, r5, r6, pc}
_021A95CE:
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	movs r2, #0xae
	bl FUN_021B1610
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_021A95E0: .word 0xFFFF0000
	thumb_func_end FUN_021A95A4

	thumb_func_start FUN_021A95E4
FUN_021A95E4: ; 0x021A95E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	adds r0, r1, #0
	str r1, [sp, #0x10]
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	cmp r7, #0
	ble _021A9674
	lsls r2, r7, #0x18
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_021BB600
	str r0, [sp, #0x1c]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	str r7, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x18]
	movs r1, #9
	adds r2, r6, #0
	bl FUN_021B1474
	str r7, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x18]
	movs r1, #0x37
	adds r2, r6, #0
	bl FUN_021B1474
	ldr r0, [sp, #0x3c]
	cmp r0, #0
	beq _021A96C0
	add r0, sp, #0x38
	ldrh r0, [r0]
	cmp r0, #0
	bne _021A9658
	ldr r0, [sp, #0x1c]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, _021A96C4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp, #8]
	ldr r0, [r5, #0xc]
	movs r2, #0x1b
	adds r3, r6, #0
	bl FUN_021B1610
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
_021A9658:
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	str r4, [sp, #4]
	str r0, [sp, #8]
	ldr r0, _021A96C4 ; =0xFFFF0000
	ldr r2, _021A96C8 ; =0x000003AA
	str r0, [sp, #0xc]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	adds r3, r6, #0
	bl FUN_021B1610
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
_021A9674:
	rsbs r2, r7, #0
	lsls r2, r2, #0x18
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_021BB678
	str r0, [sp, #0x20]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	str r7, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x14]
	movs r1, #0xa
	adds r2, r6, #0
	bl FUN_021B1474
	str r7, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x14]
	movs r1, #0x38
	adds r2, r6, #0
	bl FUN_021B1474
	ldr r0, [sp, #0x20]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, _021A96C4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp, #8]
	ldr r0, [r5, #0xc]
	movs r2, #0x5a
	adds r3, r6, #0
	bl FUN_021B1610
_021A96C0:
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021A96C4: .word 0xFFFF0000
_021A96C8: .word 0x000003AA
	thumb_func_end FUN_021A95E4

	thumb_func_start FUN_021A96CC
FUN_021A96CC: ; 0x021A96CC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r4, r2, #0
	str r3, [sp]
	bl FUN_021BAC80
	adds r7, r0, #0
	cmp r4, #0
	ble _021A96FC
	lsls r1, r4, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	bl FUN_021BB7E4
	lsls r3, r4, #0x10
	ldr r0, [r5, #0xc]
	movs r1, #2
	adds r2, r7, #0
	lsrs r3, r3, #0x10
	bl FUN_021B1474
	b _021A9708
_021A96FC:
	bge _021A9708
	adds r0, r5, #0
	adds r1, r6, #0
	rsbs r2, r4, #0
	bl FUN_021A9BA4
_021A9708:
	ldr r0, [sp]
	cmp r0, #0
	beq _021A9726
	ldr r0, _021A9728 ; =0x00001AB8
	adds r1, r7, #0
	adds r0, r5, r0
	bl FUN_021A972C
	cmp r0, #6
	beq _021A9726
	ldr r0, [r5, #0xc]
	movs r1, #0x41
	adds r2, r7, #0
	bl FUN_021B1474
_021A9726:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A9728: .word 0x00001AB8
	thumb_func_end FUN_021A96CC

	thumb_func_start FUN_021A972C
FUN_021A972C: ; 0x021A972C
	bx pc
	nop
	thumb_func_end FUN_021A972C
_021A9730:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021A973C
FUN_021A973C: ; 0x021A973C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xd
	adds r7, r2, #0
	bl FUN_021BB1F4
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BB7F8
	ldr r0, [r5, #0xc]
	movs r1, #3
	adds r2, r6, #0
	bl FUN_021B1474
	ldr r0, [r5, #0xc]
	movs r1, #0x43
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021B1474
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A973C

	thumb_func_start FUN_021A9774
FUN_021A9774: ; 0x021A9774
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021A9774

	non_word_aligned_thumb_func_start FUN_021A9776
FUN_021A9776: ; 0x021A9776
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	adds r0, r6, #0
	add r6, sp, #0x24
	ldr r2, [r6]
	adds r1, r4, #0
	bl FUN_021BB874
	ldr r0, [sp, #0x24]
	lsls r3, r4, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0xf
	adds r2, r7, #0
	lsrs r3, r3, #0x18
	bl FUN_021B1474
	cmp r4, #6
	bge _021A97C4
	cmp r4, #5
	bne _021A97B8
	ldr r0, [r6]
	bl FUN_021CE2F8
	cmp r0, #0
	beq _021A97B8
	movs r4, #6
_021A97B8:
	ldr r0, [r5, #0xc]
	movs r1, #0x35
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_021B1474
_021A97C4:
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_021A9776

	thumb_func_start FUN_021A97CC
FUN_021A97CC: ; 0x021A97CC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	cmp r5, #1
	beq _021A97E8
	cmp r5, #2
	beq _021A989C
	b _021A98B8
_021A97E8:
	cmp r6, #0x14
	bhi _021A9882
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021A97F8: ; jump table
	.short _021A9882 - _021A97F8 - 2 ; case 0
	.short _021A983C - _021A97F8 - 2 ; case 1
	.short _021A984A - _021A97F8 - 2 ; case 2
	.short _021A9858 - _021A97F8 - 2 ; case 3
	.short _021A982E - _021A97F8 - 2 ; case 4
	.short _021A9822 - _021A97F8 - 2 ; case 5
	.short _021A9866 - _021A97F8 - 2 ; case 6
	.short _021A9882 - _021A97F8 - 2 ; case 7
	.short _021A9882 - _021A97F8 - 2 ; case 8
	.short _021A9882 - _021A97F8 - 2 ; case 9
	.short _021A9882 - _021A97F8 - 2 ; case 10
	.short _021A9882 - _021A97F8 - 2 ; case 11
	.short _021A9882 - _021A97F8 - 2 ; case 12
	.short _021A9882 - _021A97F8 - 2 ; case 13
	.short _021A9882 - _021A97F8 - 2 ; case 14
	.short _021A9872 - _021A97F8 - 2 ; case 15
	.short _021A9882 - _021A97F8 - 2 ; case 16
	.short _021A9882 - _021A97F8 - 2 ; case 17
	.short _021A9882 - _021A97F8 - 2 ; case 18
	.short _021A9882 - _021A97F8 - 2 ; case 19
	.short _021A987E - _021A97F8 - 2 ; case 20
_021A9822:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xf9
	b _021A988A
_021A982E:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xb0
	b _021A988A
_021A983C:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xbf
	b _021A988A
_021A984A:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xe0
	b _021A988A
_021A9858:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r2, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r1, #0x5b
	adds r2, #0xce
	b _021A988A
_021A9866:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	ldr r2, _021A98D8 ; =0x00000162
	b _021A988A
_021A9872:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0x18
	b _021A988A
_021A987E:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021A9882:
	ldr r0, [r4, #0xc]
	ldr r3, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x47
_021A988A:
	bl FUN_021B1610
	ldr r1, _021A98DC ; =0x0000078A
	movs r0, #0x10
	ldrb r2, [r4, r1]
	add sp, #4
	orrs r0, r2
	strb r0, [r4, r1]
	pop {r3, r4, r5, r6, pc}
_021A989C:
	ldr r0, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r4, #0xc]
	movs r2, #0xd2
	bl FUN_021B1610
	ldr r1, _021A98DC ; =0x0000078A
	movs r0, #0x10
	ldrb r2, [r4, r1]
	add sp, #4
	orrs r0, r2
	strb r0, [r4, r1]
	pop {r3, r4, r5, r6, pc}
_021A98B8:
	ldr r0, [r4, #0xc]
	ldr r3, _021A98D4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x47
	bl FUN_021B1610
	ldr r1, _021A98DC ; =0x0000078A
	movs r0, #0x10
	ldrb r2, [r4, r1]
	orrs r0, r2
	strb r0, [r4, r1]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021A98D4: .word 0xFFFF0000
_021A98D8: .word 0x00000162
_021A98DC: .word 0x0000078A
	thumb_func_end FUN_021A97CC

	thumb_func_start FUN_021A98E0
FUN_021A98E0: ; 0x021A98E0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021A9900 ; =0xFFFF0000
	movs r1, #0x5b
	str r0, [sp]
	ldr r0, [r5, #0xc]
	adds r2, r4, #0
	bl FUN_021B1610
	pop {r3, r4, r5, pc}
	nop
_021A9900: .word 0xFFFF0000
	thumb_func_end FUN_021A98E0

	thumb_func_start FUN_021A9904
FUN_021A9904: ; 0x021A9904
	push {r4, lr}
	sub sp, #0x10
	adds r4, r1, #0
	cmp r2, #4
	bhi _021A9924
	adds r1, r2, r2
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021A991A: ; jump table
	.short _021A9924 - _021A991A - 2 ; case 0
	.short _021A9934 - _021A991A - 2 ; case 1
	.short _021A9948 - _021A991A - 2 ; case 2
	.short _021A9960 - _021A991A - 2 ; case 3
	.short _021A997C - _021A991A - 2 ; case 4
_021A9924:
	ldr r0, [r0, #0xc]
	ldr r3, _021A999C ; =0xFFFF0000
	movs r1, #0x5a
	adds r2, r4, #0
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9934:
	ldr r1, _021A999C ; =0xFFFF0000
	ldr r3, [r3]
	str r1, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	adds r2, r4, #0
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9948:
	ldr r1, [r3, #4]
	ldr r3, [r3]
	str r1, [sp]
	ldr r1, _021A999C ; =0xFFFF0000
	adds r2, r4, #0
	str r1, [sp, #4]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9960:
	ldr r1, [r3, #4]
	adds r2, r4, #0
	str r1, [sp]
	ldr r1, [r3, #8]
	ldr r3, [r3]
	str r1, [sp, #4]
	ldr r1, _021A999C ; =0xFFFF0000
	str r1, [sp, #8]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A997C:
	ldr r1, [r3, #4]
	adds r2, r4, #0
	str r1, [sp]
	ldr r1, [r3, #8]
	str r1, [sp, #4]
	ldr r1, [r3, #0xc]
	ldr r3, [r3]
	str r1, [sp, #8]
	ldr r1, _021A999C ; =0xFFFF0000
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_021A999C: .word 0xFFFF0000
	thumb_func_end FUN_021A9904

	thumb_func_start FUN_021A99A0
FUN_021A99A0: ; 0x021A99A0
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r1, #0
	adds r4, r2, #0
	ldr r1, [sp, #0x20]
	cmp r3, #4
	bhi _021A99C4
	adds r2, r3, r3
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_021A99BA: ; jump table
	.short _021A99C4 - _021A99BA - 2 ; case 0
	.short _021A99D8 - _021A99BA - 2 ; case 1
	.short _021A99F0 - _021A99BA - 2 ; case 2
	.short _021A9A0C - _021A99BA - 2 ; case 3
	.short _021A9A2C - _021A99BA - 2 ; case 4
_021A99C4:
	ldr r1, _021A9A50 ; =0xFFFF0000
	adds r2, r5, #0
	str r1, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x5c
	adds r3, r4, #0
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A99D8:
	ldr r1, [r1]
	adds r2, r5, #0
	str r1, [sp]
	ldr r1, _021A9A50 ; =0xFFFF0000
	adds r3, r4, #0
	str r1, [sp, #4]
	ldr r0, [r0, #0xc]
	movs r1, #0x5c
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A99F0:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r1, [r1, #4]
	adds r2, r5, #0
	str r1, [sp, #4]
	ldr r1, _021A9A50 ; =0xFFFF0000
	str r1, [sp, #8]
	ldr r0, [r0, #0xc]
	movs r1, #0x5c
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9A0C:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r2, [r1, #4]
	str r2, [sp, #4]
	ldr r1, [r1, #8]
	adds r2, r5, #0
	str r1, [sp, #8]
	ldr r1, _021A9A50 ; =0xFFFF0000
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	movs r1, #0x5c
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9A2C:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r2, [r1, #4]
	str r2, [sp, #4]
	ldr r2, [r1, #8]
	str r2, [sp, #8]
	ldr r1, [r1, #0xc]
	adds r2, r5, #0
	str r1, [sp, #0xc]
	ldr r1, _021A9A50 ; =0xFFFF0000
	str r1, [sp, #0x10]
	ldr r0, [r0, #0xc]
	movs r1, #0x5c
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
	.align 2, 0
_021A9A50: .word 0xFFFF0000
	thumb_func_end FUN_021A99A0

	thumb_func_start FUN_021A9A54
FUN_021A9A54: ; 0x021A9A54
	push {r4, lr}
	sub sp, #0x10
	adds r4, r1, #0
	cmp r2, #4
	bhi _021A9A74
	adds r1, r2, r2
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021A9A6A: ; jump table
	.short _021A9A74 - _021A9A6A - 2 ; case 0
	.short _021A9A84 - _021A9A6A - 2 ; case 1
	.short _021A9A98 - _021A9A6A - 2 ; case 2
	.short _021A9AB0 - _021A9A6A - 2 ; case 3
	.short _021A9ACC - _021A9A6A - 2 ; case 4
_021A9A74:
	ldr r0, [r0, #0xc]
	ldr r3, _021A9AEC ; =0xFFFF0000
	movs r1, #0x5b
	adds r2, r4, #0
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9A84:
	ldr r1, _021A9AEC ; =0xFFFF0000
	ldr r3, [r3]
	str r1, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x5b
	adds r2, r4, #0
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9A98:
	ldr r1, [r3, #4]
	ldr r3, [r3]
	str r1, [sp]
	ldr r1, _021A9AEC ; =0xFFFF0000
	adds r2, r4, #0
	str r1, [sp, #4]
	ldr r0, [r0, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9AB0:
	ldr r1, [r3, #4]
	adds r2, r4, #0
	str r1, [sp]
	ldr r1, [r3, #8]
	ldr r3, [r3]
	str r1, [sp, #4]
	ldr r1, _021A9AEC ; =0xFFFF0000
	str r1, [sp, #8]
	ldr r0, [r0, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
_021A9ACC:
	ldr r1, [r3, #4]
	adds r2, r4, #0
	str r1, [sp]
	ldr r1, [r3, #8]
	str r1, [sp, #4]
	ldr r1, [r3, #0xc]
	ldr r3, [r3]
	str r1, [sp, #8]
	ldr r1, _021A9AEC ; =0xFFFF0000
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_021A9AEC: .word 0xFFFF0000
	thumb_func_end FUN_021A9A54

	thumb_func_start FUN_021A9AF0
FUN_021A9AF0: ; 0x021A9AF0
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r1, #0
	adds r4, r2, #0
	ldr r1, [sp, #0x20]
	cmp r3, #4
	bhi _021A9B14
	adds r2, r3, r3
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_021A9B0A: ; jump table
	.short _021A9B14 - _021A9B0A - 2 ; case 0
	.short _021A9B28 - _021A9B0A - 2 ; case 1
	.short _021A9B40 - _021A9B0A - 2 ; case 2
	.short _021A9B5C - _021A9B0A - 2 ; case 3
	.short _021A9B7C - _021A9B0A - 2 ; case 4
_021A9B14:
	ldr r1, _021A9BA0 ; =0xFFFF0000
	adds r2, r5, #0
	str r1, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x5d
	adds r3, r4, #0
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9B28:
	ldr r1, [r1]
	adds r2, r5, #0
	str r1, [sp]
	ldr r1, _021A9BA0 ; =0xFFFF0000
	adds r3, r4, #0
	str r1, [sp, #4]
	ldr r0, [r0, #0xc]
	movs r1, #0x5d
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9B40:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r1, [r1, #4]
	adds r2, r5, #0
	str r1, [sp, #4]
	ldr r1, _021A9BA0 ; =0xFFFF0000
	str r1, [sp, #8]
	ldr r0, [r0, #0xc]
	movs r1, #0x5d
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9B5C:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r2, [r1, #4]
	str r2, [sp, #4]
	ldr r1, [r1, #8]
	adds r2, r5, #0
	str r1, [sp, #8]
	ldr r1, _021A9BA0 ; =0xFFFF0000
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	movs r1, #0x5d
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
_021A9B7C:
	ldr r2, [r1]
	adds r3, r4, #0
	str r2, [sp]
	ldr r2, [r1, #4]
	str r2, [sp, #4]
	ldr r2, [r1, #8]
	str r2, [sp, #8]
	ldr r1, [r1, #0xc]
	adds r2, r5, #0
	str r1, [sp, #0xc]
	ldr r1, _021A9BA0 ; =0xFFFF0000
	str r1, [sp, #0x10]
	ldr r0, [r0, #0xc]
	movs r1, #0x5d
	bl FUN_021B1610
	add sp, #0x14
	pop {r4, r5, pc}
	.align 2, 0
_021A9BA0: .word 0xFFFF0000
	thumb_func_end FUN_021A9AF0

	thumb_func_start FUN_021A9BA4
FUN_021A9BA4: ; 0x021A9BA4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r6, r1, #0
	movs r1, #4
	adds r4, r2, #0
	bl FUN_0219CA38
	cmp r0, #0
	bne _021A9BD6
	lsls r1, r4, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	bl FUN_021BB7D0
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	lsls r3, r4, #0x10
	ldr r0, [r5, #0xc]
	movs r1, #1
	lsrs r3, r3, #0x10
	bl FUN_021B1474
_021A9BD6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A9BA4

	thumb_func_start FUN_021A9BD8
FUN_021A9BD8: ; 0x021A9BD8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r6, r2, #0
	adds r4, r3, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021A9C0E
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021BAEE0
	str r4, [sp]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	movs r1, #8
	adds r3, r6, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021A9C0E:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021BAEB4
	str r4, [sp]
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	movs r1, #7
	adds r3, r6, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A9BD8

	thumb_func_start FUN_021A9C2C
FUN_021A9C2C: ; 0x021A9C2C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0x42
	bl FUN_021B1474
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021A9C2C

	thumb_func_start FUN_021A9C44
FUN_021A9C44: ; 0x021A9C44
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB824
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x19
	adds r3, r6, #0
	bl FUN_021B1474
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A9C44

	thumb_func_start FUN_021A9C68
FUN_021A9C68: ; 0x021A9C68
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB848
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x1a
	adds r3, r6, #0
	bl FUN_021B1474
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A9C68

	thumb_func_start FUN_021A9C8C
FUN_021A9C8C: ; 0x021A9C8C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB800
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x1b
	adds r3, r6, #0
	bl FUN_021B1474
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021A9C8C

	thumb_func_start FUN_021A9CB0
FUN_021A9CB0: ; 0x021A9CB0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r5, r0, #0
	ldrb r0, [r7]
	movs r4, #0
	cmp r0, #0
	bls _021A9CE6
_021A9CBE:
	adds r6, r7, r4
	ldrb r1, [r6, #1]
	ldr r0, [r5, #8]
	bl FUN_0219D408
	str r0, [sp]
	ldrb r2, [r6, #1]
	ldr r0, [r5, #0xc]
	movs r1, #0x2a
	bl FUN_021B1474
	ldrb r2, [r6, #1]
	ldr r0, [r5, #4]
	ldr r1, [sp]
	bl FUN_0219D644
	ldrb r0, [r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _021A9CBE
_021A9CE6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021A9CB0

	thumb_func_start FUN_021A9CE8
FUN_021A9CE8: ; 0x021A9CE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r5, r0, #0
	ldr r0, _021A9E24 ; =0x00000782
	str r1, [sp]
	str r0, [sp, #0x10]
	ldrb r0, [r5, r0]
	movs r4, #0
	cmp r0, #0
	bls _021A9D8A
	ldr r0, [sp, #0x10]
	adds r0, #0x5e
	adds r0, r5, r0
	str r0, [sp, #8]
	ldr r0, [sp, #0x10]
	str r0, [sp, #0x1c]
	adds r0, #0x6c
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x10]
	str r0, [sp, #0x18]
	adds r0, #0x5e
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x10]
	str r0, [sp, #0x14]
	adds r0, #0x6b
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x10]
	adds r0, r5, r0
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x10]
	adds r0, #0x5e
	str r0, [sp, #0x10]
_021A9D28:
	lsls r7, r4, #4
	adds r1, r5, r7
	ldr r0, [sp, #0x10]
	str r1, [sp, #4]
	ldr r0, [r1, r0]
	ldr r1, [sp]
	cmp r0, r1
	beq _021A9D80
	ldr r2, [sp, #4]
	ldr r1, [sp, #0x14]
	ldrb r1, [r2, r1]
	cmp r1, #0
	bne _021A9D80
	ldr r1, [sp, #8]
	adds r1, r1, r7
	ldr r1, [r1, #4]
	lsls r2, r1, #0x1c
	lsrs r2, r2, #0x1c
	cmp r2, #1
	bne _021A9D5A
	lsls r1, r1, #9
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	b _021A9D5C
_021A9D5A:
	movs r6, #0
_021A9D5C:
	cmp r6, #0xe4
	bne _021A9D80
	movs r1, #0xc
	bl FUN_021BB1F4
	adds r2, r0, #0
	ldr r0, [sp, #0x18]
	adds r1, r5, r7
	ldr r0, [r1, r0]
	adds r1, r6, #0
	bl FUN_021C5B44
	cmp r0, #0
	beq _021A9D80
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x1c]
	movs r2, #1
	strb r2, [r1, r0]
_021A9D80:
	ldr r0, [sp, #0x20]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _021A9D28
_021A9D8A:
	ldr r6, _021A9E28 ; =0x00002C37
	ldr r7, _021A9E2C ; =0x00000788
	movs r4, #0
	adds r0, r6, #0
	strb r4, [r5, r7]
	bl FUN_021BCD48
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #6
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x53
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	subs r0, r7, #6
	ldrb r0, [r5, r0]
	cmp r0, #0
	bls _021A9E1A
	adds r0, r7, #0
	adds r0, #0x58
	adds r0, r5, r0
	str r0, [sp, #0xc]
	adds r0, r7, #0
	str r0, [sp, #0x24]
	adds r0, #0x58
	str r0, [sp, #0x24]
	adds r0, r7, #0
	str r0, [sp, #0x28]
	adds r0, #0x66
	str r0, [sp, #0x28]
	subs r0, r7, #6
	str r0, [sp, #0x2c]
	adds r7, #0x66
_021A9DDA:
	lsls r1, r4, #4
	adds r6, r5, r1
	ldrb r0, [r6, r7]
	cmp r0, #0
	beq _021A9E10
	ldr r0, [sp, #0xc]
	adds r0, r0, r1
	ldr r0, [r0, #4]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _021A9DFC
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	b _021A9DFE
_021A9DFC:
	movs r1, #0
_021A9DFE:
	cmp r1, #0xe4
	bne _021A9E0A
	ldr r0, [sp, #0x24]
	ldr r0, [r6, r0]
	bl FUN_021C5C40
_021A9E0A:
	ldr r0, [sp, #0x28]
	movs r1, #0
	strb r1, [r6, r0]
_021A9E10:
	ldr r0, [sp, #0x2c]
	adds r4, r4, #1
	ldrb r0, [r5, r0]
	cmp r4, r0
	blo _021A9DDA
_021A9E1A:
	ldr r0, _021A9E2C ; =0x00000788
	ldrb r0, [r5, r0]
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A9E24: .word 0x00000782
_021A9E28: .word 0x00002C37
_021A9E2C: .word 0x00000788
	thumb_func_end FUN_021A9CE8

	thumb_func_start FUN_021A9E30
FUN_021A9E30: ; 0x021A9E30
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _021A9EA4 ; =0x00002C5E
	str r0, [sp]
	adds r5, r1, #0
	adds r0, r6, #0
	adds r7, r3, #0
	ldr r4, [sp, #0x18]
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0xe
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x12
	movs r1, #0
	movs r5, #0
	bl FUN_021BCDFC
	movs r0, #0xd
	movs r1, #6
	bl FUN_021BCDFC
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x18
	bl FUN_021BC940
	movs r0, #0x12
	bl FUN_021BCFB0
	strh r0, [r4]
	movs r0, #0xd
	bl FUN_021BCFB0
	strb r0, [r4, #2]
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r6, #0xd
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BCD94
	cmp r4, #0
	bne _021A9EA0
	movs r5, #1
_021A9EA0:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021A9EA4: .word 0x00002C5E
	thumb_func_end FUN_021A9E30

	thumb_func_start FUN_021A9EA8
FUN_021A9EA8: ; 0x021A9EA8
	push {r4, r5, r6, lr}
	ldr r6, _021A9EE8 ; =0x00002C7C
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x11
	movs r1, #1
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0xf
	bl FUN_021BC940
	movs r0, #0x11
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021A9EE8: .word 0x00002C7C
	thumb_func_end FUN_021A9EA8

	thumb_func_start FUN_021A9EEC
FUN_021A9EEC: ; 0x021A9EEC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021A9F24 ; =0x00002C91
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x15
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021A9F24: .word 0x00002C91
	thumb_func_end FUN_021A9EEC

	thumb_func_start FUN_021A9F28
FUN_021A9F28: ; 0x021A9F28
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #8
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #9
	bl FUN_021BB1F4
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	adds r2, r0, #0
	movs r0, #0x28
	adds r1, r5, #0
	adds r3, r7, #0
	bl FUN_021BD298
	add r5, sp, #4
	strh r0, [r5]
	movs r0, #0x10
	bl FUN_021BD100
	movs r1, #0x64
	ldrh r2, [r5]
	subs r0, r1, r0
	muls r0, r2, r0
	blx FUN_0208D894
	strh r0, [r5]
	ldrh r0, [r5]
	cmp r0, #0
	bne _021A9F7A
	movs r0, #1
	strh r0, [r5]
_021A9F7A:
	add r0, sp, #4
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021A5158
	add r2, sp, #4
	adds r5, r0, #0
	ldrh r2, [r2]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021A9098
	cmp r5, #0
	beq _021A9FA6
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_021A51D8
_021A9FA6:
	add r0, sp, #4
	ldrh r0, [r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021A9F28

	thumb_func_start FUN_021A9FB0
FUN_021A9FB0: ; 0x021A9FB0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x18]
	adds r4, r1, #0
	adds r6, r3, #0
	bl FUN_021AC390
	ldr r7, _021AA008 ; =0x00002CCF
	adds r0, r7, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x3f
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x19
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #7
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA008: .word 0x00002CCF
	thumb_func_end FUN_021A9FB0

	thumb_func_start FUN_021AA00C
FUN_021AA00C: ; 0x021AA00C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, _021AA0B4 ; =0x00002CE7
	adds r6, r2, #0
	adds r5, r1, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_0202174C
	adds r1, r0, #0
	movs r0, #0x16
	bl FUN_021BCE84
	adds r0, r6, #0
	bl FUN_021BB03C
	adds r1, r0, #0
	movs r0, #0x1c
	bl FUN_021BCDFC
	adds r0, r5, #0
	bl FUN_0202176C
	adds r1, r0, #0
	movs r0, #0x1a
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x1b
	bl FUN_020212AC
	adds r1, r0, #0
	movs r0, #0x1b
	bl FUN_021BCDFC
	movs r0, #0x4b
	movs r1, #0
	movs r6, #0
	bl FUN_021BCE84
	adds r0, r7, #0
	movs r1, #0x28
	bl FUN_021BC940
	movs r0, #0x16
	strh r5, [r4]
	strh r5, [r4, #2]
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	movs r0, #0x1c
	bl FUN_021BCFB0
	strh r0, [r4, #4]
	movs r0, #0x1a
	bl FUN_021BCFB0
	str r0, [r4, #8]
	movs r0, #0x1b
	bl FUN_021BCFB0
	str r0, [r4, #0xc]
	movs r0, #0x4b
	str r6, [r4, #0x10]
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021AA0AA
	movs r0, #0x11
	strb r0, [r4, #6]
_021AA0AA:
	ldr r0, _021AA0B8 ; =0x00002D04
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA0B4: .word 0x00002CE7
_021AA0B8: .word 0x00002D04
	thumb_func_end FUN_021AA00C

	thumb_func_start FUN_021AA0BC
FUN_021AA0BC: ; 0x021AA0BC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AA0FC ; =0x00002D13
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x22
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x21
	bl FUN_021BC940
	ldr r0, _021AA0FC ; =0x00002D13
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA0FC: .word 0x00002D13
	thumb_func_end FUN_021AA0BC

	thumb_func_start FUN_021AA100
FUN_021AA100: ; 0x021AA100
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r3, #0
	adds r7, r0, #0
	adds r0, r6, #0
	adds r5, r1, #0
	str r2, [sp]
	bl FUN_021AA1A0
	adds r4, r0, #0
	ldr r0, _021AA194 ; =0x00002D2C
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x12
	bl FUN_021BCE40
	movs r0, #5
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r5, #0
	cmp r4, #0
	bls _021AA156
_021AA13C:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AA1B0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #6
	bl FUN_021BCE40
	adds r5, r5, #1
	cmp r5, r4
	blo _021AA13C
_021AA156:
	movs r0, #0x3e
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x13
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r7, #0
	movs r1, #0x24
	bl FUN_021BC940
	movs r0, #0x3e
	bl FUN_021BCFB0
	adds r5, r0, #0
	movs r0, #0x13
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _021AA198 ; =0x00002D3D
	bl FUN_021BCD94
	cmp r4, #0
	beq _021AA190
	ldr r0, _021AA19C ; =0x000004A8
	ldr r0, [r7, r0]
	strh r4, [r0]
_021AA190:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA194: .word 0x00002D2C
_021AA198: .word 0x00002D3D
_021AA19C: .word 0x000004A8
	thumb_func_end FUN_021AA100

	thumb_func_start FUN_021AA1A0
FUN_021AA1A0: ; 0x021AA1A0
	bx pc
	nop
	thumb_func_end FUN_021AA1A0
_021AA1A4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021AA1B0
FUN_021AA1B0: ; 0x021AA1B0
	bx pc
	nop
	thumb_func_end FUN_021AA1B0
_021AA1B4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AA1C0
FUN_021AA1C0: ; 0x021AA1C0
	push {r4, r5, r6, lr}
	ldr r6, _021AA200 ; =0x00002D55
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x2e
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	nop
_021AA200: .word 0x00002D55
	thumb_func_end FUN_021AA1C0

	thumb_func_start FUN_021AA204
FUN_021AA204: ; 0x021AA204
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r2, #0
	movs r1, #0
	bl FUN_021AA268
	adds r4, r0, #0
	ldr r0, _021AA260 ; =0x00002D6E
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	cmp r4, #0
	beq _021AA236
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	b _021AA238
_021AA236:
	movs r1, #0x1f
_021AA238:
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x93
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021AA264 ; =0x00002D74
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AA260: .word 0x00002D6E
_021AA264: .word 0x00002D74
	thumb_func_end FUN_021AA204

	thumb_func_start FUN_021AA268
FUN_021AA268: ; 0x021AA268
	bx pc
	nop
	thumb_func_end FUN_021AA268
_021AA26C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AA278
FUN_021AA278: ; 0x021AA278
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AA2C0 ; =0x00002D85
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x94
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA2C0: .word 0x00002D85
	thumb_func_end FUN_021AA278

	thumb_func_start FUN_021AA2C4
FUN_021AA2C4: ; 0x021AA2C4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r5, r1, #0
	ldr r7, [sp, #0x18]
	bl FUN_021AA380
	adds r4, r0, #0
	ldr r0, _021AA378 ; =0x00002D9F
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #5
	adds r1, r4, #0
	bl FUN_021BCE40
	cmp r4, #0
	beq _021AA318
	movs r5, #0
	cmp r4, #0
	bls _021AA320
_021AA2FC:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AA390
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #6
	bl FUN_021BCE40
	adds r5, r5, #1
	cmp r5, r4
	blo _021AA2FC
	b _021AA320
_021AA318:
	movs r0, #6
	movs r1, #0x1f
	bl FUN_021BCE40
_021AA320:
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x4f
	movs r1, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x95
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021AA352
	movs r0, #6
	bl FUN_021BCFB0
	b _021AA354
_021AA352:
	movs r0, #0x1f
_021AA354:
	strb r0, [r7]
	movs r0, #0x4f
	bl FUN_021BCFB0
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021AA37C ; =0x00002DBC
	bl FUN_021BCD94
	movs r0, #1
	cmp r4, #0
	beq _021AA376
	movs r0, #0
_021AA376:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA378: .word 0x00002D9F
_021AA37C: .word 0x00002DBC
	thumb_func_end FUN_021AA2C4

	thumb_func_start FUN_021AA380
FUN_021AA380: ; 0x021AA380
	bx pc
	nop
	thumb_func_end FUN_021AA380
_021AA384:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021AA390
FUN_021AA390: ; 0x021AA390
	bx pc
	nop
	thumb_func_end FUN_021AA390
_021AA394:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AA3A0
FUN_021AA3A0: ; 0x021AA3A0
	push {r4, r5, r6, lr}
	ldr r6, _021AA3CC ; =0x00002DCB
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x96
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AA3CC: .word 0x00002DCB
	thumb_func_end FUN_021AA3A0

	thumb_func_start FUN_021AA3D0
FUN_021AA3D0: ; 0x021AA3D0
	push {r4, r5, r6, lr}
	ldr r6, _021AA3FC ; =0x00002DDC
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x97
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AA3FC: .word 0x00002DDC
	thumb_func_end FUN_021AA3D0

	thumb_func_start FUN_021AA400
FUN_021AA400: ; 0x021AA400
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r7, r0, #0
	adds r0, r6, #0
	adds r5, r1, #0
	bl FUN_021AA480
	adds r4, r0, #0
	ldr r0, _021AA478 ; =0x00002DF2
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	movs r0, #5
	adds r1, r4, #0
	bl FUN_021BCE40
	cmp r4, #0
	bls _021AA454
_021AA43A:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AA490
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #6
	bl FUN_021BCE40
	adds r5, r5, #1
	cmp r5, r4
	blo _021AA43A
_021AA454:
	adds r0, r7, #0
	movs r1, #0x98
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _021AA47C ; =0x00002DFD
	bl FUN_021BCD94
	movs r0, #1
	cmp r4, #0
	beq _021AA474
	movs r0, #0
_021AA474:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA478: .word 0x00002DF2
_021AA47C: .word 0x00002DFD
	thumb_func_end FUN_021AA400

	thumb_func_start FUN_021AA480
FUN_021AA480: ; 0x021AA480
	bx pc
	nop
	thumb_func_end FUN_021AA480
_021AA484:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021AA490
FUN_021AA490: ; 0x021AA490
	bx pc
	nop
	thumb_func_end FUN_021AA490
_021AA494:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AA4A0
FUN_021AA4A0: ; 0x021AA4A0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r6, r1, #0
	str r2, [sp]
	movs r4, #0
	bl FUN_021BB448
	adds r7, r0, #0
	cmp r7, #0x10
	beq _021AA504
	ldr r0, _021AA508 ; =0x00002E14
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x21
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x42
	movs r1, #1
	movs r6, #1
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x99
	bl FUN_021BC940
	movs r0, #0x42
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021AA4FE
	adds r4, r6, #0
_021AA4FE:
	ldr r0, _021AA50C ; =0x00002E1E
	bl FUN_021BCD94
_021AA504:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA508: .word 0x00002E14
_021AA50C: .word 0x00002E1E
	thumb_func_end FUN_021AA4A0

	thumb_func_start FUN_021AA510
FUN_021AA510: ; 0x021AA510
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r3, #0
	adds r4, r1, #0
	bl FUN_02021778
	adds r6, r0, #0
	bne _021AA554
	ldr r7, _021AA558 ; =0x00002E34
	adds r0, r7, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x32
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r6, r0, #0
	adds r0, r7, #5
	bl FUN_021BCD94
_021AA554:
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA558: .word 0x00002E34
	thumb_func_end FUN_021AA510

	thumb_func_start FUN_021AA55C
FUN_021AA55C: ; 0x021AA55C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r3, #0
	adds r6, r0, #0
	ldrh r0, [r5]
	adds r7, r1, #0
	movs r1, #4
	str r2, [sp]
	bl FUN_020212AC
	ldr r4, _021AA5EC ; =0x00002E4E
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrh r1, [r5]
	movs r0, #0x12
	bl FUN_021BCE40
	ldr r1, [r5, #8]
	movs r0, #0x1a
	bl FUN_021BCE40
	ldr r1, [sp, #4]
	movs r0, #0x2b
	bl FUN_021BCE84
	movs r1, #4
	movs r3, #4
	ldr r2, _021AA5F0 ; =0x0000019A
	movs r0, #0x35
	lsls r1, r1, #0xa
	lsls r3, r3, #0xf
	bl FUN_021BCEC8
	adds r0, r6, #0
	movs r1, #0x34
	bl FUN_021BC940
	movs r0, #0x2b
	bl FUN_021BCFB0
	adds r5, r0, #0
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, #0xa
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD94
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BD364
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA5EC: .word 0x00002E4E
_021AA5F0: .word 0x0000019A
	thumb_func_end FUN_021AA55C

	thumb_func_start FUN_021AA5F4
FUN_021AA5F4: ; 0x021AA5F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r1, #0
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0xf
	adds r7, r2, #0
	str r3, [sp, #4]
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	cmp r4, r0
	bhs _021AA624
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AA624:
	ldr r0, _021AA6B0 ; =0x00002E79
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x70
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	str r0, [sp, #0xc]
	ldr r0, _021AA6B0 ; =0x00002E79
	adds r0, r0, #6
	bl FUN_021BCD94
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _021AA674
	add sp, #0x10
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AA674:
	ldr r0, [sp]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021A2E0C
	cmp r0, #0
	beq _021AA684
	b _021AA6A8
_021AA684:
	ldr r0, [sp, #4]
	movs r1, #4
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [sp, #8]
	subs r0, r4, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x64
	bl FUN_021BD100
	cmp r0, r4
	bhs _021AA6AA
_021AA6A8:
	movs r5, #1
_021AA6AA:
	adds r0, r5, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA6B0: .word 0x00002E79
	thumb_func_end FUN_021AA5F4

	thumb_func_start FUN_021AA6B4
FUN_021AA6B4: ; 0x021AA6B4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AA70C ; =0x00002EA2
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x30
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021AA70C ; =0x00002EA2
	adds r0, r0, #7
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA70C: .word 0x00002EA2
	thumb_func_end FUN_021AA6B4

	thumb_func_start FUN_021AA710
FUN_021AA710: ; 0x021AA710
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AA74C ; =0x00002EB7
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x31
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA74C: .word 0x00002EB7
	thumb_func_end FUN_021AA710

	thumb_func_start FUN_021AA750
FUN_021AA750: ; 0x021AA750
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r3, #0
	movs r1, #7
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_020212AC
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r6, #0
	bl FUN_021BB754
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _021AA7FC ; =0x00002ECF
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	movs r7, #4
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x2c
	adds r1, r4, #0
	movs r6, #0x2c
	bl FUN_021BCDFC
	movs r0, #0x41
	movs r1, #0
	movs r4, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x36
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021AA7F2
	ldr r0, [sp]
	bl FUN_02021808
	cmp r0, #0
	beq _021AA7CA
	movs r4, #1
	b _021AA7E4
_021AA7CA:
	adds r0, r6, #0
	bl FUN_021BCFB0
	cmp r0, #4
	ble _021AA7D6
	adds r0, r7, #0
_021AA7D6:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021BD184
	adds r4, r0, #0
_021AA7E4:
	ldr r0, [r5, #4]
	movs r1, #3
	bl FUN_0219CA38
	cmp r0, #0
	beq _021AA7F2
	movs r4, #1
_021AA7F2:
	ldr r0, _021AA800 ; =0x00002EE6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AA7FC: .word 0x00002ECF
_021AA800: .word 0x00002EE6
	thumb_func_end FUN_021AA750

	thumb_func_start FUN_021AA804
FUN_021AA804: ; 0x021AA804
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp]
	adds r4, r2, #0
	adds r0, r1, #0
	str r1, [sp, #4]
	adds r5, r3, #0
	ldr r6, [sp, #0x38]
	bl FUN_021BAC80
	str r0, [sp, #0x18]
	adds r0, r4, #0
	movs r1, #0x1e
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	movs r7, #0
	str r7, [r6]
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _021AA836
	movs r7, #1
	b _021AA848
_021AA836:
	adds r0, r4, #0
	movs r1, #0x1f
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	beq _021AA848
	movs r7, #2
_021AA848:
	adds r0, r4, #0
	bl FUN_02021740
	cmp r0, #8
	bne _021AA858
	add sp, #0x20
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AA858:
	ldr r0, _021AA924 ; =0x00002F12
	str r0, [sp, #0x1c]
	bl FUN_021BCD48
	ldr r1, [sp, #0x18]
	movs r0, #3
	bl FUN_021BCE40
	ldr r1, [sp, #0x14]
	movs r0, #0x35
	bl FUN_021BCDFC
	movs r0, #0x36
	movs r1, #0
	bl FUN_021BCDFC
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x50
	bl FUN_021BC940
	movs r0, #0x35
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	movs r0, #0x51
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #0x36
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x1c]
	adds r0, #0xd
	str r0, [sp, #0x1c]
	bl FUN_021BCD94
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021AA8DA
	ldr r0, [sp, #0xc]
	cmp r0, #1
	bne _021AA8DA
	add sp, #0x20
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AA8DA:
	ldr r0, [sp, #0x10]
	adds r0, r4, r0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	beq _021AA91C
	cmp r7, #2
	bne _021AA8FE
	ldr r0, [sp, #4]
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r1, r4, #0
	bl FUN_021BD390
	adds r5, r0, #0
	cmp r5, #1
	bge _021AA912
	b _021AA910
_021AA8FE:
	cmp r5, #0
	beq _021AA912
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BD390
	adds r5, r0, #0
	cmp r5, #1
	bge _021AA912
_021AA910:
	movs r5, #1
_021AA912:
	ldr r0, [sp, #8]
	add sp, #0x20
	str r0, [r6]
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AA91C:
	movs r0, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA924: .word 0x00002F12
	thumb_func_end FUN_021AA804

	thumb_func_start FUN_021AA928
FUN_021AA928: ; 0x021AA928
	push {r4, r5, r6, lr}
	ldr r6, _021AA954 ; =0x00002F4C
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x72
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AA954: .word 0x00002F4C
	thumb_func_end FUN_021AA928

	thumb_func_start FUN_021AA958
FUN_021AA958: ; 0x021AA958
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AA990 ; =0x00002F5C
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	movs r0, #3
	adds r1, r6, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x73
	bl FUN_021BC934
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AA990: .word 0x00002F5C
	thumb_func_end FUN_021AA958

	thumb_func_start FUN_021AA994
FUN_021AA994: ; 0x021AA994
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	movs r0, #0
	adds r5, r3, #0
	str r0, [sp, #8]
	ldrb r0, [r5, #6]
	adds r6, r2, #0
	str r1, [sp, #4]
	cmp r0, #0x11
	bne _021AA9B0
	add sp, #0x10
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021AA9B0:
	adds r0, r6, #0
	bl FUN_021BB03C
	str r0, [sp, #0xc]
	bl FUN_021CE57C
	str r0, [sp]
	ldrb r3, [r5, #6]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	adds r2, r6, #0
	bl FUN_021AAB90
	adds r4, r0, #0
	ldr r0, [sp, #0xc]
	bl FUN_021CE628
	cmp r0, #0
	bne _021AA9F8
	ldr r0, [sp, #0xc]
	bl FUN_021CE584
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldrb r3, [r5, #6]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	adds r2, r6, #0
	bl FUN_021AAB90
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021BD23C
	adds r4, r0, #0
_021AA9F8:
	cmp r4, #0
	ldrb r0, [r5, #6]
	beq _021AAA24
	cmp r0, #4
	beq _021AAA08
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AAA08:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	movs r5, #0
	bl FUN_021AAA64
	str r0, [sp, #8]
	cmp r0, #0
	bne _021AAA20
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AAA20:
	adds r4, r5, #0
	b _021AAA3C
_021AAA24:
	cmp r0, #4
	bne _021AAA3C
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021AAA64
	cmp r0, #0
	bne _021AAA3C
	add sp, #0x10
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021AAA3C:
	cmp r4, #0
	bne _021AAA5E
	ldr r0, [sp, #0x28]
	cmp r0, #0
	beq _021AAA5E
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021AAA56
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021A92A8
	b _021AAA5E
_021AAA56:
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021AAB18
_021AAA5E:
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AA994

	thumb_func_start FUN_021AAA64
FUN_021AAA64: ; 0x021AAA64
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021AAA88
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AAA8C
	cmp r0, #0
	beq _021AAA88
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AAA88:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021AAA64

	thumb_func_start FUN_021AAA8C
FUN_021AAA8C: ; 0x021AAA8C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	cmp r2, #0
	beq _021AAAA2
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BB054
	adds r4, r0, #0
	b _021AAAA4
_021AAAA2:
	movs r4, #0
_021AAAA4:
	ldr r7, _021AAB04 ; =0x00002FDB
	adds r0, r7, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	lsls r1, r4, #0x18
	movs r0, #0x51
	lsrs r1, r1, #0x18
	bl FUN_021BCE84
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x12
	bl FUN_021BC940
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AAB08
	movs r0, #0x51
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x41
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	adds r7, #8
	lsrs r5, r0, #0x18
	adds r0, r7, #0
	bl FUN_021BCD94
	movs r0, #0
	cmp r5, #0
	bne _021AAB00
	adds r0, r4, #0
_021AAB00:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AAB04: .word 0x00002FDB
	thumb_func_end FUN_021AAA8C

	thumb_func_start FUN_021AAB08
FUN_021AAB08: ; 0x021AAB08
	bx pc
	nop
	thumb_func_end FUN_021AAB08
_021AAB0C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x6D, 0xC8, 0x89, 0x06

	thumb_func_start FUN_021AAB18
FUN_021AAB18: ; 0x021AAB18
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _021AAB54 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021AAB58 ; =0x00002FF5
	adds r0, r5, r0
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AAB60
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #2
	beq _021AAB44
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A92A8
_021AAB44:
	ldr r0, _021AAB54 ; =0x00001D78
	ldr r2, _021AAB5C ; =0x00002FFC
	adds r0, r5, r0
	adds r1, r6, #0
	bl FUN_021B0910
	pop {r4, r5, r6, pc}
	nop
_021AAB54: .word 0x00001D78
_021AAB58: .word 0x00002FF5
_021AAB5C: .word 0x00002FFC
	thumb_func_end FUN_021AAB18

	thumb_func_start FUN_021AAB60
FUN_021AAB60: ; 0x021AAB60
	push {r4, r5, r6, lr}
	ldr r6, _021AAB8C ; =0x00003008
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x1b
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AAB8C: .word 0x00003008
	thumb_func_end FUN_021AAB60

	thumb_func_start FUN_021AAB90
FUN_021AAB90: ; 0x021AAB90
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AAC28 ; =0x00003021
	adds r5, r0, #0
	str r1, [sp]
	adds r0, r7, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCD48
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	add r1, sp, #0x18
	ldrb r1, [r1]
	movs r0, #0x15
	bl FUN_021BCE40
	movs r0, #0x16
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x4b
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x4c
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AAC2C
	adds r0, r5, #0
	movs r1, #0x3e
	bl FUN_021BC940
	movs r0, #0x4b
	bl FUN_021BCFB0
	adds r5, r0, #0
	movs r0, #0x4c
	bl FUN_021BCFB0
	adds r7, #0xd
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BCD94
	cmp r4, #0
	beq _021AAC10
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021AAC10:
	add r1, sp, #0x18
	ldrb r1, [r1]
	adds r0, r6, #0
	bl FUN_021BD1A0
	cmp r0, #0
	bne _021AAC24
	cmp r5, #0
	beq _021AAC24
	movs r0, #3
_021AAC24:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AAC28: .word 0x00003021
	thumb_func_end FUN_021AAB90

	thumb_func_start FUN_021AAC2C
FUN_021AAC2C: ; 0x021AAC2C
	bx pc
	nop
	thumb_func_end FUN_021AAC2C
_021AAC30:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xC6, 0x89, 0x06

	thumb_func_start FUN_021AAC3C
FUN_021AAC3C: ; 0x021AAC3C
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r3, #6
	beq _021AAC4C
	movs r2, #2
	b _021AAC54
_021AAC4C:
	movs r2, #1
	cmp r4, #6
	bne _021AAC54
	movs r2, #0
_021AAC54:
	ldr r1, [sp, #0x18]
	cmp r1, #0
	beq _021AACAC
	cmp r2, #0
	beq _021AAC6A
	cmp r2, #1
	beq _021AAC7E
	cmp r2, #2
	beq _021AAC94
	add sp, #8
	pop {r3, r4, r5, pc}
_021AAC6A:
	ldr r1, [sp, #0x1c]
	ldr r0, [r0, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r2, #0x4c
	adds r3, r5, #0
	bl FUN_021B152C
	add sp, #8
	pop {r3, r4, r5, pc}
_021AAC7E:
	ldr r1, [sp, #0x1c]
	str r5, [sp]
	lsls r1, r1, #0x10
	ldr r0, [r0, #0xc]
	lsrs r1, r1, #0x10
	movs r2, #0x4d
	adds r3, r4, #0
	bl FUN_021B152C
	add sp, #8
	pop {r3, r4, r5, pc}
_021AAC94:
	str r3, [sp]
	ldr r1, [sp, #0x1c]
	str r5, [sp, #4]
	lsls r1, r1, #0x10
	ldr r0, [r0, #0xc]
	lsrs r1, r1, #0x10
	movs r2, #0x4e
	adds r3, r4, #0
	bl FUN_021B152C
	add sp, #8
	pop {r3, r4, r5, pc}
_021AACAC:
	cmp r2, #0
	beq _021AACBC
	cmp r2, #1
	beq _021AACCA
	cmp r2, #2
	beq _021AACDA
	add sp, #8
	pop {r3, r4, r5, pc}
_021AACBC:
	ldr r0, [r0, #0xc]
	movs r1, #0x4c
	adds r2, r5, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, pc}
_021AACCA:
	ldr r0, [r0, #0xc]
	movs r1, #0x4d
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, pc}
_021AACDA:
	str r5, [sp]
	ldr r0, [r0, #0xc]
	movs r1, #0x4e
	adds r2, r4, #0
	bl FUN_021B1474
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021AAC3C

	thumb_func_start FUN_021AACEC
FUN_021AACEC: ; 0x021AACEC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AAD34 ; =0x0000308E
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x17
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x4f
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AAD34: .word 0x0000308E
	thumb_func_end FUN_021AACEC

	thumb_func_start FUN_021AAD38
FUN_021AAD38: ; 0x021AAD38
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, r2, #0
	movs r1, #8
	adds r5, r3, #0
	bl FUN_020212AC
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0
	strb r0, [r5, #1]
	movs r0, #3
	strb r0, [r5, #5]
	cmp r4, #1
	bls _021AADD0
	adds r0, r4, #0
	bl FUN_021BD3F8
	str r0, [sp]
	ldr r0, _021AADDC ; =0x000030AF
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x29
	adds r1, r4, #0
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x2a
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	movs r7, #0x51
	bl FUN_021BCE84
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x35
	bl FUN_021BC940
	cmp r4, #5
	bhi _021AADB2
	adds r0, r7, #0
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021AADB2
	strb r4, [r5]
	movs r0, #0
	b _021AADC0
_021AADB2:
	movs r0, #0x2a
	bl FUN_021BCFB0
	strb r0, [r5]
	movs r0, #0x42
	bl FUN_021BCFB0
_021AADC0:
	strb r0, [r5, #2]
	movs r0, #1
	strb r0, [r5, #3]
	ldr r0, _021AADE0 ; =0x000030C6
	bl FUN_021BCD94
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AADD0:
	movs r0, #1
	strb r0, [r5]
	movs r0, #0
	strb r0, [r5, #2]
	strb r0, [r5, #3]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AADDC: .word 0x000030AF
_021AADE0: .word 0x000030C6
	thumb_func_end FUN_021AAD38

	thumb_func_start FUN_021AADE4
FUN_021AADE4: ; 0x021AADE4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r3, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	adds r7, r1, #0
	str r2, [sp]
	bl FUN_0202175C
	ldr r6, _021AAE84 ; =0x000030E6
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	movs r7, #4
	bl FUN_021BCE40
	ldrh r1, [r4]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r4, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r1, [r4, #8]
	movs r0, #0x1a
	bl FUN_021BCE40
	ldr r1, [sp, #4]
	movs r0, #0x30
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x37
	bl FUN_021BC940
	movs r0, #0x31
	lsls r1, r7, #0xa
	movs r2, #0x29
	lsls r3, r7, #0x13
	bl FUN_021BCEC8
	adds r0, r5, #0
	movs r1, #0x38
	bl FUN_021BC940
	movs r0, #0x30
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r0, #0x31
	bl FUN_021BCFB0
	adds r6, #0xd
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BCD94
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BD364
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AAE84: .word 0x000030E6
	thumb_func_end FUN_021AADE4

	thumb_func_start FUN_021AAE88
FUN_021AAE88: ; 0x021AAE88
	push {r4, r5, r6, lr}
	ldr r6, _021AAEC8 ; =0x00003108
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x80
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #5
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	nop
_021AAEC8: .word 0x00003108
	thumb_func_end FUN_021AAE88

	thumb_func_start FUN_021AAECC
FUN_021AAECC: ; 0x021AAECC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r3, #0
	adds r7, r0, #0
	ldrh r0, [r5]
	adds r6, r1, #0
	str r2, [sp]
	bl FUN_0202176C
	movs r4, #0xa
	cmp r0, #2
	beq _021AAEE4
	movs r4, #8
_021AAEE4:
	ldr r0, _021AAFC0 ; =0x0000311D
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x3b
	movs r1, #0x1f
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r7, #0
	movs r1, #0x39
	bl FUN_021BC940
	movs r0, #0x3b
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x1f
	beq _021AAF34
	ldr r0, [r7, #8]
	bl FUN_0219D250
	adds r6, r0, #0
_021AAF34:
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021AAF48
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BB0E8
	b _021AAF60
_021AAF48:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021AAF58
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BB318
	b _021AAF60
_021AAF58:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BB1F4
_021AAF60:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r1, [r5]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r5, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r1, [r5, #8]
	movs r0, #0x1a
	bl FUN_021BCE40
	movs r0, #0x33
	adds r1, r4, #0
	bl FUN_021BCDFC
	movs r1, #1
	lsls r1, r1, #0xc
	ldr r2, _021AAFC4 ; =0x0000019A
	movs r0, #0x35
	lsls r3, r1, #5
	bl FUN_021BCEC8
	adds r0, r7, #0
	movs r1, #0x3b
	bl FUN_021BC940
	movs r0, #0x33
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021BD364
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _021AAFC8 ; =0x00003144
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AAFC0: .word 0x0000311D
_021AAFC4: .word 0x0000019A
_021AAFC8: .word 0x00003144
	thumb_func_end FUN_021AAECC

	thumb_func_start FUN_021AAFCC
FUN_021AAFCC: ; 0x021AAFCC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r3, #0
	str r0, [sp]
	ldrh r0, [r6]
	str r1, [sp, #4]
	adds r5, r2, #0
	bl FUN_0202176C
	movs r4, #0xb
	cmp r0, #2
	beq _021AAFE6
	movs r4, #9
_021AAFE6:
	ldr r0, [r6, #8]
	str r0, [sp, #8]
	ldr r0, _021AB134 ; =0x00003154
	bl FUN_021BCD48
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x3c
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r0, #0x3d
	movs r1, #0
	bl FUN_021BCDFC
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x3a
	bl FUN_021BC940
	movs r0, #0x3d
	bl FUN_021BCFB0
	movs r1, #1
	tst r0, r1
	beq _021AB04E
	cmp r4, #9
	bne _021AB040
	movs r4, #0xb
	b _021AB042
_021AB040:
	movs r4, #9
_021AB042:
	cmp r4, #9
	bne _021AB04A
	movs r0, #1
	b _021AB04C
_021AB04A:
	movs r0, #2
_021AB04C:
	str r0, [sp, #8]
_021AB04E:
	movs r0, #0x51
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _021AB138 ; =0x00003163
	bl FUN_021BCD94
	cmp r7, #0
	beq _021AB06C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BB0E8
	b _021AB084
_021AB06C:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021AB07C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BB318
	b _021AB084
_021AB07C:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BB1F4
_021AB084:
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [sp]
	bl FUN_021A65A0
	cmp r0, #4
	bne _021AB0B0
	adds r0, r5, #0
	movs r1, #5
	bl FUN_021BB054
	cmp r0, #0
	beq _021AB0B0
	cmp r4, #0xb
	bne _021AB0B0
	movs r1, #6
	adds r0, r7, #0
	lsls r1, r1, #0xa
	bl FUN_021BD364
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_021AB0B0:
	ldr r4, _021AB13C ; =0x00003178
	adds r0, r4, #0
	bl FUN_021BCD48
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	movs r5, #4
	bl FUN_021BCE40
	ldrh r1, [r6]
	movs r0, #0x12
	bl FUN_021BCE40
	ldrb r1, [r6, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldr r1, [sp, #8]
	movs r0, #0x1a
	bl FUN_021BCE40
	movs r0, #0x34
	adds r1, r7, #0
	bl FUN_021BCDFC
	ldr r2, _021AB140 ; =0x0000019A
	movs r0, #0x35
	lsls r1, r5, #0xa
	lsls r3, r5, #0xf
	bl FUN_021BCEC8
	ldr r0, [sp]
	movs r1, #0x3c
	bl FUN_021BC940
	movs r0, #0x34
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, #0xb
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD94
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BD364
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021AB134: .word 0x00003154
_021AB138: .word 0x00003163
_021AB13C: .word 0x00003178
_021AB140: .word 0x0000019A
	thumb_func_end FUN_021AAFCC

	thumb_func_start FUN_021AB144
FUN_021AB144: ; 0x021AB144
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r5, r0, #0
	adds r0, r7, #0
	adds r1, r2, #0
	bl FUN_021BB054
	adds r6, r0, #0
	movs r4, #1
	ldr r0, _021AB1B4 ; =0x00003199
	lsls r4, r4, #0xc
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x51
	adds r1, r6, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x40
	bl FUN_021BC940
	movs r0, #0x51
	bl FUN_021BCFB0
	adds r1, r0, #0
	beq _021AB18A
	movs r4, #6
	lsls r4, r4, #0xa
_021AB18A:
	movs r0, #0x44
	bl FUN_021BCE40
	movs r0, #0x35
	adds r1, r4, #0
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x41
	bl FUN_021BC940
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, r0, #0
	ldr r0, _021AB1B8 ; =0x000031AA
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB1B4: .word 0x00003199
_021AB1B8: .word 0x000031AA
	thumb_func_end FUN_021AB144

	thumb_func_start FUN_021AB1BC
FUN_021AB1BC: ; 0x021AB1BC
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	movs r1, #0xa
	adds r6, r2, #0
	bl FUN_020212AC
	ldr r7, _021AB248 ; =0x000031BE
	adds r5, r0, #0
	adds r0, r7, #0
	bl FUN_021BCD48
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x25
	adds r1, r5, #0
	bl FUN_021BCE40
	movs r0, #0x45
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	movs r0, #0x26
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r4, #0
	movs r1, #0x6c
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	str r0, [sp]
	movs r0, #0x45
	bl FUN_021BCFB0
	adds r6, r0, #0
	movs r0, #0x26
	bl FUN_021BCFB0
	adds r7, #0xb
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BCD94
	ldr r0, [sp]
	cmp r0, #0
	beq _021AB238
	cmp r5, #0
	beq _021AB238
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AB238:
	cmp r5, #0
	bne _021AB23E
	adds r5, r5, r4
_021AB23E:
	cmp r6, #0
	beq _021AB244
	lsls r5, r5, #1
_021AB244:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB248: .word 0x000031BE
	thumb_func_end FUN_021AB1BC

	thumb_func_start FUN_021AB24C
FUN_021AB24C: ; 0x021AB24C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AB2D4 ; =0x000031EA
	adds r6, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r5, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #4
	bl FUN_021BCE40
	movs r0, #0x26
	adds r1, r5, #0
	bl FUN_021BCDFC
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x6d
	bl FUN_021BC940
	movs r0, #0x26
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r7, #8
	str r0, [sp]
	adds r0, r7, #0
	bl FUN_021BCD94
	ldr r0, [sp]
	cmp r0, #0
	beq _021AB2A6
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AB2A6:
	cmp r4, #0
	beq _021AB2CE
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021ABE38
	cmp r0, #0
	beq _021AB2BA
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AB2BA:
	movs r0, #0x64
	bl FUN_021BD100
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	cmp r0, r1
	bhs _021AB2CA
	movs r5, #1
_021AB2CA:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AB2CE:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB2D4: .word 0x000031EA
	thumb_func_end FUN_021AB24C

	thumb_func_start FUN_021AB2D8
FUN_021AB2D8: ; 0x021AB2D8
	push {r4, r5, r6, lr}
	ldr r6, _021AB304 ; =0x0000320B
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x6e
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AB304: .word 0x0000320B
	thumb_func_end FUN_021AB2D8

	thumb_func_start FUN_021AB308
FUN_021AB308: ; 0x021AB308
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021AB374 ; =0x00003222
	str r0, [sp]
	adds r5, r1, #0
	adds r0, r4, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #3
	adds r1, r7, #0
	bl FUN_021BCE40
	movs r0, #0x1f
	adds r1, r6, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x20
	bl FUN_021BCE40
	ldr r1, [sp, #0x1c]
	movs r0, #0x19
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	movs r5, #0
	bl FUN_021BCE84
	ldr r0, [sp]
	movs r1, #0x5b
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, #9
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD94
	cmp r6, #0
	bne _021AB370
	movs r5, #1
_021AB370:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB374: .word 0x00003222
	thumb_func_end FUN_021AB308

	thumb_func_start FUN_021AB378
FUN_021AB378: ; 0x021AB378
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AB3B0 ; =0x0000323B
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x19
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x5c
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB3B0: .word 0x0000323B
	thumb_func_end FUN_021AB378

	thumb_func_start FUN_021AB3B4
FUN_021AB3B4: ; 0x021AB3B4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AB3FC ; =0x0000324F
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	movs r0, #3
	adds r1, r4, #0
	bl FUN_021BCE40
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x1f
	adds r1, r7, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x20
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x5d
	bl FUN_021BC940
	ldr r0, _021AB3FC ; =0x0000324F
	adds r0, r0, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB3FC: .word 0x0000324F
	thumb_func_end FUN_021AB3B4

	thumb_func_start FUN_021AB400
FUN_021AB400: ; 0x021AB400
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AB448 ; =0x00003265
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	movs r0, #0x12
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x1f
	adds r1, r7, #0
	bl FUN_021BCE40
	ldr r1, [sp, #0x18]
	movs r0, #0x20
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x5e
	bl FUN_021BC940
	ldr r0, _021AB448 ; =0x00003265
	adds r0, r0, #6
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB448: .word 0x00003265
	thumb_func_end FUN_021AB400

	thumb_func_start FUN_021AB44C
FUN_021AB44C: ; 0x021AB44C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r3, #0
	cmp r2, #0
	beq _021AB462
	adds r0, r2, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	b _021AB464
_021AB462:
	movs r4, #0x1f
_021AB464:
	ldr r0, _021AB4E4 ; =0x0000327F
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	lsls r1, r4, #0x18
	movs r0, #4
	lsrs r1, r1, #0x18
	movs r7, #4
	bl FUN_021BCE40
	ldr r2, _021AB4E8 ; =0x0000019A
	movs r0, #0x35
	lsls r1, r7, #0xa
	lsls r3, r7, #0xf
	bl FUN_021BCEC8
	movs r0, #0x20
	adds r1, r5, #0
	bl FUN_021BCDFC
	adds r0, r6, #0
	movs r1, #0x8c
	bl FUN_021BC940
	movs r0, #0x20
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r1, r0, #0
	cmp r5, #0
	beq _021AB4C0
	adds r0, r5, #0
	bl FUN_021BD380
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_021AB4C0:
	movs r0, #0x20
	adds r1, r5, #0
	bl FUN_021BCF10
	adds r0, r6, #0
	movs r1, #0x8d
	bl FUN_021BC940
	movs r0, #0x20
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _021AB4EC ; =0x00003290
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB4E4: .word 0x0000327F
_021AB4E8: .word 0x0000019A
_021AB4EC: .word 0x00003290
	thumb_func_end FUN_021AB44C

	thumb_func_start FUN_021AB4F0
FUN_021AB4F0: ; 0x021AB4F0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _021AB530 ; =0x000032A3
	adds r4, r1, #0
	bl FUN_021BCD48
	movs r0, #0x39
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x7d
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021AB526
	adds r0, r5, #0
	movs r1, #0x7e
	bl FUN_021BC940
_021AB526:
	ldr r0, _021AB534 ; =0x000032AB
	bl FUN_021BCD94
	pop {r3, r4, r5, pc}
	nop
_021AB530: .word 0x000032A3
_021AB534: .word 0x000032AB
	thumb_func_end FUN_021AB4F0

	thumb_func_start FUN_021AB538
FUN_021AB538: ; 0x021AB538
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	movs r1, #0x1a
	adds r5, r2, #0
	bl FUN_020212AC
	ldr r7, _021AB5A8 ; =0x000032BD
	adds r6, r0, #0
	adds r0, r7, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x35
	movs r1, #0
	bl FUN_021BCDFC
	adds r0, r4, #0
	movs r1, #0x8f
	bl FUN_021BC940
	movs r0, #0x35
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #5
	bl FUN_021BCD94
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r5, r0, #0
	cmp r4, #0
	beq _021AB592
	adds r1, r4, #0
	bl FUN_021BD364
	b _021AB598
_021AB592:
	adds r1, r6, #0
	bl FUN_021BD390
_021AB598:
	cmp r0, #0
	bne _021AB5A0
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AB5A0:
	cmp r0, r5
	bls _021AB5A6
	adds r0, r5, #0
_021AB5A6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB5A8: .word 0x000032BD
	thumb_func_end FUN_021AB538

	thumb_func_start FUN_021AB5AC
FUN_021AB5AC: ; 0x021AB5AC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AB5F4 ; =0x000032E5
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x2d
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x41
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r5, #0
	movs r1, #0x9a
	bl FUN_021BC940
	movs r0, #0x41
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r7, #6
	bl FUN_021BCD94
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB5F4: .word 0x000032E5
	thumb_func_end FUN_021AB5AC

	thumb_func_start FUN_021AB5F8
FUN_021AB5F8: ; 0x021AB5F8
	push {r4, r5, r6, lr}
	ldr r6, _021AB624 ; =0x000032FA
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x9b
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AB624: .word 0x000032FA
	thumb_func_end FUN_021AB5F8

	thumb_func_start FUN_021AB628
FUN_021AB628: ; 0x021AB628
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AB660 ; =0x0000330A
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r7, #0
	adds r6, r2, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	movs r0, #0x2d
	adds r1, r6, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x9c
	bl FUN_021BC940
	adds r0, r7, #4
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB660: .word 0x0000330A
	thumb_func_end FUN_021AB628

	thumb_func_start FUN_021AB664
FUN_021AB664: ; 0x021AB664
	push {r4, r5, r6, lr}
	ldr r6, _021AB690 ; =0x0000331B
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #2
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x9d
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AB690: .word 0x0000331B
	thumb_func_end FUN_021AB664

	thumb_func_start FUN_021AB694
FUN_021AB694: ; 0x021AB694
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AB6D0 ; =0x0000332D
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCD48
	movs r0, #2
	adds r1, r4, #0
	bl FUN_021BCE40
	movs r0, #0xf
	adds r1, r6, #0
	bl FUN_021BCE40
	movs r0, #0x10
	adds r1, r7, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x89
	bl FUN_021BC940
	ldr r0, _021AB6D0 ; =0x0000332D
	adds r0, r0, #5
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB6D0: .word 0x0000332D
	thumb_func_end FUN_021AB694

	thumb_func_start FUN_021AB6D4
FUN_021AB6D4: ; 0x021AB6D4
	push {r4, r5, r6, lr}
	ldr r6, _021AB6FC ; =0x0000333E
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	bl FUN_021BCD48
	movs r0, #2
	adds r1, r4, #0
	bl FUN_021BCE40
	adds r0, r5, #0
	movs r1, #0x8a
	bl FUN_021BC940
	adds r0, r6, #3
	bl FUN_021BCD94
	pop {r4, r5, r6, pc}
	nop
_021AB6FC: .word 0x0000333E
	thumb_func_end FUN_021AB6D4

	thumb_func_start FUN_021AB700
FUN_021AB700: ; 0x021AB700
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AB74C ; =0x0000334F
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	ldr r4, [sp, #0x18]
	bl FUN_021BCD48
	movs r0, #2
	adds r1, r6, #0
	bl FUN_021BCE40
	ldr r1, [sp]
	movs r0, #0x52
	bl FUN_021BCE40
	movs r0, #0x53
	adds r1, r7, #0
	bl FUN_021BCE40
	ldr r1, [r4]
	movs r0, #0x1e
	bl FUN_021BCDFC
	adds r0, r5, #0
	movs r1, #0x9f
	bl FUN_021BC940
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [r4]
	ldr r0, _021AB74C ; =0x0000334F
	adds r0, r0, #7
	bl FUN_021BCD94
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AB74C: .word 0x0000334F
	thumb_func_end FUN_021AB700

	thumb_func_start FUN_021AB750
FUN_021AB750: ; 0x021AB750
	push {r3, r4, r5, lr}
	ldr r4, _021AB76C ; =0x00003364
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BCD48
	adds r0, r5, #0
	movs r1, #0x79
	bl FUN_021BC940
	adds r0, r4, #2
	bl FUN_021BCD94
	pop {r3, r4, r5, pc}
	.align 2, 0
_021AB76C: .word 0x00003364
	thumb_func_end FUN_021AB750

	thumb_func_start FUN_021AB770
FUN_021AB770: ; 0x021AB770
	ldr r3, _021AB778 ; =FUN_020787D4
	movs r1, #0
	movs r2, #0xc
	bx r3
	.align 2, 0
_021AB778: .word FUN_020787D4
	thumb_func_end FUN_021AB770

	thumb_func_start FUN_021AB77C
FUN_021AB77C: ; 0x021AB77C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r7, r3, #0
	adds r0, r2, #0
	str r1, [sp]
	str r2, [sp, #4]
	ldr r5, [sp, #0x28]
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	adds r0, r4, #0
	bl FUN_0219C688
	str r0, [sp, #0xc]
	adds r0, r7, #0
	bl FUN_0219C688
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021AB7BA
	movs r0, #1
	b _021AB7BC
_021AB7BA:
	movs r0, #0
_021AB7BC:
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp]
	ldr r1, [sp, #4]
	movs r4, #0
	bl FUN_021A26F0
	cmp r0, #0
	beq _021AB7E0
	cmp r7, #0
	beq _021AB7E0
	cmp r5, #3
	ble _021AB7E0
	ldr r0, [sp]
	movs r1, #0x2f
	ldr r0, [r0, #4]
	bl FUN_0219DB10
_021AB7E0:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _021AB800
	cmp r7, #0
	beq _021AB822
	cmp r5, #0
	bne _021AB7F2
	adds r4, r6, #0
	b _021AB822
_021AB7F2:
	cmp r5, #3
	ble _021AB7FA
	adds r4, r6, #2
	b _021AB822
_021AB7FA:
	bge _021AB822
	adds r4, r6, #4
	b _021AB822
_021AB800:
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021AB822
	cmp r7, #0
	beq _021AB822
	cmp r5, #0
	bne _021AB812
	adds r4, r6, #6
	b _021AB822
_021AB812:
	cmp r5, #3
	ble _021AB81C
	adds r4, r6, #0
	adds r4, #8
	b _021AB822
_021AB81C:
	bge _021AB822
	adds r4, r6, #0
	adds r4, #0xa
_021AB822:
	cmp r4, #0
	beq _021AB832
	ldrh r1, [r4]
	ldr r0, _021AB838 ; =0x0000270F
	cmp r1, r0
	bhs _021AB832
	adds r0, r1, #1
	strh r0, [r4]
_021AB832:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB838: .word 0x0000270F
	thumb_func_end FUN_021AB77C

	thumb_func_start FUN_021AB83C
FUN_021AB83C: ; 0x021AB83C
	movs r1, #0x7e
	lsls r1, r1, #6
	ldrh r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021AB83C

	thumb_func_start FUN_021AB844
FUN_021AB844: ; 0x021AB844
	ldr r1, _021AB84C ; =0x00001F82
	ldrh r0, [r0, r1]
	bx lr
	nop
_021AB84C: .word 0x00001F82
	thumb_func_end FUN_021AB844

	thumb_func_start FUN_021AB850
FUN_021AB850: ; 0x021AB850
	ldr r1, _021AB858 ; =0x00001F84
	ldrh r0, [r0, r1]
	bx lr
	nop
_021AB858: .word 0x00001F84
	thumb_func_end FUN_021AB850

	thumb_func_start FUN_021AB85C
FUN_021AB85C: ; 0x021AB85C
	ldr r1, _021AB864 ; =0x00001F86
	ldrh r0, [r0, r1]
	bx lr
	nop
_021AB864: .word 0x00001F86
	thumb_func_end FUN_021AB85C

	thumb_func_start FUN_021AB868
FUN_021AB868: ; 0x021AB868
	ldr r1, _021AB870 ; =0x00001F8A
	ldrh r0, [r0, r1]
	bx lr
	nop
_021AB870: .word 0x00001F8A
	thumb_func_end FUN_021AB868

	thumb_func_start FUN_021AB874
FUN_021AB874: ; 0x021AB874
	ldr r0, [r0, #8]
	ldr r3, _021AB87C ; =FUN_0219D250
	bx r3
	nop
_021AB87C: .word FUN_0219D250
	thumb_func_end FUN_021AB874

	thumb_func_start FUN_021AB880
FUN_021AB880: ; 0x021AB880
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _021AB8A0 ; =0x00001AB8
	adds r0, r4, r0
	bl FUN_021AB8A4
	adds r5, r0, #0
	ldr r0, [r4, #4]
	adds r1, r5, #0
	bl FUN_0219BEFC
	cmp r0, #0
	bne _021AB89C
	movs r5, #6
_021AB89C:
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021AB8A0: .word 0x00001AB8
	thumb_func_end FUN_021AB880

	thumb_func_start FUN_021AB8A4
FUN_021AB8A4: ; 0x021AB8A4
	bx pc
	nop
	thumb_func_end FUN_021AB8A4
_021AB8A8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AB8B4
FUN_021AB8B4: ; 0x021AB8B4
	ldr r2, _021AB8BC ; =0x00001AB8
	ldr r3, _021AB8C0 ; =FUN_0689D77C
	adds r0, r0, r2
	bx r3
	.align 2, 0
_021AB8BC: .word 0x00001AB8
_021AB8C0: .word FUN_0689D77C
	thumb_func_end FUN_021AB8B4

	thumb_func_start FUN_021AB8C4
FUN_021AB8C4: ; 0x021AB8C4
	ldr r2, _021AB8CC ; =0x00001AB8
	ldr r3, _021AB8D0 ; =FUN_0689D784
	adds r0, r0, r2
	bx r3
	.align 2, 0
_021AB8CC: .word 0x00001AB8
_021AB8D0: .word FUN_0689D784
	thumb_func_end FUN_021AB8C4

	thumb_func_start FUN_021AB8D4
FUN_021AB8D4: ; 0x021AB8D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	add r0, sp, #4
	adds r1, r5, #0
	adds r6, r2, #0
	movs r4, #0
	bl FUN_021A0D9C
	add r0, sp, #4
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	beq _021AB926
_021AB8F6:
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021AB918
	ldr r0, [sp]
	bl FUN_021BAC80
	adds r2, r4, #1
	adds r1, r4, #0
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	strb r0, [r6, r1]
_021AB918:
	add r0, sp, #4
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021A0E34
	cmp r0, #0
	bne _021AB8F6
_021AB926:
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AB8D4

	thumb_func_start FUN_021AB92C
FUN_021AB92C: ; 0x021AB92C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_0219D250
	adds r6, r0, #0
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	ldr r1, _021AB990 ; =0x00000774
	adds r4, r0, #0
	ldr r2, [r5, r1]
	adds r2, r2, #1
	str r2, [r5, r1]
	bl FUN_021BC464
	cmp r0, #0
	beq _021AB964
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	adds r2, r4, #0
	bl FUN_0219CC98
	adds r4, r0, #0
_021AB964:
	adds r1, r7, #0
	add r7, sp, #4
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021AA00C
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021AA994
	ldr r1, _021AB990 ; =0x00000774
	ldr r2, [r5, r1]
	subs r2, r2, #1
	str r2, [r5, r1]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AB990: .word 0x00000774
	thumb_func_end FUN_021AB92C

	thumb_func_start FUN_021AB994
FUN_021AB994: ; 0x021AB994
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	beq _021ABA38
	adds r0, r4, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021ABA38
	ldr r0, [r5, #8]
	adds r1, r6, #0
	bl FUN_0219D250
	str r0, [sp, #0x18]
	ldr r0, [r5, #8]
	adds r1, r7, #0
	bl FUN_0219D250
	ldr r1, _021ABA40 ; =0x00000774
	str r0, [sp, #0x14]
	ldr r2, [r5, r1]
	adds r2, r2, #1
	str r2, [r5, r1]
	bl FUN_021BC464
	cmp r0, #0
	beq _021AB9DC
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	ldr r2, [sp, #0x14]
	bl FUN_0219CC98
	str r0, [sp, #0x14]
_021AB9DC:
	ldr r0, [sp, #0x48]
	cmp r0, #0
	beq _021AB9F2
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_021AB92C
	adds r6, r0, #0
	b _021AB9F4
_021AB9F2:
	movs r6, #3
_021AB9F4:
	ldr r2, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r4, #0
	add r3, sp, #0x20
	bl FUN_021AA00C
	ldr r0, [sp, #0x4c]
	movs r1, #1
	cmp r0, #0
	beq _021ABA0A
	movs r1, #0
_021ABA0A:
	movs r0, #1
	str r6, [sp]
	lsls r0, r0, #0xc
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	add r0, sp, #0x1c
	str r0, [sp, #0x10]
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x14]
	adds r0, r5, #0
	add r3, sp, #0x20
	bl FUN_021A5958
	ldr r0, _021ABA40 ; =0x00000774
	ldr r1, [r5, r0]
	subs r1, r1, #1
	str r1, [r5, r0]
	add r0, sp, #0x1c
	add sp, #0x34
	ldrh r0, [r0]
	pop {r4, r5, r6, r7, pc}
_021ABA38:
	movs r0, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_021ABA40: .word 0x00000774
	thumb_func_end FUN_021AB994

	thumb_func_start FUN_021ABA44
FUN_021ABA44: ; 0x021ABA44
	ldr r1, _021ABA54 ; =0x00000774
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _021ABA50
	movs r0, #1
	bx lr
_021ABA50:
	movs r0, #0
	bx lr
	.align 2, 0
_021ABA54: .word 0x00000774
	thumb_func_end FUN_021ABA44

	thumb_func_start FUN_021ABA58
FUN_021ABA58: ; 0x021ABA58
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_0219C688
	adds r1, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219D298
	pop {r4, pc}
	thumb_func_end FUN_021ABA58

	thumb_func_start FUN_021ABA6C
FUN_021ABA6C: ; 0x021ABA6C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_0219C688
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219F2A0
	ldrb r0, [r0, #9]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021ABA6C

	thumb_func_start FUN_021ABA84
FUN_021ABA84: ; 0x021ABA84
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	bl FUN_0219BDC0
	cmp r0, #3
	beq _021ABA9E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABA6C
	pop {r3, r4, r5, pc}
_021ABA9E:
	movs r0, #3
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ABA84

	thumb_func_start FUN_021ABAA4
FUN_021ABAA4: ; 0x021ABAA4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021ABB4C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABA84
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_0219D4F8
	cmp r0, #0
	beq _021ABAC8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021ABAC8:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021ABAA4

	thumb_func_start FUN_021ABACC
FUN_021ABACC: ; 0x021ABACC
	ldr r2, _021ABAE4 ; =0x0000078A
	ldrb r3, [r0, r2]
	lsls r1, r3, #0x1c
	lsrs r1, r1, #0x1f
	beq _021ABADA
	movs r0, #0
	bx lr
_021ABADA:
	movs r1, #8
	orrs r1, r3
	strb r1, [r0, r2]
	movs r0, #1
	bx lr
	.align 2, 0
_021ABAE4: .word 0x0000078A
	thumb_func_end FUN_021ABACC

	thumb_func_start FUN_021ABAE8
FUN_021ABAE8: ; 0x021ABAE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, [r7, #4]
	str r2, [sp]
	add r2, sp, #8
	bl FUN_0219C024
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r5, #0
	movs r4, #0
	cmp r0, #0
	bls _021ABB44
_021ABB04:
	add r1, sp, #8
	ldrb r1, [r1, r5]
	ldr r0, [r7, #8]
	bl FUN_0219D1C0
	adds r6, r0, #0
	beq _021ABB20
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ABB1E
	movs r0, #1
	b _021ABB22
_021ABB1E:
	b _021ABB20
_021ABB20:
	movs r0, #0
_021ABB22:
	cmp r0, #0
	beq _021ABB38
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r4, #1
	lsls r2, r2, #0x18
	adds r1, r4, #0
	lsrs r4, r2, #0x18
	ldr r2, [sp]
	strb r0, [r2, r1]
_021ABB38:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _021ABB04
_021ABB44:
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021ABAE8

	thumb_func_start FUN_021ABB4C
FUN_021ABB4C: ; 0x021ABB4C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_0219C688
	adds r1, r0, #0
	ldr r0, [r4, #8]
	bl FUN_0219D414
	pop {r4, pc}
	thumb_func_end FUN_021ABB4C

	thumb_func_start FUN_021ABB60
FUN_021ABB60: ; 0x021ABB60
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_0219C688
	adds r1, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C8BC
	adds r4, r0, #0
	ldr r0, [r5, #4]
	adds r1, r4, #0
	bl FUN_0219C448
	cmp r0, #0
	beq _021ABB8A
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D414
	pop {r3, r4, r5, pc}
_021ABB8A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ABB60

	thumb_func_start FUN_021ABB90
FUN_021ABB90: ; 0x021ABB90
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, [r3, #4]
	ldr r1, [r3, #8]
	ldr r3, _021ABB9C ; =FUN_0219C638
	bx r3
	.align 2, 0
_021ABB9C: .word FUN_0219C638
	thumb_func_end FUN_021ABB90

	thumb_func_start FUN_021ABBA0
FUN_021ABBA0: ; 0x021ABBA0
	push {r3, lr}
	ldr r0, [r0, #8]
	bl FUN_0219D1C8
	bl FUN_021BAC80
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021ABBA0

	thumb_func_start FUN_021ABBB0
FUN_021ABBB0: ; 0x021ABBB0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r2, #0
	bl FUN_0219D250
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	adds r3, r4, #0
	bl FUN_021BD924
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ABBB0

	thumb_func_start FUN_021ABBCC
FUN_021ABBCC: ; 0x021ABBCC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r7, _021ABC28 ; =0x00000782
	adds r5, r0, #0
	str r1, [sp]
	ldrb r0, [r5, r7]
	movs r4, #0
	str r2, [sp, #4]
	cmp r0, #0
	bls _021ABC20
	adds r0, r7, #0
	str r0, [sp, #8]
	adds r0, #0x62
	str r0, [sp, #8]
	adds r0, r5, r7
	str r0, [sp, #0xc]
	adds r7, #0x5e
_021ABBEE:
	lsls r6, r4, #4
	adds r0, r5, r6
	ldr r0, [r0, r7]
	bl FUN_021BAC80
	ldr r1, [sp]
	cmp r1, r0
	bne _021ABC16
	ldr r0, [sp, #8]
	adds r1, r5, r6
	ldr r1, [r1, r0]
	lsls r0, r1, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #6
	beq _021ABC16
	ldr r0, [sp, #4]
	add sp, #0x10
	str r1, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ABC16:
	ldr r0, [sp, #0xc]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _021ABBEE
_021ABC20:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021ABC28: .word 0x00000782
	thumb_func_end FUN_021ABBCC

	thumb_func_start FUN_021ABC2C
FUN_021ABC2C: ; 0x021ABC2C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	str r1, [sp, #4]
	ldr r0, _021ABC90 ; =0x00000782
	ldr r1, [sp]
	str r0, [sp, #8]
	ldrb r0, [r1, r0]
	movs r5, #0
	movs r6, #0
	movs r4, #0
	cmp r0, #0
	bls _021ABC84
	ldr r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, #0x6b
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	adds r0, r1, r0
	str r0, [sp, #0x10]
	ldr r0, [sp, #8]
	adds r0, #0x5e
	str r0, [sp, #8]
_021ABC5A:
	ldr r0, [sp]
	lsls r1, r4, #4
	adds r7, r0, r1
	ldr r0, [sp, #8]
	ldr r0, [r7, r0]
	bl FUN_021BAC80
	ldr r1, [sp, #4]
	cmp r1, r0
	beq _021ABC7A
	ldr r0, [sp, #0xc]
	adds r6, r6, #1
	ldrb r0, [r7, r0]
	cmp r0, #0
	beq _021ABC7A
	adds r5, r5, #1
_021ABC7A:
	ldr r0, [sp, #0x10]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _021ABC5A
_021ABC84:
	movs r0, #1
	cmp r6, r5
	beq _021ABC8C
	movs r0, #0
_021ABC8C:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021ABC90: .word 0x00000782
	thumb_func_end FUN_021ABC2C

	thumb_func_start FUN_021ABC94
FUN_021ABC94: ; 0x021ABC94
	ldr r1, _021ABC9C ; =0x00001F78
	ldrh r0, [r0, r1]
	bx lr
	nop
_021ABC9C: .word 0x00001F78
	thumb_func_end FUN_021ABC94

	thumb_func_start FUN_021ABCA0
FUN_021ABCA0: ; 0x021ABCA0
	ldr r1, _021ABCA8 ; =0x00001FF0
	adds r0, r0, r1
	bx lr
	nop
_021ABCA8: .word 0x00001FF0
	thumb_func_end FUN_021ABCA0

	thumb_func_start FUN_021ABCAC
FUN_021ABCAC: ; 0x021ABCAC
	adds r0, #0x1c
	bx lr
	thumb_func_end FUN_021ABCAC

	thumb_func_start FUN_021ABCB0
FUN_021ABCB0: ; 0x021ABCB0
	movs r1, #0x3e
	lsls r1, r1, #4
	adds r0, r0, r1
	bx lr
	thumb_func_end FUN_021ABCB0

	thumb_func_start FUN_021ABCB8
FUN_021ABCB8: ; 0x021ABCB8
	ldr r0, [r0, #0x10]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	thumb_func_end FUN_021ABCB8

	thumb_func_start FUN_021ABCC0
FUN_021ABCC0: ; 0x021ABCC0
	adds r1, r0, r1
	ldr r0, _021ABCC8 ; =0x000007D9
	ldrb r0, [r1, r0]
	bx lr
	.align 2, 0
_021ABCC8: .word 0x000007D9
	thumb_func_end FUN_021ABCC0

	thumb_func_start FUN_021ABCCC
FUN_021ABCCC: ; 0x021ABCCC
	ldr r2, _021ABCD4 ; =0x00001AB8
	ldr r3, _021ABCD8 ; =FUN_0689D710
	adds r0, r0, r2
	bx r3
	.align 2, 0
_021ABCD4: .word 0x00001AB8
_021ABCD8: .word FUN_0689D710
	thumb_func_end FUN_021ABCCC

	thumb_func_start FUN_021ABCDC
FUN_021ABCDC: ; 0x021ABCDC
	ldr r0, [r0, #4]
	ldr r3, _021ABCE4 ; =FUN_0219BDC0
	bx r3
	nop
_021ABCE4: .word FUN_0219BDC0
	thumb_func_end FUN_021ABCDC

	thumb_func_start FUN_021ABCE8
FUN_021ABCE8: ; 0x021ABCE8
	ldr r0, [r0, #4]
	ldr r3, _021ABCF0 ; =FUN_0219BF14
	bx r3
	nop
_021ABCF0: .word FUN_0219BF14
	thumb_func_end FUN_021ABCE8

	thumb_func_start FUN_021ABCF4
FUN_021ABCF4: ; 0x021ABCF4
	push {r3, lr}
	ldr r0, [r0, #4]
	bl FUN_0219BFA0
	ldr r0, [r0, #4]
	pop {r3, pc}
	thumb_func_end FUN_021ABCF4

	thumb_func_start FUN_021ABD00
FUN_021ABD00: ; 0x021ABD00
	ldr r0, [r0, #4]
	ldr r3, _021ABD08 ; =FUN_0219BECC
	bx r3
	nop
_021ABD08: .word FUN_0219BECC
	thumb_func_end FUN_021ABD00

	thumb_func_start FUN_021ABD0C
FUN_021ABD0C: ; 0x021ABD0C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	bl FUN_0219D250
	bl FUN_021BAC84
	ldr r7, _021ABD44 ; =0x000004A4
	adds r6, r0, #0
	movs r4, #0
_021ABD20:
	ldr r0, [r5, r7]
	adds r1, r6, #0
	movs r2, #0
	adds r3, r4, #0
	bl FUN_02020C1C
	cmp r0, #0
	beq _021ABD34
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ABD34:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #7
	blo _021ABD20
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021ABD44: .word 0x000004A4
	thumb_func_end FUN_021ABD0C

	thumb_func_start FUN_021ABD48
FUN_021ABD48: ; 0x021ABD48
	ldr r3, _021ABD4C ; =FUN_021A041C
	bx r3
	.align 2, 0
_021ABD4C: .word FUN_021A041C
	thumb_func_end FUN_021ABD48

	thumb_func_start FUN_021ABD50
FUN_021ABD50: ; 0x021ABD50
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	str r2, [sp]
	bl FUN_021ABD48
	adds r7, r0, #0
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r6, r0, #0
	add r0, sp, #8
	adds r1, r5, #0
	movs r4, #0
	bl FUN_021A0D9C
	add r0, sp, #8
	adds r1, r5, #0
	add r2, sp, #4
	bl FUN_021A0E34
	cmp r0, #0
	beq _021ABDAC
_021ABD80:
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	cmp r6, r0
	beq _021ABD9E
	ldr r1, [sp, #4]
	ldr r2, [sp]
	adds r0, r5, #0
	bl FUN_021ABD48
	cmp r0, r7
	bls _021ABD9E
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_021ABD9E:
	add r0, sp, #8
	adds r1, r5, #0
	add r2, sp, #4
	bl FUN_021A0E34
	cmp r0, #0
	bne _021ABD80
_021ABDAC:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021ABD50

	thumb_func_start FUN_021ABDB4
FUN_021ABDB4: ; 0x021ABDB4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl FUN_021AAA64
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021ABDB4

	thumb_func_start FUN_021ABDCC
FUN_021ABDCC: ; 0x021ABDCC
	push {r4, lr}
	ldr r0, [r0, #8]
	bl FUN_0219D250
	movs r1, #0x11
	adds r4, r0, #0
	bl FUN_021BB1F4
	cmp r0, #0x67
	bne _021ABDE4
	movs r0, #0
	pop {r4, pc}
_021ABDE4:
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BBB04
	cmp r0, #0
	beq _021ABDF4
	movs r0, #0
	pop {r4, pc}
_021ABDF4:
	movs r0, #7
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021ABE02
	movs r0, #1
	pop {r4, pc}
_021ABE02:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021ABDCC

	thumb_func_start FUN_021ABE08
FUN_021ABE08: ; 0x021ABE08
	ldr r3, _021ABE0C ; =FUN_021A65A0
	bx r3
	.align 2, 0
_021ABE0C: .word FUN_021A65A0
	thumb_func_end FUN_021ABE08

	thumb_func_start FUN_021ABE10
FUN_021ABE10: ; 0x021ABE10
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0219D250
	adds r7, r0, #0
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r6, #0
	bl FUN_021A34E4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021ABE10

	thumb_func_start FUN_021ABE38
FUN_021ABE38: ; 0x021ABE38
	ldr r0, [r0, #4]
	ldr r3, _021ABE40 ; =FUN_0219CA38
	bx r3
	nop
_021ABE40: .word FUN_0219CA38
	thumb_func_end FUN_021ABE38

	thumb_func_start FUN_021ABE44
FUN_021ABE44: ; 0x021ABE44
	ldr r3, _021ABE4C ; =FUN_06898CF4
	adds r0, r1, #0
	adds r1, r2, #0
	bx r3
	.align 2, 0
_021ABE4C: .word FUN_06898CF4
	thumb_func_end FUN_021ABE44

	thumb_func_start FUN_021ABE50
FUN_021ABE50: ; 0x021ABE50
	push {r4, lr}
	adds r4, r2, #0
	adds r0, r1, #0
	bl FUN_0219D3FC
	adds r1, r4, #0
	bl FUN_021ABE64
	pop {r4, pc}
	nop
	thumb_func_end FUN_021ABE50

	thumb_func_start FUN_021ABE64
FUN_021ABE64: ; 0x021ABE64
	bx pc
	nop
	thumb_func_end FUN_021ABE64
_021ABE68:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xE1, 0x8C, 0x89, 0x06, 0x01, 0x4B, 0x10, 0x1C, 0x18, 0x47, 0xC0, 0x46, 0xAD, 0x82, 0x89, 0x06

	thumb_func_start FUN_021ABE80
FUN_021ABE80: ; 0x021ABE80
	ldr r0, [r0, #4]
	ldr r3, _021ABE88 ; =FUN_0219C8BC
	bx r3
	nop
_021ABE88: .word FUN_0219C8BC
	thumb_func_end FUN_021ABE80

	thumb_func_start FUN_021ABE8C
FUN_021ABE8C: ; 0x021ABE8C
	ldr r1, _021ABE98 ; =0x0000078A
	ldrb r0, [r0, r1]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bx lr
	nop
_021ABE98: .word 0x0000078A
	thumb_func_end FUN_021ABE8C

	thumb_func_start FUN_021ABE9C
FUN_021ABE9C: ; 0x021ABE9C
	push {r3, r4}
	ldr r2, _021ABEB4 ; =0x00000788
	ldrb r4, [r0, r2]
	cmp r4, #6
	bhs _021ABEB0
	adds r3, r4, #1
	strb r3, [r0, r2]
	adds r3, r0, r4
	adds r0, r2, #3
	strb r1, [r3, r0]
_021ABEB0:
	pop {r3, r4}
	bx lr
	.align 2, 0
_021ABEB4: .word 0x00000788
	thumb_func_end FUN_021ABE9C

	thumb_func_start FUN_021ABEB8
FUN_021ABEB8: ; 0x021ABEB8
	push {r3, lr}
	ldr r0, [r0, #8]
	bl FUN_0219D250
	bl FUN_021BB470
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021ABEB8

	thumb_func_start FUN_021ABEC8
FUN_021ABEC8: ; 0x021ABEC8
	push {r3, lr}
	ldr r0, [r0, #8]
	bl FUN_0219D250
	movs r1, #4
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021ABEE4
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x18
	blo _021ABEE6
_021ABEE4:
	movs r0, #0x1f
_021ABEE6:
	cmp r0, #0x1f
	beq _021ABEEE
	movs r0, #1
	pop {r3, pc}
_021ABEEE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021ABEC8

	thumb_func_start FUN_021ABEF4
FUN_021ABEF4: ; 0x021ABEF4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021ABEC8
	cmp r0, #0
	beq _021ABF06
	movs r0, #1
	pop {r3, r4, r5, pc}
_021ABF06:
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021ABF1C
	movs r0, #1
	pop {r3, r4, r5, pc}
_021ABF1C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021ABEF4

	thumb_func_start FUN_021ABF20
FUN_021ABF20: ; 0x021ABF20
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	bl FUN_0219D250
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021A65E0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BC028
	adds r1, r4, #0
	bl FUN_021BD364
	cmp r0, #1
	bhs _021ABF48
	movs r0, #1
_021ABF48:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ABF20

	thumb_func_start FUN_021ABF4C
FUN_021ABF4C: ; 0x021ABF4C
	ldr r3, _021ABF50 ; =FUN_021A693C
	bx r3
	.align 2, 0
_021ABF50: .word FUN_021A693C
	thumb_func_end FUN_021ABF4C

	thumb_func_start FUN_021ABF54
FUN_021ABF54: ; 0x021ABF54
	ldr r3, _021ABF58 ; =FUN_0219FD44
	bx r3
	.align 2, 0
_021ABF58: .word FUN_0219FD44
	thumb_func_end FUN_021ABF54

	thumb_func_start FUN_021ABF5C
FUN_021ABF5C: ; 0x021ABF5C
	ldr r2, _021ABF64 ; =0x000004A8
	ldr r0, [r0, r2]
	strb r1, [r0, #4]
	bx lr
	.align 2, 0
_021ABF64: .word 0x000004A8
	thumb_func_end FUN_021ABF5C

	thumb_func_start FUN_021ABF68
FUN_021ABF68: ; 0x021ABF68
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	bl FUN_0219BF14
	cmp r0, #1
	bhi _021ABF84
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_0219F370
	movs r0, #1
	pop {r3, r4, r5, pc}
_021ABF84:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021ABF68

	thumb_func_start FUN_021ABF88
FUN_021ABF88: ; 0x021ABF88
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r6, r1, #0
	bl FUN_0219BF14
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0219C688
	adds r6, r0, #0
	cmp r4, #1
	bhi _021ABFB2
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	cmp r6, r0
	bne _021ABFB2
	ldr r0, [r5]
	bl FUN_0219F37C
_021ABFB2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021ABF88

	thumb_func_start FUN_021ABFB4
FUN_021ABFB4: ; 0x021ABFB4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _021ABFD8 ; =0x00001AB8
	adds r4, r2, #0
	adds r6, r1, #0
	adds r0, r5, r0
	adds r1, r4, #0
	bl FUN_021ABFDC
	adds r3, r0, #0
	movs r0, #0x4b
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021A2014
	pop {r4, r5, r6, pc}
	.align 2, 0
_021ABFD8: .word 0x00001AB8
	thumb_func_end FUN_021ABFB4

	thumb_func_start FUN_021ABFDC
FUN_021ABFDC: ; 0x021ABFDC
	bx pc
	nop
	thumb_func_end FUN_021ABFDC
_021ABFE0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ABFEC
FUN_021ABFEC: ; 0x021ABFEC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0219D250
	adds r7, r0, #0
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D250
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r6, #0
	bl FUN_021A3990
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021ABFEC

	thumb_func_start FUN_021AC014
FUN_021AC014: ; 0x021AC014
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl FUN_021A3A44
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021AC014

	thumb_func_start FUN_021AC02C
FUN_021AC02C: ; 0x021AC02C
	push {r4, r5, r6, lr}
	ldr r6, _021AC04C ; =0x0000078A
	adds r5, r0, #0
	ldrb r3, [r5, r6]
	adds r4, r2, #0
	movs r2, #0x20
	bics r3, r2
	strb r3, [r5, r6]
	bl FUN_021A5C18
	ldrb r1, [r5, r6]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	strb r1, [r4]
	pop {r4, r5, r6, pc}
	nop
_021AC04C: .word 0x0000078A
	thumb_func_end FUN_021AC02C

	thumb_func_start FUN_021AC050
FUN_021AC050: ; 0x021AC050
	ldr r3, _021AC054 ; =FUN_021A16A0
	bx r3
	.align 2, 0
_021AC054: .word FUN_021A16A0
	thumb_func_end FUN_021AC050

	thumb_func_start FUN_021AC058
FUN_021AC058: ; 0x021AC058
	ldr r3, _021AC05C ; =FUN_021B05F4
	bx r3
	.align 2, 0
_021AC05C: .word FUN_021B05F4
	thumb_func_end FUN_021AC058

	thumb_func_start FUN_021AC060
FUN_021AC060: ; 0x021AC060
	ldr r3, _021AC064 ; =FUN_021AC074
	bx r3
	.align 2, 0
_021AC064: .word FUN_021AC074
	thumb_func_end FUN_021AC060

	thumb_func_start FUN_021AC068
FUN_021AC068: ; 0x021AC068
	ldr r1, _021AC070 ; =0x00000785
	movs r2, #0
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_021AC070: .word 0x00000785
	thumb_func_end FUN_021AC068

	thumb_func_start FUN_021AC074
FUN_021AC074: ; 0x021AC074
	push {r4, r5}
	ldr r2, _021AC0AC ; =0x00000785
	movs r4, #0
	ldrb r5, [r0, r2]
	cmp r5, #0
	bls _021AC090
	adds r2, #0xc
_021AC082:
	adds r3, r0, r4
	ldrb r3, [r3, r2]
	cmp r1, r3
	beq _021AC0A6
	adds r4, r4, #1
	cmp r4, r5
	blo _021AC082
_021AC090:
	cmp r4, #0x18
	bhs _021AC0A6
	ldr r2, _021AC0B0 ; =0x00000791
	adds r3, r0, r4
	strb r1, [r3, r2]
	adds r1, r2, #0
	subs r1, #0xc
	ldrb r1, [r0, r1]
	subs r2, #0xc
	adds r1, r1, #1
	strb r1, [r0, r2]
_021AC0A6:
	pop {r4, r5}
	bx lr
	nop
_021AC0AC: .word 0x00000785
_021AC0B0: .word 0x00000791
	thumb_func_end FUN_021AC074

	thumb_func_start FUN_021AC0B4
FUN_021AC0B4: ; 0x021AC0B4
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _021AC0F0 ; =0x00000785
	adds r5, r0, #0
	ldrb r0, [r5, r6]
	movs r4, #0
	cmp r0, #0
	bls _021AC0EA
	adds r7, r5, r6
	adds r6, #0xc
_021AC0C6:
	adds r0, r5, r4
	ldrb r0, [r0, r6]
	bl FUN_0219C688
	adds r1, r0, #0
	ldr r0, _021AC0F4 ; =0x00001AB8
	add r2, sp, #0
	adds r0, r5, r0
	bl FUN_021AC0F8
	cmp r0, #0
	beq _021AC0E2
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AC0E2:
	ldrb r0, [r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _021AC0C6
_021AC0EA:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AC0F0: .word 0x00000785
_021AC0F4: .word 0x00001AB8
	thumb_func_end FUN_021AC0B4

	thumb_func_start FUN_021AC0F8
FUN_021AC0F8: ; 0x021AC0F8
	bx pc
	nop
	thumb_func_end FUN_021AC0F8
_021AC0FC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xE1, 0xD6, 0x89, 0x06

	thumb_func_start FUN_021AC108
FUN_021AC108: ; 0x021AC108
	ldr r2, _021AC114 ; =0x00001A64
	movs r1, #0
	str r1, [r0, r2]
	ldr r3, _021AC118 ; =FUN_021AC154
	movs r2, #1
	bx r3
	.align 2, 0
_021AC114: .word 0x00001A64
_021AC118: .word FUN_021AC154
	thumb_func_end FUN_021AC108

	thumb_func_start FUN_021AC11C
FUN_021AC11C: ; 0x021AC11C
	push {r3, lr}
	ldr r2, _021AC134 ; =0x00001A64
	ldr r1, [r0, r2]
	cmp r1, #6
	bhs _021AC130
	adds r1, r1, #1
	str r1, [r0, r2]
	movs r2, #1
	bl FUN_021AC154
_021AC130:
	pop {r3, pc}
	nop
_021AC134: .word 0x00001A64
	thumb_func_end FUN_021AC11C

	thumb_func_start FUN_021AC138
FUN_021AC138: ; 0x021AC138
	push {r3, lr}
	ldr r2, _021AC150 ; =0x00001A64
	ldr r1, [r0, r2]
	cmp r1, #0
	beq _021AC14C
	subs r1, r1, #1
	str r1, [r0, r2]
	movs r2, #0
	bl FUN_021AC154
_021AC14C:
	pop {r3, pc}
	nop
_021AC150: .word 0x00001A64
	thumb_func_end FUN_021AC138

	thumb_func_start FUN_021AC154
FUN_021AC154: ; 0x021AC154
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x29
	adds r4, r0, #0
	ldr r5, _021AC314 ; =0x00000874
	mov ip, r2
	lsls r7, r7, #4
	adds r0, r1, #0
	adds r2, r4, r5
	muls r0, r7, r0
	adds r2, r2, r0
	adds r0, r5, #0
	subs r0, #0x24
	str r2, [r4, r0]
	adds r1, r2, #0
	adds r0, r5, #0
	movs r3, #0x12
	adds r1, #0x48
	subs r0, #0x20
	str r1, [r4, r0]
	adds r1, r2, #0
	adds r0, r5, #0
	adds r1, #0x90
	subs r0, #0x1c
	str r1, [r4, r0]
	adds r1, r2, #0
	adds r0, r5, #0
	adds r1, #0xd8
	subs r0, #0x18
	str r1, [r4, r0]
	lsls r3, r3, #4
	adds r0, r5, #0
	adds r1, r2, r3
	subs r0, #0x14
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x48
	adds r1, r2, r0
	adds r0, r5, #0
	subs r0, #0x10
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x90
	adds r1, r2, r0
	adds r0, r5, #0
	subs r0, #0xc
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0xd8
	ldr r6, _021AC318 ; =0x000004A8
	adds r0, r2, r0
	str r0, [r4, r6]
	adds r0, r3, #0
	adds r0, #0xe0
	adds r1, r2, r0
	ldr r0, _021AC31C ; =0x00001AB0
	adds r3, #0xf4
	str r1, [r4, r0]
	ldr r1, _021AC31C ; =0x00001AB0
	adds r0, r2, r3
	adds r1, r1, #4
	str r0, [r4, r1]
	adds r0, r7, #0
	subs r0, #0x68
	adds r1, r2, r0
	adds r0, r6, #0
	adds r0, #0xc
	str r1, [r4, r0]
	adds r0, r7, #0
	subs r0, #0x62
	adds r1, r2, r0
	adds r0, r6, #4
	str r1, [r4, r0]
	adds r0, r7, #0
	subs r0, #0x4f
	adds r1, r2, r0
	adds r0, r6, #0
	adds r0, #8
	str r1, [r4, r0]
	lsrs r0, r6, #1
	adds r1, r2, r0
	adds r0, r5, #0
	subs r0, #8
	str r1, [r4, r0]
	adds r0, r7, #0
	subs r0, #0x20
	adds r1, r2, r0
	subs r0, r5, #4
	str r1, [r4, r0]
	subs r0, r7, #4
	ldrb r1, [r2, r0]
	adds r0, r5, #0
	subs r0, #0xf5
	strb r1, [r4, r0]
	adds r0, r5, #0
	subs r0, #0xea
	ldrb r0, [r4, r0]
	movs r1, #8
	bics r0, r1
	subs r1, r7, #3
	ldrb r1, [r2, r1]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1c
	orrs r1, r0
	adds r0, r5, #0
	subs r0, #0xea
	strb r1, [r4, r0]
	adds r0, r5, #0
	subs r0, #0xea
	ldrb r1, [r4, r0]
	movs r0, #0x10
	bics r1, r0
	subs r0, r7, #2
	ldrb r0, [r2, r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1b
	orrs r1, r0
	adds r0, r5, #0
	subs r0, #0xea
	strb r1, [r4, r0]
	mov r0, ip
	cmp r0, #0
	beq _021AC310
	adds r0, r2, #0
	bl FUN_021AC320
	adds r0, r5, #0
	subs r0, #0x20
	ldr r0, [r4, r0]
	bl FUN_021AC330
	adds r0, r5, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	bl FUN_021AC340
	adds r0, r5, #0
	subs r0, #0x18
	ldr r0, [r4, r0]
	bl FUN_021AC350
	adds r0, r5, #0
	subs r0, #0x14
	ldr r0, [r4, r0]
	bl FUN_021AC360
	adds r0, r5, #0
	subs r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021AC370
	adds r0, r5, #0
	subs r0, #0xc
	ldr r0, [r4, r0]
	bl FUN_021AC380
	ldr r0, [r4, r6]
	bl FUN_021A0CC8
	ldr r0, _021AC31C ; =0x00001AB0
	movs r1, #0
	ldr r0, [r4, r0]
	movs r2, #0x14
	blx FUN_020787D4
	ldr r0, _021AC31C ; =0x00001AB0
	movs r1, #0
	adds r0, r0, #4
	ldr r0, [r4, r0]
	movs r2, #0x14
	blx FUN_020787D4
	adds r0, r6, #0
	adds r0, #0xc
	ldr r0, [r4, r0]
	movs r1, #0
	movs r2, #6
	movs r7, #6
	blx FUN_020787D4
	adds r0, r6, #4
	ldr r0, [r4, r0]
	movs r1, #0
	movs r2, #0x13
	blx FUN_020787D4
	adds r6, #8
	ldr r0, [r4, r6]
	movs r1, #0
	movs r2, #0x13
	blx FUN_020787D4
	adds r0, r5, #0
	subs r0, #8
	ldr r0, [r4, r0]
	movs r1, #0
	movs r2, #0x1c
	blx FUN_020787D4
	subs r0, r5, #4
	ldr r0, [r4, r0]
	movs r1, #0
	movs r2, #0x1c
	blx FUN_020787D4
	adds r0, r5, #0
	subs r0, #0xf5
	strb r7, [r4, r0]
	adds r0, r5, #0
	subs r0, #0xea
	ldrb r1, [r4, r0]
	movs r0, #8
	bics r1, r0
	adds r0, r5, #0
	subs r0, #0xea
	strb r1, [r4, r0]
	adds r0, r5, #0
	subs r0, #0xea
	ldrb r1, [r4, r0]
	movs r0, #0x10
	subs r5, #0xea
	bics r1, r0
	strb r1, [r4, r5]
_021AC310:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AC314: .word 0x00000874
_021AC318: .word 0x000004A8
_021AC31C: .word 0x00001AB0
	thumb_func_end FUN_021AC154

	thumb_func_start FUN_021AC320
FUN_021AC320: ; 0x021AC320
	bx pc
	nop
	thumb_func_end FUN_021AC320
_021AC324:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC330
FUN_021AC330: ; 0x021AC330
	bx pc
	nop
	thumb_func_end FUN_021AC330
_021AC334:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC340
FUN_021AC340: ; 0x021AC340
	bx pc
	nop
	thumb_func_end FUN_021AC340
_021AC344:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC350
FUN_021AC350: ; 0x021AC350
	bx pc
	nop
	thumb_func_end FUN_021AC350
_021AC354:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC360
FUN_021AC360: ; 0x021AC360
	bx pc
	nop
	thumb_func_end FUN_021AC360
_021AC364:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC370
FUN_021AC370: ; 0x021AC370
	bx pc
	nop
	thumb_func_end FUN_021AC370
_021AC374:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC380
FUN_021AC380: ; 0x021AC380
	bx pc
	nop
	thumb_func_end FUN_021AC380
_021AC384:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AC390
FUN_021AC390: ; 0x021AC390
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	movs r2, #0x28
	blx FUN_020787D4
	ldrh r1, [r4, #2]
	movs r0, #0xff
	bics r1, r0
	strh r1, [r4, #2]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021AC390

	thumb_func_start FUN_021AC3A8
FUN_021AC3A8: ; 0x021AC3A8
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	beq _021AC3B4
	movs r0, #1
	bx lr
_021AC3B4:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021AC3A8

	thumb_func_start FUN_021AC3B8
FUN_021AC3B8: ; 0x021AC3B8
	push {r3, r4}
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x18
	ldrh r3, [r0, #2]
	movs r4, #0xff
	lsrs r1, r1, #0x18
	bics r3, r4
	orrs r1, r3
	strh r1, [r0, #2]
	strh r2, [r0]
	ldrh r2, [r0, #2]
	ldr r1, _021AC3DC ; =0xFFFF80FF
	ands r1, r2
	strh r1, [r0, #2]
	pop {r3, r4}
	bx lr
	nop
_021AC3DC: .word 0xFFFF80FF
	thumb_func_end FUN_021AC3B8

	thumb_func_start FUN_021AC3E0
FUN_021AC3E0: ; 0x021AC3E0
	push {r3, r4}
	ldrh r4, [r0, #2]
	lsls r2, r4, #0x11
	lsrs r3, r2, #0x19
	cmp r3, #9
	bhs _021AC404
	ldr r2, _021AC408 ; =0xFFFF80FF
	ands r2, r4
	adds r4, r3, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x11
	orrs r2, r4
	strh r2, [r0, #2]
	lsls r2, r3, #2
	adds r0, r0, r2
	str r1, [r0, #4]
_021AC404:
	pop {r3, r4}
	bx lr
	.align 2, 0
_021AC408: .word 0xFFFF80FF
	thumb_func_end FUN_021AC3E0

	thumb_func_start FUN_021AC40C
FUN_021AC40C: ; 0x021AC40C
	ldrh r2, [r0, #2]
	lsls r3, r2, #0x11
	lsrs r3, r3, #0x19
	cmp r3, #9
	bhs _021AC420
	str r1, [r0, #0x24]
	movs r1, #2
	lsls r1, r1, #0xe
	orrs r1, r2
	strh r1, [r0, #2]
_021AC420:
	bx lr
	.align 2, 0
	thumb_func_end FUN_021AC40C

	thumb_func_start FUN_021AC424
FUN_021AC424: ; 0x021AC424
	ldr r3, _021AC42C ; =0x00001D78
	adds r0, r0, r3
	ldr r3, _021AC430 ; =FUN_021B0960
	bx r3
	.align 2, 0
_021AC42C: .word 0x00001D78
_021AC430: .word FUN_021B0960
	thumb_func_end FUN_021AC424

	thumb_func_start FUN_021AC434
FUN_021AC434: ; 0x021AC434
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021AC448
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021AC434

	thumb_func_start FUN_021AC448
FUN_021AC448: ; 0x021AC448
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021AC498
	ldr r0, _021AC460 ; =0x00001D78
	adds r1, r4, #0
	adds r0, r5, r0
	bl FUN_021B0A28
	pop {r3, r4, r5, pc}
	nop
_021AC460: .word 0x00001D78
	thumb_func_end FUN_021AC448

	thumb_func_start FUN_021AC464
FUN_021AC464: ; 0x021AC464
	push {r3, r4, r5, lr}
	ldr r4, _021AC48C ; =0x00001D78
	adds r5, r0, #0
	adds r0, r5, r4
	bl FUN_021B0920
	cmp r0, #0
	beq _021AC486
	adds r0, r5, r4
	bl FUN_021B0958
	cmp r0, #0
	beq _021AC482
	movs r0, #2
	pop {r3, r4, r5, pc}
_021AC482:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AC486:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021AC48C: .word 0x00001D78
	thumb_func_end FUN_021AC464

	thumb_func_start FUN_021AC490
FUN_021AC490: ; 0x021AC490
	ldr r3, _021AC494 ; =FUN_021AC464
	bx r3
	.align 2, 0
_021AC494: .word FUN_021AC464
	thumb_func_end FUN_021AC490

	thumb_func_start FUN_021AC498
FUN_021AC498: ; 0x021AC498
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021AC7B0 ; =0x00001D78
	adds r4, r0, #0
	adds r0, r4, r7
	adds r5, r1, #0
	bl FUN_021B0914
	adds r6, r0, #0
	adds r0, r4, r7
	bl FUN_021B0920
	cmp r0, #0
	beq _021AC4BE
	adds r0, r4, r7
	bl FUN_021B0950
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _021AC4C0
_021AC4BE:
	movs r7, #1
_021AC4C0:
	ldr r0, [r5]
	lsls r0, r0, #7
	lsrs r0, r0, #0x1f
	beq _021AC4CC
	cmp r7, #0
	beq _021AC4EA
_021AC4CC:
	ldr r1, [r5]
	lsls r0, r1, #6
	lsrs r0, r0, #0x1f
	beq _021AC4EC
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r4, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D25C
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AC4EC
_021AC4EA:
	b _021AC7E6
_021AC4EC:
	ldr r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3b
	bls _021AC4F8
	b _021AC7DC
_021AC4F8:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AC504: ; jump table
	.short _021AC59A - _021AC504 - 2 ; case 0
	.short _021AC57C - _021AC504 - 2 ; case 1
	.short _021AC586 - _021AC504 - 2 ; case 2
	.short _021AC590 - _021AC504 - 2 ; case 3
	.short _021AC646 - _021AC504 - 2 ; case 4
	.short _021AC5A4 - _021AC504 - 2 ; case 5
	.short _021AC5B0 - _021AC504 - 2 ; case 6
	.short _021AC5BC - _021AC504 - 2 ; case 7
	.short _021AC5C6 - _021AC504 - 2 ; case 8
	.short _021AC5D0 - _021AC504 - 2 ; case 9
	.short _021AC5DC - _021AC504 - 2 ; case 10
	.short _021AC5E8 - _021AC504 - 2 ; case 11
	.short _021AC5F4 - _021AC504 - 2 ; case 12
	.short _021AC7DC - _021AC504 - 2 ; case 13
	.short _021AC5FE - _021AC504 - 2 ; case 14
	.short _021AC60A - _021AC504 - 2 ; case 15
	.short _021AC61E - _021AC504 - 2 ; case 16
	.short _021AC628 - _021AC504 - 2 ; case 17
	.short _021AC614 - _021AC504 - 2 ; case 18
	.short _021AC632 - _021AC504 - 2 ; case 19
	.short _021AC63C - _021AC504 - 2 ; case 20
	.short _021AC650 - _021AC504 - 2 ; case 21
	.short _021AC65A - _021AC504 - 2 ; case 22
	.short _021AC664 - _021AC504 - 2 ; case 23
	.short _021AC66E - _021AC504 - 2 ; case 24
	.short _021AC678 - _021AC504 - 2 ; case 25
	.short _021AC682 - _021AC504 - 2 ; case 26
	.short _021AC68C - _021AC504 - 2 ; case 27
	.short _021AC6A0 - _021AC504 - 2 ; case 28
	.short _021AC696 - _021AC504 - 2 ; case 29
	.short _021AC6AA - _021AC504 - 2 ; case 30
	.short _021AC6B4 - _021AC504 - 2 ; case 31
	.short _021AC6BE - _021AC504 - 2 ; case 32
	.short _021AC6C8 - _021AC504 - 2 ; case 33
	.short _021AC6D2 - _021AC504 - 2 ; case 34
	.short _021AC6DC - _021AC504 - 2 ; case 35
	.short _021AC6E6 - _021AC504 - 2 ; case 36
	.short _021AC6F0 - _021AC504 - 2 ; case 37
	.short _021AC6FA - _021AC504 - 2 ; case 38
	.short _021AC704 - _021AC504 - 2 ; case 39
	.short _021AC70E - _021AC504 - 2 ; case 40
	.short _021AC718 - _021AC504 - 2 ; case 41
	.short _021AC722 - _021AC504 - 2 ; case 42
	.short _021AC72C - _021AC504 - 2 ; case 43
	.short _021AC736 - _021AC504 - 2 ; case 44
	.short _021AC740 - _021AC504 - 2 ; case 45
	.short _021AC74A - _021AC504 - 2 ; case 46
	.short _021AC754 - _021AC504 - 2 ; case 47
	.short _021AC75E - _021AC504 - 2 ; case 48
	.short _021AC768 - _021AC504 - 2 ; case 49
	.short _021AC772 - _021AC504 - 2 ; case 50
	.short _021AC77C - _021AC504 - 2 ; case 51
	.short _021AC786 - _021AC504 - 2 ; case 52
	.short _021AC790 - _021AC504 - 2 ; case 53
	.short _021AC79A - _021AC504 - 2 ; case 54
	.short _021AC7A4 - _021AC504 - 2 ; case 55
	.short _021AC7B4 - _021AC504 - 2 ; case 56
	.short _021AC7BE - _021AC504 - 2 ; case 57
	.short _021AC7C8 - _021AC504 - 2 ; case 58
	.short _021AC7D2 - _021AC504 - 2 ; case 59
_021AC57C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC7EC
	b _021AC7DA
_021AC586:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC83C
	b _021AC7DA
_021AC590:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC88C
	b _021AC7DA
_021AC59A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD968
	b _021AC7DA
_021AC5A4:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021AC8AC
	b _021AC7DA
_021AC5B0:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021AC964
	b _021AC7DA
_021AC5BC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC9D8
	b _021AC7DA
_021AC5C6:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ACAA4
	b _021AC7DA
_021AC5D0:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021ACB24
	b _021AC7DA
_021AC5DC:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021ACB90
	b _021AC7DA
_021AC5E8:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021ACBE8
	b _021AC7DA
_021AC5F4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ACCF8
	b _021AC7DA
_021AC5FE:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021ACDD0
	b _021AC7DA
_021AC60A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ACF14
	b _021AC7DA
_021AC614:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ACFC8
	b _021AC7DA
_021AC61E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ACFFC
	b _021AC7DA
_021AC628:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD048
	b _021AC7DA
_021AC632:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD150
	b _021AC7DA
_021AC63C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD1AC
	b _021AC7DA
_021AC646:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD254
	b _021AC7DA
_021AC650:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD2A8
	b _021AC7DA
_021AC65A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD2D0
	b _021AC7DA
_021AC664:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD2F8
	b _021AC7DA
_021AC66E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD324
	b _021AC7DA
_021AC678:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD350
	b _021AC7DA
_021AC682:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD3A8
	b _021AC7DA
_021AC68C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD418
	b _021AC7DA
_021AC696:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD464
	b _021AC7DA
_021AC6A0:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD444
	b _021AC7DA
_021AC6AA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD5A4
	b _021AC7DA
_021AC6B4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD5E0
	b _021AC7DA
_021AC6BE:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD738
	b _021AC7DA
_021AC6C8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD94C
	b _021AC7DA
_021AC6D2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD9BC
	b _021AC7DA
_021AC6DC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADA4C
	b _021AC7DA
_021AC6E6:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AD840
	b _021AC7DA
_021AC6F0:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADA8C
	b _021AC7DA
_021AC6FA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADACC
	b _021AC7DA
_021AC704:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADAEC
	b _021AC7DA
_021AC70E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADCA8
	b _021AC7DA
_021AC718:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADCD8
	b _021AC7DA
_021AC722:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADD50
	b _021AC7DA
_021AC72C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADDC8
	b _021AC7DA
_021AC736:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADDF0
	b _021AC7DA
_021AC740:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADE68
	b _021AC7DA
_021AC74A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADE98
	b _021AC7DA
_021AC754:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADEF0
	b _021AC7DA
_021AC75E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADF14
	b _021AC7DA
_021AC768:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADF2C
	b _021AC7DA
_021AC772:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADF50
	b _021AC7DA
_021AC77C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ADFFC
	b _021AC7DA
_021AC786:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE0F0
	b _021AC7DA
_021AC790:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE14C
	b _021AC7DA
_021AC79A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE21C
	b _021AC7DA
_021AC7A4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE254
	b _021AC7DA
	nop
_021AC7B0: .word 0x00001D78
_021AC7B4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE290
	b _021AC7DA
_021AC7BE:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE2A0
	b _021AC7DA
_021AC7C8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE31C
	b _021AC7DA
_021AC7D2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AE32C
_021AC7DA:
	adds r7, r0, #0
_021AC7DC:
	ldr r0, _021AC7E8 ; =0x00001D78
	adds r1, r7, #0
	adds r0, r4, r0
	bl FUN_021B0928
_021AC7E6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AC7E8: .word 0x00001D78
	thumb_func_end FUN_021AC498

	thumb_func_start FUN_021AC7EC
FUN_021AC7EC: ; 0x021AC7EC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	ldr r0, _021AC828 ; =0x00001AB8
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	adds r0, r5, r0
	lsrs r1, r1, #0x18
	bl FUN_021AC82C
	cmp r0, #0
	beq _021AC824
	ldr r1, [r4]
	ldr r0, [r5, #8]
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021A9C2C
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AC824:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021AC828: .word 0x00001AB8
	thumb_func_end FUN_021AC7EC

	thumb_func_start FUN_021AC82C
FUN_021AC82C: ; 0x021AC82C
	bx pc
	nop
	thumb_func_end FUN_021AC82C
_021AC830:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AC83C
FUN_021AC83C: ; 0x021AC83C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	ldr r0, _021AC878 ; =0x00001AB8
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	adds r0, r5, r0
	lsrs r1, r1, #0x18
	bl FUN_021AC87C
	cmp r0, #0
	beq _021AC874
	ldr r1, [r4]
	ldr r0, [r5, #8]
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021A9574
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AC874:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021AC878: .word 0x00001AB8
	thumb_func_end FUN_021AC83C

	thumb_func_start FUN_021AC87C
FUN_021AC87C: ; 0x021AC87C
	bx pc
	nop
	thumb_func_end FUN_021AC87C
_021AC880:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AC88C
FUN_021AC88C: ; 0x021AC88C
	push {r4, lr}
	ldr r1, [r1]
	adds r4, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r4, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021A958C
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021AC88C

	thumb_func_start FUN_021AC8AC
FUN_021AC8AC: ; 0x021AC8AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	adds r7, r2, #0
	movs r6, #0
	bl FUN_0219D250
	str r0, [sp, #0xc]
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	str r0, [sp, #8]
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_021A6E60
	cmp r0, #0
	bne _021AC95A
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AC8F0
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021A9574
_021AC8F0:
	ldrb r0, [r4, #7]
	cmp r0, #0
	bne _021AC90E
	ldr r1, [sp, #8]
	adds r0, r5, #0
	movs r2, #1
	movs r6, #1
	bl FUN_021A6E84
	cmp r0, #0
	beq _021AC908
	movs r6, #0
_021AC908:
	lsls r0, r6, #0x18
	lsrs r6, r0, #0x18
	b _021AC910
_021AC90E:
	movs r6, #1
_021AC910:
	cmp r6, #0
	beq _021AC94A
	ldrh r2, [r4, #4]
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_021A6ED8
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	beq _021AC932
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	b _021AC94A
_021AC932:
	cmp r7, #0
	beq _021AC94A
	ldr r0, _021AC960 ; =0xFFFF0000
	str r7, [sp]
	str r0, [sp, #4]
	movs r2, #0xe3
	ldrb r3, [r4, #6]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	lsls r2, r2, #2
	bl FUN_021B1610
_021AC94A:
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AC95A
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021A958C
_021AC95A:
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AC960: .word 0xFFFF0000
	thumb_func_end FUN_021AC8AC

	thumb_func_start FUN_021AC964
FUN_021AC964: ; 0x021AC964
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldrb r1, [r4, #7]
	adds r5, r0, #0
	movs r6, #0
	cmp r1, #0x1f
	beq _021AC97A
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
_021AC97A:
	ldr r0, _021AC9C4 ; =0x00001AB8
	ldrb r1, [r4, #6]
	adds r0, r5, r0
	bl FUN_021AC9C8
	cmp r0, #0
	beq _021AC9C0
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AC9C0
	ldrh r3, [r4, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021A58F4
	cmp r0, #0
	beq _021AC9C0
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	beq _021AC9BC
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
_021AC9BC:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AC9C0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AC9C4: .word 0x00001AB8
	thumb_func_end FUN_021AC964

	thumb_func_start FUN_021AC9C8
FUN_021AC9C8: ; 0x021AC9C8
	bx pc
	nop
	thumb_func_end FUN_021AC9C8
_021AC9CC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AC9D8
FUN_021AC9D8: ; 0x021AC9D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, _021ACA90 ; =0x00001AB8
	ldrb r1, [r4, #6]
	adds r0, r5, r0
	bl FUN_021ACA94
	cmp r0, #0
	beq _021ACA88
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	ldr r0, [r4]
	movs r7, #0
	lsls r0, r0, #0x13
	lsrs r1, r0, #0x1b
	cmp r1, #0x1f
	beq _021ACA10
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r7, r0, #0
_021ACA10:
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACA88
	ldrb r0, [r4, #7]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _021ACA2C
	adds r0, r6, #0
	bl FUN_021BB470
	cmp r0, #0
	bne _021ACA88
_021ACA2C:
	ldrh r2, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A5BAC
	cmp r0, #0
	beq _021ACA88
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACA4A
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A9574
_021ACA4A:
	ldrb r0, [r4, #7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021ACA64
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	ldrh r1, [r4, #8]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #0xb]
	adds r0, r5, #0
	bl FUN_021AAC3C
_021ACA64:
	ldrh r2, [r4, #4]
	adds r3, r4, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r3, #0xc
	bl FUN_021A5BC0
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACA82
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A958C
_021ACA82:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ACA88:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021ACA90: .word 0x00001AB8
	thumb_func_end FUN_021AC9D8

	thumb_func_start FUN_021ACA94
FUN_021ACA94: ; 0x021ACA94
	bx pc
	nop
	thumb_func_end FUN_021ACA94
_021ACA98:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACAA4
FUN_021ACAA4: ; 0x021ACAA4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0
	adds r4, r1, #0
	str r0, [sp]
	ldrb r0, [r4, #4]
	movs r6, #0
	cmp r0, #0
	bls _021ACB0C
_021ACAB6:
	adds r7, r4, r6
	ldr r0, _021ACB10 ; =0x00001AB8
	ldrb r1, [r7, #7]
	adds r0, r5, r0
	bl FUN_021ACB14
	cmp r0, #0
	beq _021ACB04
	ldrb r1, [r7, #7]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACB04
	ldrb r0, [r4, #5]
	movs r3, #1
	cmp r0, #0
	beq _021ACAE2
	movs r3, #0
_021ACAE2:
	lsls r2, r6, #2
	adds r2, r4, r2
	ldr r2, [r2, #0x10]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A96CC
	ldrb r0, [r4, #6]
	cmp r0, #0
	bne _021ACB00
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #1
	bl FUN_021A543C
_021ACB00:
	movs r0, #1
	str r0, [sp]
_021ACB04:
	ldrb r0, [r4, #4]
	adds r6, r6, #1
	cmp r6, r0
	blo _021ACAB6
_021ACB0C:
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021ACB10: .word 0x00001AB8
	thumb_func_end FUN_021ACAA4

	thumb_func_start FUN_021ACB14
FUN_021ACB14: ; 0x021ACB14
	bx pc
	nop
	thumb_func_end FUN_021ACB14
_021ACB18:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACB24
FUN_021ACB24: ; 0x021ACB24
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldrb r1, [r4, #5]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB3BC
	cmp r0, #0
	bne _021ACB54
	ldrb r0, [r4, #7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021ACB8C
_021ACB54:
	ldrb r0, [r4, #7]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bne _021ACB60
	movs r6, #1
	b _021ACB62
_021ACB60:
	movs r6, #0
_021ACB62:
	ldrb r1, [r4, #6]
	adds r0, r7, #0
	adds r2, r6, #0
	bl FUN_021BAE18
	cmp r0, #0
	bne _021ACB8C
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	str r6, [sp]
	bl FUN_021A9BD8
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ACB8C:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021ACB24

	thumb_func_start FUN_021ACB90
FUN_021ACB90: ; 0x021ACB90
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #5]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021ACBB0
	ldrb r0, [r4, #7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021ACBE4
_021ACBB0:
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A437C
	cmp r0, #0
	beq _021ACBE0
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	ldrb r2, [r4, #6]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AACEC
	cmp r0, #0
	beq _021ACBE0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A5C18
_021ACBE0:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021ACBE4:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021ACB90

	thumb_func_start FUN_021ACBE8
FUN_021ACBE8: ; 0x021ACBE8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	str r1, [sp, #4]
	ldr r1, [r1]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	str r2, [sp, #8]
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #4]
	ldr r0, [r0]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACC1A
	ldr r1, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_021A9574
_021ACC1A:
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	bls _021ACCCA
_021ACC26:
	ldr r2, [sp, #4]
	ldr r1, [sp, #0xc]
	ldr r0, [r5, #8]
	adds r1, r2, r1
	ldrb r1, [r1, #8]
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021ACCBA
	ldr r0, [sp, #4]
	add r1, sp, #0x20
	ldr r0, [r0, #4]
	str r0, [sp, #0x20]
	adds r0, r4, #0
	bl FUN_021A9200
	adds r6, r0, #0
	beq _021ACCBA
	ldr r0, [sp, #4]
	str r0, [sp, #0x18]
	adds r0, #0x18
	str r0, [sp, #0x18]
	ldr r0, _021ACCE4 ; =0x00001AE4
	adds r7, r5, r0
	movs r0, #1
	str r0, [sp, #0x10]
_021ACC60:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	add r3, sp, #0x1c
	bl FUN_021A9178
	ldr r0, [sp, #4]
	ldrb r0, [r0, #0x15]
	cmp r0, #0
	bne _021ACC98
	str r7, [sp]
	add r1, sp, #0x1c
	ldr r1, [r1]
	ldr r3, [sp, #8]
	adds r0, r6, #0
	adds r2, r4, #0
	bl FUN_021ACCE8
	cmp r0, #0
	beq _021ACCA0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AD520
	adds r0, r7, #0
	bl FUN_021AC390
	b _021ACCA0
_021ACC98:
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_021AD520
_021ACCA0:
	cmp r6, #0x13
	bne _021ACCAE
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021A543C
_021ACCAE:
	adds r0, r4, #0
	add r1, sp, #0x20
	bl FUN_021A9200
	adds r6, r0, #0
	bne _021ACC60
_021ACCBA:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	ldrb r1, [r0, #0x14]
	ldr r0, [sp, #0xc]
	cmp r0, r1
	blo _021ACC26
_021ACCCA:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACCDC
	ldr r1, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_021A958C
_021ACCDC:
	ldr r0, [sp, #0x10]
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_021ACCE4: .word 0x00001AE4
	thumb_func_end FUN_021ACBE8

	thumb_func_start FUN_021ACCE8
FUN_021ACCE8: ; 0x021ACCE8
	bx pc
	nop
	thumb_func_end FUN_021ACCE8
_021ACCEC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xED, 0xC5, 0x89, 0x06

	thumb_func_start FUN_021ACCF8
FUN_021ACCF8: ; 0x021ACCF8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	lsls r0, r0, #0x13
	lsrs r1, r0, #0x1b
	cmp r1, #0x1f
	beq _021ACD18
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r6, r0, #0
	b _021ACD1A
_021ACD18:
	movs r6, #0
_021ACD1A:
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_021AC3A8
	cmp r0, #0
	bne _021ACD30
	ldrb r0, [r4, #0xd]
	cmp r0, #0
	bne _021ACD30
	movs r0, #1
	b _021ACD32
_021ACD30:
	movs r0, #0
_021ACD32:
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _021ACDBC ; =0x00001AB8
	ldrb r1, [r4, #0xf]
	adds r0, r5, r0
	bl FUN_021ACDC0
	cmp r0, #0
	beq _021ACDB4
	ldrb r1, [r4, #0xf]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	str r0, [sp, #0x10]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACDB4
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldrb r0, [r4, #0x10]
	ldr r3, [r4, #4]
	adds r2, r6, #0
	str r0, [sp, #4]
	ldrb r0, [r4, #0xc]
	str r0, [sp, #8]
	adds r0, r5, #0
	bl FUN_021A6290
	cmp r0, #0
	bne _021ACDB4
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACD82
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9574
_021ACD82:
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldrb r0, [r4, #0xe]
	str r7, [sp, #4]
	ldr r3, [r4, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r0, #0x14
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A6400
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACDAE
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A958C
_021ACDAE:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021ACDB4:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021ACDBC: .word 0x00001AB8
	thumb_func_end FUN_021ACCF8

	thumb_func_start FUN_021ACDC0
FUN_021ACDC0: ; 0x021ACDC0
	bx pc
	nop
	thumb_func_end FUN_021ACDC0
_021ACDC4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACDD0
FUN_021ACDD0: ; 0x021ACDD0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	str r2, [sp, #0x18]
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	str r0, [sp, #0x24]
	movs r0, #0
	str r0, [sp, #0x20]
	movs r0, #0
	str r0, [sp, #0x1c]
	ldrb r0, [r4, #0xf]
	movs r6, #0
	cmp r0, #0
	bls _021ACE3C
_021ACDFC:
	adds r7, r4, r6
	ldr r0, _021ACEF0 ; =0x00001AB8
	ldrb r1, [r7, #0x10]
	adds r0, r5, r0
	bl FUN_021ACEF4
	cmp r0, #0
	beq _021ACE34
	ldrb r1, [r7, #0x10]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACE34
	movs r2, #0xc
	ldrsb r2, [r4, r2]
	ldr r1, [r4, #4]
	adds r0, r7, #0
	bl FUN_021BB554
	cmp r0, #0
	beq _021ACE34
	movs r0, #1
	str r0, [sp, #0x20]
	b _021ACE3C
_021ACE34:
	ldrb r0, [r4, #0xf]
	adds r6, r6, #1
	cmp r6, r0
	blo _021ACDFC
_021ACE3C:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021ACE52
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACE52
	ldr r1, [sp, #0x24]
	adds r0, r5, #0
	bl FUN_021A9574
_021ACE52:
	ldrb r0, [r4, #0xf]
	movs r6, #0
	cmp r0, #0
	bls _021ACED4
	adds r0, r4, #0
	str r0, [sp, #0x28]
	adds r0, #0x18
	str r0, [sp, #0x28]
_021ACE62:
	adds r7, r4, r6
	ldr r0, _021ACEF0 ; =0x00001AB8
	ldrb r1, [r7, #0x10]
	adds r0, r5, r0
	bl FUN_021ACF04
	cmp r0, #0
	beq _021ACECC
	ldrb r1, [r7, #0x10]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACECC
	ldrb r0, [r4, #0xd]
	cmp r0, #0
	bne _021ACE8E
	movs r0, #1
	b _021ACE90
_021ACE8E:
	movs r0, #0
_021ACE90:
	movs r1, #0xc
	ldrsb r1, [r4, r1]
	ldr r3, [r4, #4]
	adds r2, r7, #0
	str r1, [sp]
	movs r1, #0x1f
	str r1, [sp, #4]
	ldr r1, [sp, #0x18]
	str r1, [sp, #8]
	ldr r1, [r4, #8]
	str r1, [sp, #0xc]
	ldrb r1, [r4, #0xe]
	str r1, [sp, #0x10]
	ldr r1, [r4]
	str r0, [sp, #0x14]
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021A6AF8
	cmp r0, #0
	beq _021ACECC
	ldr r1, [sp, #0x28]
	adds r0, r5, #0
	bl FUN_021AD520
	movs r0, #1
	str r0, [sp, #0x1c]
_021ACECC:
	ldrb r0, [r4, #0xf]
	adds r6, r6, #1
	cmp r6, r0
	blo _021ACE62
_021ACED4:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021ACEEA
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021ACEEA
	ldr r1, [sp, #0x24]
	adds r0, r5, #0
	bl FUN_021A958C
_021ACEEA:
	ldr r0, [sp, #0x1c]
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021ACEF0: .word 0x00001AB8
	thumb_func_end FUN_021ACDD0

	thumb_func_start FUN_021ACEF4
FUN_021ACEF4: ; 0x021ACEF4
	bx pc
	nop
	thumb_func_end FUN_021ACEF4
_021ACEF8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACF04
FUN_021ACF04: ; 0x021ACF04
	bx pc
	nop
	thumb_func_end FUN_021ACF04
_021ACF08:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACF14
FUN_021ACF14: ; 0x021ACF14
	push {r4, r5, r6, lr}
	sub sp, #0x18
	adds r5, r1, #0
	adds r6, r0, #0
	ldr r0, _021ACFB4 ; =0x00001AB8
	ldrb r1, [r5, #4]
	adds r0, r6, r0
	bl FUN_021ACFB8
	cmp r0, #0
	beq _021ACFAC
	ldrb r1, [r5, #4]
	ldr r0, [r6, #8]
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACFAC
	ldrb r2, [r5, #5]
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021BB6E8
	ldrb r2, [r5, #6]
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021BB6E8
	ldrb r2, [r5, #7]
	adds r0, r4, #0
	movs r1, #3
	bl FUN_021BB6E8
	ldrb r2, [r5, #8]
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BB6E8
	ldrb r2, [r5, #9]
	adds r0, r4, #0
	movs r1, #5
	bl FUN_021BB6E8
	ldrb r2, [r5, #0xa]
	adds r0, r4, #0
	movs r1, #6
	bl FUN_021BB6E8
	ldrb r2, [r5, #0xb]
	adds r0, r4, #0
	movs r1, #7
	bl FUN_021BB6E8
	ldrb r0, [r5, #6]
	ldrb r2, [r5, #4]
	ldrb r3, [r5, #5]
	str r0, [sp]
	ldrb r0, [r5, #7]
	movs r1, #0xb
	str r0, [sp, #4]
	ldrb r0, [r5, #8]
	str r0, [sp, #8]
	ldrb r0, [r5, #9]
	str r0, [sp, #0xc]
	ldrb r0, [r5, #0xa]
	str r0, [sp, #0x10]
	ldrb r0, [r5, #0xb]
	str r0, [sp, #0x14]
	ldr r0, [r6, #0xc]
	bl FUN_021B1474
	add sp, #0x18
	movs r0, #1
	pop {r4, r5, r6, pc}
_021ACFAC:
	movs r0, #0
	add sp, #0x18
	pop {r4, r5, r6, pc}
	nop
_021ACFB4: .word 0x00001AB8
	thumb_func_end FUN_021ACF14

	thumb_func_start FUN_021ACFB8
FUN_021ACFB8: ; 0x021ACFB8
	bx pc
	nop
	thumb_func_end FUN_021ACFB8
_021ACFBC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ACFC8
FUN_021ACFC8: ; 0x021ACFC8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ACFF6
	ldrb r2, [r4, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0xc
	bl FUN_021B1474
	adds r0, r6, #0
	bl FUN_021BB73C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, pc}
_021ACFF6:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021ACFC8

	thumb_func_start FUN_021ACFFC
FUN_021ACFFC: ; 0x021ACFFC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	movs r0, #0
	adds r5, r1, #0
	str r0, [sp]
	ldrb r0, [r5, #4]
	movs r4, #0
	cmp r0, #0
	bls _021AD040
_021AD010:
	adds r7, r5, r4
	ldrb r1, [r7, #5]
	ldr r0, [r6, #8]
	bl FUN_0219D250
	str r0, [sp, #4]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD038
	ldrb r2, [r7, #5]
	ldr r0, [r6, #0xc]
	movs r1, #0xd
	bl FUN_021B1474
	ldr r0, [sp, #4]
	bl FUN_021BB748
	movs r0, #1
	str r0, [sp]
_021AD038:
	ldrb r0, [r5, #4]
	adds r4, r4, #1
	cmp r4, r0
	blo _021AD010
_021AD040:
	ldr r0, [sp]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021ACFFC

	thumb_func_start FUN_021AD048
FUN_021AD048: ; 0x021AD048
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, _021AD13C ; =0x00001AB8
	ldrb r1, [r4, #0xe]
	adds r0, r5, r0
	bl FUN_021AD140
	cmp r0, #0
	beq _021AD134
	ldrb r1, [r4, #0xe]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	ldrb r1, [r4, #0xf]
	adds r6, r0, #0
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	beq _021AD08C
	ldrh r2, [r4, #4]
	movs r1, #8
	bl FUN_021BB1B0
	ldrh r0, [r4, #4]
	ldrb r2, [r4, #0xe]
	movs r1, #0x13
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r3, #8
	bl FUN_021B1474
_021AD08C:
	ldrb r0, [r4, #0xf]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021AD0B2
	ldrh r2, [r4, #6]
	adds r0, r6, #0
	movs r1, #9
	bl FUN_021BB1B0
	ldrh r0, [r4, #6]
	ldrb r2, [r4, #0xe]
	movs r1, #0x13
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r3, #9
	bl FUN_021B1474
_021AD0B2:
	ldrb r0, [r4, #0xf]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	beq _021AD0D8
	ldrh r2, [r4, #8]
	adds r0, r6, #0
	movs r1, #0xa
	bl FUN_021BB1B0
	ldrh r0, [r4, #8]
	ldrb r2, [r4, #0xe]
	movs r1, #0x13
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r3, #0xa
	bl FUN_021B1474
_021AD0D8:
	ldrb r0, [r4, #0xf]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1f
	beq _021AD0FE
	ldrh r2, [r4, #0xa]
	adds r0, r6, #0
	movs r1, #0xb
	bl FUN_021BB1B0
	ldrh r0, [r4, #0xa]
	ldrb r2, [r4, #0xe]
	movs r1, #0x13
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r3, #0xb
	bl FUN_021B1474
_021AD0FE:
	ldrb r0, [r4, #0xf]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	beq _021AD124
	ldrh r2, [r4, #0xc]
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021BB1B0
	ldrh r0, [r4, #0xc]
	ldrb r2, [r4, #0xe]
	movs r1, #0x13
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r3, #0xc
	bl FUN_021B1474
_021AD124:
	adds r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021AD134:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021AD13C: .word 0x00001AB8
	thumb_func_end FUN_021AD048

	thumb_func_start FUN_021AD140
FUN_021AD140: ; 0x021AD140
	bx pc
	nop
	thumb_func_end FUN_021AD140
_021AD144:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AD150
FUN_021AD150: ; 0x021AD150
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, _021AD198 ; =0x00001AB8
	ldrb r1, [r4, #4]
	adds r0, r5, r0
	bl FUN_021AD19C
	cmp r0, #0
	beq _021AD192
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AD17C
	ldrb r0, [r4, #5]
	cmp r0, #0
	beq _021AD192
_021AD17C:
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A5E04
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD192:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_021AD198: .word 0x00001AB8
	thumb_func_end FUN_021AD150

	thumb_func_start FUN_021AD19C
FUN_021AD19C: ; 0x021AD19C
	bx pc
	nop
	thumb_func_end FUN_021AD19C
_021AD1A0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AD1AC
FUN_021AD1AC: ; 0x021AD1AC
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, _021AD22C ; =0x00001AB8
	ldrb r1, [r4, #6]
	adds r0, r5, r0
	bl FUN_021AD234
	cmp r0, #0
	beq _021AD226
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD226
	adds r0, r6, #0
	bl FUN_021BAC84
	bl FUN_021AD244
	cmp r0, #0
	bne _021AD226
	ldrb r2, [r4, #6]
	ldrh r3, [r4, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x16
	bl FUN_021B1474
	ldrh r1, [r4, #4]
	adds r0, r6, #0
	bl FUN_021BBEF0
	ldrb r0, [r4, #7]
	cmp r0, #0
	bne _021AD220
	ldrh r0, [r4, #4]
	bl FUN_021CE628
	cmp r0, #0
	beq _021AD220
	ldrh r0, [r4, #4]
	bl FUN_021CE57C
	str r0, [sp]
	ldr r0, _021AD230 ; =0xFFFF0000
	movs r2, #0xe
	str r0, [sp, #4]
	ldrb r3, [r4, #6]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	lsls r2, r2, #6
	bl FUN_021B1610
_021AD220:
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD226:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AD22C: .word 0x00001AB8
_021AD230: .word 0xFFFF0000
	thumb_func_end FUN_021AD1AC

	thumb_func_start FUN_021AD234
FUN_021AD234: ; 0x021AD234
	bx pc
	nop
	thumb_func_end FUN_021AD234
_021AD238:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AD244
FUN_021AD244: ; 0x021AD244
	bx pc
	nop
	thumb_func_end FUN_021AD244
_021AD248:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x49, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021AD254
FUN_021AD254: ; 0x021AD254
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	ldr r0, [r5]
	movs r4, #0
	lsls r0, r0, #0x13
	lsrs r1, r0, #0x1b
	cmp r1, #0x1f
	beq _021AD272
	lsls r1, r1, #0x18
	ldr r0, [r6, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r4, r0, #0
_021AD272:
	ldr r0, [r5]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD286
	cmp r4, #0
	beq _021AD286
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A9574
_021AD286:
	adds r0, r6, #0
	adds r1, r5, #4
	bl FUN_021AD520
	ldr r0, [r5]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD2A2
	cmp r4, #0
	beq _021AD2A2
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A958C
_021AD2A2:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021AD254

	thumb_func_start FUN_021AD2A8
FUN_021AD2A8: ; 0x021AD2A8
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldrb r1, [r5, #8]
	ldr r0, [r0, #8]
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD2CA
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl FUN_021BB800
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AD2CA:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021AD2A8

	thumb_func_start FUN_021AD2D0
FUN_021AD2D0: ; 0x021AD2D0
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldrb r1, [r5, #8]
	ldr r0, [r0, #8]
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD2F2
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl FUN_021BBC80
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AD2F2:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021AD2D0

	thumb_func_start FUN_021AD2F8
FUN_021AD2F8: ; 0x021AD2F8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #8]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD31E
	ldr r2, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9C44
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD31E:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021AD2F8

	thumb_func_start FUN_021AD324
FUN_021AD324: ; 0x021AD324
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #8]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AD34A
	ldr r2, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9C68
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD34A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021AD324

	thumb_func_start FUN_021AD350
FUN_021AD350: ; 0x021AD350
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r1, #0
	ldr r1, [r4, #8]
	ldrb r3, [r4, #0xc]
	str r1, [sp, #4]
	ldr r1, [r4]
	add r6, sp, #4
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r2, [r4, #4]
	lsrs r1, r1, #0x18
	adds r5, r0, #0
	str r6, [sp]
	bl FUN_021AB700
	ldrb r0, [r4, #0xc]
	ldr r1, [r4, #4]
	ldr r2, [r6]
	bl FUN_021AD398
	cmp r0, #0
	beq _021AD390
	adds r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD390:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
	thumb_func_end FUN_021AD350

	thumb_func_start FUN_021AD398
FUN_021AD398: ; 0x021AD398
	bx pc
	nop
	thumb_func_end FUN_021AD398
_021AD39C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0x8C, 0x89, 0x06

	thumb_func_start FUN_021AD3A8
FUN_021AD3A8: ; 0x021AD3A8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0
	adds r5, r1, #0
	str r0, [sp]
	movs r4, #0
	movs r7, #1
_021AD3B6:
	lsrs r0, r4, #3
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r0, #7
	ands r0, r4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldrb r0, [r5, #4]
	cmp r2, r0
	bhs _021AD3DE
	adds r0, r7, #0
	lsls r0, r1
	adds r1, r5, r2
	ldrb r1, [r1, #4]
	tst r0, r1
	beq _021AD3DC
	adds r0, r7, #0
	b _021AD3E0
_021AD3DC:
	b _021AD3DE
_021AD3DE:
	movs r0, #0
_021AD3E0:
	cmp r0, #0
	beq _021AD3FE
	ldrb r0, [r5, #7]
	adds r1, r4, #0
	bl FUN_021AD408
	cmp r0, #0
	beq _021AD3FE
	ldrb r2, [r5, #7]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021A86AC
	movs r0, #1
	str r0, [sp]
_021AD3FE:
	adds r4, r4, #1
	cmp r4, #0xe
	blo _021AD3B6
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AD3A8

	thumb_func_start FUN_021AD408
FUN_021AD408: ; 0x021AD408
	bx pc
	nop
	thumb_func_end FUN_021AD408
_021AD40C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0x8D, 0x89, 0x06

	thumb_func_start FUN_021AD418
FUN_021AD418: ; 0x021AD418
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r2, r4, #0
	adds r2, #8
	ldrb r3, [r4, #0xc]
	ldr r1, [r4, #4]
	ldr r2, [r2]
	adds r5, r0, #0
	bl FUN_021A7750
	cmp r0, #0
	beq _021AD43E
	adds r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AD43E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021AD418

	thumb_func_start FUN_021AD444
FUN_021AD444: ; 0x021AD444
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_021D5A54
	cmp r0, #0
	beq _021AD460
	ldr r1, [r4, #4]
	adds r0, r5, #0
	bl FUN_021A8750
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AD460:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021AD444

	thumb_func_start FUN_021AD464
FUN_021AD464: ; 0x021AD464
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldrb r1, [r4, #4]
	adds r7, r0, #0
	movs r6, #0
	cmp r1, #0
	beq _021AD4C0
	ldrb r2, [r4, #5]
	adds r0, r5, #0
	bl FUN_021A767C
	cmp r0, #0
	beq _021AD512
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD4A0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A9574
_021AD4A0:
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	adds r0, r5, #0
	bl FUN_021A76A8
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	ldr r0, [r4]
	movs r6, #1
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD512
	b _021AD50A
_021AD4C0:
	ldrb r0, [r4, #6]
	cmp r0, #0
	beq _021AD512
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD4D6
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A9574
_021AD4D6:
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	ldr r0, _021AD518 ; =0x00001D78
	ldr r1, _021AD51C ; =0x00003C98
	adds r0, r5, r0
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021AB750
	ldr r0, _021AD518 ; =0x00001D78
	ldr r2, _021AD51C ; =0x00003C98
	adds r0, r5, r0
	adds r1, r6, #0
	adds r2, r2, #2
	bl FUN_021B0910
	ldr r0, [r4]
	movs r6, #1
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD512
_021AD50A:
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A958C
_021AD512:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AD518: .word 0x00001D78
_021AD51C: .word 0x00003C98
	thumb_func_end FUN_021AD464

	thumb_func_start FUN_021AD520
FUN_021AD520: ; 0x021AD520
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r1, #0
	ldrh r3, [r4, #2]
	lsls r1, r3, #0x10
	lsrs r1, r1, #0x1f
	bne _021AD560
	lsls r1, r3, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #1
	beq _021AD53C
	cmp r1, #2
	beq _021AD54E
	b _021AD59C
_021AD53C:
	ldrh r1, [r4]
	lsls r2, r3, #0x11
	lsrs r2, r2, #0x19
	adds r3, r4, #4
	bl FUN_021A9904
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021AD54E:
	ldrh r1, [r4]
	lsls r2, r3, #0x11
	lsrs r2, r2, #0x19
	adds r3, r4, #4
	bl FUN_021A9A54
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021AD560:
	ldr r1, [r4, #0x24]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	lsls r1, r3, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #1
	beq _021AD574
	cmp r1, #2
	beq _021AD588
	b _021AD59C
_021AD574:
	adds r1, r4, #4
	str r1, [sp]
	lsls r3, r3, #0x11
	ldrh r1, [r4]
	lsrs r3, r3, #0x19
	bl FUN_021A99A0
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021AD588:
	adds r1, r4, #4
	str r1, [sp]
	lsls r3, r3, #0x11
	ldrh r1, [r4]
	lsrs r3, r3, #0x19
	bl FUN_021A9AF0
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021AD59C:
	movs r0, #0
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021AD520

	thumb_func_start FUN_021AD5A4
FUN_021AD5A4: ; 0x021AD5A4
	push {r3, lr}
	adds r3, r1, #0
	ldr r2, [r3]
	ldrb r0, [r3, #0x1c]
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	str r0, [sp]
	lsls r2, r2, #0x18
	ldrb r1, [r3, #8]
	ldr r0, [r3, #4]
	lsrs r2, r2, #0x18
	adds r3, #0xc
	bl FUN_021AD5D0
	cmp r0, #0
	beq _021AD5C8
	movs r0, #1
	b _021AD5CA
_021AD5C8:
	movs r0, #0
_021AD5CA:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	thumb_func_end FUN_021AD5A4

	thumb_func_start FUN_021AD5D0
FUN_021AD5D0: ; 0x021AD5D0
	bx pc
	nop
	thumb_func_end FUN_021AD5D0
_021AD5D4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF1, 0x81, 0x89, 0x06

	thumb_func_start FUN_021AD5E0
FUN_021AD5E0: ; 0x021AD5E0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	movs r1, #0x10
	adds r7, r0, #0
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	bl FUN_021AD728
	cmp r0, #0
	beq _021AD60C
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AD60C:
	adds r0, r7, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AD61C
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AD61C:
	ldrb r0, [r4, #7]
	cmp r0, #0
	bne _021AD628
	ldrh r0, [r4, #4]
	cmp r0, r6
	beq _021AD718
_021AD628:
	ldr r2, [r4]
	lsls r0, r2, #8
	lsrs r0, r0, #0x1f
	beq _021AD640
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x57
	lsrs r2, r2, #0x18
	bl FUN_021B1474
_021AD640:
	ldrb r2, [r4, #6]
	ldrh r3, [r4, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x49
	bl FUN_021B1474
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #0xc
	bl FUN_021AD520
	ldr r0, _021AD720 ; =0x00001D78
	ldr r1, _021AD724 ; =0x00003CF6
	adds r0, r5, r0
	str r1, [sp]
	bl FUN_021B088C
	str r0, [sp, #4]
	ldrb r1, [r4, #6]
	ldrh r3, [r4, #4]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021AB694
	ldr r0, _021AD720 ; =0x00001D78
	ldr r2, [sp]
	ldr r1, [sp, #4]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	adds r0, r7, #0
	bl FUN_021BDD78
	ldrh r1, [r4, #4]
	adds r0, r7, #0
	bl FUN_021BBF10
	ldrb r2, [r4, #6]
	ldrh r3, [r4, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x1d
	bl FUN_021B1474
	adds r0, r7, #0
	bl FUN_021BDCEC
	ldrb r2, [r4, #6]
	ldr r0, [r5, #0xc]
	movs r1, #0x58
	bl FUN_021B1474
	ldrh r0, [r4, #4]
	cmp r6, r0
	beq _021AD6D4
	ldr r0, _021AD720 ; =0x00001D78
	ldr r1, [sp]
	adds r0, r5, r0
	adds r1, #0x10
	bl FUN_021B088C
	str r0, [sp, #8]
	ldrb r1, [r4, #6]
	adds r0, r5, #0
	bl FUN_021AB6D4
	ldr r0, _021AD720 ; =0x00001D78
	ldr r2, [sp]
	ldr r1, [sp, #8]
	adds r2, #0x12
	adds r0, r5, r0
	str r2, [sp]
	bl FUN_021B0910
_021AD6D4:
	ldr r2, [r4]
	lsls r0, r2, #8
	lsrs r0, r0, #0x1f
	beq _021AD6EC
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x58
	lsrs r2, r2, #0x18
	bl FUN_021B1474
_021AD6EC:
	adds r0, r7, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	bne _021AD712
	cmp r6, #0x67
	bne _021AD706
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A543C
_021AD706:
	cmp r6, #0x7f
	bne _021AD712
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A7ACC
_021AD712:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AD718:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021AD720: .word 0x00001D78
_021AD724: .word 0x00003CF6
	thumb_func_end FUN_021AD5E0

	thumb_func_start FUN_021AD728
FUN_021AD728: ; 0x021AD728
	bx pc
	nop
	thumb_func_end FUN_021AD728
_021AD72C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021AD738
FUN_021AD738: ; 0x021AD738
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	ldr r0, [r4]
	lsls r0, r0, #0x13
	lsrs r1, r0, #0x1b
	ldrb r0, [r4, #6]
	cmp r1, r0
	beq _021AD7AE
	ldr r0, _021AD838 ; =0x00001D78
	ldr r6, _021AD83C ; =0x00003D2C
	adds r0, r5, r0
	adds r1, r6, #0
	bl FUN_021B088C
	str r0, [sp, #4]
	ldrh r2, [r4, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB5AC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, _021AD838 ; =0x00001D78
	ldr r1, [sp, #4]
	adds r0, r5, r0
	adds r2, r6, #2
	bl FUN_021B0910
	ldr r0, [sp]
	cmp r0, #0
	beq _021AD7AE
	ldr r0, _021AD838 ; =0x00001D78
	adds r1, r6, #6
	adds r0, r5, r0
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB5F8
	ldr r0, _021AD838 ; =0x00001D78
	adds r6, #8
	adds r0, r5, r0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021B0910
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AD7AE:
	ldr r2, [r4]
	lsls r0, r2, #8
	lsrs r0, r0, #0x1f
	beq _021AD7C6
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x57
	lsrs r2, r2, #0x18
	bl FUN_021B1474
_021AD7C6:
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #0xc
	bl FUN_021AD520
	ldrh r2, [r4, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_021A5D40
	ldr r2, [r4]
	lsls r0, r2, #8
	lsrs r0, r0, #0x1f
	beq _021AD7F4
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0x58
	lsrs r2, r2, #0x18
	bl FUN_021B1474
_021AD7F4:
	ldrb r0, [r4, #7]
	cmp r0, #0
	beq _021AD80A
	adds r0, r7, #0
	bl FUN_021BBF78
	ldrb r2, [r4, #6]
	ldr r0, [r5, #0xc]
	movs r1, #0x2b
	bl FUN_021B1474
_021AD80A:
	ldrb r0, [r4, #8]
	cmp r0, #0
	beq _021AD826
	ldrb r1, [r4, #9]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	bl FUN_021BBF78
	ldrb r2, [r4, #9]
	ldr r0, [r5, #0xc]
	movs r1, #0x2b
	bl FUN_021B1474
_021AD826:
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A543C
	movs r0, #1
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AD838: .word 0x00001D78
_021AD83C: .word 0x00003D2C
	thumb_func_end FUN_021AD738

	thumb_func_start FUN_021AD840
FUN_021AD840: ; 0x021AD840
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	ldr r1, [r4]
	adds r6, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r7, r0, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	adds r0, r6, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, _021AD944 ; =0x00001D78
	ldr r1, _021AD948 ; =0x00003D64
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0xc]
	ldr r2, [sp, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB5AC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, _021AD944 ; =0x00001D78
	ldr r2, _021AD948 ; =0x00003D64
	ldr r1, [sp, #0xc]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	ldr r0, [sp]
	cmp r0, #0
	beq _021AD8D4
	ldr r0, _021AD944 ; =0x00001D78
	ldr r1, _021AD948 ; =0x00003D64
	adds r0, r5, r0
	adds r1, r1, #5
	bl FUN_021B088C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB5F8
	ldr r0, _021AD944 ; =0x00001D78
	ldr r2, _021AD948 ; =0x00003D64
	adds r0, r5, r0
	adds r1, r4, #0
	adds r2, r2, #7
	bl FUN_021B0910
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AD8D4:
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD8E4
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A9574
_021AD8E4:
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #0x30
	bl FUN_021AD520
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #0x58
	bl FUN_021AD520
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AD912
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021A958C
_021AD912:
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_021A5D40
	ldr r2, [sp, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #0
	bl FUN_021A5D40
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021A543C
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021A543C
	movs r0, #1
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AD944: .word 0x00001D78
_021AD948: .word 0x00003D64
	thumb_func_end FUN_021AD840

	thumb_func_start FUN_021AD94C
FUN_021AD94C: ; 0x021AD94C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r1, r0, #0
	ldr r2, [r4, #8]
	adds r0, r5, #0
	bl FUN_021A543C
	movs r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021AD94C

	thumb_func_start FUN_021AD968
FUN_021AD968: ; 0x021AD968
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AD990
	ldr r0, [r4, #4]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021AD9B6
_021AD990:
	ldr r0, [r4, #4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _021AD9A6
	adds r0, r6, #0
	bl FUN_021BB388
	cmp r0, #0
	beq _021AD9A6
	movs r0, #0
	pop {r4, r5, r6, pc}
_021AD9A6:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A5C18
	cmp r0, #0
	beq _021AD9B6
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AD9B6:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021AD968

	thumb_func_start FUN_021AD9BC
FUN_021AD9BC: ; 0x021AD9BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ADA3A
	ldrh r1, [r4, #6]
	adds r0, r6, #0
	bl FUN_021C27E0
	str r0, [sp]
	cmp r0, #0
	beq _021ADA3A
	ldr r0, [r5, #0xc]
	movs r1, #0x42
	bl FUN_021B14C0
	str r0, [sp, #4]
	ldr r0, _021ADA40 ; =0x00001D78
	ldr r1, _021ADA44 ; =0x00003DB8
	adds r0, r5, r0
	bl FUN_021B088C
	ldr r2, [r4]
	adds r7, r0, #0
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021AA958
	adds r0, r5, #0
	bl FUN_021AC464
	cmp r0, #2
	bne _021ADA22
	ldrb r3, [r4, #4]
	ldr r0, [r5, #0xc]
	ldr r1, [sp, #4]
	movs r2, #0x42
	bl FUN_021B152C
_021ADA22:
	ldr r0, _021ADA40 ; =0x00001D78
	ldr r2, _021ADA48 ; =0x00003DBF
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B0910
	ldr r0, [sp]
	bl FUN_021C2804
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ADA3A:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021ADA40: .word 0x00001D78
_021ADA44: .word 0x00003DB8
_021ADA48: .word 0x00003DBF
	thumb_func_end FUN_021AD9BC

	thumb_func_start FUN_021ADA4C
FUN_021ADA4C: ; 0x021ADA4C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r6, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _021ADA7C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9C2C
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
_021ADA7C:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	movs r3, #1
	bl FUN_021A5D40
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021ADA4C

	thumb_func_start FUN_021ADA8C
FUN_021ADA8C: ; 0x021ADA8C
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	ldrb r0, [r4, #6]
	ldrb r2, [r4, #4]
	ldrb r3, [r4, #5]
	str r0, [sp]
	ldrb r0, [r4, #7]
	movs r1, #0x1f
	str r0, [sp, #4]
	ldrh r0, [r4, #8]
	str r0, [sp, #8]
	ldr r0, [r5, #0xc]
	bl FUN_021B1474
	ldrb r0, [r4, #7]
	ldrb r1, [r4, #5]
	ldrh r2, [r4, #8]
	str r0, [sp]
	ldrb r3, [r4, #6]
	adds r0, r6, #0
	bl FUN_021BAF74
	movs r0, #1
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021ADA8C

	thumb_func_start FUN_021ADACC
FUN_021ADACC: ; 0x021ADACC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r1, r0, #0
	ldrb r2, [r4, #5]
	ldrb r3, [r4, #6]
	adds r0, r5, #0
	bl FUN_021A4264
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ADACC

	thumb_func_start FUN_021ADAEC
FUN_021ADAEC: ; 0x021ADAEC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	ldrb r1, [r4, #5]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	ldrh r1, [r4, #6]
	adds r0, r5, #0
	adds r2, r6, #0
	add r3, sp, #0x10
	bl FUN_021AA00C
	movs r4, #0x86
	lsls r4, r4, #4
	ldr r0, [r5, r4]
	bl FUN_021ADC38
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	bl FUN_021ADC48
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	adds r1, r7, #0
	bl FUN_021ADC58
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	movs r1, #1
	bl FUN_021ADC68
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	bl FUN_021ADC78
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	bl FUN_021ADC88
	cmp r0, #0
	beq _021ADB6A
	add r2, sp, #8
	ldrh r2, [r2, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9270
	add sp, #0x24
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021ADB6A:
	adds r3, r4, #0
	adds r3, #8
	ldr r3, [r5, r3]
	adds r0, r5, #0
	add r1, sp, #0x10
	adds r2, r6, #0
	bl FUN_021A3320
	ldr r0, _021ADC30 ; =0x00001F8C
	adds r3, r4, #0
	adds r0, r5, r0
	str r0, [sp]
	adds r3, #8
	ldr r3, [r5, r3]
	adds r0, r5, #0
	add r1, sp, #0x10
	adds r2, r6, #0
	bl FUN_021A2EC0
	ldr r0, _021ADC30 ; =0x00001F8C
	adds r3, r4, #0
	adds r0, r5, r0
	str r0, [sp]
	adds r3, #8
	ldr r3, [r5, r3]
	adds r0, r5, #0
	add r1, sp, #0x10
	adds r2, r6, #0
	bl FUN_021A2F94
	adds r3, r4, #0
	adds r3, #8
	ldr r3, [r5, r3]
	adds r0, r5, #0
	add r1, sp, #0x10
	adds r2, r6, #0
	bl FUN_021A33B8
	adds r0, r4, #0
	adds r0, #8
	ldr r0, [r5, r0]
	bl FUN_021ADC98
	cmp r0, #0
	beq _021ADBCA
	add sp, #0x24
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021ADBCA:
	ldr r0, _021ADC34 ; =0x000004A8
	add r7, sp, #8
	ldr r0, [r5, r0]
	ldrh r1, [r0]
	strh r1, [r7]
	ldrh r1, [r0, #2]
	strh r1, [r7, #2]
	ldrh r1, [r0, #4]
	strh r1, [r7, #4]
	bl FUN_021A0CC8
	ldr r0, _021ADC34 ; =0x000004A8
	adds r3, r4, #0
	adds r3, #8
	ldr r0, [r5, r0]
	ldr r3, [r5, r3]
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_021A0CE8
	ldr r0, _021ADC34 ; =0x000004A8
	adds r4, #8
	ldr r1, [r5, r0]
	movs r0, #1
	strb r0, [r1, #4]
	ldr r0, _021ADC30 ; =0x00001F8C
	add r1, sp, #0x10
	adds r0, r5, r0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r3, [r5, r4]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021A4400
	ldr r0, _021ADC34 ; =0x000004A8
	ldr r2, [r5, r0]
	ldrb r0, [r2, #5]
	lsls r0, r0, #0x1f
	lsrs r1, r0, #0x1f
	ldrh r0, [r7]
	strh r0, [r2]
	ldrh r0, [r7, #2]
	strh r0, [r2, #2]
	ldrh r0, [r7, #4]
	strh r0, [r2, #4]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021ADC30: .word 0x00001F8C
_021ADC34: .word 0x000004A8
	thumb_func_end FUN_021ADAEC

	thumb_func_start FUN_021ADC38
FUN_021ADC38: ; 0x021ADC38
	bx pc
	nop
	thumb_func_end FUN_021ADC38
_021ADC3C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021ADC48
FUN_021ADC48: ; 0x021ADC48
	bx pc
	nop
	thumb_func_end FUN_021ADC48
_021ADC4C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021ADC58
FUN_021ADC58: ; 0x021ADC58
	bx pc
	nop
	thumb_func_end FUN_021ADC58
_021ADC5C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021ADC68
FUN_021ADC68: ; 0x021ADC68
	bx pc
	nop
	thumb_func_end FUN_021ADC68
_021ADC6C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021ADC78
FUN_021ADC78: ; 0x021ADC78
	bx pc
	nop
	thumb_func_end FUN_021ADC78
_021ADC7C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x6D, 0xD0, 0x89, 0x06

	thumb_func_start FUN_021ADC88
FUN_021ADC88: ; 0x021ADC88
	bx pc
	nop
	thumb_func_end FUN_021ADC88
_021ADC8C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021ADC98
FUN_021ADC98: ; 0x021ADC98
	bx pc
	nop
	thumb_func_end FUN_021ADC98
_021ADC9C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD9, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021ADCA8
FUN_021ADCA8: ; 0x021ADCA8
	push {r3, r4, r5, lr}
	ldr r1, [r1]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #1
	movs r4, #1
	bl FUN_021A10F4
	cmp r0, #0
	beq _021ADCD4
	movs r0, #5
	str r0, [r5, #0x14]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_021ADCD4:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021ADCA8

	thumb_func_start FUN_021ADCD8
FUN_021ADCD8: ; 0x021ADCD8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r1, #0x54
	adds r5, r0, #0
	ldrb r1, [r1]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_0219FD44
	cmp r0, #0
	bne _021ADD4A
	adds r1, r4, #0
	adds r1, #0x54
	ldrb r1, [r1]
	adds r0, r5, #0
	bl FUN_021ABEF4
	cmp r0, #0
	bne _021ADD4A
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _021ADD4A
	adds r0, r5, #0
	adds r1, r4, #4
	bl FUN_021AD520
	adds r2, r4, #0
	adds r2, #0x55
	ldrb r2, [r2]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A17E8
	cmp r0, #0
	beq _021ADD4A
	adds r2, r4, #0
	adds r2, #0x54
	ldrb r2, [r2]
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5]
	bl FUN_0219F398
	adds r4, #0x2c
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	str r0, [r5, #0x14]
	pop {r4, r5, r6, pc}
_021ADD4A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021ADCD8

	thumb_func_start FUN_021ADD50
FUN_021ADD50: ; 0x021ADD50
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r7, r0, #0
	ldrb r1, [r4, #5]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	adds r0, r7, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	beq _021ADD7E
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A6798
_021ADD7E:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021BBE08
	ldrb r2, [r4, #4]
	ldrb r3, [r4, #5]
	ldr r0, [r5, #0xc]
	movs r1, #0x26
	bl FUN_021B1474
	adds r0, r6, #0
	bl FUN_021BC5BC
	cmp r0, #0
	beq _021ADDB0
	ldr r0, _021ADDB4 ; =0x00001AB8
	ldrb r1, [r4, #5]
	adds r0, r5, r0
	bl FUN_021ADDB8
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x51
	bl FUN_021B1474
_021ADDB0:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021ADDB4: .word 0x00001AB8
	thumb_func_end FUN_021ADD50

	thumb_func_start FUN_021ADDB8
FUN_021ADDB8: ; 0x021ADDB8
	bx pc
	nop
	thumb_func_end FUN_021ADDB8
_021ADDBC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021ADDC8
FUN_021ADDC8: ; 0x021ADDC8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r1, r0, #0
	ldrb r2, [r4, #5]
	adds r0, r5, #0
	bl FUN_021A5840
	cmp r0, #0
	beq _021ADDE8
	movs r0, #1
	b _021ADDEA
_021ADDE8:
	movs r0, #0
_021ADDEA:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021ADDC8

	thumb_func_start FUN_021ADDF0
FUN_021ADDF0: ; 0x021ADDF0
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r1, #0
	adds r4, r0, #0
	ldrb r1, [r5, #4]
	ldr r0, [r4, #8]
	bl FUN_0219D250
	ldrh r1, [r5, #6]
	bl FUN_021BB7E4
	ldrb r2, [r5, #4]
	ldrh r3, [r5, #6]
	ldr r0, [r4, #0xc]
	movs r1, #2
	bl FUN_021B1474
	ldrb r0, [r5, #4]
	movs r2, #0
	adds r1, r4, r0
	ldr r0, _021ADE64 ; =0x000007A9
	strb r2, [r1, r0]
	adds r1, r5, #0
	adds r0, r4, #0
	adds r1, #8
	bl FUN_021AD520
	ldrb r2, [r5, #4]
	ldr r0, [r4, #4]
	ldr r1, [r4, #8]
	bl FUN_0219C638
	adds r6, r0, #0
	cmp r6, #6
	beq _021ADE5C
	ldrb r0, [r5, #4]
	bl FUN_0219C688
	adds r5, r0, #0
	ldr r0, [r4, #4]
	adds r1, r6, #0
	bl FUN_0219C698
	adds r2, r0, #0
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r3, r2, #0
	bl FUN_021A14BC
	adds r0, r4, #0
	bl FUN_021A14E8
_021ADE5C:
	movs r0, #1
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021ADE64: .word 0x000007A9
	thumb_func_end FUN_021ADDF0

	thumb_func_start FUN_021ADE68
FUN_021ADE68: ; 0x021ADE68
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	ldrh r1, [r4, #6]
	bl FUN_021BC018
	ldrb r2, [r4, #4]
	ldrh r3, [r4, #6]
	ldr r0, [r5, #0xc]
	movs r1, #0x14
	bl FUN_021B1474
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ADE68

	thumb_func_start FUN_021ADE98
FUN_021ADE98: ; 0x021ADE98
	push {r3, r4, r5, r6, lr}
	sub sp, #0x14
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	ldr r1, [r4]
	adds r6, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r0, #0
	add r0, sp, #0x10
	str r0, [sp]
	ldrh r0, [r4, #4]
	ldrb r3, [r4, #7]
	adds r4, #8
	str r0, [sp, #4]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x1c
	str r0, [sp, #8]
	lsls r3, r3, #0x1c
	adds r0, r5, #0
	adds r2, r6, #0
	lsrs r3, r3, #0x1c
	str r4, [sp, #0xc]
	bl FUN_021A7300
	cmp r0, #0
	beq _021ADEE4
	movs r0, #1
	b _021ADEE6
_021ADEE4:
	movs r0, #0
_021ADEE6:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x14
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021ADE98

	thumb_func_start FUN_021ADEF0
FUN_021ADEF0: ; 0x021ADEF0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldrb r1, [r4, #4]
	adds r5, r0, #0
	bl FUN_021A0C30
	cmp r0, #0
	beq _021ADF0E
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r3, r4, r5, pc}
_021ADF0E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ADEF0

	thumb_func_start FUN_021ADF14
FUN_021ADF14: ; 0x021ADF14
	push {r3, lr}
	ldrh r1, [r1, #4]
	bl FUN_021A0C58
	cmp r0, #0
	beq _021ADF24
	movs r0, #1
	b _021ADF26
_021ADF24:
	movs r0, #0
_021ADF26:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	thumb_func_end FUN_021ADF14

	thumb_func_start FUN_021ADF2C
FUN_021ADF2C: ; 0x021ADF2C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldrb r1, [r4, #4]
	adds r5, r0, #0
	bl FUN_021A0C98
	cmp r0, #0
	beq _021ADF4A
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r3, r4, r5, pc}
_021ADF4A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021ADF2C

	thumb_func_start FUN_021ADF50
FUN_021ADF50: ; 0x021ADF50
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r0, [r4, #4]
	ldrb r1, [r4, #5]
	cmp r0, r1
	beq _021ADFF6
	bl FUN_0219C688
	str r0, [sp, #4]
	ldrb r0, [r4, #5]
	bl FUN_0219C688
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021ADFF6
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	ldrb r1, [r4, #5]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	str r0, [sp, #8]
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ADFF6
	ldr r0, [sp, #8]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021ADFF6
	ldr r0, [r5, #8]
	ldr r1, [sp, #4]
	bl FUN_0219D408
	adds r1, r6, #0
	str r0, [sp, #0xc]
	bl FUN_0219D5CC
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #8]
	bl FUN_0219D5CC
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r7, #0
	blt _021ADFF6
	cmp r6, #0
	blt _021ADFF6
	movs r0, #0
	lsls r2, r7, #0x18
	lsls r3, r6, #0x18
	str r0, [sp]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021A0F24
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	lsls r2, r7, #0x18
	lsls r3, r6, #0x18
	ldr r1, [sp, #4]
	adds r0, r5, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021A0FCC
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021ADFF6:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021ADF50

	thumb_func_start FUN_021ADFFC
FUN_021ADFFC: ; 0x021ADFFC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r1, #0
	ldr r1, [r6]
	adds r5, r0, #0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x1b
	lsls r1, r1, #0x18
	ldr r0, [r5, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r4, r0, #0
	ldrb r1, [r6, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BC464
	cmp r0, #0
	bne _021AE0E0
	ldr r0, [sp, #8]
	bl FUN_021BC464
	cmp r0, #0
	bne _021AE0E0
	adds r0, r4, #0
	bl FUN_021BB470
	cmp r0, #0
	bne _021AE0E0
	adds r0, r4, #0
	movs r1, #0x10
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BC490
	cmp r0, #0
	beq _021AE0E0
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	bl FUN_021BAC80
	str r0, [sp]
	ldr r0, [r6]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AE076
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A9574
_021AE076:
	adds r0, r4, #0
	bl FUN_021C5C9C
	adds r0, r4, #0
	bl FUN_021BDD78
	adds r0, r4, #0
	bl FUN_021BDCEC
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #4]
	ldr r3, [sp]
	movs r1, #0x53
	bl FUN_021B1474
	adds r1, r6, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	ldr r0, [r6]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AE0AE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021A958C
_021AE0AE:
	adds r0, r4, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r7, r0
	beq _021AE0DA
	ldr r6, _021AE0E8 ; =0x00001D78
	ldr r7, _021AE0EC ; =0x00003F37
	adds r0, r5, r6
	adds r1, r7, #0
	bl FUN_021B088C
	adds r4, r0, #0
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021AB6D4
	adds r0, r5, r6
	adds r1, r4, #0
	adds r2, r7, #2
	bl FUN_021B0910
_021AE0DA:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AE0E0:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021AE0E8: .word 0x00001D78
_021AE0EC: .word 0x00003F37
	thumb_func_end FUN_021ADFFC

	thumb_func_start FUN_021AE0F0
FUN_021AE0F0: ; 0x021AE0F0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, _021AE138 ; =0x00001AB8
	ldrb r1, [r4, #4]
	adds r0, r5, r0
	bl FUN_021AE13C
	cmp r0, #0
	beq _021AE134
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BC464
	cmp r0, #0
	beq _021AE134
	adds r0, r6, #0
	bl FUN_021BC46C
	ldrb r2, [r4, #4]
	ldr r0, [r5, #0xc]
	movs r1, #0x4b
	bl FUN_021B1474
	adds r4, #8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AE134:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021AE138: .word 0x00001AB8
	thumb_func_end FUN_021AE0F0

	thumb_func_start FUN_021AE13C
FUN_021AE13C: ; 0x021AE13C
	bx pc
	nop
	thumb_func_end FUN_021AE13C
_021AE140:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AE14C
FUN_021AE14C: ; 0x021AE14C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r2, r1, #0
	ldr r2, [r2]
	adds r5, r0, #0
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1b
	lsls r2, r2, #0x18
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	movs r1, #2
	adds r2, r0, #0
	lsls r1, r1, #0xa
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	add r2, sp, #8
	bl FUN_021ABAE8
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r6, #0
	cmp r0, #0
	bls _021AE20E
_021AE184:
	add r1, sp, #8
	ldrb r1, [r1, r6]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	movs r1, #3
	adds r4, r0, #0
	movs r7, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021AE1A8
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #3
	bl FUN_021A8F70
	movs r7, #1
_021AE1A8:
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021AAA8C
	cmp r0, #0
	beq _021AE1B8
	movs r7, #1
_021AE1B8:
	adds r0, r4, #0
	movs r1, #0x1e
	bl FUN_021BBB04
	cmp r0, #0
	beq _021AE1D2
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x1e
	movs r3, #0
	bl FUN_021A9178
	movs r7, #1
_021AE1D2:
	adds r0, r4, #0
	movs r1, #0x20
	bl FUN_021BBB04
	cmp r0, #0
	beq _021AE1EC
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x20
	movs r3, #0
	bl FUN_021A9178
	movs r7, #1
_021AE1EC:
	cmp r7, #0
	beq _021AE202
	ldr r0, _021AE214 ; =0xFFFF0000
	add r3, sp, #8
	str r0, [sp]
	ldrb r3, [r3, r6]
	ldr r0, [r5, #0xc]
	ldr r2, _021AE218 ; =0x0000043B
	movs r1, #0x5b
	bl FUN_021B1610
_021AE202:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #4]
	cmp r6, r0
	blo _021AE184
_021AE20E:
	movs r0, #1
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AE214: .word 0xFFFF0000
_021AE218: .word 0x0000043B
	thumb_func_end FUN_021AE14C

	thumb_func_start FUN_021AE21C
FUN_021AE21C: ; 0x021AE21C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AE250
	ldr r2, [r4, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A8F70
	cmp r0, #0
	beq _021AE250
	adds r4, #0xc
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AE250:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021AE21C

	thumb_func_start FUN_021AE254
FUN_021AE254: ; 0x021AE254
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r0, [r4, #0xb]
	cmp r0, #0
	beq _021AE26C
	ldr r0, [r5, #0xc]
	movs r1, #0x56
	movs r2, #0
	bl FUN_021B1474
_021AE26C:
	ldrb r0, [r4, #0xa]
	ldrh r1, [r4, #4]
	ldrb r2, [r4, #6]
	str r0, [sp]
	ldrh r0, [r4, #8]
	ldrb r3, [r4, #7]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_021AAC3C
	adds r4, #0xc
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AD520
	movs r0, #1
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021AE254

	thumb_func_start FUN_021AE290
FUN_021AE290: ; 0x021AE290
	push {r3, lr}
	ldr r0, [r0, #0xc]
	movs r1, #0x56
	movs r2, #0
	bl FUN_021B1474
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021AE290

	thumb_func_start FUN_021AE2A0
FUN_021AE2A0: ; 0x021AE2A0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrb r1, [r4, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AE316
	adds r0, r6, #0
	bl FUN_021BC594
	cmp r0, #0
	bne _021AE316
	adds r0, r6, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldrb r0, [r4, #5]
	cmp r1, r0
	beq _021AE316
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AE2E4
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A9574
_021AE2E4:
	ldrb r1, [r4, #5]
	adds r0, r6, #0
	bl FUN_021BBF18
	ldrb r2, [r4, #4]
	ldrb r3, [r4, #5]
	ldr r0, [r5, #0xc]
	movs r1, #0x4f
	bl FUN_021B1474
	adds r1, r4, #0
	adds r0, r5, #0
	adds r1, #8
	bl FUN_021AD520
	ldr r0, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x1f
	beq _021AE312
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021A958C
_021AE312:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AE316:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021AE2A0

	thumb_func_start FUN_021AE31C
FUN_021AE31C: ; 0x021AE31C
	ldrb r2, [r1, #4]
	ldr r1, _021AE328 ; =0x000004A8
	ldr r0, [r0, r1]
	strb r2, [r0, #4]
	movs r0, #1
	bx lr
	.align 2, 0
_021AE328: .word 0x000004A8
	thumb_func_end FUN_021AE31C

	thumb_func_start FUN_021AE32C
FUN_021AE32C: ; 0x021AE32C
	ldr r1, _021AE348 ; =0x000004A8
	ldr r2, [r0, r1]
	ldrb r1, [r2, #5]
	lsls r0, r1, #0x1f
	lsrs r0, r0, #0x1f
	bne _021AE342
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r2, #5]
_021AE342:
	movs r0, #1
	bx lr
	nop
_021AE348: .word 0x000004A8
	thumb_func_end FUN_021AE32C

	thumb_func_start FUN_021AE34C
FUN_021AE34C: ; 0x021AE34C
	push {r3, lr}
	ldr r0, [r0, #4]
	bl FUN_0219C9C8
	cmp r0, #0
	bne _021AE35C
	movs r0, #1
	pop {r3, pc}
_021AE35C:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021AE34C

	thumb_func_start FUN_021AE360
FUN_021AE360: ; 0x021AE360
	ldr r1, _021AE368 ; =0x00002130
	ldr r0, [r0, r1]
	bx lr
	nop
_021AE368: .word 0x00002130
	thumb_func_end FUN_021AE360

	thumb_func_start FUN_021AE36C
FUN_021AE36C: ; 0x021AE36C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r0, #0
	str r2, [sp, #0xc]
	ldr r0, [r4, #4]
	adds r7, r3, #0
	str r1, [sp, #8]
	ldr r5, [sp, #0x28]
	bl FUN_0219BDC0
	str r0, [sp, #0x10]
	ldr r0, [r7, #0x10]
	movs r6, #0x1f
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bne _021AE398
	ldr r1, [sp, #8]
	adds r0, r4, #0
	adds r2, r7, #0
	bl FUN_021AED8C
	adds r6, r0, #0
_021AE398:
	adds r0, r5, #0
	bl FUN_021AE440
	ldr r0, _021AE438 ; =0x0000077F
	movs r1, #6
	strb r1, [r4, r0]
	ldr r0, [sp, #0x10]
	cmp r0, #3
	bhi _021AE3BE
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AE3B6: ; jump table
	.short _021AE3BE - _021AE3B6 - 2 ; case 0
	.short _021AE3C0 - _021AE3B6 - 2 ; case 1
	.short _021AE3D2 - _021AE3B6 - 2 ; case 2
	.short _021AE3E4 - _021AE3B6 - 2 ; case 3
_021AE3BE:
	b _021AE3E4
_021AE3C0:
	str r6, [sp]
	str r5, [sp, #4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	adds r0, r4, #0
	adds r3, r7, #0
	bl FUN_021AE5D0
_021AE3D0:
	b _021AE3F4
_021AE3D2:
	str r6, [sp]
	str r5, [sp, #4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	adds r0, r4, #0
	adds r3, r7, #0
	bl FUN_021AE86C
	b _021AE3D0
_021AE3E4:
	str r6, [sp]
	str r5, [sp, #4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	adds r0, r4, #0
	adds r3, r7, #0
	bl FUN_021AE470
_021AE3F4:
	adds r6, r0, #0
	cmp r6, #1
	bne _021AE430
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021AE450
	cmp r0, #0
	beq _021AE418
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021AE43C ; =0x00001AB8
	adds r0, r4, r0
	bl FUN_021AE460
	ldr r1, _021AE438 ; =0x0000077F
	strb r0, [r4, r1]
_021AE418:
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	ldr r2, [sp, #8]
	adds r0, r4, #0
	adds r3, r7, #0
	str r5, [sp, #4]
	bl FUN_021AEB50
	cmp r0, #0
	bne _021AE430
	movs r6, #0
_021AE430:
	adds r0, r6, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021AE438: .word 0x0000077F
_021AE43C: .word 0x00001AB8
	thumb_func_end FUN_021AE36C

	thumb_func_start FUN_021AE440
FUN_021AE440: ; 0x021AE440
	bx pc
	nop
	thumb_func_end FUN_021AE440
_021AE444:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE450
FUN_021AE450: ; 0x021AE450
	bx pc
	nop
	thumb_func_end FUN_021AE450
_021AE454:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AE460
FUN_021AE460: ; 0x021AE460
	bx pc
	nop
	thumb_func_end FUN_021AE460
_021AE464:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x7D, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AE470
FUN_021AE470: ; 0x021AE470
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r4, r0, #0
	adds r0, r7, #0
	str r3, [sp]
	ldr r5, [sp, #0x20]
	ldr r6, [sp, #0x24]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #4]
	ldr r1, [r4, #8]
	bl FUN_0219C638
	str r0, [sp, #4]
	ldr r0, [sp]
	ldr r0, [r0, #0xc]
	cmp r0, #0xd
	bhi _021AE546
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AE4A4: ; jump table
	.short _021AE4C0 - _021AE4A4 - 2 ; case 0
	.short _021AE4E6 - _021AE4A4 - 2 ; case 1
	.short _021AE546 - _021AE4A4 - 2 ; case 2
	.short _021AE4C0 - _021AE4A4 - 2 ; case 3
	.short _021AE4C0 - _021AE4A4 - 2 ; case 4
	.short _021AE4C0 - _021AE4A4 - 2 ; case 5
	.short _021AE546 - _021AE4A4 - 2 ; case 6
	.short _021AE4E6 - _021AE4A4 - 2 ; case 7
	.short _021AE506 - _021AE4A4 - 2 ; case 8
	.short _021AE4C0 - _021AE4A4 - 2 ; case 9
	.short _021AE546 - _021AE4A4 - 2 ; case 10
	.short _021AE546 - _021AE4A4 - 2 ; case 11
	.short _021AE546 - _021AE4A4 - 2 ; case 12
	.short _021AE526 - _021AE4A4 - 2 ; case 13
_021AE4C0:
	cmp r5, #0x1f
	bne _021AE4D0
	ldr r1, [sp, #4]
	adds r0, r4, #0
	movs r2, #0
	bl FUN_021AECEC
	b _021AE4D8
_021AE4D0:
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_0219D250
_021AE4D8:
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AE54C
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE4E6:
	cmp r5, #0x1f
	bne _021AE4F0
	adds r0, r6, #0
	adds r1, r7, #0
	b _021AE4FC
_021AE4F0:
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r6, #0
_021AE4FC:
	bl FUN_021AE55C
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE506:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AE56C
	ldr r1, [sp, #4]
	adds r0, r4, #0
	movs r2, #0
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AE57C
	add sp, #8
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021AE526:
	cmp r5, #0x1f
	beq _021AE540
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AE58C
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE540:
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AE546:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AE470

	thumb_func_start FUN_021AE54C
FUN_021AE54C: ; 0x021AE54C
	bx pc
	nop
	thumb_func_end FUN_021AE54C
_021AE550:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE55C
FUN_021AE55C: ; 0x021AE55C
	bx pc
	nop
	thumb_func_end FUN_021AE55C
_021AE560:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE56C
FUN_021AE56C: ; 0x021AE56C
	bx pc
	nop
	thumb_func_end FUN_021AE56C
_021AE570:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE57C
FUN_021AE57C: ; 0x021AE57C
	bx pc
	nop
	thumb_func_end FUN_021AE57C
_021AE580:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE58C
FUN_021AE58C: ; 0x021AE58C
	bx pc
	nop
	thumb_func_end FUN_021AE58C
_021AE590:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE59C
FUN_021AE59C: ; 0x021AE59C
	push {r3, r4, r5, lr}
	ldrh r4, [r1]
	adds r5, r0, #0
	ldr r0, [sp, #0x10]
	cmp r4, #0xae
	bne _021AE5CC
	ldr r1, [r1, #0xc]
	cmp r1, #0
	bne _021AE5C2
	cmp r3, r0
	beq _021AE5B6
	cmp r0, #6
	bne _021AE5CC
_021AE5B6:
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	movs r3, #0xae
	bl FUN_021BD924
	pop {r3, r4, r5, pc}
_021AE5C2:
	cmp r1, #7
	bne _021AE5CC
	cmp r3, r0
	beq _021AE5CC
	adds r0, r3, #0
_021AE5CC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021AE59C

	thumb_func_start FUN_021AE5D0
FUN_021AE5D0: ; 0x021AE5D0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r0, #0
	str r2, [sp, #8]
	adds r0, r1, #0
	str r1, [sp, #4]
	str r3, [sp, #0xc]
	ldr r7, [sp, #0x28]
	ldr r5, [sp, #0x2c]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4, #4]
	ldr r1, [r4, #8]
	bl FUN_0219C638
	adds r6, r0, #0
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r2, [sp, #4]
	adds r0, r4, #0
	adds r3, r6, #0
	bl FUN_021AE59C
	adds r1, r0, #0
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0xc]
	cmp r0, #0xd
	bls _021AE60E
	b _021AE75C
_021AE60E:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AE61A: ; jump table
	.short _021AE636 - _021AE61A - 2 ; case 0
	.short _021AE71E - _021AE61A - 2 ; case 1
	.short _021AE732 - _021AE61A - 2 ; case 2
	.short _021AE640 - _021AE61A - 2 ; case 3
	.short _021AE682 - _021AE61A - 2 ; case 4
	.short _021AE658 - _021AE61A - 2 ; case 5
	.short _021AE75C - _021AE61A - 2 ; case 6
	.short _021AE6FE - _021AE61A - 2 ; case 7
	.short _021AE6BC - _021AE61A - 2 ; case 8
	.short _021AE642 - _021AE61A - 2 ; case 9
	.short _021AE75C - _021AE61A - 2 ; case 10
	.short _021AE75C - _021AE61A - 2 ; case 11
	.short _021AE75C - _021AE61A - 2 ; case 12
	.short _021AE748 - _021AE61A - 2 ; case 13
_021AE636:
	ldr r0, [r4, #8]
	bl FUN_0219D1C0
_021AE63C:
	adds r6, r0, #0
	b _021AE762
_021AE640:
	b _021AE636
_021AE642:
	movs r0, #2
	bl FUN_021BD100
	adds r2, r0, #0
	lsls r2, r2, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021AECEC
	b _021AE63C
_021AE658:
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE79C
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE7AC
	add sp, #0x10
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021AE682:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AED1C
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE7BC
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE7CC
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE7DC
	add sp, #0x10
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021AE6BC:
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021AE7EC
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AED1C
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE7FC
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE80C
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE81C
	add sp, #0x10
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021AE6FE:
	cmp r7, #0x1f
	bne _021AE708
	adds r0, r5, #0
	ldr r1, [sp, #4]
	b _021AE714
_021AE708:
	ldr r0, [r4, #8]
	adds r1, r7, #0
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r5, #0
_021AE714:
	bl FUN_021AE82C
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE71E:
	ldr r0, [r4, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE83C
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE732:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AED1C
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021AE84C
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE748:
	cmp r7, #0x1f
	beq _021AE756
	ldr r0, [r4, #8]
	adds r1, r7, #0
	bl FUN_0219D250
	b _021AE63C
_021AE756:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AE75C:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AE762:
	cmp r6, #0
	beq _021AE794
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r1, [sp, #4]
	ldr r2, [sp, #0xc]
	adds r0, r4, #0
	bl FUN_021AED4C
	adds r1, r0, #0
	cmp r1, #0x1f
	beq _021AE786
	ldr r0, [r4, #8]
	bl FUN_0219D250
	adds r6, r0, #0
_021AE786:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AE85C
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AE794:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021AE5D0

	thumb_func_start FUN_021AE79C
FUN_021AE79C: ; 0x021AE79C
	bx pc
	nop
	thumb_func_end FUN_021AE79C
_021AE7A0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7AC
FUN_021AE7AC: ; 0x021AE7AC
	bx pc
	nop
	thumb_func_end FUN_021AE7AC
_021AE7B0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7BC
FUN_021AE7BC: ; 0x021AE7BC
	bx pc
	nop
	thumb_func_end FUN_021AE7BC
_021AE7C0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7CC
FUN_021AE7CC: ; 0x021AE7CC
	bx pc
	nop
	thumb_func_end FUN_021AE7CC
_021AE7D0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7DC
FUN_021AE7DC: ; 0x021AE7DC
	bx pc
	nop
	thumb_func_end FUN_021AE7DC
_021AE7E0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7EC
FUN_021AE7EC: ; 0x021AE7EC
	bx pc
	nop
	thumb_func_end FUN_021AE7EC
_021AE7F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE7FC
FUN_021AE7FC: ; 0x021AE7FC
	bx pc
	nop
	thumb_func_end FUN_021AE7FC
_021AE800:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE80C
FUN_021AE80C: ; 0x021AE80C
	bx pc
	nop
	thumb_func_end FUN_021AE80C
_021AE810:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE81C
FUN_021AE81C: ; 0x021AE81C
	bx pc
	nop
	thumb_func_end FUN_021AE81C
_021AE820:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE82C
FUN_021AE82C: ; 0x021AE82C
	bx pc
	nop
	thumb_func_end FUN_021AE82C
_021AE830:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE83C
FUN_021AE83C: ; 0x021AE83C
	bx pc
	nop
	thumb_func_end FUN_021AE83C
_021AE840:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE84C
FUN_021AE84C: ; 0x021AE84C
	bx pc
	nop
	thumb_func_end FUN_021AE84C
_021AE850:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE85C
FUN_021AE85C: ; 0x021AE85C
	bx pc
	nop
	thumb_func_end FUN_021AE85C
_021AE860:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AE86C
FUN_021AE86C: ; 0x021AE86C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	str r2, [sp, #8]
	adds r0, r1, #0
	str r1, [sp, #4]
	str r3, [sp, #0xc]
	ldr r7, [sp, #0x30]
	ldr r6, [sp, #0x34]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	str r0, [sp, #0x18]
	bl FUN_0219D2FC
	adds r4, r0, #0
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r2, [sp, #4]
	ldr r3, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_021AE59C
	adds r1, r0, #0
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0xc]
	cmp r0, #0xd
	bls _021AE8B0
	b _021AEA50
_021AE8B0:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AE8BC: ; jump table
	.short _021AE8D8 - _021AE8BC - 2 ; case 0
	.short _021AEA14 - _021AE8BC - 2 ; case 1
	.short _021AEA28 - _021AE8BC - 2 ; case 2
	.short _021AE8E2 - _021AE8BC - 2 ; case 3
	.short _021AE920 - _021AE8BC - 2 ; case 4
	.short _021AE8F6 - _021AE8BC - 2 ; case 5
	.short _021AEA50 - _021AE8BC - 2 ; case 6
	.short _021AE9F4 - _021AE8BC - 2 ; case 7
	.short _021AE988 - _021AE8BC - 2 ; case 8
	.short _021AE8E4 - _021AE8BC - 2 ; case 9
	.short _021AEA50 - _021AE8BC - 2 ; case 10
	.short _021AEA50 - _021AE8BC - 2 ; case 11
	.short _021AEA50 - _021AE8BC - 2 ; case 12
	.short _021AEA3C - _021AE8BC - 2 ; case 13
_021AE8D8:
	ldr r0, [r5, #8]
_021AE8DA:
	bl FUN_0219D1C0
_021AE8DE:
	adds r4, r0, #0
	b _021AEA56
_021AE8E2:
	b _021AE8D8
_021AE8E4:
	ldrh r0, [r4]
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r1, r4, r1
	ldr r0, [r5, #8]
	ldrb r1, [r1, #4]
	b _021AE8DA
_021AE8F6:
	ldrh r0, [r4]
	movs r7, #0
	cmp r0, #0
	bls _021AE918
_021AE8FE:
	adds r1, r4, r7
	ldrb r1, [r1, #4]
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEA90
	ldrh r0, [r4]
	adds r7, r7, #1
	cmp r7, r0
	blo _021AE8FE
_021AE918:
	lsls r0, r0, #0x18
	add sp, #0x1c
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, r7, pc}
_021AE920:
	movs r0, #0
	str r0, [sp, #0x10]
	ldrh r0, [r4]
	movs r7, #0
	cmp r0, #0
	bls _021AE94E
_021AE92C:
	ldr r1, [sp, #0x10]
	ldr r0, [r5, #8]
	adds r1, r4, r1
	ldrb r1, [r1, #4]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEAA0
	ldr r0, [sp, #0x10]
	ldrh r1, [r4]
	adds r0, r0, #1
	adds r7, r7, #1
	str r0, [sp, #0x10]
	cmp r0, r1
	blo _021AE92C
_021AE94E:
	movs r0, #0
	str r0, [sp, #0x14]
	ldrh r0, [r4, #2]
	cmp r0, #0
	bls _021AE980
_021AE958:
	ldr r0, [sp, #0x14]
	adds r0, r4, r0
	ldrb r1, [r0, #7]
	ldr r0, [sp, #0x18]
	cmp r0, r1
	beq _021AE974
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEAB0
	adds r7, r7, #1
_021AE974:
	ldr r0, [sp, #0x14]
	ldrh r1, [r4, #2]
	adds r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, r1
	blo _021AE958
_021AE980:
	lsls r0, r7, #0x18
	add sp, #0x1c
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, r7, pc}
_021AE988:
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021AEAC0
	movs r4, #0
_021AE992:
	lsls r1, r4, #0x18
	ldr r0, [sp, #0x18]
	lsrs r1, r1, #0x18
	bl FUN_0219C4E4
	adds r1, r0, #0
	ldr r0, [sp, #0x18]
	cmp r1, r0
	beq _021AE9B2
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEAD0
_021AE9B2:
	adds r4, r4, #1
	cmp r4, #3
	blo _021AE992
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	movs r2, #0
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEAE0
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	movs r2, #1
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEAF0
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	movs r2, #2
	bl FUN_021AECEC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEB00
	add sp, #0x1c
	movs r0, #6
	pop {r4, r5, r6, r7, pc}
_021AE9F4:
	cmp r7, #0x1f
	bne _021AE9FE
	adds r0, r6, #0
	ldr r1, [sp, #4]
	b _021AEA0A
_021AE9FE:
	ldr r0, [r5, #8]
	adds r1, r7, #0
	bl FUN_0219D250
	adds r1, r0, #0
	adds r0, r6, #0
_021AEA0A:
	bl FUN_021AEB10
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AEA14:
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEB20
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AEA28:
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021AEB30
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AEA3C:
	cmp r7, #0x1f
	beq _021AEA4A
	ldr r0, [r5, #8]
	adds r1, r7, #0
	bl FUN_0219D250
	b _021AE8DE
_021AEA4A:
	add sp, #0x1c
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AEA50:
	add sp, #0x1c
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AEA56:
	cmp r4, #0
	beq _021AEA88
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r1, [sp, #4]
	ldr r2, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021AED4C
	adds r1, r0, #0
	cmp r1, #0x1f
	beq _021AEA7A
	ldr r0, [r5, #8]
	bl FUN_0219D250
	adds r4, r0, #0
_021AEA7A:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AEB40
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AEA88:
	movs r0, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021AE86C

	thumb_func_start FUN_021AEA90
FUN_021AEA90: ; 0x021AEA90
	bx pc
	nop
	thumb_func_end FUN_021AEA90
_021AEA94:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAA0
FUN_021AEAA0: ; 0x021AEAA0
	bx pc
	nop
	thumb_func_end FUN_021AEAA0
_021AEAA4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAB0
FUN_021AEAB0: ; 0x021AEAB0
	bx pc
	nop
	thumb_func_end FUN_021AEAB0
_021AEAB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAC0
FUN_021AEAC0: ; 0x021AEAC0
	bx pc
	nop
	thumb_func_end FUN_021AEAC0
_021AEAC4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAD0
FUN_021AEAD0: ; 0x021AEAD0
	bx pc
	nop
	thumb_func_end FUN_021AEAD0
_021AEAD4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAE0
FUN_021AEAE0: ; 0x021AEAE0
	bx pc
	nop
	thumb_func_end FUN_021AEAE0
_021AEAE4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEAF0
FUN_021AEAF0: ; 0x021AEAF0
	bx pc
	nop
	thumb_func_end FUN_021AEAF0
_021AEAF4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB00
FUN_021AEB00: ; 0x021AEB00
	bx pc
	nop
	thumb_func_end FUN_021AEB00
_021AEB04:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB10
FUN_021AEB10: ; 0x021AEB10
	bx pc
	nop
	thumb_func_end FUN_021AEB10
_021AEB14:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB20
FUN_021AEB20: ; 0x021AEB20
	bx pc
	nop
	thumb_func_end FUN_021AEB20
_021AEB24:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB30
FUN_021AEB30: ; 0x021AEB30
	bx pc
	nop
	thumb_func_end FUN_021AEB30
_021AEB34:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB40
FUN_021AEB40: ; 0x021AEB40
	bx pc
	nop
	thumb_func_end FUN_021AEB40
_021AEB44:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AEB50
FUN_021AEB50: ; 0x021AEB50
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	ldr r0, [sp, #0x34]
	adds r4, r2, #0
	str r0, [sp, #0x34]
	adds r0, r1, #0
	adds r5, r3, #0
	bl FUN_021BD768
	cmp r0, #1
	bls _021AEB9E
	ldr r0, [sp, #0x34]
	bl FUN_021AECAC
	cmp r0, #1
	bne _021AEB9E
	ldr r0, [sp, #0x34]
	movs r1, #0
	bl FUN_021AECBC
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AEB9E
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, [sp, #4]
	bl FUN_0219D340
	cmp r0, #0
	beq _021AEBA0
_021AEB9E:
	b _021AECA6
_021AEBA0:
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl FUN_0219C638
	adds r4, r0, #0
	ldr r0, [sp, #0x34]
	adds r1, r6, #0
	bl FUN_021AECCC
	ldrh r0, [r5]
	movs r1, #0xb
	movs r5, #0xb
	bl FUN_0202143C
	cmp r0, #0
	beq _021AEBD0
	movs r0, #6
	lsls r0, r0, #8
	orrs r0, r4
	b _021AEBD6
_021AEBD0:
	adds r5, #0xf5
	adds r0, r4, #0
	orrs r0, r5
_021AEBD6:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [r7, #4]
	add r2, sp, #8
	bl FUN_0219C024
	movs r2, #0
	str r0, [sp]
	adds r4, r2, #0
	add r1, sp, #0x10
_021AEBEA:
	lsls r0, r2, #2
	str r4, [r1, r0]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	blo _021AEBEA
	ldr r0, [sp]
	adds r5, r4, #0
	cmp r0, #0
	bls _021AEC30
_021AEC00:
	add r1, sp, #8
	ldrb r1, [r1, r5]
	ldr r0, [r7, #8]
	lsls r6, r4, #2
	bl FUN_0219D1C0
	add r1, sp, #0x10
	str r0, [r1, r6]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AEC24
	add r0, sp, #8
	ldrb r1, [r0, r5]
	strb r1, [r0, r4]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021AEC24:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp]
	cmp r5, r0
	blo _021AEC00
_021AEC30:
	cmp r4, #0
	bne _021AEC3A
	add sp, #0x1c
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AEC3A:
	cmp r4, #2
	beq _021AEC42
_021AEC3E:
	movs r0, #0
	b _021AEC90
_021AEC42:
	add r0, sp, #0x30
	ldrb r1, [r0]
	add r0, sp, #8
	ldrb r0, [r0]
	subs r4, r0, r1
	bpl _021AEC54
	movs r0, #0
	mvns r0, r0
	muls r4, r0, r4
_021AEC54:
	add r0, sp, #8
	ldrb r0, [r0, #1]
	subs r0, r0, r1
	bpl _021AEC62
	movs r1, #0
	mvns r1, r1
	muls r0, r1, r0
_021AEC62:
	cmp r4, r0
	bne _021AEC78
	ldr r0, [sp, #0x10]
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r4, r0, #0
	ldr r0, [sp, #0x14]
	movs r1, #0xd
	bl FUN_021BB1F4
_021AEC78:
	cmp r4, r0
	bge _021AEC7E
	b _021AEC3E
_021AEC7E:
	cmp r0, r4
	bge _021AEC86
	movs r0, #1
	b _021AEC90
_021AEC86:
	movs r0, #2
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_021AEC90:
	lsls r1, r0, #2
	add r0, sp, #0x10
	ldr r1, [r0, r1]
	cmp r1, #0
	beq _021AECA6
	ldr r0, [sp, #0x34]
	bl FUN_021AECDC
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AECA6:
	movs r0, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AEB50

	thumb_func_start FUN_021AECAC
FUN_021AECAC: ; 0x021AECAC
	bx pc
	nop
	thumb_func_end FUN_021AECAC
_021AECB0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC1, 0xCE, 0x89, 0x06

	thumb_func_start FUN_021AECBC
FUN_021AECBC: ; 0x021AECBC
	bx pc
	nop
	thumb_func_end FUN_021AECBC
_021AECC0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF9, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AECCC
FUN_021AECCC: ; 0x021AECCC
	bx pc
	nop
	thumb_func_end FUN_021AECCC
_021AECD0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCD, 0x89, 0x06

	thumb_func_start FUN_021AECDC
FUN_021AECDC: ; 0x021AECDC
	bx pc
	nop
	thumb_func_end FUN_021AECDC
_021AECE0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021AECEC
FUN_021AECEC: ; 0x021AECEC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219C4FC
	adds r1, r0, #0
	add r2, sp, #0
	ldr r0, [r4, #4]
	adds r2, #1
	add r3, sp, #0
	bl FUN_0219C6D4
	ldr r0, [r4]
	add r4, sp, #0
	ldrb r1, [r4, #1]
	bl FUN_0219F2A0
	ldrb r1, [r4]
	ldr r0, [r0, #4]
	bl FUN_0219D524
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AECEC

	thumb_func_start FUN_021AED1C
FUN_021AED1C: ; 0x021AED1C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0219C55C
	adds r1, r0, #0
	add r2, sp, #0
	ldr r0, [r4, #4]
	adds r2, #1
	add r3, sp, #0
	bl FUN_0219C6D4
	ldr r0, [r4]
	add r4, sp, #0
	ldrb r1, [r4, #1]
	bl FUN_0219F2A0
	ldrb r1, [r4]
	ldr r0, [r0, #4]
	bl FUN_0219D524
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AED1C

	thumb_func_start FUN_021AED4C
FUN_021AED4C: ; 0x021AED4C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021AED84 ; =0x00001D78
	adds r4, r1, #0
	ldr r1, _021AED88 ; =0x0000026B
	adds r6, r2, #0
	adds r7, r3, #0
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021AEDEC
	adds r4, r0, #0
	ldr r0, _021AED84 ; =0x00001D78
	ldr r2, _021AED88 ; =0x0000026B
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r2, #2
	bl FUN_021B0910
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AED84: .word 0x00001D78
_021AED88: .word 0x0000026B
	thumb_func_end FUN_021AED4C

	thumb_func_start FUN_021AED8C
FUN_021AED8C: ; 0x021AED8C
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021AEDE8 ; =0x0000027F
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, r4, #0
	adds r5, r2, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrb r1, [r5, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldrh r1, [r5]
	movs r0, #0x12
	bl FUN_021BCE40
	movs r0, #4
	movs r1, #0x1f
	bl FUN_021BCE84
	movs r0, #0x50
	movs r1, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x29
	bl FUN_021BC940
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	adds r4, #8
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl FUN_021BCD94
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AEDE8: .word 0x0000027F
	thumb_func_end FUN_021AED8C

	thumb_func_start FUN_021AEDEC
FUN_021AEDEC: ; 0x021AEDEC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0xa6
	adds r7, r1, #0
	lsls r0, r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCD48
	adds r0, r7, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021BCE40
	ldrb r1, [r5, #6]
	movs r0, #0x16
	bl FUN_021BCE40
	ldrh r1, [r5]
	movs r0, #0x12
	bl FUN_021BCE40
	movs r0, #4
	adds r1, r4, #0
	bl FUN_021BCE84
	adds r0, r6, #0
	movs r1, #0x2a
	bl FUN_021BC940
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #0xa6
	lsls r0, r0, #2
	adds r0, r0, #7
	bl FUN_021BCD94
	cmp r5, r4
	bne _021AEE46
	movs r5, #0x1f
_021AEE46:
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021AEDEC

	thumb_func_start FUN_021AEE4C
FUN_021AEE4C: ; 0x021AEE4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	str r0, [sp]
	ldr r0, [r0, #4]
	str r1, [sp, #4]
	str r2, [sp, #8]
	adds r5, r3, #0
	bl FUN_0219E350
	str r0, [sp, #0x2c]
	movs r2, #0x4f
	ldr r1, [sp, #0x2c]
	lsls r2, r2, #2
	ldrsb r1, [r1, r2]
	ldr r0, [sp, #8]
	bl FUN_021BD708
	str r0, [sp, #0x28]
	ldr r0, [sp, #4]
	bl FUN_0219D4C8
	str r0, [sp, #0x24]
	ldr r0, [sp]
	movs r7, #0
	ldr r0, [r0, #4]
	bl FUN_0219BF14
	cmp r0, #1
	bne _021AEE94
	ldr r1, [sp, #0x28]
	movs r0, #0xf
	muls r0, r1, r0
	movs r1, #0xa
	blx FUN_0208D894
	str r0, [sp, #0x28]
_021AEE94:
	movs r6, #0
	adds r4, r6, #0
_021AEE98:
	movs r0, #0xc
	muls r0, r6, r0
	adds r0, r5, r0
	adds r1, r4, #0
	movs r2, #0xc
	blx FUN_020787D4
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #6
	blo _021AEE98
	ldr r0, [sp, #0x24]
	cmp r0, #0
	bls _021AEEE6
_021AEEB6:
	lsls r1, r4, #0x18
	ldr r0, [sp, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AEEDA
	adds r0, r6, #0
	bl FUN_021BB380
	cmp r0, #0xd8
	bne _021AEEDA
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_021AEEDA:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x24]
	cmp r4, r0
	blo _021AEEB6
_021AEEE6:
	cmp r7, #0
	beq _021AEF38
	ldr r0, [sp, #0x28]
	ldr r1, [sp, #0x28]
	lsrs r0, r0, #1
	subs r1, r1, r0
	str r1, [sp, #0x28]
	adds r1, r7, #0
	blx FUN_0208D894
	adds r7, r0, #0
	bne _021AEF00
	movs r7, #1
_021AEF00:
	ldr r0, [sp, #0x24]
	movs r4, #0
	cmp r0, #0
	bls _021AEF38
_021AEF08:
	lsls r1, r4, #0x18
	ldr r0, [sp, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AEF2C
	adds r0, r6, #0
	bl FUN_021BB380
	cmp r0, #0xd8
	bne _021AEF2C
	movs r0, #0xc
	muls r0, r4, r0
	str r7, [r5, r0]
_021AEF2C:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x24]
	cmp r4, r0
	blo _021AEF08
_021AEF38:
	ldr r0, [sp, #8]
	bl FUN_021BC644
	adds r7, r0, #0
	movs r6, #0
	movs r4, #0
	cmp r7, #0
	ble _021AEF74
_021AEF48:
	lsls r1, r4, #0x18
	ldr r0, [sp, #8]
	lsrs r1, r1, #0x18
	bl FUN_021BC64C
	adds r1, r0, #0
	ldr r0, [sp]
	ldr r0, [r0, #8]
	bl FUN_0219D250
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AEF6A
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_021AEF6A:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r7
	blt _021AEF48
_021AEF74:
	ldr r0, [sp, #0x28]
	adds r1, r6, #0
	blx FUN_0208D894
	str r0, [sp, #0x20]
	cmp r0, #0
	bne _021AEF86
	movs r0, #1
	str r0, [sp, #0x20]
_021AEF86:
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x24]
	cmp r0, #0
	bls _021AEFEC
_021AEF90:
	ldr r1, [sp, #0x10]
	ldr r0, [sp, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AEFDC
	adds r0, r4, #0
	bl FUN_021BAC80
	movs r4, #0
	str r0, [sp, #0xc]
	cmp r7, #0
	bls _021AEFDC
	ldr r1, [sp, #0x10]
	movs r0, #0xc
	adds r6, r1, #0
	muls r6, r0, r6
_021AEFBC:
	ldr r0, [sp, #8]
	adds r1, r4, #0
	bl FUN_021BC64C
	ldr r1, [sp, #0xc]
	cmp r1, r0
	bne _021AEFD2
	ldr r1, [r5, r6]
	ldr r0, [sp, #0x20]
	adds r0, r1, r0
	str r0, [r5, r6]
_021AEFD2:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r7
	blo _021AEFBC
_021AEFDC:
	ldr r0, [sp, #0x10]
	adds r0, r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x24]
	cmp r1, r0
	blo _021AEF90
_021AEFEC:
	ldr r0, [sp, #0x24]
	movs r6, #0
	cmp r0, #0
	bls _021AF0CC
_021AEFF4:
	movs r0, #0xc
	muls r0, r6, r0
	adds r4, r5, r0
	ldr r0, [r5, r0]
	cmp r0, #0
	beq _021AF0C0
	ldr r0, [sp]
	ldr r0, [r0, #4]
	bl FUN_0219BFA8
	str r0, [sp, #0x1c]
	lsls r1, r6, #0x18
	ldr r0, [sp, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r7, r0, #0
	bl FUN_021BB084
	str r0, [sp, #0x18]
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	ldr r0, [sp, #8]
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #0x4f
	ldr r1, [sp, #0x2c]
	lsls r0, r0, #2
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _021AF050
	bge _021AF046
	rsbs r0, r0, #0
_021AF046:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_021AF050:
	ldr r1, [r4]
	ldr r2, [sp, #0x14]
	adds r0, r7, #0
	bl FUN_021AF10C
	str r0, [r4]
	ldr r0, [sp, #0x18]
	ldr r1, [sp, #0x1c]
	bl FUN_0201D4DC
	cmp r0, #0
	bne _021AF094
	ldr r0, [sp, #0x18]
	movs r1, #0xc
	movs r2, #0
	bl FUN_0201CD24
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x1c]
	bl FUN_02008C04
	ldr r1, [sp, #0x30]
	cmp r1, r0
	beq _021AF084
	ldr r1, _021AF104 ; =0x00001B33
	b _021AF088
_021AF084:
	movs r1, #6
	lsls r1, r1, #0xa
_021AF088:
	ldr r0, [r4]
	bl FUN_021BD364
	str r0, [r4]
	movs r0, #1
	strb r0, [r4, #4]
_021AF094:
	adds r0, r7, #0
	bl FUN_021BB380
	cmp r0, #0xe7
	bne _021AF0AE
	movs r1, #6
	ldr r0, [r4]
	lsls r1, r1, #0xa
	bl FUN_021BD364
	str r0, [r4]
	movs r0, #1
	strb r0, [r4, #4]
_021AF0AE:
	ldr r0, [r4]
	bl FUN_020137F0
	ldr r1, _021AF108 ; =0x000186A0
	str r0, [r4]
	cmp r0, r1
	bls _021AF0C0
	adds r0, r1, #0
	str r0, [r4]
_021AF0C0:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, [sp, #0x24]
	cmp r6, r0
	blo _021AEFF4
_021AF0CC:
	ldr r0, [sp, #0x24]
	movs r4, #0
	cmp r0, #0
	bls _021AF0FE
	movs r7, #0xc
_021AF0D6:
	adds r6, r4, #0
	muls r6, r7, r6
	ldr r0, [r5, r6]
	cmp r0, #0
	beq _021AF0F2
	lsls r1, r4, #0x18
	ldr r0, [sp, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D524
	ldr r1, [sp, #8]
	adds r2, r5, r6
	bl FUN_021AF1AC
_021AF0F2:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x24]
	cmp r4, r0
	blo _021AF0D6
_021AF0FE:
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_021AF104: .word 0x00001B33
_021AF108: .word 0x000186A0
	thumb_func_end FUN_021AEE4C

	thumb_func_start FUN_021AF10C
FUN_021AF10C: ; 0x021AF10C
	push {r3, r4, r5, r6, r7, lr}
	lsls r5, r3, #1
	adds r4, r3, r2
	adds r5, #0xa
	adds r7, r0, #0
	adds r4, #0xa
	str r1, [sp]
	cmp r5, #0
	beq _021AF130
	lsls r0, r5, #0xc
	blx FUN_0208D3E8
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021AF13E
_021AF130:
	lsls r0, r5, #0xc
	blx FUN_0208D3E8
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021AF13E:
	blx FUN_0208DA78
	bl FUN_02073E54
	adds r1, r5, #0
	muls r1, r5, r1
	muls r0, r1, r0
	lsrs r5, r0, #0xc
	cmp r4, #0
	beq _021AF164
	lsls r0, r4, #0xc
	blx FUN_0208D3E8
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021AF172
_021AF164:
	lsls r0, r4, #0xc
	blx FUN_0208D3E8
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021AF172:
	blx FUN_0208DA78
	bl FUN_02073E54
	adds r6, r0, #0
	adds r0, r4, #0
	muls r0, r4, r0
	adds r4, r0, #0
	ldr r0, [sp]
	movs r1, #0
	adds r2, r5, #0
	movs r3, #0
	blx FUN_0208D638
	adds r2, r4, #0
	muls r2, r6, r2
	lsrs r2, r2, #0xc
	movs r3, #0
	blx FUN_0208D5F0
	adds r4, r0, #1
	adds r0, r7, #0
	bl FUN_021BC3AC
	cmp r4, r0
	bls _021AF1A8
	adds r4, r0, #0
_021AF1A8:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021AF10C

	thumb_func_start FUN_021AF1AC
FUN_021AF1AC: ; 0x021AF1AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r4, #0
	adds r5, r2, #0
	bl FUN_021BAC84
	adds r7, r0, #0
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r4, #0
_021AF1CC:
	movs r2, #6
	adds r3, r4, #0
	muls r3, r2, r3
	ldr r2, _021AF2E8 ; =0x021D6D3C
	adds r0, r7, #0
	ldrb r2, [r2, r3]
	adds r1, r6, #0
	bl FUN_0201EF48
	add r1, sp, #0xc
	strb r0, [r1, r4]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #6
	blo _021AF1CC
	ldr r0, [sp]
	adds r6, r1, #0
	bl FUN_021BB380
	cmp r0, #0xd7
	bne _021AF20A
	movs r1, #0
_021AF1FA:
	ldrb r0, [r6, r1]
	lsls r0, r0, #1
	strb r0, [r6, r1]
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #6
	blo _021AF1FA
_021AF20A:
	movs r4, #0
_021AF20C:
	movs r0, #6
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021AF2E8 ; =0x021D6D3C
	adds r0, r0, r1
	ldrh r7, [r0, #4]
	ldr r0, [sp]
	bl FUN_021BB380
	cmp r7, r0
	bne _021AF234
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021BD8C4
	lsls r0, r0, #0x18
	ldrb r1, [r6, r4]
	lsrs r0, r0, #0x18
	adds r0, r1, r0
	strb r0, [r6, r4]
_021AF234:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #6
	blo _021AF20C
	ldr r0, [sp]
	bl FUN_021BB084
	adds r7, r0, #0
	bl FUN_0201CC38
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0x97
	movs r2, #0
	movs r4, #0
	bl FUN_0201CD24
	cmp r0, #0
	beq _021AF26E
	add r0, sp, #0xc
_021AF25E:
	ldrb r1, [r0, r4]
	lsls r1, r1, #1
	strb r1, [r0, r4]
	adds r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	cmp r4, #6
	blo _021AF25E
_021AF26E:
	movs r6, #0
_021AF270:
	add r0, sp, #0xc
	ldrb r4, [r0, r6]
	cmp r4, #0
	beq _021AF2D2
	movs r0, #6
	adds r1, r6, #0
	muls r1, r0, r1
	ldr r0, _021AF2E8 ; =0x021D6D3C
	movs r2, #0
	adds r0, r0, r1
	ldrh r0, [r0, #2]
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	bl FUN_0201CD24
	adds r2, r4, r0
	cmp r2, #0xff
	bls _021AF298
	movs r2, #0xff
_021AF298:
	ldr r1, [sp, #4]
	adds r0, r7, #0
	bl FUN_0201CD48
	cmp r6, #5
	bhi _021AF2D2
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AF2B0: ; jump table
	.short _021AF2BC - _021AF2B0 - 2 ; case 0
	.short _021AF2C0 - _021AF2B0 - 2 ; case 1
	.short _021AF2C4 - _021AF2B0 - 2 ; case 2
	.short _021AF2C8 - _021AF2B0 - 2 ; case 3
	.short _021AF2CC - _021AF2B0 - 2 ; case 4
	.short _021AF2D0 - _021AF2B0 - 2 ; case 5
_021AF2BC:
	strb r4, [r5, #5]
	b _021AF2D2
_021AF2C0:
	strb r4, [r5, #6]
	b _021AF2D2
_021AF2C4:
	strb r4, [r5, #7]
	b _021AF2D2
_021AF2C8:
	strb r4, [r5, #8]
	b _021AF2D2
_021AF2CC:
	strb r4, [r5, #9]
	b _021AF2D2
_021AF2D0:
	strb r4, [r5, #0xa]
_021AF2D2:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #6
	blo _021AF270
	ldr r1, [sp, #8]
	adds r0, r7, #0
	bl FUN_0201CC78
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021AF2E8: .word 0x021D6D3C
	thumb_func_end FUN_021AF1AC

	thumb_func_start FUN_021AF2EC
FUN_021AF2EC: ; 0x021AF2EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	str r3, [sp, #0x10]
	ldr r6, [sp, #0x58]
	adds r5, r0, #0
	adds r0, r1, #0
	str r1, [sp, #0xc]
	adds r4, r2, #0
	bl FUN_021BAC80
	bl FUN_0219C688
	str r0, [sp, #0x34]
	movs r0, #0
	movs r7, #0
	str r0, [sp, #0x28]
	cmp r6, #6
	beq _021AF366
	ldr r0, [r5, #8]
	ldr r1, [sp, #0x34]
	bl FUN_0219D408
	str r0, [sp, #0x38]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x34]
	bl FUN_0219D2D4
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x38]
	adds r1, r6, #0
	bl FUN_0219D524
	str r0, [sp, #0x28]
	bl FUN_021BAC80
	str r0, [sp, #0x30]
	ldr r0, _021AF5C0 ; =0x00001AB8
	ldr r1, [sp, #0x30]
	adds r0, r5, r0
	bl FUN_021AF5EC
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x3c]
	cmp r6, r0
	blo _021AF348
	movs r7, #2
_021AF348:
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x2c]
	ldr r0, [r5, #4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021AF366
	ldr r0, [sp, #0x2c]
	cmp r0, #2
	bne _021AF366
	cmp r6, #3
	bhs _021AF366
	movs r0, #1
	str r0, [sp, #0x2c]
_021AF366:
	ldr r0, [r5, #0x18]
	cmp r0, #1
	beq _021AF3C4
	ldr r0, _021AF5C4 ; =0xFFFF0000
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x34]
	movs r1, #0x5a
	movs r2, #0x21
	bl FUN_021B1610
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BD8C4
	cmp r0, #4
	bne _021AF3A8
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021AF5FC
	cmp r0, #0
	beq _021AF3A2
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x34]
	adds r2, r4, #0
	bl FUN_0219C93C
_021AF3A2:
	add sp, #0x44
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AF3A8:
	adds r0, r4, #0
	movs r1, #7
	bl FUN_021BD8C4
	cmp r0, #3
	bne _021AF3EE
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x34]
	adds r2, r4, #0
	bl FUN_0219C93C
	add sp, #0x44
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AF3C4:
	ldr r0, [sp, #0x30]
	movs r1, #0x5a
	str r0, [sp]
	ldr r0, _021AF5C4 ; =0xFFFF0000
	str r4, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x34]
	movs r2, #0x24
	bl FUN_021B1610
	ldr r0, [r5, #4]
	bl FUN_0219C8A0
	ldr r1, [sp, #0x34]
	cmp r1, r0
	bne _021AF3EE
	ldr r0, [r5, #4]
	movs r1, #0x6f
	bl FUN_0219DB10
_021AF3EE:
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	bne _021AF3FE
	ldr r0, [sp, #0x20]
	cmp r0, #6
	beq _021AF3FE
	movs r0, #1
	b _021AF400
_021AF3FE:
	movs r0, #0
_021AF400:
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _021AF450
	movs r7, #0
_021AF40A:
	ldr r0, _021AF5C8 ; =0x021D6D60
	lsls r1, r7, #3
	adds r6, r0, r1
	ldrb r1, [r6, #3]
	cmp r1, #0
	beq _021AF41C
	ldrh r0, [r6]
	cmp r4, r0
	beq _021AF42C
_021AF41C:
	cmp r1, #0
	bne _021AF44A
	ldrh r1, [r6]
	adds r0, r4, #0
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021AF44A
_021AF42C:
	ldrb r0, [r6, #2]
	cmp r0, #0
	bne _021AF438
_021AF432:
	movs r0, #1
	str r0, [sp, #0x14]
	b _021AF450
_021AF438:
	cmp r0, #1
	bne _021AF44A
	ldr r0, [sp, #0x2c]
	cmp r0, #2
	bhs _021AF44A
	ldr r0, [sp, #0x20]
	cmp r0, #6
	beq _021AF44A
	b _021AF432
_021AF44A:
	adds r7, r7, #1
	cmp r7, #0x17
	blo _021AF40A
_021AF450:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _021AF468
	ldr r0, [r5, #0xc]
	ldr r3, _021AF5C4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0xc4
	bl FUN_021B1610
	add sp, #0x44
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AF468:
	ldr r0, [r5, #0x18]
	cmp r0, #1
	bne _021AF50C
	ldr r0, [sp, #0x20]
	cmp r0, #6
	beq _021AF480
	ldr r0, [r5, #0xc]
	ldr r2, [sp, #0x20]
	ldr r3, _021AF5CC ; =0x00000282
	movs r1, #0x4d
	bl FUN_021B1474
_021AF480:
	ldr r2, _021AF5C8 ; =0x021D6D60
	movs r0, #0
_021AF484:
	lsls r6, r0, #3
	adds r3, r2, r6
	ldrb r1, [r3, #3]
	cmp r1, #0
	beq _021AF506
	ldrh r1, [r3]
	cmp r4, r1
	bne _021AF506
	ldr r1, [sp, #0x30]
	adds r0, r5, #0
	movs r7, #0
	bl FUN_021ABEB8
	cmp r0, #0
	bne _021AF4E6
	ldr r0, [r5, #0xc]
	movs r1, #0x4d
	bl FUN_021B14C0
	adds r2, r4, #0
	ldr r4, _021AF5D0 ; =0x021D6D64
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x28]
	str r0, [sp]
	ldr r4, [r4, r6]
	adds r0, r5, #0
	movs r3, #0
	blx r4
	adds r7, r0, #0
	cmp r7, #1
	bne _021AF4E6
	ldr r4, _021AF5D4 ; =0x0000025E
	ldr r1, [sp, #0x40]
	str r4, [sp]
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x20]
	movs r2, #0x4d
	bl FUN_021B152C
	subs r4, #0x28
	ldr r0, [r5, #0xc]
	movs r1, #0x4c
	adds r2, r4, #0
	bl FUN_021B1474
	add sp, #0x44
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AF4E6:
	cmp r7, #0
	bne _021AF4F6
	ldr r0, [r5, #0xc]
	ldr r3, _021AF5C4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x44
	bl FUN_021B1610
_021AF4F6:
	ldr r0, [r5, #0xc]
	ldr r2, _021AF5D8 ; =0x00000236
	movs r1, #0x4c
	bl FUN_021B1474
	add sp, #0x44
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021AF506:
	adds r0, r0, #1
	cmp r0, #0x17
	blo _021AF484
_021AF50C:
	movs r0, #0
	str r0, [sp, #0x1c]
	ldr r0, [r5, #0xc]
	movs r1, #0x4d
	bl FUN_021B14C0
	str r0, [sp, #0x18]
	ldr r0, _021AF5DC ; =0x00001D78
	ldr r1, _021AF5E0 ; =0x000004D7
	adds r0, r5, r0
	bl FUN_021B088C
	str r0, [sp, #0x24]
	movs r7, #0
_021AF528:
	ldr r0, _021AF5C8 ; =0x021D6D60
	lsls r1, r7, #3
	adds r6, r0, r1
	ldr r2, _021AF5C8 ; =0x021D6D60
	adds r0, r4, #0
	ldrh r1, [r2, r1]
	bl FUN_021BD8C4
	adds r3, r0, #0
	beq _021AF552
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x28]
	str r0, [sp]
	ldr r6, [r6, #4]
	adds r0, r5, #0
	adds r2, r4, #0
	blx r6
	cmp r0, #0
	beq _021AF552
	movs r0, #1
	str r0, [sp, #0x1c]
_021AF552:
	adds r7, r7, #1
	cmp r7, #0x17
	blo _021AF528
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _021AF598
	ldr r0, [sp, #0x20]
	cmp r0, #6
	beq _021AF568
	ldr r0, _021AF5D4 ; =0x0000025E
	b _021AF56A
_021AF568:
	ldr r0, _021AF5E4 ; =0x00000292
_021AF56A:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, [r5, #0xc]
	ldr r1, [sp, #0x18]
	ldr r3, [sp, #0x20]
	movs r2, #0x4d
	bl FUN_021B152C
	ldr r0, [r5, #0x18]
	cmp r0, #1
	beq _021AF5A4
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x34]
	adds r2, r4, #0
	bl FUN_0219C93C
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x28]
	adds r2, r4, #0
	bl FUN_0219DBBC
	b _021AF5A4
_021AF598:
	ldr r0, [r5, #0xc]
	ldr r3, _021AF5C4 ; =0xFFFF0000
	movs r1, #0x5a
	movs r2, #0x44
	bl FUN_021B1610
_021AF5A4:
	ldr r0, _021AF5DC ; =0x00001D78
	ldr r1, [sp, #0x24]
	ldr r2, _021AF5E8 ; =0x000004F4
	adds r0, r5, r0
	bl FUN_021B0910
	ldr r0, [r5, #0xc]
	ldr r2, _021AF5D8 ; =0x00000236
	movs r1, #0x4c
	bl FUN_021B1474
	movs r0, #0
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021AF5C0: .word 0x00001AB8
_021AF5C4: .word 0xFFFF0000
_021AF5C8: .word 0x021D6D60
_021AF5CC: .word 0x00000282
_021AF5D0: .word 0x021D6D64
_021AF5D4: .word 0x0000025E
_021AF5D8: .word 0x00000236
_021AF5DC: .word 0x00001D78
_021AF5E0: .word 0x000004D7
_021AF5E4: .word 0x00000292
_021AF5E8: .word 0x000004F4
	thumb_func_end FUN_021AF2EC

	thumb_func_start FUN_021AF5EC
FUN_021AF5EC: ; 0x021AF5EC
	bx pc
	nop
	thumb_func_end FUN_021AF5EC
_021AF5F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AF5FC
FUN_021AF5FC: ; 0x021AF5FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #0x18]
	str r2, [sp, #0x14]
	adds r0, r1, #0
	str r1, [sp, #0x10]
	movs r7, #6
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0219C638
	adds r2, r0, #0
	lsls r1, r7, #8
	orrs r1, r2
	lsls r1, r1, #0x10
	add r2, sp, #0x1c
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x10
	adds r2, #2
	bl FUN_0219C024
	adds r6, r0, #0
	movs r4, #0
	cmp r6, #0
	bls _021AF660
_021AF638:
	add r1, sp, #0x1c
	adds r1, #2
	ldrb r1, [r1, r4]
	ldr r0, [r5, #8]
	bl FUN_0219D1C0
	str r0, [sp, #0x18]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AF656
	add r0, sp, #0x1c
	adds r0, #2
	ldrb r7, [r0, r4]
	b _021AF660
_021AF656:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021AF638
_021AF660:
	ldr r0, [r5, #4]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021AF6D4
	cmp r7, #6
	beq _021AF6CE
	add r0, sp, #0x1c
	adds r0, #1
	str r0, [sp]
	add r0, sp, #0x1c
	str r0, [sp, #4]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_021AF6F0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	beq _021AF6B2
	movs r0, #6
	str r0, [r5, #0x14]
	ldr r0, _021AF6EC ; =0x00000784
	ldr r1, [sp, #0x18]
	strb r7, [r5, r0]
	ldr r0, [r5, #4]
	bl FUN_0219BFB0
	cmp r0, #0
	bne _021AF6A2
	movs r0, #1
	b _021AF6A4
_021AF6A2:
	movs r0, #0
_021AF6A4:
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #0x18]
	ldr r1, [sp, #0x14]
	bl FUN_021BC664
	b _021AF6B4
_021AF6B2:
	movs r4, #0
_021AF6B4:
	str r6, [sp]
	str r4, [sp, #4]
	add r3, sp, #0x1c
	ldrb r0, [r3]
	movs r1, #0x46
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	str r0, [sp, #0xc]
	ldrb r3, [r3, #1]
	ldr r0, [r5, #0xc]
	bl FUN_021B1474
_021AF6CE:
	add sp, #0x24
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021AF6D4:
	cmp r7, #6
	beq _021AF6E4
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x14]
	movs r1, #0x47
	adds r2, r7, #0
	bl FUN_021B1474
_021AF6E4:
	movs r0, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_021AF6EC: .word 0x00000784
	thumb_func_end FUN_021AF5FC

	thumb_func_start FUN_021AF6F0
FUN_021AF6F0: ; 0x021AF6F0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	ldr r5, [sp, #0x34]
	str r0, [sp]
	str r3, [sp, #8]
	movs r0, #0
	strb r0, [r5]
	ldr r0, [sp, #8]
	adds r7, r2, #0
	str r1, [sp, #4]
	ldr r4, [sp, #0x30]
	cmp r0, #1
	bne _021AF714
	movs r0, #3
	strb r0, [r4]
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AF714:
	adds r0, r7, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	lsls r1, r0, #1
	adds r0, r0, r1
	str r0, [sp, #0xc]
	adds r0, r7, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	lsls r1, r0, #1
	ldr r0, [sp, #0xc]
	subs r0, r0, r1
	beq _021AF744
	lsls r0, r0, #0xc
	blx FUN_0208D3E8
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021AF752
_021AF744:
	lsls r0, r0, #0xc
	blx FUN_0208D3E8
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021AF752:
	blx FUN_0208DA78
	adds r6, r0, #0
	ldr r0, [sp]
	movs r1, #0x20
	ldr r0, [r0, #4]
	bl FUN_0219DB04
	cmp r0, #0
	beq _021AF788
	ldr r0, [sp]
	bl FUN_021AF8B0
	adds r2, r0, #0
	asrs r1, r6, #0x1f
	adds r0, r6, #0
	asrs r3, r2, #0x1f
	blx FUN_0208D638
	movs r2, #0x20
	movs r3, #0
	lsls r2, r2, #6
	adds r0, r0, r2
	adcs r1, r3
	lsls r1, r1, #0x14
	lsrs r6, r0, #0xc
	orrs r6, r1
_021AF788:
	adds r0, r7, #0
	bl FUN_021BAC84
	str r0, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [sp, #0x10]
	movs r2, #8
	bl FUN_0201EF48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	muls r0, r6, r0
	adds r6, r0, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [sp, #8]
	adds r2, r7, #0
	bl FUN_021AF904
	adds r2, r0, #0
	asrs r1, r6, #0x1f
	adds r0, r6, #0
	asrs r3, r2, #0x1f
	blx FUN_0208D638
	movs r2, #8
	lsls r2, r2, #8
	adds r0, r0, r2
	ldr r2, _021AF8AC ; =0x00000000
	adcs r1, r2
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	ldr r1, [sp, #0xc]
	blx FUN_0208D894
	adds r6, r0, #0
	adds r0, r7, #0
	bl FUN_021BBAE8
	cmp r0, #5
	bhi _021AF824
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AF7F2: ; jump table
	.short _021AF824 - _021AF7F2 - 2 ; case 0
	.short _021AF806 - _021AF7F2 - 2 ; case 1
	.short _021AF7FE - _021AF7F2 - 2 ; case 2
	.short _021AF7FE - _021AF7F2 - 2 ; case 3
	.short _021AF806 - _021AF7F2 - 2 ; case 4
	.short _021AF806 - _021AF7F2 - 2 ; case 5
_021AF7FE:
	asrs r1, r6, #0x1f
	adds r0, r6, #0
	movs r2, #0xa
	b _021AF80C
_021AF806:
	asrs r1, r6, #0x1f
	adds r0, r6, #0
	movs r2, #6
_021AF80C:
	lsls r2, r2, #0xa
	movs r3, #0
	blx FUN_0208D638
	movs r2, #8
	lsls r2, r2, #8
	adds r2, r0, r2
	ldr r0, _021AF8AC ; =0x00000000
	adcs r1, r0
	lsls r0, r1, #0x14
	lsrs r6, r2, #0xc
	orrs r6, r0
_021AF824:
	adds r0, r6, #0
	bl FUN_02013838
	adds r7, r0, #0
	ldr r0, [sp]
	adds r1, r7, #0
	bl FUN_021AFA64
	strb r0, [r5]
	movs r0, #0xff
	lsls r0, r0, #0xc
	cmp r7, r0
	ldrb r0, [r5]
	blt _021AF852
	cmp r0, #0
	beq _021AF848
	movs r0, #1
	b _021AF84A
_021AF848:
	movs r0, #3
_021AF84A:
	add sp, #0x18
	strb r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AF852:
	movs r6, #1
	cmp r0, #0
	bne _021AF85A
	movs r6, #3
_021AF85A:
	movs r0, #0xff
	lsls r0, r0, #0xc
	adds r1, r7, #0
	bl FUN_02073E1C
	bl FUN_02073E54
	bl FUN_02073E54
	adds r1, r0, #0
	movs r0, #1
	lsls r0, r0, #0x1c
	bl FUN_02073E1C
	movs r5, #0
	asrs r7, r0, #0xc
	strb r5, [r4]
	cmp r6, #0
	bls _021AF8A6
	movs r0, #1
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0xc
	str r0, [sp, #0x14]
_021AF888:
	ldr r0, [sp, #0x14]
	bl FUN_021BD100
	cmp r0, r7
	bhs _021AF89A
	ldrb r0, [r4]
	adds r0, r0, #1
	strb r0, [r4]
	b _021AF8A0
_021AF89A:
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021AF8A0:
	adds r5, r5, #1
	cmp r5, r6
	blo _021AF888
_021AF8A6:
	movs r0, #1
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AF8AC: .word 0x00000000
	thumb_func_end FUN_021AF6F0

	thumb_func_start FUN_021AF8B0
FUN_021AF8B0: ; 0x021AF8B0
	push {r3, lr}
	ldr r0, [r0, #4]
	bl FUN_0219BFC8
	movs r2, #0x96
	lsls r2, r2, #2
	cmp r0, r2
	bls _021AF8C6
	movs r0, #1
	lsls r0, r0, #0xc
	pop {r3, pc}
_021AF8C6:
	adds r1, r2, #0
	subs r1, #0x96
	cmp r0, r1
	bls _021AF8D2
	ldr r0, _021AF8F4 ; =0x00000E66
	pop {r3, pc}
_021AF8D2:
	lsrs r1, r2, #1
	cmp r0, r1
	bls _021AF8DC
	ldr r0, _021AF8F8 ; =0x00000CCD
	pop {r3, pc}
_021AF8DC:
	cmp r0, #0x96
	bls _021AF8E4
	ldr r0, _021AF8FC ; =0x00000B33
	pop {r3, pc}
_021AF8E4:
	cmp r0, #0x1e
	bls _021AF8EE
	movs r0, #2
	lsls r0, r0, #0xa
	pop {r3, pc}
_021AF8EE:
	ldr r0, _021AF900 ; =0x000004CD
	pop {r3, pc}
	nop
_021AF8F4: .word 0x00000E66
_021AF8F8: .word 0x00000CCD
_021AF8FC: .word 0x00000B33
_021AF900: .word 0x000004CD
	thumb_func_end FUN_021AF8B0

	thumb_func_start FUN_021AF904
FUN_021AF904: ; 0x021AF904
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	cmp r3, #0xf
	bls _021AF910
	b _021AFA4A
_021AF910:
	adds r0, r3, r3
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021AF91C: ; jump table
	.short _021AFA4A - _021AF91C - 2 ; case 0
	.short _021AFA4A - _021AF91C - 2 ; case 1
	.short _021AF942 - _021AF91C - 2 ; case 2
	.short _021AF93C - _021AF91C - 2 ; case 3
	.short _021AFA4A - _021AF91C - 2 ; case 4
	.short _021AFA4A - _021AF91C - 2 ; case 5
	.short _021AF948 - _021AF91C - 2 ; case 6
	.short _021AF966 - _021AF91C - 2 ; case 7
	.short _021AF98A - _021AF91C - 2 ; case 8
	.short _021AF9D8 - _021AF91C - 2 ; case 9
	.short _021AF9EA - _021AF91C - 2 ; case 10
	.short _021AFA4A - _021AF91C - 2 ; case 11
	.short _021AFA4A - _021AF91C - 2 ; case 12
	.short _021AFA00 - _021AF91C - 2 ; case 13
	.short _021AFA4A - _021AF91C - 2 ; case 14
	.short _021AFA3E - _021AF91C - 2 ; case 15
_021AF93C:
	movs r0, #6
	lsls r0, r0, #0xa
	pop {r3, r4, r5, pc}
_021AF942:
	movs r0, #2
	lsls r0, r0, #0xc
	pop {r3, r4, r5, pc}
_021AF948:
	adds r0, r5, #0
	movs r1, #0xa
	bl FUN_021BB054
	cmp r0, #0
	bne _021AF960
	adds r0, r5, #0
	movs r1, #6
	bl FUN_021BB054
	cmp r0, #0
	beq _021AFA4A
_021AF960:
	movs r0, #3
	lsls r0, r0, #0xc
	pop {r3, r4, r5, pc}
_021AF966:
	ldr r0, [r4, #4]
	movs r1, #1
	bl FUN_0219DB04
	cmp r0, #0
	beq _021AF978
	movs r0, #0xe
	lsls r0, r0, #0xa
	pop {r3, r4, r5, pc}
_021AF978:
	ldr r0, [r4, #4]
	bl FUN_0219BFA0
	ldr r0, [r0, #4]
	cmp r0, #6
	bne _021AFA4A
	movs r0, #0xe
	lsls r0, r0, #0xa
	pop {r3, r4, r5, pc}
_021AF98A:
	adds r0, r5, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x1e
	bhs _021AFA4A
	movs r0, #0x29
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x28
	bls _021AF9A8
	movs r0, #0x28
_021AF9A8:
	cmp r0, #0
	beq _021AF9BE
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021AF9CC
_021AF9BE:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021AF9CC:
	blx FUN_0208DA78
	movs r1, #0xa
	blx FUN_0208D688
	pop {r3, r4, r5, pc}
_021AF9D8:
	ldr r0, [r4, #4]
	adds r1, r5, #0
	bl FUN_0219BFB0
	cmp r0, #0
	beq _021AFA4A
	movs r0, #3
	lsls r0, r0, #0xc
	pop {r3, r4, r5, pc}
_021AF9EA:
	ldr r1, [r4, #0x10]
	ldr r0, _021AFA50 ; =0x000004CD
	muls r0, r1, r0
	movs r1, #1
	lsls r1, r1, #0xc
	adds r0, r0, r1
	lsls r2, r1, #2
	cmp r0, r2
	ble _021AFA4E
	adds r0, r2, #0
	pop {r3, r4, r5, pc}
_021AFA00:
	ldr r0, [r4, #4]
	bl FUN_0219BFA0
	adds r4, r0, #0
	ldrb r0, [r4, #9]
	ldrb r1, [r4, #0xc]
	bl FUN_02015AA8
	lsls r0, r0, #0x18
	ldr r1, [r4]
	lsrs r5, r0, #0x18
	subs r0, r1, #4
	cmp r0, #1
	bhi _021AFA22
	movs r0, #0xe
	lsls r0, r0, #0xa
	pop {r3, r4, r5, pc}
_021AFA22:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021AFA54
	cmp r0, #0
	beq _021AFA4A
	adds r5, #0xfd
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _021AFA4A
	movs r0, #0xe
	lsls r0, r0, #0xa
	pop {r3, r4, r5, pc}
_021AFA3E:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _021AFA4A
	movs r0, #5
	lsls r0, r0, #0xc
	pop {r3, r4, r5, pc}
_021AFA4A:
	movs r0, #1
	lsls r0, r0, #0xc
_021AFA4E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021AFA50: .word 0x000004CD
	thumb_func_end FUN_021AF904

	thumb_func_start FUN_021AFA54
FUN_021AFA54: ; 0x021AFA54
	bx pc
	nop
	thumb_func_end FUN_021AFA54
_021AFA58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x29, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021AFA64
FUN_021AFA64: ; 0x021AFA64
	push {r4, r5, r6, lr}
	ldr r0, [r0, #4]
	adds r4, r1, #0
	bl FUN_0219BFC8
	movs r2, #0x96
	lsls r2, r2, #2
	cmp r0, r2
	bls _021AFA7C
	movs r2, #0xa
_021AFA78:
	lsls r2, r2, #0xa
	b _021AFAA8
_021AFA7C:
	adds r1, r2, #0
	subs r1, #0x96
	cmp r0, r1
	bls _021AFA8A
	movs r2, #2
_021AFA86:
	lsls r2, r2, #0xc
	b _021AFAA8
_021AFA8A:
	lsrs r1, r2, #1
	cmp r0, r1
	bls _021AFA94
	movs r2, #6
	b _021AFA78
_021AFA94:
	cmp r0, #0x96
	bls _021AFA9C
	movs r2, #1
	b _021AFA86
_021AFA9C:
	cmp r0, #0x1e
	bls _021AFAA4
	movs r2, #2
	b _021AFA78
_021AFAA4:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021AFAA8:
	movs r0, #0xff
	lsls r0, r0, #0xc
	cmp r4, r0
	ble _021AFAB2
	adds r4, r0, #0
_021AFAB2:
	asrs r1, r4, #0x1f
	adds r0, r4, #0
	asrs r3, r2, #0x1f
	blx FUN_0208D638
	movs r2, #2
	movs r6, #0
	lsls r2, r2, #0xa
	adds r0, r0, r2
	adcs r1, r6
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	movs r5, #6
	movs r1, #6
	blx FUN_0208D688
	adds r5, #0xfa
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BD100
	asrs r1, r4, #0xc
	cmp r0, r1
	bhs _021AFAE8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AFAE8:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021AFA64

	thumb_func_start FUN_021AFAEC
FUN_021AFAEC: ; 0x021AFAEC
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFAEC

	thumb_func_start FUN_021AFAFC
FUN_021AFAFC: ; 0x021AFAFC
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #5
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFAFC

	thumb_func_start FUN_021AFB0C
FUN_021AFB0C: ; 0x021AFB0C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFB0C

	thumb_func_start FUN_021AFB1C
FUN_021AFB1C: ; 0x021AFB1C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFB1C

	thumb_func_start FUN_021AFB2C
FUN_021AFB2C: ; 0x021AFB2C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFB2C

	thumb_func_start FUN_021AFB3C
FUN_021AFB3C: ; 0x021AFB3C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #6
	str r4, [sp]
	bl FUN_021AFF0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFB3C

	thumb_func_start FUN_021AFB4C
FUN_021AFB4C: ; 0x021AFB4C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #7
	str r4, [sp]
	bl FUN_021AFF54
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFB4C

	thumb_func_start FUN_021AFB5C
FUN_021AFB5C: ; 0x021AFB5C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	bl FUN_021BAC80
	bl FUN_0219D35C
	adds r6, r0, #0
	movs r0, #5
	bl FUN_021CE1C0
	adds r2, r0, #0
	adds r0, r6, #0
	movs r1, #3
	bl FUN_021AFBB4
	cmp r0, #0
	beq _021AFBAE
	adds r0, r5, #0
	movs r1, #4
	movs r2, #0x1f
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r4, #4
	movs r1, #1
	movs r2, #0x88
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021AFBAE:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021AFB5C

	thumb_func_start FUN_021AFBB4
FUN_021AFBB4: ; 0x021AFBB4
	bx pc
	nop
	thumb_func_end FUN_021AFBB4
_021AFBB8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0x8C, 0x89, 0x06

	thumb_func_start FUN_021AFBC4
FUN_021AFBC4: ; 0x021AFBC4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r0, r5, #0
	str r2, [sp]
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021AFC4E
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #0x2c
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r7, [r4, #4]
	ldr r0, [sp]
	movs r1, #0x3a
	bl FUN_021BD8C4
	cmp r0, #0xfd
	beq _021AFC10
	cmp r0, #0xfe
	beq _021AFC0A
	cmp r0, #0xff
	bne _021AFC1A
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	b _021AFC22
_021AFC0A:
	adds r0, r5, #0
	movs r1, #2
	b _021AFC14
_021AFC10:
	adds r0, r5, #0
	movs r1, #4
_021AFC14:
	bl FUN_021BD3C8
	b _021AFC22
_021AFC1A:
	ldr r0, [sp]
	movs r1, #0x3a
	bl FUN_021BD8C4
_021AFC22:
	strh r0, [r4, #6]
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	movs r2, #3
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AC060
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AFC4E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021AFBC4

	thumb_func_start FUN_021AFC54
FUN_021AFC54: ; 0x021AFC54
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFC54

	thumb_func_start FUN_021AFC64
FUN_021AFC64: ; 0x021AFC64
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFC64

	thumb_func_start FUN_021AFC74
FUN_021AFC74: ; 0x021AFC74
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFC74

	thumb_func_start FUN_021AFC84
FUN_021AFC84: ; 0x021AFC84
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFC84

	thumb_func_start FUN_021AFC94
FUN_021AFC94: ; 0x021AFC94
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #5
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFC94

	thumb_func_start FUN_021AFCA4
FUN_021AFCA4: ; 0x021AFCA4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #6
	str r4, [sp]
	bl FUN_021AFFF4
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021AFCA4

	thumb_func_start FUN_021AFCB4
FUN_021AFCB4: ; 0x021AFCB4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #9
	adds r6, r3, #0
	movs r7, #0
	bl FUN_021BB41C
	cmp r0, #0
	bne _021AFCE6
	adds r0, r4, #0
	movs r1, #9
	bl FUN_021BB824
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x19
	movs r3, #9
	bl FUN_021B1474
	movs r7, #1
_021AFCE6:
	cmp r6, #1
	ble _021AFD0A
	adds r0, r4, #0
	subs r1, r6, #1
	bl FUN_021BB778
	cmp r0, #0
	beq _021AFD0A
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0xe
	subs r3, r6, #1
	bl FUN_021B1474
	movs r7, #1
_021AFD0A:
	cmp r7, #0
	beq _021AFD28
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r3, r0, #0
	ldr r0, _021AFD2C ; =0xFFFF0000
	ldr r2, _021AFD30 ; =0x00000411
	str r0, [sp]
	ldr r0, [r5, #0xc]
	movs r1, #0x5b
	bl FUN_021B1610
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AFD28:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AFD2C: .word 0xFFFF0000
_021AFD30: .word 0x00000411
	thumb_func_end FUN_021AFCB4

	thumb_func_start FUN_021AFD34
FUN_021AFD34: ; 0x021AFD34
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	str r0, [sp]
	ldr r6, [sp, #0x20]
	adds r0, r7, #0
	adds r4, r2, #0
	bl FUN_021BAC90
	cmp r0, r6
	bls _021AFDC6
	adds r0, r7, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021BADA8
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x3b
	bl FUN_021BD8C4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x7f
	beq _021AFD72
	cmp r5, r0
	bls _021AFD72
	adds r5, r0, #0
_021AFD72:
	cmp r5, #0
	beq _021AFDC6
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #9
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #4]
	ldr r0, [sp, #4]
	movs r1, #2
	strb r0, [r4, #5]
	strb r6, [r4, #6]
	ldrb r0, [r4, #7]
	ldr r2, _021AFDCC ; =0x00000186
	orrs r0, r1
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021BAD10
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021AC448
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AFDC6:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AFDCC: .word 0x00000186
	thumb_func_end FUN_021AFD34

	thumb_func_start FUN_021AFDD0
FUN_021AFDD0: ; 0x021AFDD0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	adds r4, r2, #0
	adds r0, r1, #0
	str r1, [sp]
	bl FUN_021BAC80
	adds r6, r0, #0
	adds r0, r4, #0
	movs r1, #0x3b
	bl FUN_021BD8C4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp]
	bl FUN_021BAC90
	movs r5, #0
	str r0, [sp, #0xc]
	cmp r0, #0
	bls _021AFE46
_021AFE02:
	lsls r1, r5, #0x18
	ldr r0, [sp]
	lsrs r1, r1, #0x18
	bl FUN_021BADA8
	adds r4, r0, #0
	ldr r0, [sp, #4]
	cmp r4, r0
	bls _021AFE16
	adds r4, r0, #0
_021AFE16:
	cmp r4, #0
	beq _021AFE3E
	adds r0, r7, #0
	movs r1, #9
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #6]
	strb r6, [r1, #5]
	strb r4, [r1, #4]
	ldrb r2, [r1, #7]
	movs r0, #2
	orrs r0, r2
	strb r0, [r1, #7]
	adds r0, r7, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [sp, #8]
_021AFE3E:
	ldr r0, [sp, #0xc]
	adds r5, r5, #1
	cmp r5, r0
	blo _021AFE02
_021AFE46:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021AFE72
	adds r0, r7, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021AFE78 ; =0x00000189
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021AFE72:
	ldr r0, [sp, #8]
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AFE78: .word 0x00000189
	thumb_func_end FUN_021AFDD0

	thumb_func_start FUN_021AFE7C
FUN_021AFE7C: ; 0x021AFE7C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r0, r5, #0
	str r2, [sp]
	bl FUN_021BB388
	cmp r0, #0
	bne _021AFF04
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AFF04
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #5
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r7, [r4, #6]
	movs r0, #1
	strb r0, [r4, #7]
	ldr r0, [sp]
	movs r1, #0x3a
	bl FUN_021BD8C4
	cmp r0, #0xfd
	beq _021AFED6
	cmp r0, #0xfe
	beq _021AFED0
	cmp r0, #0xff
	bne _021AFEE0
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	b _021AFEE0
_021AFED0:
	adds r0, r5, #0
	movs r1, #2
	b _021AFEDA
_021AFED6:
	adds r0, r5, #0
	movs r1, #4
_021AFEDA:
	bl FUN_021BD3C8
	b _021AFEE0
_021AFEE0:
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021AFF08 ; =0x00000183
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021AFF04:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021AFF08: .word 0x00000183
	thumb_func_end FUN_021AFE7C

	thumb_func_start FUN_021AFF0C
FUN_021AFF0C: ; 0x021AFF0C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AFF50
	ldr r1, [sp, #0x10]
	adds r0, r4, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021AFF50
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0x14]
	ldr r0, [sp, #0x10]
	strb r4, [r1, #8]
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #1
	pop {r3, r4, r5, pc}
_021AFF50:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021AFF0C

	thumb_func_start FUN_021AFF54
FUN_021AFF54: ; 0x021AFF54
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021AFFC8
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	ldr r0, _021AFFD0 ; =0x00001AB8
	adds r0, r5, r0
	bl FUN_021AFFD4
	cmp r0, #0
	bne _021AFFC8
	movs r0, #0
	str r0, [sp]
	movs r7, #0
_021AFF80:
	adds r0, r7, #0
	bl FUN_021AFFE4
	adds r7, r7, #1
	adds r4, r0, #0
	beq _021AFFC2
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021AFF80
	adds r0, r6, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	movs r1, #0xb
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0x14]
	ldr r0, [sp, #4]
	strb r0, [r1, #8]
	adds r0, r5, #0
	str r4, [r1, #4]
	bl FUN_021AC448
	movs r0, #1
	str r0, [sp]
	b _021AFF80
_021AFFC2:
	ldr r0, [sp]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021AFFC8:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021AFFD0: .word 0x00001AB8
	thumb_func_end FUN_021AFF54

	thumb_func_start FUN_021AFFD4
FUN_021AFFD4: ; 0x021AFFD4
	bx pc
	nop
	thumb_func_end FUN_021AFFD4
_021AFFD8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x11, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021AFFE4
FUN_021AFFE4: ; 0x021AFFE4
	bx pc
	nop
	thumb_func_end FUN_021AFFE4
_021AFFE8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x6D, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021AFFF4
FUN_021AFFF4: ; 0x021AFFF4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	adds r7, r3, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	ldr r0, _021B0054 ; =0x00001AB8
	adds r1, r4, #0
	adds r0, r5, r0
	bl FUN_021B0058
	cmp r0, #6
	beq _021B004E
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B004E
	ldr r1, [sp, #0x18]
	adds r0, r6, #0
	adds r2, r7, #0
	bl FUN_021BB554
	cmp r0, #0
	beq _021B004E
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r2, #1
	strb r2, [r1, #0xf]
	ldr r0, [sp, #0x18]
	strb r4, [r1, #0x10]
	str r0, [r1, #4]
	strb r7, [r1, #0xc]
	strb r2, [r1, #0xe]
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B004E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B0054: .word 0x00001AB8
	thumb_func_end FUN_021AFFF4

	thumb_func_start FUN_021B0058
FUN_021B0058: ; 0x021B0058
	bx pc
	nop
	thumb_func_end FUN_021B0058
_021B005C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x51, 0xD7, 0x89, 0x06

	thumb_func_start FUN_021B0068
FUN_021B0068: ; 0x021B0068
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021B00B4
	cmp r0, #0
	bne _021B00AE
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r0, r5, #0
	adds r1, r4, #0
	add r2, sp, #0
	bl FUN_021AC02C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bne _021B00AA
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0
	beq _021B00A2
	movs r0, #2
	b _021B00A4
_021B00A2:
	movs r0, #0
_021B00A4:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, r4, r5, pc}
_021B00AA:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B00AE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
	thumb_func_end FUN_021B0068

	thumb_func_start FUN_021B00B4
FUN_021B00B4: ; 0x021B00B4
	bx pc
	nop
	thumb_func_end FUN_021B00B4
_021B00B8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x85, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021B00C4
FUN_021B00C4: ; 0x021B00C4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x10
	bl FUN_021BB1F4
	cmp r0, #0x96
	beq _021B0106
	ldr r7, _021B010C ; =0x00001D78
	ldr r1, _021B0110 ; =0x00000797
	adds r0, r5, r7
	bl FUN_021B088C
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC050
	adds r0, r5, #0
	bl FUN_021AC490
	ldr r2, _021B0110 ; =0x00000797
	adds r4, r0, #0
	adds r0, r5, r7
	adds r1, r6, #0
	adds r2, r2, #5
	bl FUN_021B0910
	cmp r4, #2
	bne _021B0106
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B0106:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B010C: .word 0x00001D78
_021B0110: .word 0x00000797
	thumb_func_end FUN_021B00C4

	thumb_func_start FUN_021B0114
FUN_021B0114: ; 0x021B0114
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021CDF1C
	cmp r0, #0
	bne _021B01A0
	adds r0, r4, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	beq _021B01A0
	ldr r0, _021B01A8 ; =0x00001D78
	ldr r7, _021B01AC ; =0x000007AE
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #4]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x20
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #4]
	movs r1, #2
	strb r0, [r4, #6]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xc
	movs r2, #0xe1
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r0, _021B01A8 ; =0x00001D78
	adds r7, #0xd
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r7, #0
	bl FUN_021B0910
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B01A0:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B01A8: .word 0x00001D78
_021B01AC: .word 0x000007AE
	thumb_func_end FUN_021B0114

	thumb_func_start FUN_021B01B0
FUN_021B01B0: ; 0x021B01B0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021B021C ; =0x00001D78
	ldr r7, _021B0220 ; =0x000007C6
	adds r4, r1, #0
	adds r0, r5, r0
	adds r1, r7, #0
	bl FUN_021B088C
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0x10
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #4]
	adds r0, r5, #0
	strb r4, [r1, #5]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xe4
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	ldr r0, _021B021C ; =0x00001D78
	adds r7, #0x10
	ldr r1, [sp]
	adds r0, r5, r0
	adds r2, r7, #0
	bl FUN_021B0910
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B021C: .word 0x00001D78
_021B0220: .word 0x000007C6
	thumb_func_end FUN_021B01B0

	thumb_func_start FUN_021B0224
FUN_021B0224: ; 0x021B0224
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	movs r4, #0
	bl FUN_0219D4C8
	cmp r0, #0
	ble _021B0262
_021B0234:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BAC84
	cmp r7, r0
	bne _021B0256
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B0256
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B0256:
	adds r0, r5, #0
	adds r4, r4, #1
	bl FUN_0219D4C8
	cmp r4, r0
	blt _021B0234
_021B0262:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B0224

	thumb_func_start FUN_021B0268
FUN_021B0268: ; 0x021B0268
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	movs r4, #0
	bl FUN_0219D4C8
	cmp r0, #0
	ble _021B02A6
_021B0278:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BAC84
	cmp r7, r0
	beq _021B029A
	adds r0, r6, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B029A
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B029A:
	adds r0, r5, #0
	adds r4, r4, #1
	bl FUN_0219D4C8
	cmp r4, r0
	blt _021B0278
_021B02A6:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B0268

	thumb_func_start FUN_021B02AC
FUN_021B02AC: ; 0x021B02AC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r6, #0
	movs r4, #0
	bl FUN_0219D4C8
	cmp r0, #0
	ble _021B02DC
_021B02BC:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B02D0
	adds r6, r6, #1
_021B02D0:
	adds r0, r5, #0
	adds r4, r4, #1
	bl FUN_0219D4C8
	cmp r4, r0
	blt _021B02BC
_021B02DC:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B02AC

	thumb_func_start FUN_021B02E0
FUN_021B02E0: ; 0x021B02E0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_0219D4C8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021B02AC
	cmp r4, r0
	bne _021B02F8
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B02F8:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B02E0

	thumb_func_start FUN_021B02FC
FUN_021B02FC: ; 0x021B02FC
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B030E
	movs r0, #0x12
	ldrsh r0, [r4, r0]
	pop {r4, pc}
_021B030E:
	movs r0, #0x14
	ldrsh r0, [r4, r0]
	pop {r4, pc}
	thumb_func_end FUN_021B02FC

	thumb_func_start FUN_021B0314
FUN_021B0314: ; 0x021B0314
	movs r3, #0
	movs r2, #0
_021B0318:
	lsls r1, r2, #2
	ldr r1, [r0, r1]
	cmp r1, #0
	beq _021B0322
	adds r3, r1, #0
_021B0322:
	adds r2, r2, #1
	cmp r2, #5
	blt _021B0318
	adds r0, r3, #0
	bx lr
	thumb_func_end FUN_021B0314

	thumb_func_start FUN_021B032C
FUN_021B032C: ; 0x021B032C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	bl FUN_0219E198
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0219E3DC
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	ldr r2, [r4, #0x10]
	cmp r2, r0
	blo _021B0352
	cmp r5, #0
	bne _021B0352
	subs r1, #0xc
	adds r0, r1, #0
	pop {r4, r5, r6, pc}
_021B0352:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B032C

	thumb_func_start FUN_021B0358
FUN_021B0358: ; 0x021B0358
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x40
	adds r6, r0, #0
	adds r5, r1, #0
	bl FUN_0219C9F0
	movs r7, #0
	add r0, sp, #0x2c
	str r7, [r0]
	str r7, [r0, #4]
	str r7, [r0, #8]
	str r7, [r0, #0xc]
	str r7, [r0, #0x10]
	adds r0, r6, #0
	bl FUN_0219E3DC
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0219D408
	bl FUN_021B02E0
	adds r4, r0, #0
	ldr r0, [sp]
	movs r1, #0x10
	ldrsh r0, [r0, r1]
	cmp r0, #8
	bls _021B0394
	b _021B05D6
_021B0394:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B03A0: ; jump table
	.short _021B0466 - _021B03A0 - 2 ; case 0
	.short _021B04B8 - _021B03A0 - 2 ; case 1
	.short _021B03B2 - _021B03A0 - 2 ; case 2
	.short _021B04D6 - _021B03A0 - 2 ; case 3
	.short _021B041C - _021B03A0 - 2 ; case 4
	.short _021B050A - _021B03A0 - 2 ; case 5
	.short _021B0558 - _021B03A0 - 2 ; case 6
	.short _021B0584 - _021B03A0 - 2 ; case 7
	.short _021B05A6 - _021B03A0 - 2 ; case 8
_021B03B2:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219D408
	adds r5, r0, #0
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021B02FC
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021B0268
	str r0, [sp, #8]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021B0224
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_0219E340
	cmp r5, #0
	beq _021B03F8
	ldr r1, [sp]
	movs r2, #0x16
	ldrsh r1, [r1, r2]
	cmp r0, r1
	bne _021B03F2
	movs r7, #1
	b _021B0410
_021B03F2:
	subs r2, #0x1f
	str r2, [sp, #0x2c]
	b _021B0410
_021B03F8:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021B0406
	movs r0, #1
	subs r0, r0, #7
	str r0, [sp, #0x30]
	b _021B0410
_021B0406:
	cmp r4, #0
	beq _021B0410
	movs r0, #1
	subs r0, r0, #4
	str r0, [sp, #0x34]
_021B0410:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021B032C
	str r0, [sp, #0x38]
	b _021B05D6
_021B041C:
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021B02FC
	str r0, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219D408
	ldr r1, [sp, #0xc]
	str r0, [sp, #0x10]
	bl FUN_021B0224
	adds r5, r0, #0
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0xc]
	bl FUN_021B0268
	cmp r5, #0
	beq _021B0446
	movs r7, #1
_021B0446:
	cmp r0, #0
	beq _021B0450
	movs r0, #5
	mvns r0, r0
	str r0, [sp, #0x2c]
_021B0450:
	cmp r4, #0
	beq _021B045A
	movs r0, #2
	mvns r0, r0
	str r0, [sp, #0x30]
_021B045A:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021B032C
	str r0, [sp, #0x34]
	b _021B05D6
_021B0466:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219D408
	str r0, [sp, #0x14]
	adds r0, r6, #0
	bl FUN_0219D420
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	bl FUN_021B02AC
	adds r5, r0, #0
	ldr r0, [sp, #0x14]
	bl FUN_021B02E0
	ldr r1, [sp, #0x18]
	cmp r1, r5
	bgt _021B0490
	cmp r4, #0
	beq _021B0496
_021B0490:
	movs r1, #7
	mvns r1, r1
	str r1, [sp, #0x2c]
_021B0496:
	cmp r0, #0
	beq _021B04AC
	ldr r0, [sp]
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r5, r0
	blt _021B04A8
	movs r7, #1
	b _021B04AC
_021B04A8:
	subs r1, #0x12
	str r1, [sp, #0x30]
_021B04AC:
	cmp r4, #0
	beq _021B04B6
	movs r0, #2
	mvns r0, r0
	str r0, [sp, #0x34]
_021B04B6:
	b _021B0410
_021B04B8:
	adds r0, r5, #0
	movs r1, #1
	movs r5, #1
	bl FUN_0219D408
	bl FUN_021B02E0
	cmp r4, #0
	beq _021B04CE
	subs r1, r5, #4
	str r1, [sp, #0x2c]
_021B04CE:
	cmp r0, #0
	beq _021B04D4
	movs r7, #1
_021B04D4:
	b _021B0500
_021B04D6:
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021B02FC
	str r0, [sp, #0x1c]
	adds r0, r5, #0
	movs r1, #1
	movs r5, #1
	bl FUN_0219D408
	ldr r1, [sp, #0x1c]
	bl FUN_021B0224
	cmp r0, #0
	beq _021B04F6
	adds r7, r5, #0
_021B04F6:
	cmp r4, #0
	beq _021B0500
	movs r0, #2
	mvns r0, r0
	str r0, [sp, #0x2c]
_021B0500:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021B032C
	b _021B05D4
_021B050A:
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021B02FC
	str r0, [sp, #0x20]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0219D408
	ldr r1, [sp, #0x20]
	str r0, [sp, #0x24]
	bl FUN_021B0224
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	bl FUN_021B02AC
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x24]
	bl FUN_0219D4C8
	cmp r5, #0
	bne _021B0542
	subs r1, r0, #1
	ldr r0, [sp, #0x28]
	cmp r0, r1
	bne _021B0542
	movs r7, #1
_021B0542:
	cmp r5, #1
	bne _021B054C
	movs r0, #6
	mvns r0, r0
	str r0, [sp, #0x2c]
_021B054C:
	cmp r4, #0
	beq _021B0556
	movs r0, #2
	mvns r0, r0
	str r0, [sp, #0x30]
_021B0556:
	b _021B045A
_021B0558:
	adds r0, r5, #0
	movs r1, #1
	movs r5, #1
	bl FUN_0219D408
	bl FUN_021B02E0
	cmp r4, #0
	beq _021B056E
	subs r1, r5, #4
	str r1, [sp, #0x2c]
_021B056E:
	cmp r0, #0
	beq _021B0578
	movs r0, #4
	mvns r0, r0
	str r0, [sp, #0x30]
_021B0578:
	adds r0, r6, #0
	movs r1, #0
	bl FUN_021B032C
	adds r7, r0, #0
	b _021B05D6
_021B0584:
	adds r0, r5, #0
	movs r1, #1
	movs r5, #1
	bl FUN_0219D408
	bl FUN_021B02AC
	cmp r4, #0
	beq _021B059A
	subs r1, r5, #4
	str r1, [sp, #0x2c]
_021B059A:
	cmp r0, #0
	beq _021B05A4
	movs r0, #3
	mvns r0, r0
	str r0, [sp, #0x30]
_021B05A4:
	b _021B0578
_021B05A6:
	adds r0, r5, #0
	movs r1, #1
	movs r5, #1
	bl FUN_0219D408
	bl FUN_021B02E0
	cmp r4, #0
	beq _021B05BA
	adds r7, r5, #0
_021B05BA:
	cmp r0, #0
	beq _021B05C4
	movs r0, #4
	mvns r0, r0
	str r0, [sp, #0x2c]
_021B05C4:
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021B032C
	cmp r0, #0
	beq _021B05D6
	movs r0, #1
	mvns r0, r0
_021B05D4:
	str r0, [sp, #0x30]
_021B05D6:
	add r0, sp, #0x2c
	bl FUN_021B0314
	cmp r7, #0
	beq _021B05EA
	cmp r0, #0
	bne _021B05EA
	add sp, #0x40
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B05EA:
	cmp r0, #0
	bne _021B05F0
	movs r0, #0
_021B05F0:
	add sp, #0x40
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B0358

	thumb_func_start FUN_021B05F4
FUN_021B05F4: ; 0x021B05F4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	add r0, sp, #0
	strb r4, [r0, #3]
	ldrb r1, [r0, #3]
	strb r1, [r0, #2]
	strb r4, [r0, #1]
	ldrb r1, [r0, #1]
	strb r1, [r0]
_021B0608:
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _021B0658
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0219D408
	adds r7, r0, #0
	bl FUN_0219D4C8
	cmp r0, #0
	beq _021B0658
	lsls r1, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219C470
	adds r6, r0, #0
	adds r0, r7, #0
	bl FUN_0219D4CC
	add r1, sp, #0
	adds r1, #2
	ldrb r1, [r1, r6]
	adds r1, r1, r0
	add r0, sp, #0
	adds r0, #2
	strb r1, [r0, r6]
	adds r0, r7, #0
	bl FUN_0219D4C8
	add r1, sp, #0
	ldrb r1, [r1, r6]
	adds r1, r1, r0
	add r0, sp, #0
	strb r1, [r0, r6]
_021B0658:
	adds r4, r4, #1
	cmp r4, #4
	blo _021B0608
	ldr r0, [r5, #4]
	bl FUN_0219C9C8
	cmp r0, #0
	ldr r0, [r5, #4]
	bne _021B06EE
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0219C470
	adds r4, r0, #0
	movs r0, #1
	eors r0, r4
	add r1, sp, #0
	lsls r0, r0, #0x18
	adds r1, #2
	lsrs r2, r0, #0x18
	ldrb r0, [r1, r4]
	cmp r0, #0
	bne _021B0694
	ldrb r1, [r1, r2]
	cmp r1, #0
	beq _021B0694
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B0694:
	add r1, sp, #0
	adds r1, #2
	ldrb r1, [r1, r2]
	cmp r1, #0
	bne _021B06A6
	cmp r0, #0
	beq _021B06A6
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B06A6:
	ldr r0, [r5, #4]
	bl FUN_0219DEAC
	cmp r0, #0
	bne _021B06B4
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021B06B4:
	add r0, sp, #0
	ldrb r0, [r0, #2]
	cmp r0, #0
	bne _021B06DE
	movs r0, #0x3e
	lsls r0, r0, #4
	adds r0, r5, r0
	bl FUN_021B070C
	cmp r0, #0x1f
	beq _021B06DA
	bl FUN_0219D35C
	cmp r0, r4
	bne _021B06D6
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B06D6:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B06DA:
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021B06DE:
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #2
	add r2, sp, #0
	adds r3, r4, #0
	bl FUN_021B071C
	pop {r3, r4, r5, r6, r7, pc}
_021B06EE:
	ldr r1, [r5, #8]
	bl FUN_021B0358
	rsbs r2, r0, #0
	ldr r1, _021B0708 ; =0x00002130
	cmp r0, #0
	str r2, [r5, r1]
	ble _021B0702
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B0702:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B0708: .word 0x00002130
	thumb_func_end FUN_021B05F4

	thumb_func_start FUN_021B070C
FUN_021B070C: ; 0x021B070C
	bx pc
	nop
	thumb_func_end FUN_021B070C
_021B0710:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x5D, 0xD3, 0x89, 0x06

	thumb_func_start FUN_021B071C
FUN_021B071C: ; 0x021B071C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r3, #0
	ldrb r6, [r2]
	ldrb r3, [r1]
	ldrb r2, [r2, #1]
	ldrb r1, [r1, #1]
	subs r3, r6, r3
	adds r4, r0, #0
	subs r1, r2, r1
	cmp r3, r1
	beq _021B0750
	movs r0, #1
	cmp r3, r1
	bge _021B073C
	movs r0, #0
_021B073C:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	bne _021B074A
	add sp, #0x10
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B074A:
	add sp, #0x10
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B0750:
	add r1, sp, #8
	add r2, sp, #0
	movs r3, #0
	movs r6, #0
	bl FUN_021B07B4
	adds r0, r4, #0
	add r1, sp, #0xc
	add r2, sp, #4
	movs r3, #1
	movs r4, #1
	bl FUN_021B07B4
	ldr r1, [sp, #4]
	ldr r0, [sp]
	cmp r0, r1
	beq _021B078C
	cmp r0, r1
	ble _021B0778
	adds r4, r6, #0
_021B0778:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	bne _021B0786
	add sp, #0x10
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B0786:
	add sp, #0x10
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B078C:
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #8]
	cmp r0, r1
	beq _021B07AE
	cmp r0, r1
	ble _021B079A
	adds r4, r6, #0
_021B079A:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	bne _021B07A8
	add sp, #0x10
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B07A8:
	add sp, #0x10
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B07AE:
	movs r0, #2
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B071C

	thumb_func_start FUN_021B07B4
FUN_021B07B4: ; 0x021B07B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r1, #0
	str r0, [sp]
	str r3, [sp, #8]
	movs r6, #0
	str r6, [r5]
	adds r0, r2, #0
	str r6, [r0]
	movs r0, #0
	str r2, [sp, #4]
	str r0, [sp, #0x14]
_021B07CC:
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C448
	cmp r0, #0
	beq _021B0834
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C470
	ldr r1, [sp, #8]
	cmp r1, r0
	bne _021B0834
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	ldr r0, [r0, #8]
	bl FUN_0219D408
	str r0, [sp, #0x10]
	bl FUN_0219D4C8
	movs r4, #0
	str r0, [sp, #0xc]
	cmp r0, #0
	bls _021B0834
_021B080A:
	lsls r1, r4, #0x18
	ldr r0, [sp, #0x10]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r7, r0, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r6, r6, r0
	adds r0, r7, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	ldr r1, [r5]
	adds r4, r4, #1
	adds r0, r1, r0
	str r0, [r5]
	ldr r0, [sp, #0xc]
	cmp r4, r0
	blo _021B080A
_021B0834:
	ldr r0, [sp, #0x14]
	adds r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #4
	blo _021B07CC
	ldr r1, [r5]
	movs r0, #0x64
	muls r0, r1, r0
	adds r1, r6, #0
	blx FUN_0208D894
	ldr r1, [sp, #4]
	str r0, [r1]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B07B4

	thumb_func_start FUN_021B0854
FUN_021B0854: ; 0x021B0854
	movs r3, #0
	movs r2, #6
_021B0858:
	lsls r1, r3, #2
	adds r3, r3, #1
	str r2, [r0, r1]
	cmp r3, #0x18
	blo _021B0858
	bx lr
	thumb_func_end FUN_021B0854

	thumb_func_start FUN_021B0864
FUN_021B0864: ; 0x021B0864
	lsls r1, r1, #2
	str r2, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B0864

	thumb_func_start FUN_021B086C
FUN_021B086C: ; 0x021B086C
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B086C

	thumb_func_start FUN_021B0874
FUN_021B0874: ; 0x021B0874
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B0874

	thumb_func_start FUN_021B087C
FUN_021B087C: ; 0x021B087C
	movs r1, #0
	movs r2, #0x7d
	stm r0!, {r1}
	ldr r3, _021B0888 ; =FUN_020787D4
	lsls r2, r2, #2
	bx r3
	.align 2, 0
_021B0888: .word FUN_020787D4
	thumb_func_end FUN_021B087C

	thumb_func_start FUN_021B088C
FUN_021B088C: ; 0x021B088C
	push {r3, r4}
	ldr r1, [r0]
	ldr r2, _021B08BC ; =0xFFFFFC00
	adds r4, r1, #0
	ands r4, r2
	ldr r2, _021B08C0 ; =0xF007FFFF
	adds r3, r4, #0
	ands r3, r2
	lsls r2, r4, #0xd
	lsrs r2, r2, #0x17
	lsls r2, r2, #0x17
	lsrs r2, r2, #4
	orrs r3, r2
	ldr r2, _021B08C4 ; =0xDFFFFFFF
	ands r3, r2
	asrs r2, r2, #1
	ands r3, r2
	ldr r2, _021B08C8 ; =0xBFFFFFFF
	ands r2, r3
	str r2, [r0]
	adds r0, r1, #0
	pop {r3, r4}
	bx lr
	nop
_021B08BC: .word 0xFFFFFC00
_021B08C0: .word 0xF007FFFF
_021B08C4: .word 0xDFFFFFFF
_021B08C8: .word 0xBFFFFFFF
	thumb_func_end FUN_021B088C

	thumb_func_start FUN_021B08CC
FUN_021B08CC: ; 0x021B08CC
	push {r3, r4}
	ldr r2, [r0]
	ldr r3, _021B0900 ; =0xFFFFFC00
	adds r4, r2, #0
	ands r4, r3
	lsrs r3, r3, #0x16
	ands r1, r3
	orrs r4, r1
	ldr r1, _021B0904 ; =0xF007FFFF
	adds r3, r4, #0
	ands r3, r1
	lsls r1, r4, #0xd
	lsrs r1, r1, #0x17
	lsls r1, r1, #0x17
	lsrs r1, r1, #4
	orrs r3, r1
	ldr r1, _021B0908 ; =0xDFFFFFFF
	ands r3, r1
	asrs r1, r1, #1
	ands r3, r1
	ldr r1, _021B090C ; =0xBFFFFFFF
	ands r1, r3
	str r1, [r0]
	adds r0, r2, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_021B0900: .word 0xFFFFFC00
_021B0904: .word 0xF007FFFF
_021B0908: .word 0xDFFFFFFF
_021B090C: .word 0xBFFFFFFF
	thumb_func_end FUN_021B08CC

	thumb_func_start FUN_021B0910
FUN_021B0910: ; 0x021B0910
	str r1, [r0]
	bx lr
	thumb_func_end FUN_021B0910

	thumb_func_start FUN_021B0914
FUN_021B0914: ; 0x021B0914
	ldr r0, [r0]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	thumb_func_end FUN_021B0914

	thumb_func_start FUN_021B0920
FUN_021B0920: ; 0x021B0920
	ldr r0, [r0]
	lsls r0, r0, #1
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021B0920

	thumb_func_start FUN_021B0928
FUN_021B0928: ; 0x021B0928
	cmp r1, #0
	ldr r2, [r0]
	beq _021B093A
	movs r1, #1
	lsls r1, r1, #0x1c
	orrs r2, r1
	lsls r1, r1, #1
	orrs r1, r2
	b _021B093E
_021B093A:
	ldr r1, _021B094C ; =0xEFFFFFFF
	ands r1, r2
_021B093E:
	str r1, [r0]
	movs r1, #1
	ldr r2, [r0]
	lsls r1, r1, #0x1e
	orrs r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
_021B094C: .word 0xEFFFFFFF
	thumb_func_end FUN_021B0928

	thumb_func_start FUN_021B0950
FUN_021B0950: ; 0x021B0950
	ldr r0, [r0]
	lsls r0, r0, #3
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021B0950

	thumb_func_start FUN_021B0958
FUN_021B0958: ; 0x021B0958
	ldr r0, [r0]
	lsls r0, r0, #2
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021B0958

	thumb_func_start FUN_021B0960
FUN_021B0960: ; 0x021B0960
	push {r4, r5, r6, r7}
	mov ip, r2
	ldr r2, _021B0A10 ; =0x021D6E18
	adds r5, r1, #0
	movs r6, #0
	movs r3, #0
_021B096C:
	lsls r4, r6, #1
	ldrb r1, [r2, r4]
	cmp r5, r1
	bne _021B097A
	ldr r1, _021B0A14 ; =0x021D6E19
	ldrb r3, [r1, r4]
	b _021B0980
_021B097A:
	adds r6, r6, #1
	cmp r6, #0x3b
	blo _021B096C
_021B0980:
	cmp r3, #0
	beq _021B0A08
	movs r1, #3
	tst r1, r3
	beq _021B0994
	movs r1, #3
_021B098C:
	adds r3, r3, #1
	adds r2, r3, #0
	tst r2, r1
	bne _021B098C
_021B0994:
	ldr r1, [r0]
	lsls r1, r1, #0xd
	lsrs r2, r1, #0x17
	movs r1, #0x7d
	adds r4, r2, r3
	lsls r1, r1, #2
	cmp r4, r1
	bhi _021B0A08
	adds r1, r0, #4
	movs r4, #0
	cmp r3, #0
	bls _021B09C0
	adds r7, r4, #0
_021B09AE:
	ldr r6, [r0]
	lsls r6, r6, #0xd
	lsrs r6, r6, #0x17
	adds r6, r0, r6
	adds r6, r4, r6
	adds r4, r4, #1
	strb r7, [r6, #4]
	cmp r4, r3
	blo _021B09AE
_021B09C0:
	ldr r4, [r1, r2]
	movs r6, #0xff
	lsls r5, r5, #0x18
	bics r4, r6
	lsrs r5, r5, #0x18
	orrs r5, r4
	ldr r4, _021B0A18 ; =0xFF801FFF
	ands r5, r4
	lsls r4, r3, #0x16
	lsrs r4, r4, #9
	orrs r5, r4
	ldr r4, _021B0A1C ; =0xFFFFE0FF
	ands r4, r5
	mov r5, ip
	lsls r5, r5, #0x1b
	lsrs r5, r5, #0x13
	orrs r5, r4
	ldr r4, _021B0A20 ; =0xFF7FFFFF
	ands r5, r4
	movs r4, #1
	lsls r4, r4, #0x1a
	orrs r4, r5
	str r4, [r1, r2]
	ldr r5, [r0]
	ldr r4, _021B0A24 ; =0xFFF803FF
	ands r4, r5
	lsls r5, r5, #0xd
	lsrs r5, r5, #0x17
	adds r3, r5, r3
	lsls r3, r3, #0x17
	lsrs r3, r3, #0xd
	orrs r3, r4
	str r3, [r0]
	adds r0, r1, r2
	pop {r4, r5, r6, r7}
	bx lr
_021B0A08:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	nop
_021B0A10: .word 0x021D6E18
_021B0A14: .word 0x021D6E19
_021B0A18: .word 0xFF801FFF
_021B0A1C: .word 0xFFFFE0FF
_021B0A20: .word 0xFF7FFFFF
_021B0A24: .word 0xFFF803FF
	thumb_func_end FUN_021B0960

	thumb_func_start FUN_021B0A28
FUN_021B0A28: ; 0x021B0A28
	push {r4, r5}
	ldr r3, [r0]
	lsls r2, r3, #0xd
	lsrs r4, r2, #0x17
	ldr r2, [r1]
	lsls r2, r2, #9
	lsrs r2, r2, #0x16
	cmp r2, r4
	bhi _021B0A52
	adds r5, r0, #4
	subs r1, r1, r5
	adds r1, r1, r2
	cmp r1, r4
	bne _021B0A52
	ldr r1, _021B0A58 ; =0xFFF803FF
	ands r3, r1
	subs r1, r4, r2
	lsls r1, r1, #0x17
	lsrs r1, r1, #0xd
	orrs r1, r3
	str r1, [r0]
_021B0A52:
	pop {r4, r5}
	bx lr
	nop
_021B0A58: .word 0xFFF803FF
	thumb_func_end FUN_021B0A28

	thumb_func_start FUN_021B0A5C
FUN_021B0A5C: ; 0x021B0A5C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r5]
	ldr r0, _021B0A80 ; =0x00000BB8
	cmp r1, r0
	blo _021B0A74
	ldr r0, _021B0A84 ; =0x021DAEF0
	ldr r2, _021B0A88 ; =0x021DAEF4
	movs r1, #0
	bl FUN_0203CBAC
_021B0A74:
	ldr r1, [r5]
	adds r0, r1, #1
	str r0, [r5]
	adds r0, r5, r1
	strb r4, [r0, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B0A80: .word 0x00000BB8
_021B0A84: .word 0x021DAEF0
_021B0A88: .word 0x021DAEF4
	thumb_func_end FUN_021B0A5C

	thumb_func_start FUN_021B0A8C
FUN_021B0A8C: ; 0x021B0A8C
	ldr r2, [r0, #4]
	adds r1, r2, #1
	str r1, [r0, #4]
	adds r0, r0, r2
	ldrb r0, [r0, #8]
	bx lr
	thumb_func_end FUN_021B0A8C

	thumb_func_start FUN_021B0A98
FUN_021B0A98: ; 0x021B0A98
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r5]
	ldr r0, _021B0AC8 ; =0x00000BB7
	cmp r1, r0
	blo _021B0AB0
	ldr r0, _021B0ACC ; =0x021DAEF0
	ldr r2, _021B0AD0 ; =0x021DAF1C
	movs r1, #0
	bl FUN_0203CBAC
_021B0AB0:
	ldr r2, [r5]
	asrs r1, r4, #8
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r1, [r5]
	adds r0, r1, #1
	str r0, [r5]
	adds r0, r5, r1
	strb r4, [r0, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B0AC8: .word 0x00000BB7
_021B0ACC: .word 0x021DAEF0
_021B0AD0: .word 0x021DAF1C
	thumb_func_end FUN_021B0A98

	thumb_func_start FUN_021B0AD4
FUN_021B0AD4: ; 0x021B0AD4
	push {r3, r4}
	ldr r1, [r0, #4]
	adds r3, r0, r1
	ldrb r2, [r3, #8]
	adds r1, r1, #2
	lsls r4, r2, #8
	ldrb r2, [r3, #9]
	orrs r2, r4
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r1, [r0, #4]
	adds r0, r2, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021B0AD4

	thumb_func_start FUN_021B0AF0
FUN_021B0AF0: ; 0x021B0AF0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r5]
	ldr r0, _021B0B2C ; =0x00000BB6
	cmp r1, r0
	blo _021B0B08
	ldr r0, _021B0B30 ; =0x021DAEF0
	ldr r2, _021B0B34 ; =0x021DAF48
	movs r1, #0
	bl FUN_0203CBAC
_021B0B08:
	ldr r2, [r5]
	lsrs r1, r4, #0x10
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r2, [r5]
	lsrs r1, r4, #8
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r1, [r5]
	adds r0, r1, #1
	str r0, [r5]
	adds r0, r5, r1
	strb r4, [r0, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B0B2C: .word 0x00000BB6
_021B0B30: .word 0x021DAEF0
_021B0B34: .word 0x021DAF48
	thumb_func_end FUN_021B0AF0

	thumb_func_start FUN_021B0B38
FUN_021B0B38: ; 0x021B0B38
	push {r4, r5}
	ldr r1, [r0, #4]
	adds r5, r0, r1
	ldrb r2, [r5, #8]
	ldrb r4, [r5, #0xa]
	adds r1, r1, #3
	lsls r3, r2, #0x10
	ldrb r2, [r5, #9]
	lsls r2, r2, #8
	orrs r2, r3
	orrs r2, r4
	str r1, [r0, #4]
	adds r0, r2, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B0B38

	thumb_func_start FUN_021B0B58
FUN_021B0B58: ; 0x021B0B58
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r5]
	ldr r0, _021B0BA0 ; =0x00000BB5
	cmp r1, r0
	blo _021B0B70
	ldr r0, _021B0BA4 ; =0x021DAEF0
	ldr r2, _021B0BA8 ; =0x021DAF74
	movs r1, #0
	bl FUN_0203CBAC
_021B0B70:
	ldr r2, [r5]
	lsrs r1, r4, #0x18
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r2, [r5]
	lsrs r1, r4, #0x10
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r2, [r5]
	lsrs r1, r4, #8
	adds r0, r2, #1
	str r0, [r5]
	adds r0, r5, r2
	strb r1, [r0, #8]
	ldr r1, [r5]
	adds r0, r1, #1
	str r0, [r5]
	adds r0, r5, r1
	strb r4, [r0, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B0BA0: .word 0x00000BB5
_021B0BA4: .word 0x021DAEF0
_021B0BA8: .word 0x021DAF74
	thumb_func_end FUN_021B0B58

	thumb_func_start FUN_021B0BAC
FUN_021B0BAC: ; 0x021B0BAC
	push {r3, r4, r5, r6}
	ldr r3, [r0, #4]
	adds r6, r0, r3
	ldrb r4, [r6, #8]
	ldrb r1, [r6, #0xa]
	ldrb r2, [r6, #0xb]
	lsls r5, r4, #0x18
	ldrb r4, [r6, #9]
	lsls r1, r1, #8
	lsls r4, r4, #0x10
	orrs r4, r5
	orrs r1, r4
	orrs r2, r1
	adds r1, r3, #4
	str r1, [r0, #4]
	adds r0, r2, #0
	pop {r3, r4, r5, r6}
	bx lr
	thumb_func_end FUN_021B0BAC

	thumb_func_start FUN_021B0BD0
FUN_021B0BD0: ; 0x021B0BD0
	push {r3, r4, r5, r6, r7, lr}
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r3, #0
	bl FUN_021B0A98
	cmp r6, #0x43
	bgt _021B0C6E
	blt _021B0BE8
	b _021B0DAC
_021B0BE8:
	cmp r6, #0x34
	bgt _021B0C68
	cmp r6, #0
	bge _021B0BF2
	b _021B10AE
_021B0BF2:
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B0BFE: ; jump table
	.short _021B10AE - _021B0BFE - 2 ; case 0
	.short _021B0C86 - _021B0BFE - 2 ; case 1
	.short _021B0CA2 - _021B0BFE - 2 ; case 2
	.short _021B0D20 - _021B0BFE - 2 ; case 3
	.short _021B0E24 - _021B0BFE - 2 ; case 4
	.short _021B0F0A - _021B0BFE - 2 ; case 5
	.short _021B0FBC - _021B0BFE - 2 ; case 6
	.short _021B1080 - _021B0BFE - 2 ; case 7
	.short _021B1098 - _021B0BFE - 2 ; case 8
	.short _021B10AE - _021B0BFE - 2 ; case 9
	.short _021B10AE - _021B0BFE - 2 ; case 10
	.short _021B10AE - _021B0BFE - 2 ; case 11
	.short _021B10AE - _021B0BFE - 2 ; case 12
	.short _021B10AE - _021B0BFE - 2 ; case 13
	.short _021B10AE - _021B0BFE - 2 ; case 14
	.short _021B10AE - _021B0BFE - 2 ; case 15
	.short _021B10AE - _021B0BFE - 2 ; case 16
	.short _021B0C94 - _021B0BFE - 2 ; case 17
	.short _021B0CBC - _021B0BFE - 2 ; case 18
	.short _021B0D46 - _021B0BFE - 2 ; case 19
	.short _021B0DF4 - _021B0BFE - 2 ; case 20
	.short _021B0F44 - _021B0BFE - 2 ; case 21
	.short _021B1000 - _021B0BFE - 2 ; case 22
	.short _021B10AE - _021B0BFE - 2 ; case 23
	.short _021B10AE - _021B0BFE - 2 ; case 24
	.short _021B10AE - _021B0BFE - 2 ; case 25
	.short _021B10AE - _021B0BFE - 2 ; case 26
	.short _021B10AE - _021B0BFE - 2 ; case 27
	.short _021B10AE - _021B0BFE - 2 ; case 28
	.short _021B10AE - _021B0BFE - 2 ; case 29
	.short _021B10AE - _021B0BFE - 2 ; case 30
	.short _021B10AE - _021B0BFE - 2 ; case 31
	.short _021B10AE - _021B0BFE - 2 ; case 32
	.short _021B10AE - _021B0BFE - 2 ; case 33
	.short _021B0CD6 - _021B0BFE - 2 ; case 34
	.short _021B0D6C - _021B0BFE - 2 ; case 35
	.short _021B0E56 - _021B0BFE - 2 ; case 36
	.short _021B0F84 - _021B0BFE - 2 ; case 37
	.short _021B1040 - _021B0BFE - 2 ; case 38
	.short _021B10AE - _021B0BFE - 2 ; case 39
	.short _021B10AE - _021B0BFE - 2 ; case 40
	.short _021B10AE - _021B0BFE - 2 ; case 41
	.short _021B10AE - _021B0BFE - 2 ; case 42
	.short _021B10AE - _021B0BFE - 2 ; case 43
	.short _021B10AE - _021B0BFE - 2 ; case 44
	.short _021B10AE - _021B0BFE - 2 ; case 45
	.short _021B10AE - _021B0BFE - 2 ; case 46
	.short _021B10AE - _021B0BFE - 2 ; case 47
	.short _021B10AE - _021B0BFE - 2 ; case 48
	.short _021B10AE - _021B0BFE - 2 ; case 49
	.short _021B0CEC - _021B0BFE - 2 ; case 50
	.short _021B0D8E - _021B0BFE - 2 ; case 51
	.short _021B0E80 - _021B0BFE - 2 ; case 52
_021B0C68:
	cmp r6, #0x42
	beq _021B0D06
	pop {r3, r4, r5, r6, r7, pc}
_021B0C6E:
	cmp r6, #0x53
	bgt _021B0C7E
	blt _021B0C76
	b _021B0DD2
_021B0C76:
	cmp r6, #0x44
	bne _021B0C7C
	b _021B0EAA
_021B0C7C:
	pop {r3, r4, r5, r6, r7, pc}
_021B0C7E:
	cmp r6, #0x54
	bne _021B0C84
	b _021B0ED8
_021B0C84:
	pop {r3, r4, r5, r6, r7, pc}
_021B0C86:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0C94:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0CA2:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0CBC:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0CD6:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	bl FUN_021B0B58
	pop {r3, r4, r5, r6, r7, pc}
_021B0CEC:
	ldr r1, [r4]
	ldr r2, [r4, #4]
	lsls r1, r1, #0x1c
	lsrs r3, r1, #0x18
	movs r1, #0xf
	ands r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0D06:
	ldr r1, [r4]
	ldr r2, [r4, #4]
	lsls r1, r1, #0x1b
	lsrs r3, r1, #0x18
	movs r1, #7
	ands r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0D20:
	ldr r1, [r4]
	ldr r2, [r4, #4]
	lsls r1, r1, #0x1b
	lsrs r3, r1, #0x18
	movs r1, #7
	ands r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0D46:
	ldr r1, [r4]
	ldr r2, [r4, #4]
	lsls r1, r1, #0x1b
	lsrs r3, r1, #0x18
	movs r1, #7
	ands r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0D6C:
	ldr r2, [r4, #8]
	movs r1, #0x1f
	ands r1, r2
	ldr r2, [r4, #4]
	adds r0, r5, #0
	lsls r2, r2, #0x1b
	lsrs r3, r2, #0x16
	ldr r2, [r4]
	lsls r2, r2, #0x1b
	lsrs r2, r2, #0x11
	orrs r2, r3
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0D8E:
	ldr r2, [r4, #8]
	ldr r1, _021B10B0 ; =0x00003FFF
	adds r0, r5, #0
	ands r1, r2
	ldr r2, [r4, #4]
	lsls r2, r2, #0x1b
	lsrs r3, r2, #0xd
	ldr r2, [r4]
	lsls r2, r2, #0x1b
	lsrs r2, r2, #8
	orrs r2, r3
	orrs r1, r2
	bl FUN_021B0AF0
	pop {r3, r4, r5, r6, r7, pc}
_021B0DAC:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0DD2:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	bl FUN_021B0B58
	pop {r3, r4, r5, r6, r7, pc}
_021B0DF4:
	ldr r1, [r4]
	movs r6, #7
	lsls r1, r1, #0x1b
	lsrs r2, r1, #0x18
	ldr r1, [r4, #4]
	adds r0, r5, #0
	ands r1, r6
	orrs r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x1b
	lsrs r2, r1, #0x18
	ldr r1, [r4, #0xc]
	ands r1, r6
	orrs r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0E24:
	ldr r1, [r4]
	ldr r2, [r4, #4]
	lsls r1, r1, #0x1b
	lsrs r3, r1, #0x18
	movs r1, #7
	ands r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0E56:
	ldr r2, [r4, #8]
	ldr r1, _021B10B0 ; =0x00003FFF
	ldr r3, [r4]
	ands r2, r1
	ldr r1, [r4, #4]
	lsls r3, r3, #0x1b
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0xd
	lsrs r3, r3, #8
	orrs r1, r3
	adds r0, r5, #0
	orrs r1, r2
	bl FUN_021B0AF0
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	pop {r3, r4, r5, r6, r7, pc}
_021B0E80:
	ldr r2, [r4, #8]
	ldr r1, _021B10B0 ; =0x00003FFF
	ldr r3, [r4]
	ands r2, r1
	ldr r1, [r4, #4]
	lsls r3, r3, #0x1b
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0xd
	lsrs r3, r3, #8
	orrs r1, r3
	adds r0, r5, #0
	orrs r1, r2
	bl FUN_021B0AF0
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0EAA:
	ldr r2, [r4, #8]
	movs r1, #0x3f
	ands r2, r1
	ldr r1, [r4, #4]
	ldr r3, [r4]
	lsls r1, r1, #0x1b
	lsls r3, r3, #0x1b
	lsrs r1, r1, #0x15
	lsrs r3, r3, #0x10
	orrs r1, r3
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0ED8:
	ldr r1, [r4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #4]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #8]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0F0A:
	ldr r2, [r4, #8]
	movs r1, #0x1f
	ands r2, r1
	ldr r1, [r4, #4]
	ldr r3, [r4]
	lsls r1, r1, #0x1b
	lsls r3, r3, #0x1b
	lsrs r1, r1, #0x16
	lsrs r3, r3, #0x11
	orrs r1, r3
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	ldr r1, [r4, #0xc]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	ldr r1, [r4, #0x10]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0F44:
	ldr r0, [r4, #8]
	ldr r1, [r4, #0xc]
	lsls r0, r0, #0x19
	lsrs r2, r0, #0x18
	movs r0, #1
	ands r0, r1
	orrs r0, r2
	ldr r1, [r4]
	ldr r3, [r4, #4]
	lsls r1, r1, #0x1b
	movs r2, #7
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsrs r1, r1, #0x18
	ands r2, r3
	orrs r1, r2
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A98
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B0A98
	ldr r1, [r4, #0x10]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0F84:
	ldr r2, [r4, #0xc]
	ldr r6, [r4, #4]
	movs r1, #1
	adds r3, r2, #0
	ands r3, r1
	ldr r1, [r4, #8]
	lsls r6, r6, #0x1d
	lsls r1, r1, #0x1f
	lsrs r2, r1, #0x1e
	ldr r1, [r4]
	lsrs r6, r6, #0x1b
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x18
	orrs r1, r6
	orrs r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #0x10]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B0FBC:
	ldr r0, [r4, #0x14]
	ldr r3, [r4, #0xc]
	adds r2, r0, #0
	ldr r0, [r4, #0x10]
	lsls r3, r3, #0x1b
	lsls r0, r0, #0x1b
	movs r1, #0x1f
	lsrs r0, r0, #0x16
	lsrs r3, r3, #0x11
	orrs r0, r3
	ands r2, r1
	orrs r0, r2
	ldr r2, [r4, #8]
	ldr r3, [r4]
	ands r2, r1
	ldr r1, [r4, #4]
	lsls r3, r3, #0x1b
	lsls r1, r1, #0x1b
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsrs r1, r1, #0x16
	lsrs r3, r3, #0x11
	orrs r1, r3
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B1000:
	ldr r2, [r4, #0x10]
	ldr r6, [r4]
	movs r1, #1
	adds r3, r2, #0
	ands r3, r1
	ldr r1, [r4, #0xc]
	lsls r6, r6, #0x1d
	lsls r1, r1, #0x1f
	lsrs r7, r6, #0x18
	ldr r6, [r4, #4]
	lsrs r2, r1, #0x1e
	ldr r1, [r4, #8]
	lsls r6, r6, #0x1e
	lsls r1, r1, #0x1f
	lsrs r6, r6, #0x1b
	lsrs r1, r1, #0x1d
	orrs r6, r7
	orrs r1, r6
	orrs r1, r2
	orrs r1, r3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	ldr r1, [r4, #0x14]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B1040:
	ldr r2, [r4, #0xc]
	ldr r6, [r4, #4]
	movs r1, #0x1f
	adds r3, r2, #0
	ands r3, r1
	ldr r1, [r4, #8]
	lsls r6, r6, #0x1b
	lsls r1, r1, #0x1b
	lsrs r2, r1, #0x16
	ldr r1, [r4]
	lsrs r6, r6, #0x11
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0xc
	orrs r1, r6
	orrs r1, r2
	adds r0, r5, #0
	orrs r1, r3
	bl FUN_021B0AF0
	ldr r1, [r4, #0x10]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	ldr r1, [r4, #0x14]
	adds r0, r5, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
	pop {r3, r4, r5, r6, r7, pc}
_021B1080:
	movs r6, #0
_021B1082:
	lsls r1, r6, #2
	ldr r1, [r4, r1]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	adds r6, r6, #1
	cmp r6, #7
	blt _021B1082
	pop {r3, r4, r5, r6, r7, pc}
_021B1098:
	movs r6, #0
_021B109A:
	lsls r1, r6, #2
	ldr r1, [r4, r1]
	adds r0, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	adds r6, r6, #1
	cmp r6, #8
	blt _021B109A
_021B10AE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B10B0: .word 0x00003FFF
	thumb_func_end FUN_021B0BD0

	thumb_func_start FUN_021B10B4
FUN_021B10B4: ; 0x021B10B4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r4, r2, #0
	cmp r1, #0x43
	bgt _021B1148
	blt _021B10C2
	b _021B1230
_021B10C2:
	cmp r1, #0x34
	bgt _021B1142
	cmp r1, #0
	bge _021B10CC
	b _021B146E
_021B10CC:
	adds r2, r1, r1
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_021B10D8: ; jump table
	.short _021B146E - _021B10D8 - 2 ; case 0
	.short _021B115E - _021B10D8 - 2 ; case 1
	.short _021B116E - _021B10D8 - 2 ; case 2
	.short _021B11C6 - _021B10D8 - 2 ; case 3
	.short _021B1284 - _021B10D8 - 2 ; case 4
	.short _021B132E - _021B10D8 - 2 ; case 5
	.short _021B13B8 - _021B10D8 - 2 ; case 6
	.short _021B1448 - _021B10D8 - 2 ; case 7
	.short _021B145C - _021B10D8 - 2 ; case 8
	.short _021B146E - _021B10D8 - 2 ; case 9
	.short _021B146E - _021B10D8 - 2 ; case 10
	.short _021B146E - _021B10D8 - 2 ; case 11
	.short _021B146E - _021B10D8 - 2 ; case 12
	.short _021B146E - _021B10D8 - 2 ; case 13
	.short _021B146E - _021B10D8 - 2 ; case 14
	.short _021B146E - _021B10D8 - 2 ; case 15
	.short _021B146E - _021B10D8 - 2 ; case 16
	.short _021B1166 - _021B10D8 - 2 ; case 17
	.short _021B117E - _021B10D8 - 2 ; case 18
	.short _021B11E2 - _021B10D8 - 2 ; case 19
	.short _021B1260 - _021B10D8 - 2 ; case 20
	.short _021B1356 - _021B10D8 - 2 ; case 21
	.short _021B13EA - _021B10D8 - 2 ; case 22
	.short _021B146E - _021B10D8 - 2 ; case 23
	.short _021B146E - _021B10D8 - 2 ; case 24
	.short _021B146E - _021B10D8 - 2 ; case 25
	.short _021B146E - _021B10D8 - 2 ; case 26
	.short _021B146E - _021B10D8 - 2 ; case 27
	.short _021B146E - _021B10D8 - 2 ; case 28
	.short _021B146E - _021B10D8 - 2 ; case 29
	.short _021B146E - _021B10D8 - 2 ; case 30
	.short _021B146E - _021B10D8 - 2 ; case 31
	.short _021B146E - _021B10D8 - 2 ; case 32
	.short _021B146E - _021B10D8 - 2 ; case 33
	.short _021B118E - _021B10D8 - 2 ; case 34
	.short _021B11FE - _021B10D8 - 2 ; case 35
	.short _021B12A8 - _021B10D8 - 2 ; case 36
	.short _021B1390 - _021B10D8 - 2 ; case 37
	.short _021B141A - _021B10D8 - 2 ; case 38
	.short _021B146E - _021B10D8 - 2 ; case 39
	.short _021B146E - _021B10D8 - 2 ; case 40
	.short _021B146E - _021B10D8 - 2 ; case 41
	.short _021B146E - _021B10D8 - 2 ; case 42
	.short _021B146E - _021B10D8 - 2 ; case 43
	.short _021B146E - _021B10D8 - 2 ; case 44
	.short _021B146E - _021B10D8 - 2 ; case 45
	.short _021B146E - _021B10D8 - 2 ; case 46
	.short _021B146E - _021B10D8 - 2 ; case 47
	.short _021B146E - _021B10D8 - 2 ; case 48
	.short _021B146E - _021B10D8 - 2 ; case 49
	.short _021B119E - _021B10D8 - 2 ; case 50
	.short _021B1216 - _021B10D8 - 2 ; case 51
	.short _021B12CA - _021B10D8 - 2 ; case 52
_021B1142:
	cmp r1, #0x42
	beq _021B11B0
	pop {r3, r4, r5, r6, r7, pc}
_021B1148:
	cmp r1, #0x53
	bgt _021B1156
	bge _021B1248
	cmp r1, #0x44
	bne _021B1154
	b _021B12EC
_021B1154:
	pop {r3, r4, r5, r6, r7, pc}
_021B1156:
	cmp r1, #0x54
	bne _021B115C
	b _021B130E
_021B115C:
	pop {r3, r4, r5, r6, r7, pc}
_021B115E:
	bl FUN_021B0A8C
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021B1166:
	bl FUN_021B0AD4
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021B116E:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021B117E:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021B118E:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0BAC
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021B119E:
	bl FUN_021B0A8C
	asrs r2, r0, #4
	movs r1, #0xf
	ands r2, r1
	ands r0, r1
	str r2, [r4]
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021B11B0:
	adds r0, r6, #0
	bl FUN_021B0A8C
	asrs r2, r0, #3
	movs r1, #0x1f
	ands r1, r2
	str r1, [r4]
	movs r1, #7
	ands r0, r1
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021B11C6:
	bl FUN_021B0A8C
	asrs r2, r0, #3
	movs r1, #0x1f
	ands r1, r2
	str r1, [r4]
	movs r1, #7
	ands r0, r1
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B11E2:
	bl FUN_021B0A8C
	asrs r2, r0, #3
	movs r1, #0x1f
	ands r1, r2
	str r1, [r4]
	movs r1, #7
	ands r0, r1
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B11FE:
	bl FUN_021B0AD4
	lsrs r2, r0, #0xa
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #5
	ands r2, r1
	ands r0, r1
	str r2, [r4, #4]
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B1216:
	bl FUN_021B0B38
	lsrs r2, r0, #0x13
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #0xe
	ands r1, r2
	str r1, [r4, #4]
	ldr r1, _021B1470 ; =0x00003FFF
	ands r0, r1
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B1230:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B1248:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0BAC
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_021B1260:
	bl FUN_021B0A8C
	movs r5, #7
	asrs r1, r0, #3
	movs r7, #0x1f
	ands r0, r5
	ands r1, r7
	str r0, [r4, #4]
	adds r0, r6, #0
	str r1, [r4]
	bl FUN_021B0A8C
	asrs r1, r0, #3
	ands r1, r7
	ands r0, r5
	str r1, [r4, #8]
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B1284:
	bl FUN_021B0A8C
	asrs r2, r0, #3
	movs r1, #0x1f
	ands r1, r2
	str r1, [r4]
	movs r1, #7
	ands r0, r1
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B12A8:
	bl FUN_021B0B38
	lsrs r2, r0, #0x13
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #0xe
	ands r1, r2
	str r1, [r4, #4]
	ldr r1, _021B1470 ; =0x00003FFF
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B12CA:
	bl FUN_021B0B38
	lsrs r2, r0, #0x13
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #0xe
	ands r1, r2
	str r1, [r4, #4]
	ldr r1, _021B1470 ; =0x00003FFF
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B12EC:
	bl FUN_021B0AD4
	lsrs r2, r0, #0xb
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #6
	ands r1, r2
	str r1, [r4, #4]
	movs r1, #0x3f
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B130E:
	bl FUN_021B0A8C
	str r0, [r4]
	adds r0, r6, #0
	bl FUN_021B0A8C
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
_021B132E:
	bl FUN_021B0AD4
	lsrs r2, r0, #0xa
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #5
	ands r0, r1
	ands r2, r1
	str r0, [r4, #8]
	adds r0, r6, #0
	str r2, [r4, #4]
	bl FUN_021B0AD4
	str r0, [r4, #0xc]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021B1356:
	bl FUN_021B0AD4
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021B0AD4
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	asrs r3, r1, #3
	movs r2, #0x1f
	ands r2, r3
	str r2, [r4]
	movs r2, #7
	ands r1, r2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	str r1, [r4, #4]
	asrs r1, r2, #1
	movs r0, #0x7f
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #1
	ands r0, r2
	str r0, [r4, #0xc]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021B1390:
	bl FUN_021B0A8C
	lsrs r2, r0, #5
	movs r1, #7
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #2
	ands r1, r2
	str r1, [r4, #4]
	movs r1, #1
	lsrs r2, r0, #1
	ands r0, r1
	ands r2, r1
	str r0, [r4, #0xc]
	adds r0, r6, #0
	str r2, [r4, #8]
	bl FUN_021B0AD4
	str r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021B13B8:
	bl FUN_021B0AD4
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021B0AD4
	lsrs r2, r5, #0xa
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r5, #5
	ands r2, r1
	str r2, [r4, #4]
	adds r2, r5, #0
	ands r2, r1
	str r2, [r4, #8]
	lsrs r2, r0, #0xa
	ands r2, r1
	str r2, [r4, #0xc]
	lsrs r2, r0, #5
	ands r2, r1
	ands r0, r1
	str r2, [r4, #0x10]
	str r0, [r4, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
_021B13EA:
	bl FUN_021B0A8C
	lsrs r2, r0, #5
	movs r1, #7
	ands r1, r2
	str r1, [r4]
	lsrs r2, r0, #3
	movs r1, #3
	ands r1, r2
	str r1, [r4, #4]
	lsrs r2, r0, #2
	movs r1, #1
	ands r2, r1
	str r2, [r4, #8]
	lsrs r2, r0, #1
	ands r0, r1
	ands r2, r1
	str r0, [r4, #0x10]
	adds r0, r6, #0
	str r2, [r4, #0xc]
	bl FUN_021B0AD4
	str r0, [r4, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
_021B141A:
	bl FUN_021B0B38
	lsrs r2, r0, #0xf
	movs r1, #0x1f
	ands r2, r1
	str r2, [r4]
	lsrs r2, r0, #0xa
	ands r2, r1
	str r2, [r4, #4]
	lsrs r2, r0, #5
	ands r0, r1
	ands r2, r1
	str r0, [r4, #0xc]
	adds r0, r6, #0
	str r2, [r4, #8]
	bl FUN_021B0AD4
	str r0, [r4, #0x10]
	adds r0, r6, #0
	bl FUN_021B0AD4
	str r0, [r4, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
_021B1448:
	movs r5, #0
_021B144A:
	adds r0, r6, #0
	bl FUN_021B0A8C
	lsls r1, r5, #2
	adds r5, r5, #1
	str r0, [r4, r1]
	cmp r5, #7
	blt _021B144A
	pop {r3, r4, r5, r6, r7, pc}
_021B145C:
	movs r5, #0
_021B145E:
	adds r0, r6, #0
	bl FUN_021B0A8C
	lsls r1, r5, #2
	adds r5, r5, #1
	str r0, [r4, r1]
	cmp r5, #8
	blt _021B145E
_021B146E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B1470: .word 0x00003FFF
	thumb_func_end FUN_021B10B4

	thumb_func_start FUN_021B1474
FUN_021B1474: ; 0x021B1474
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021B1474

	non_word_aligned_thumb_func_start FUN_021B1476
FUN_021B1476: ; 0x021B1476
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r1, [sp, #0x1c]
	ldr r0, _021B14B8 ; =0x021D6E90
	movs r5, #0
	ldrb r2, [r0, r1]
	movs r0, #0xf
	add r1, sp, #0x1c
	adds r6, r2, #0
	ands r6, r0
	movs r0, #3
	bics r1, r0
	adds r4, r1, #4
	cmp r6, #0
	bls _021B14A6
	ldr r0, _021B14BC ; =0x021DB064
_021B1496:
	adds r4, r4, #4
	subs r1, r4, #4
	ldr r3, [r1]
	lsls r1, r5, #2
	adds r5, r5, #1
	str r3, [r0, r1]
	cmp r5, r6
	blo _021B1496
_021B14A6:
	ldr r1, [sp, #0x1c]
	ldr r3, _021B14BC ; =0x021DB064
	adds r0, r7, #0
	bl FUN_021B0BD0
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
_021B14B8: .word 0x021D6E90
_021B14BC: .word 0x021DB064
	thumb_func_end FUN_021B1476

	thumb_func_start FUN_021B14C0
FUN_021B14C0: ; 0x021B14C0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021B1520 ; =0x021D6E90
	adds r7, r1, #0
	ldrb r2, [r0, r7]
	movs r0, #0xf
	ldr r6, _021B1524 ; =0x00000000
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	beq _021B14E8
	ldr r0, _021B1528 ; =0x021DB064
	adds r3, r6, #0
_021B14DA:
	lsls r1, r6, #2
	str r3, [r0, r1]
	adds r1, r6, #1
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	cmp r6, r4
	blo _021B14DA
_021B14E8:
	ldr r0, [r5]
	ldr r3, _021B1528 ; =0x021DB064
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021B0BD0
	ldr r0, [r5]
	movs r1, #0x5f
	subs r0, r0, r4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	str r4, [r5]
	bl FUN_021B0A98
	subs r1, r6, #3
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B0A5C
	adds r0, r4, r6
	str r0, [r5]
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B1520: .word 0x021D6E90
_021B1524: .word 0x00000000
_021B1528: .word 0x021DB064
	thumb_func_end FUN_021B14C0

	thumb_func_start FUN_021B152C
FUN_021B152C: ; 0x021B152C
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021B152C

	non_word_aligned_thumb_func_start FUN_021B152E
FUN_021B152E: ; 0x021B152E
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r1, #0
	ldr r1, [sp, #0x20]
	ldr r0, _021B159C ; =0x021D6E90
	movs r5, #0
	ldrb r0, [r0, r1]
	movs r1, #0xf
	adds r6, r0, #0
	str r0, [sp]
	ands r6, r1
	add r1, sp, #0x20
	movs r0, #3
	bics r1, r0
	adds r3, r1, #4
	cmp r6, #0
	bls _021B1562
	ldr r0, _021B15A0 ; =0x021DB064
_021B1552:
	adds r3, r3, #4
	subs r1, r3, #4
	ldr r2, [r1]
	lsls r1, r5, #2
	adds r5, r5, #1
	str r2, [r0, r1]
	cmp r5, r6
	blo _021B1552
_021B1562:
	ldr r0, [r4, #4]
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r4, #0
	str r7, [r4, #4]
	bl FUN_021B0AD4
	adds r0, r4, #0
	bl FUN_021B0A8C
	str r5, [r4, #4]
	ldr r0, [sp, #0x20]
	cmp r0, #0x5f
	beq _021B1594
	ldr r0, [r4]
	ldr r2, [sp]
	str r7, [r4]
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [sp, #0x20]
	ldr r3, _021B15A0 ; =0x021DB064
	adds r0, r4, #0
	bl FUN_021B0BD0
	str r5, [r4]
_021B1594:
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
_021B159C: .word 0x021D6E90
_021B15A0: .word 0x021DB064
	thumb_func_end FUN_021B152E

	thumb_func_start FUN_021B15A4
FUN_021B15A4: ; 0x021B15A4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_021B0AD4
	adds r4, r0, #0
	cmp r4, #0x5f
	bne _021B15D6
_021B15B4:
	adds r0, r5, #0
	bl FUN_021B0A8C
	ldr r1, [r5, #4]
	adds r1, r1, r0
	ldr r0, [r5]
	str r1, [r5, #4]
	cmp r1, r0
	blo _021B15CA
	movs r0, #0x5e
	pop {r4, r5, r6, pc}
_021B15CA:
	adds r0, r5, #0
	bl FUN_021B0AD4
	adds r4, r0, #0
	cmp r4, #0x5f
	beq _021B15B4
_021B15D6:
	ldr r0, _021B15FC ; =0x021D6E90
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _021B15EC
	cmp r1, #0x10
	beq _021B15EC
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021B10B4
	b _021B15F8
_021B15EC:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	adds r2, r6, #0
	bl FUN_021B1670
_021B15F8:
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B15FC: .word 0x021D6E90
	thumb_func_end FUN_021B15A4

	thumb_func_start FUN_021B1600
FUN_021B1600: ; 0x021B1600
	ldr r3, _021B1604 ; =FUN_021B0A5C
	bx r3
	.align 2, 0
_021B1604: .word FUN_021B0A5C
	thumb_func_end FUN_021B1600

	thumb_func_start FUN_021B1608
FUN_021B1608: ; 0x021B1608
	ldr r3, _021B160C ; =FUN_021B0A8C
	bx r3
	.align 2, 0
_021B160C: .word FUN_021B0A8C
	thumb_func_end FUN_021B1608

	thumb_func_start FUN_021B1610
FUN_021B1610: ; 0x021B1610
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021B1610

	non_word_aligned_thumb_func_start FUN_021B1612
FUN_021B1612: ; 0x021B1612
	push {r3, r4, r5, r6, r7, lr}
	add r2, sp, #0x1c
	movs r1, #3
	bics r2, r1
	adds r1, r2, #4
	adds r4, r1, #4
	subs r1, r4, #4
	ldr r1, [r1]
	add r7, sp, #0x1c
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldrb r1, [r7]
	adds r6, r0, #0
	bl FUN_021B0A98
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021B0A98
	ldrb r0, [r7]
	cmp r0, #0x5c
	bne _021B164E
	adds r4, r4, #4
	subs r1, r4, #4
	ldr r1, [r1]
	adds r0, r6, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021B0A98
_021B164E:
	ldr r7, _021B166C ; =0xFFFF0000
_021B1650:
	adds r4, r4, #4
	subs r0, r4, #4
	ldr r5, [r0]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021B0B58
	cmp r5, r7
	bne _021B1650
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	nop
_021B166C: .word 0xFFFF0000
	thumb_func_end FUN_021B1612

	thumb_func_start FUN_021B1670
FUN_021B1670: ; 0x021B1670
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	movs r5, #1
	bl FUN_021B0AD4
	str r0, [r6]
	cmp r4, #0x5c
	bne _021B168E
	adds r0, r7, #0
	bl FUN_021B0AD4
	str r0, [r6, #4]
	adds r5, r5, #1
_021B168E:
	cmp r5, #0x10
	bge _021B16A8
_021B1692:
	adds r0, r7, #0
	lsls r4, r5, #2
	bl FUN_021B0BAC
	ldr r1, _021B16AC ; =0xFFFF0000
	str r0, [r6, r4]
	cmp r0, r1
	beq _021B16A8
	adds r5, r5, #1
	cmp r5, #0x10
	blt _021B1692
_021B16A8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B16AC: .word 0xFFFF0000
	thumb_func_end FUN_021B1670

	thumb_func_start FUN_021B16B0
FUN_021B16B0: ; 0x021B16B0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B16B0

	thumb_func_start FUN_021B16B4
FUN_021B16B4: ; 0x021B16B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp, #4]
	adds r6, r1, #0
	ldr r7, [sp, #0x28]
	ldr r0, [sp, #0x40]
	adds r4, r2, #0
	str r3, [sp, #8]
	movs r2, #1
	str r2, [sp, #0xc]
	ldr r1, _021B18B8 ; =0x00000281
	str r0, [sp, #0x40]
	str r1, [sp]
	ldr r0, [sp, #0x40]
	ldr r3, _021B18BC ; =0x021DAFA0
	subs r1, #0x2d
	movs r2, #1
	bl FUN_0203A228
	adds r5, r0, #0
	cmp r4, #0
	beq _021B16E8
	add r0, sp, #0x28
	ldrb r0, [r0, #8]
	cmp r0, #0
	beq _021B16EC
_021B16E8:
	movs r0, #0
	str r0, [sp, #0xc]
_021B16EC:
	lsls r0, r7, #0x18
	ldr r4, _021B18C0 ; =0x000001AE
	lsrs r1, r0, #0x18
	strb r1, [r5, r4]
	adds r2, r4, #0
	ldr r0, [sp, #0x40]
	subs r2, #0xc
	strh r0, [r5, r2]
	add r0, sp, #0x28
	ldrb r2, [r0, #8]
	adds r0, r4, #1
	strb r2, [r5, r0]
	ldr r0, [sp, #8]
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #0x40]
	bl FUN_021D4A84
	str r0, [r5, #0x50]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_0219D414
	adds r1, r4, #0
	subs r1, #0x8e
	str r0, [r5, r1]
	ldr r0, [sp, #4]
	ldr r3, _021B18BC ; =0x021DAFA0
	str r0, [r5]
	str r6, [r5, #4]
	add r0, sp, #0x28
	ldrh r1, [r0, #4]
	adds r0, r4, #0
	subs r0, #0x8a
	strb r1, [r5, r0]
	adds r0, r4, #0
	movs r1, #0x2f
	movs r6, #0
	subs r0, #0x89
	strb r6, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x85
	strb r7, [r5, r0]
	adds r0, r5, #0
	adds r0, #0xcc
	strb r6, [r0]
	adds r0, r4, #0
	str r6, [r5, #0x54]
	subs r0, #0xa
	strh r6, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xe4
	str r0, [sp]
	ldr r0, [sp, #0x40]
	lsls r1, r1, #6
	movs r2, #1
	bl FUN_0203A228
	adds r1, r4, #0
	subs r1, #0x72
	str r0, [r5, r1]
	ldr r0, _021B18C4 ; =FUN_021B1A14
	str r0, [r5, #0x28]
	adds r0, r4, #2
	strb r6, [r5, r0]
	adds r0, r5, #0
	adds r0, #0xa8
	str r6, [r0]
	adds r0, r4, #0
	adds r0, #0xc
	ldrb r1, [r5, r0]
	movs r0, #8
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xc
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #8
	strb r6, [r5, r0]
	adds r0, r4, #3
	strb r6, [r5, r0]
	adds r0, r4, #5
	strb r6, [r5, r0]
	adds r0, r5, #0
	adds r0, #0xec
	strh r6, [r0]
	adds r0, r5, #0
	adds r0, #0xee
	strh r6, [r0]
	adds r0, r4, #7
	strb r6, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xc
	ldrb r1, [r5, r0]
	movs r0, #1
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xc
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xc
	ldrb r1, [r5, r0]
	movs r0, #2
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xc
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xc
	ldrb r1, [r5, r0]
	movs r0, #0x10
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xc
	strb r1, [r5, r0]
	adds r0, r4, #0
	adds r0, #0xc
	ldrb r1, [r5, r0]
	movs r0, #0x20
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0xc
	strb r1, [r5, r0]
	ldr r0, [sp, #4]
	bl FUN_0219D9E8
	str r0, [r5, #0x34]
	adds r0, r4, #0
	adds r0, #0xf
	strb r6, [r5, r0]
	ldr r1, [sp, #0x34]
	adds r0, r4, #4
	strb r1, [r5, r0]
	adds r0, r5, #0
	adds r0, #0x2c
	bl FUN_021BDA98
	adds r0, r5, #0
	adds r0, #0x18
	bl FUN_021B9358
	adds r0, r5, #0
	bl FUN_021B91F0
	ldr r3, [sp, #0x3c]
	adds r2, r5, #0
	adds r2, #0xfc
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	adds r0, r4, #1
	ldrb r0, [r5, r0]
	cmp r0, #1
	bne _021B1854
	ldr r0, [sp, #0x38]
	cmp r0, #0
	bne _021B1854
	ldrb r1, [r5, r4]
	ldr r0, [r5]
	bl FUN_0219D914
	adds r6, r0, #0
	ldr r0, [r5]
	bl FUN_0219E198
	subs r4, #0xc
	adds r1, r0, #0
	ldrh r0, [r5, r4]
	adds r3, r6, #0
	str r0, [sp]
	ldr r0, [r5]
	ldr r2, [r5, #4]
	bl FUN_0217F640
	adds r1, r5, #0
	adds r1, #0xf8
	str r0, [r1]
	b _021B185C
_021B1854:
	adds r0, r5, #0
	movs r1, #0
	adds r0, #0xf8
	str r1, [r0]
_021B185C:
	movs r3, #0
	ldr r0, _021B18C8 ; =0x0000011A
	adds r2, r3, #0
_021B1862:
	adds r1, r5, r3
	adds r3, r3, #1
	strb r2, [r1, r0]
	cmp r3, #4
	blo _021B1862
	ldr r0, [r5]
	bl FUN_0219C9C8
	adds r4, r0, #0
	ldr r0, _021B18CC ; =0x000001AF
	ldrb r0, [r5, r0]
	cmp r0, #0
	bne _021B1890
	ldr r0, [r5]
	bl FUN_0219C9A4
	cmp r0, #0
	beq _021B1890
	ldr r0, [sp, #0x40]
	adds r1, r4, #0
	bl FUN_021D45F0
	b _021B1892
_021B1890:
	movs r0, #0
_021B1892:
	str r0, [r5, #0x10]
	cmp r4, #2
	bne _021B18B2
	ldr r0, [r5]
	bl FUN_0219E34C
	movs r2, #0x4a
	lsls r2, r2, #2
	adds r1, r2, #0
	ldrb r3, [r0, r2]
	adds r1, #0xf4
	strh r3, [r5, r1]
	adds r1, r2, #4
	ldr r0, [r0, r1]
	adds r2, #0xf8
	str r0, [r5, r2]
_021B18B2:
	adds r0, r5, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B18B8: .word 0x00000281
_021B18BC: .word 0x021DAFA0
_021B18C0: .word 0x000001AE
_021B18C4: .word FUN_021B1A14
_021B18C8: .word 0x0000011A
_021B18CC: .word 0x000001AF
	thumb_func_end FUN_021B16B4

	thumb_func_start FUN_021B18D0
FUN_021B18D0: ; 0x021B18D0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _021B18DE
	bl FUN_021D4628
_021B18DE:
	adds r0, r4, #0
	adds r0, #0xf8
	ldr r0, [r0]
	cmp r0, #0
	beq _021B18EC
	bl FUN_0217F7C0
_021B18EC:
	movs r0, #0x4f
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0203A278
	ldr r0, [r4, #0x50]
	bl FUN_021D4B0C
	adds r0, r4, #0
	bl FUN_0203A278
	pop {r4, pc}
	thumb_func_end FUN_021B18D0

	thumb_func_start FUN_021B1904
FUN_021B1904: ; 0x021B1904
	ldr r2, _021B1910 ; =0x000001BA
	movs r1, #2
	ldrb r3, [r0, r2]
	orrs r1, r3
	strb r1, [r0, r2]
	bx lr
	.align 2, 0
_021B1910: .word 0x000001BA
	thumb_func_end FUN_021B1904

	thumb_func_start FUN_021B1914
FUN_021B1914: ; 0x021B1914
	push {r3, lr}
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _021B1922
	bl FUN_021D4668
	pop {r3, pc}
_021B1922:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B1914

	thumb_func_start FUN_021B1928
FUN_021B1928: ; 0x021B1928
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _021B1948 ; =0x000001AF
	movs r2, #2
	strb r2, [r4, r0]
	adds r0, r1, #0
	str r1, [r4, #0x14]
	bl FUN_021D485C
	adds r4, #0x18
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021B939C
	pop {r4, pc}
	nop
_021B1948: .word 0x000001AF
	thumb_func_end FUN_021B1928

	thumb_func_start FUN_021B194C
FUN_021B194C: ; 0x021B194C
	str r1, [r0, #0x54]
	bx lr
	thumb_func_end FUN_021B194C

	thumb_func_start FUN_021B1950
FUN_021B1950: ; 0x021B1950
	adds r2, r0, #0
	adds r2, #0xa8
	str r1, [r2]
	ldr r2, _021B1964 ; =0x000001BA
	movs r1, #8
	ldrb r3, [r0, r2]
	orrs r1, r3
	strb r1, [r0, r2]
	bx lr
	nop
_021B1964: .word 0x000001BA
	thumb_func_end FUN_021B1950

	thumb_func_start FUN_021B1968
FUN_021B1968: ; 0x021B1968
	ldr r0, [r0, #0x50]
	bx lr
	thumb_func_end FUN_021B1968

	thumb_func_start FUN_021B196C
FUN_021B196C: ; 0x021B196C
	push {r3, lr}
	ldr r1, [r0, #0x28]
	blx r1
	pop {r3, pc}
	thumb_func_end FUN_021B196C

	thumb_func_start FUN_021B1974
FUN_021B1974: ; 0x021B1974
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x14]
	adds r4, r1, #0
	bl FUN_021D46A0
	ldr r0, [r5, #0x50]
	bl FUN_021D4C08
	adds r0, r5, #0
	adds r0, #0x18
	adds r1, r4, #0
	bl FUN_021B93B8
	ldr r1, _021B199C ; =FUN_021B1C10
	adds r0, r5, #0
	bl FUN_021B1A08
	pop {r3, r4, r5, pc}
	nop
_021B199C: .word FUN_021B1C10
	thumb_func_end FUN_021B1974

	thumb_func_start FUN_021B19A0
FUN_021B19A0: ; 0x021B19A0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x18
	bl FUN_021B93DC
	ldr r1, _021B19B4 ; =FUN_021B1A14
	adds r0, r4, #0
	bl FUN_021B1A08
	pop {r4, pc}
	.align 2, 0
_021B19B4: .word FUN_021B1A14
	thumb_func_end FUN_021B19A0

	thumb_func_start FUN_021B19B8
FUN_021B19B8: ; 0x021B19B8
	ldr r1, _021B19C8 ; =0x000001AF
	ldrb r0, [r0, r1]
	cmp r0, #2
	bne _021B19C4
	movs r0, #1
	bx lr
_021B19C4:
	movs r0, #0
	bx lr
	.align 2, 0
_021B19C8: .word 0x000001AF
	thumb_func_end FUN_021B19B8

	thumb_func_start FUN_021B19CC
FUN_021B19CC: ; 0x021B19CC
	ldrh r0, [r0, #0x22]
	bx lr
	thumb_func_end FUN_021B19CC

	thumb_func_start FUN_021B19D0
FUN_021B19D0: ; 0x021B19D0
	ldr r1, [r0, #0x28]
	ldr r0, _021B19E0 ; =FUN_021B1C10
	cmp r1, r0
	bne _021B19DC
	movs r0, #1
	bx lr
_021B19DC:
	movs r0, #0
	bx lr
	.align 2, 0
_021B19E0: .word FUN_021B1C10
	thumb_func_end FUN_021B19D0

	thumb_func_start FUN_021B19E4
FUN_021B19E4: ; 0x021B19E4
	movs r1, #0x4b
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	bx lr
	thumb_func_end FUN_021B19E4

	thumb_func_start FUN_021B19F0
FUN_021B19F0: ; 0x021B19F0
	ldr r2, _021B1A04 ; =0x000001B3
	ldrb r3, [r0, r2]
	adds r1, r3, r1
	strb r1, [r0, r2]
	ldrb r1, [r0, r2]
	cmp r1, #0xe
	bls _021B1A02
	movs r1, #0xe
	strb r1, [r0, r2]
_021B1A02:
	bx lr
	.align 2, 0
_021B1A04: .word 0x000001B3
	thumb_func_end FUN_021B19F0

	thumb_func_start FUN_021B1A08
FUN_021B1A08: ; 0x021B1A08
	str r1, [r0, #0x28]
	movs r1, #0x1b
	movs r2, #0
	lsls r1, r1, #4
	strb r2, [r0, r1]
	bx lr
	thumb_func_end FUN_021B1A08

	thumb_func_start FUN_021B1A14
FUN_021B1A14: ; 0x021B1A14
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x18
	bl FUN_021B9430
	movs r5, #0x1b
	lsls r5, r5, #4
	ldrb r0, [r4, r5]
	cmp r0, #7
	bls _021B1A2E
	b _021B1BFE
_021B1A2E:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B1A3A: ; jump table
	.short _021B1A4A - _021B1A3A - 2 ; case 0
	.short _021B1B0C - _021B1A3A - 2 ; case 1
	.short _021B1B46 - _021B1A3A - 2 ; case 2
	.short _021B1B70 - _021B1A3A - 2 ; case 3
	.short _021B1BA8 - _021B1A3A - 2 ; case 4
	.short _021B1BCE - _021B1A3A - 2 ; case 5
	.short _021B1B9A - _021B1A3A - 2 ; case 6
	.short _021B1BF8 - _021B1A3A - 2 ; case 7
_021B1A4A:
	ldr r0, [r4, #0x50]
	bl FUN_021D4C14
	adds r6, r0, #0
	subs r0, r5, #1
	ldrb r0, [r4, r0]
	cmp r0, #2
	bne _021B1A74
	adds r5, #0xa
	ldrb r0, [r4, r5]
	lsls r1, r0, #0x1b
	lsrs r1, r1, #0x1f
	bne _021B1A6A
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	beq _021B1A74
_021B1A6A:
	cmp r6, #0
	bne _021B1A74
	add sp, #8
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B1A74:
	adds r0, r4, #0
	bl FUN_021B1D38
	cmp r6, #9
	bne _021B1AA2
	ldr r0, [r4, #0x50]
	add r1, sp, #4
	bl FUN_021D4C4C
	ldr r0, [sp, #4]
	ldr r1, [r0]
	ldr r0, [r0, #4]
	str r0, [r4, #0x30]
	adds r0, r4, #0
	str r1, [r4, #0x2c]
	movs r1, #0
	adds r0, #0xd4
	str r1, [r0]
	movs r1, #3
_021B1A9A:
	movs r0, #0x1b
	lsls r0, r0, #4
	strb r1, [r4, r0]
	b _021B1BFE
_021B1AA2:
	cmp r6, #0
	beq _021B1AFC
	adds r0, r4, #0
	adds r1, r6, #0
	add r2, sp, #0
	bl FUN_021B1D54
	adds r1, r4, #0
	adds r1, #0xd0
	str r0, [r1]
	ldr r0, [sp]
	cmp r0, #0
	beq _021B1ACC
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B9400
	cmp r0, #0
	bne _021B1AD4
	movs r1, #6
	b _021B1A9A
_021B1ACC:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B9418
_021B1AD4:
	adds r0, r4, #0
	adds r0, #0xd0
	ldr r0, [r0]
	cmp r0, #0
	beq _021B1AF0
	movs r0, #0x1b
	movs r1, #1
	lsls r0, r0, #4
	strb r1, [r4, r0]
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xd4
	str r1, [r0]
	b _021B1BFE
_021B1AF0:
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xd4
	str r1, [r0]
	movs r1, #2
	b _021B1A9A
_021B1AFC:
	ldr r0, _021B1C0C ; =0x000001BA
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021B1BFE
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B1B0C:
	adds r2, r4, #0
	adds r2, #0xd0
	adds r1, r4, #0
	ldr r2, [r2]
	adds r0, r4, #0
	adds r1, #0xd4
	blx r2
	cmp r0, #0
	beq _021B1BFE
	adds r0, r5, #0
	adds r0, #0xa
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021B1B30
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B1B30:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93A0
	cmp r0, #0
	beq _021B1B42
_021B1B3C:
	movs r0, #4
_021B1B3E:
	strb r0, [r4, r5]
	b _021B1BFE
_021B1B42:
	movs r0, #2
	b _021B1B3E
_021B1B46:
	adds r1, r4, #0
	adds r2, r4, #0
	adds r1, #0xe0
	adds r2, #0xe4
	ldr r0, [r4, #0x50]
	ldr r1, [r1]
	ldr r2, [r2]
	bl FUN_021D4C78
	cmp r0, #0
	beq _021B1B60
	movs r0, #0
	strb r0, [r4, r5]
_021B1B60:
	ldr r0, _021B1C0C ; =0x000001BA
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021B1BFE
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B1B70:
	adds r1, r4, #0
	adds r2, r4, #0
	adds r1, #0xe0
	adds r2, #0xe4
	ldr r0, [r4, #0x50]
	ldr r1, [r1]
	ldr r2, [r2]
	bl FUN_021D4C78
	cmp r0, #0
	beq _021B1B8A
	movs r0, #7
	strb r0, [r4, r5]
_021B1B8A:
	ldr r0, _021B1C0C ; =0x000001BA
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _021B1BFE
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B1B9A:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93A0
	cmp r0, #0
	beq _021B1BFE
	b _021B1B3C
_021B1BA8:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93B4
	cmp r0, #1
	bne _021B1BB8
	movs r0, #7
	b _021B1B3E
_021B1BB8:
	ldr r0, [r4, #0x54]
	cmp r0, #0
	beq _021B1BCA
	movs r0, #1
	movs r1, #0x3e
	bl FUN_02005D08
	bl FUN_020067B0
_021B1BCA:
	movs r1, #5
	b _021B1A9A
_021B1BCE:
	bl FUN_02005EC0
	cmp r0, #0
	bne _021B1BFE
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93FC
	adds r5, r0, #0
	movs r0, #0
	movs r1, #1
	bl FUN_02005D08
	ldr r0, [r4]
	adds r1, r5, #0
	bl FUN_0219E0B4
	movs r0, #0
	bl FUN_020067A4
	b _021B1BFE
_021B1BF8:
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B1BFE:
	adds r0, r4, #0
	bl FUN_021B98E4
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_021B1C0C: .word 0x000001BA
	thumb_func_end FUN_021B1A14

	thumb_func_start FUN_021B1C10
FUN_021B1C10: ; 0x021B1C10
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x18
	bl FUN_021B9430
	movs r5, #0x1b
	lsls r5, r5, #4
	ldrb r0, [r4, r5]
	cmp r0, #5
	bls _021B1C28
	b _021B1D32
_021B1C28:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B1C34: ; jump table
	.short _021B1C40 - _021B1C34 - 2 ; case 0
	.short _021B1C44 - _021B1C34 - 2 ; case 1
	.short _021B1CB4 - _021B1C34 - 2 ; case 2
	.short _021B1CE0 - _021B1C34 - 2 ; case 3
	.short _021B1CFC - _021B1C34 - 2 ; case 4
	.short _021B1D2E - _021B1C34 - 2 ; case 5
_021B1C40:
	movs r0, #1
	strb r0, [r4, r5]
_021B1C44:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93EC
	cmp r0, #0
	bne _021B1C86
	ldr r0, [r4, #0x50]
	bl FUN_021D4C14
	adds r1, r0, #0
	beq _021B1D32
	adds r0, r4, #0
	movs r2, #0
	movs r5, #0
	bl FUN_021B1D54
	adds r1, r4, #0
	adds r1, #0xd0
	str r0, [r1]
	cmp r0, #0
	beq _021B1C7C
	movs r1, #2
_021B1C70:
	movs r0, #0x1b
	lsls r0, r0, #4
	strb r1, [r4, r0]
	adds r4, #0xd4
	str r5, [r4]
	b _021B1D32
_021B1C7C:
	adds r0, r4, #0
	bl FUN_021B1D38
	movs r1, #3
	b _021B1C70
_021B1C86:
	ldr r0, [r4, #0x54]
	cmp r0, #0
	beq _021B1CAA
	movs r0, #1
	movs r1, #1
	bl FUN_02005D08
	ldr r0, [r4, #0x54]
	bl FUN_021D0A38
	movs r0, #0x1e
	bl FUN_02005E68
	movs r0, #0
	bl FUN_021E02EC
	bl FUN_020067B0
_021B1CAA:
	movs r0, #0x1b
	movs r1, #4
	lsls r0, r0, #4
	strb r1, [r4, r0]
	b _021B1D32
_021B1CB4:
	adds r2, r4, #0
	adds r2, #0xd0
	adds r1, r4, #0
	ldr r2, [r2]
	adds r0, r4, #0
	adds r1, #0xd4
	blx r2
	cmp r0, #0
	beq _021B1D32
	movs r0, #3
	strb r0, [r4, r5]
	movs r0, #0
	adds r4, #0xd4
	str r0, [r4]
	bl FUN_021E0090
	cmp r0, #0
	beq _021B1D32
	movs r0, #1
	bl FUN_021E02EC
	b _021B1D32
_021B1CE0:
	adds r1, r4, #0
	adds r2, r4, #0
	adds r1, #0xe0
	adds r2, #0xe4
	ldr r0, [r4, #0x50]
	ldr r1, [r1]
	ldr r2, [r2]
	bl FUN_021D4C78
	cmp r0, #0
	beq _021B1D32
	movs r0, #1
	strb r0, [r4, r5]
	b _021B1D32
_021B1CFC:
	ldr r0, [r4, #0x54]
	cmp r0, #0
	beq _021B1D32
	bl FUN_021D0A48
	cmp r0, #0
	beq _021B1D32
	bl FUN_02005EC0
	cmp r0, #0
	bne _021B1D32
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93FC
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [r4, #0x54]
	adds r2, r1, #0
	bl FUN_021D0A88
	ldr r0, [r4]
	bl FUN_0219E170
	b _021B1D32
_021B1D2E:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B1D32:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B1C10

	thumb_func_start FUN_021B1D38
FUN_021B1D38: ; 0x021B1D38
	adds r1, r0, #0
	movs r2, #0
	adds r1, #0xe8
	str r2, [r1]
	adds r2, r0, #0
	adds r1, r0, #0
	adds r2, #0xe8
	adds r1, #0xe0
	str r2, [r1]
	movs r1, #4
	adds r0, #0xe4
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B1D38

	thumb_func_start FUN_021B1D54
FUN_021B1D54: ; 0x021B1D54
	push {r3, r4, r5, r6}
	ldr r5, _021B1D88 ; =0x021D70B0
	movs r6, #0
_021B1D5A:
	lsls r3, r6, #4
	ldrb r4, [r5, r3]
	cmp r1, r4
	bne _021B1D7C
	cmp r2, #0
	beq _021B1D6C
	ldr r1, _021B1D8C ; =0x021D70B1
	ldrb r1, [r1, r3]
	str r1, [r2]
_021B1D6C:
	ldr r1, _021B1D90 ; =0x000001AF
	ldr r2, _021B1D94 ; =0x021D70B4
	ldrb r0, [r0, r1]
	lsls r1, r0, #2
	adds r0, r2, r3
	ldr r0, [r1, r0]
	pop {r3, r4, r5, r6}
	bx lr
_021B1D7C:
	adds r6, r6, #1
	cmp r6, #0xf
	blo _021B1D5A
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_021B1D88: .word 0x021D70B0
_021B1D8C: .word 0x021D70B1
_021B1D90: .word 0x000001AF
_021B1D94: .word 0x021D70B4
	thumb_func_end FUN_021B1D54

	thumb_func_start FUN_021B1D98
FUN_021B1D98: ; 0x021B1D98
	ldr r2, [r0, #0x2c]
	ldr r0, [r0, #0x30]
	str r2, [r1]
	str r0, [r1, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B1D98

	thumb_func_start FUN_021B1DA4
FUN_021B1DA4: ; 0x021B1DA4
	push {r3, lr}
	ldr r1, _021B1DCC ; =0x000001AF
	ldrb r2, [r0, r1]
	cmp r2, #2
	beq _021B1DC2
	adds r0, #0xee
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B1DBE
	movs r0, #0
	bl FUN_021DFF3C
	pop {r3, pc}
_021B1DBE:
	movs r0, #0
	pop {r3, pc}
_021B1DC2:
	adds r1, #0xb
	ldrb r0, [r0, r1]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	pop {r3, pc}
	.align 2, 0
_021B1DCC: .word 0x000001AF
	thumb_func_end FUN_021B1DA4

	thumb_func_start FUN_021B1DD0
FUN_021B1DD0: ; 0x021B1DD0
	ldr r1, _021B1DDC ; =0x000001BA
	ldrb r0, [r0, r1]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bx lr
	nop
_021B1DDC: .word 0x000001BA
	thumb_func_end FUN_021B1DD0

	thumb_func_start FUN_021B1DE0
FUN_021B1DE0: ; 0x021B1DE0
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4b
	adds r5, r0, #0
	movs r4, #0
	lsls r7, r7, #2
	movs r6, #1
_021B1DEC:
	ldr r0, [r5, #0x5c]
	lsrs r0, r4
	tst r0, r6
	beq _021B1E02
	adds r0, r7, #0
	bl FUN_02005748
	lsls r1, r4, #1
	adds r1, r5, r1
	adds r1, #0x60
	strh r0, [r1]
_021B1E02:
	adds r4, r4, #1
	cmp r4, #0x16
	blt _021B1DEC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B1DE0

	thumb_func_start FUN_021B1E0C
FUN_021B1E0C: ; 0x021B1E0C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021B1E1E
	cmp r0, #1
	beq _021B1E3C
	b _021B1EDE
_021B1E1E:
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #4
	ldr r0, [r4, #0x54]
	beq _021B1E2E
	movs r1, #0
	b _021B1E30
_021B1E2E:
	movs r1, #1
_021B1E30:
	bl FUN_021CE91C
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B1EDE
_021B1E3C:
	ldr r0, [r4, #0x54]
	bl FUN_021CE94C
	cmp r0, #0
	beq _021B1EDE
	ldr r0, [r4]
	bl FUN_0219DF3C
	adds r1, r4, #0
	adds r1, #0xec
	strh r0, [r1]
	ldr r0, [r4]
	bl FUN_0219DF48
	adds r1, r4, #0
	adds r1, #0xee
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xec
	ldrh r1, [r0]
	cmp r1, #0
	bne _021B1E72
	adds r0, r4, #0
	adds r0, #0xee
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B1E90
_021B1E72:
	adds r0, r4, #0
	adds r0, #0xee
	ldrh r0, [r0]
	bl FUN_021DFF00
	adds r0, r4, #0
	adds r0, #0xee
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B1E90
	movs r0, #0
	movs r1, #1
	movs r2, #1
	bl FUN_021DFF1C
_021B1E90:
	adds r0, r4, #0
	bl FUN_021B1F24
	adds r0, r4, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B1EB4
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93FC
	adds r1, r0, #0
	lsls r1, r1, #0x10
	ldr r0, [r4, #0x54]
	lsrs r1, r1, #0x10
	bl FUN_021D0ABC
_021B1EB4:
	ldr r0, [r4, #0x54]
	bl FUN_021D0C24
	movs r5, #0x22
	lsls r5, r5, #4
	str r0, [r4, r5]
	adds r0, r5, #0
	subs r0, #0x5c
	adds r0, r4, r0
	bl FUN_021B1DE0
	movs r2, #0x12
	lsls r2, r2, #4
	subs r5, #0x5c
	ldr r2, [r4, r2]
	adds r0, r4, #0
	adds r1, r4, r5
	bl FUN_021B9730
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B1EDE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B1E0C

	thumb_func_start FUN_021B1EE4
FUN_021B1EE4: ; 0x021B1EE4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r2, [r5, #0x54]
	cmp r2, #0
	beq _021B1F10
	bl FUN_021B1E0C
	adds r4, r0, #0
	beq _021B1F0C
	ldr r1, _021B1F20 ; =0x000001AE
	ldr r0, [r5, #0x14]
	ldrb r1, [r5, r1]
	bl FUN_021D46B4
	cmp r0, #0
	beq _021B1F0C
	adds r5, #0x18
	adds r0, r5, #0
	bl FUN_021B93A8
_021B1F0C:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_021B1F10:
	ldr r1, _021B1F20 ; =0x000001AE
	ldr r0, [r5, #0x14]
	ldrb r1, [r5, r1]
	bl FUN_021D46B4
	movs r0, #1
	pop {r3, r4, r5, pc}
	nop
_021B1F20: .word 0x000001AE
	thumb_func_end FUN_021B1EE4

	thumb_func_start FUN_021B1F24
FUN_021B1F24: ; 0x021B1F24
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021B1F74
	cmp r0, #0
	beq _021B1F3C
	movs r1, #0xd
	bl FUN_021BB1F4
	movs r1, #0x69
	lsls r1, r1, #2
	strh r0, [r4, r1]
_021B1F3C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B1F24

	thumb_func_start FUN_021B1F40
FUN_021B1F40: ; 0x021B1F40
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021B1F74
	cmp r0, #0
	beq _021B1F6E
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r1, r0, #0
	movs r0, #0x69
	lsls r0, r0, #2
	ldrh r0, [r4, r0]
	cmp r1, r0
	blo _021B1F62
	movs r0, #0
	pop {r4, pc}
_021B1F62:
	subs r2, r0, r1
	movs r0, #0x64
	muls r0, r2, r0
	blx FUN_0208D894
	pop {r4, pc}
_021B1F6E:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B1F40

	thumb_func_start FUN_021B1F74
FUN_021B1F74: ; 0x021B1F74
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #0
	bne _021B1FA6
	ldr r0, [r4]
	bl FUN_0219BF24
	cmp r0, #0
	bne _021B1FA6
	ldr r1, _021B1FAC ; =0x000001AE
	ldr r0, [r4]
	ldrb r1, [r4, r1]
	movs r2, #0
	bl FUN_0219C910
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [r4, #4]
	movs r2, #0
	bl FUN_0219D23C
	pop {r4, pc}
_021B1FA6:
	movs r0, #0
	pop {r4, pc}
	nop
_021B1FAC: .word 0x000001AE
	thumb_func_end FUN_021B1F74

	thumb_func_start FUN_021B1FB0
FUN_021B1FB0: ; 0x021B1FB0
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #4
	bhi _021B2038
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B1FC8: ; jump table
	.short _021B1FD2 - _021B1FC8 - 2 ; case 0
	.short _021B1FEC - _021B1FC8 - 2 ; case 1
	.short _021B2014 - _021B1FC8 - 2 ; case 2
	.short _021B2022 - _021B1FC8 - 2 ; case 3
	.short _021B2028 - _021B1FC8 - 2 ; case 4
_021B1FD2:
	adds r1, r4, #0
	adds r1, #0xcc
	ldrb r1, [r1]
	ldr r0, [r4, #0x54]
	bl FUN_021D0614
	adds r0, r4, #0
	bl FUN_021B20C0
_021B1FE4:
	ldr r0, [r5]
	adds r0, r0, #1
_021B1FE8:
	str r0, [r5]
	b _021B2038
_021B1FEC:
	bl FUN_021B20E4
	cmp r0, #0
	ldr r0, [r4, #0x54]
	beq _021B1FFE
	bl FUN_021D0670
	movs r0, #2
_021B1FFC:
	b _021B1FE8
_021B1FFE:
	add r1, sp, #0
	bl FUN_021D0648
	cmp r0, #0
	beq _021B2038
	add r0, sp, #0
	ldrb r0, [r0]
	adds r4, #0xcc
	strb r0, [r4]
	movs r0, #3
	b _021B1FFC
_021B2014:
	adds r0, #0xcc
	ldrb r0, [r0]
	bl FUN_021B203C
	adds r4, #0xcc
	strb r0, [r4]
	b _021B1FE4
_021B2022:
	bl FUN_021B2138
	b _021B1FE4
_021B2028:
	adds r1, r4, #0
	adds r1, #0xcc
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #1
	adds r4, #0xe4
	str r0, [r4]
	pop {r3, r4, r5, pc}
_021B2038:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B1FB0

	thumb_func_start FUN_021B203C
FUN_021B203C: ; 0x021B203C
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02043F58
	movs r1, #0
	movs r2, #0x64
	movs r3, #0
	blx FUN_0208D638
	cmp r4, #0
	bne _021B2066
	cmp r1, #0x1e
	bhs _021B205A
	movs r4, #3
	b _021B2092
_021B205A:
	cmp r1, #0x3c
	bhs _021B2062
	movs r4, #2
	b _021B2092
_021B2062:
	movs r4, #1
	b _021B2092
_021B2066:
	cmp r4, #1
	beq _021B2072
	cmp r4, #2
	beq _021B2086
	cmp r4, #3
	beq _021B207C
_021B2072:
	movs r0, #2
	cmp r1, #0x32
	blo _021B207A
	movs r0, #3
_021B207A:
	b _021B208E
_021B207C:
	movs r0, #2
	cmp r1, #0x28
	blo _021B2084
	movs r0, #1
_021B2084:
	b _021B208E
_021B2086:
	movs r0, #3
	cmp r1, #0x28
	blo _021B208E
	movs r0, #1
_021B208E:
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021B2092:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B203C
_021B2098:
	.byte 0x01, 0x20, 0x70, 0x47

	thumb_func_start FUN_021B209C
FUN_021B209C: ; 0x021B209C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xcc
	ldrb r0, [r0]
	bl FUN_021B203C
	adds r1, r4, #0
	adds r1, #0xcc
	strb r0, [r1]
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0xcc
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #1
	adds r4, #0xe4
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_021B209C

	thumb_func_start FUN_021B20C0
FUN_021B20C0: ; 0x021B20C0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xec
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B20DC
	movs r0, #1
	movs r1, #1
	movs r2, #1
	bl FUN_021DFF1C
	ldr r0, _021B20E0 ; =0x000001B5
	movs r1, #0
	strb r1, [r4, r0]
_021B20DC:
	pop {r4, pc}
	nop
_021B20E0: .word 0x000001B5
	thumb_func_end FUN_021B20C0

	thumb_func_start FUN_021B20E4
FUN_021B20E4: ; 0x021B20E4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r0, #0xec
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B210C
	ldr r6, _021B2110 ; =0x000001B5
	ldrb r0, [r5, r6]
	cmp r0, #0
	bne _021B2106
	movs r0, #1
	movs r4, #1
	bl FUN_021DFF3C
	cmp r0, #0
	beq _021B2106
	strb r4, [r5, r6]
_021B2106:
	ldr r0, _021B2110 ; =0x000001B5
	ldrb r0, [r5, r0]
	pop {r4, r5, r6, pc}
_021B210C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B2110: .word 0x000001B5
	thumb_func_end FUN_021B20E4

	thumb_func_start FUN_021B2114
FUN_021B2114: ; 0x021B2114
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021B20E4
	cmp r0, #0
	beq _021B2132
	cmp r4, #0
	beq _021B212E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021B21A8
_021B212E:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B2132:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B2114

	thumb_func_start FUN_021B2138
FUN_021B2138: ; 0x021B2138
	push {r3, lr}
	adds r0, #0xec
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B214C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl FUN_021DFF1C
_021B214C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B2138

	thumb_func_start FUN_021B2150
FUN_021B2150: ; 0x021B2150
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_0219BDC0
	cmp r0, #3
	beq _021B2184
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x45
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021D0B8C
	pop {r4, r5, r6, pc}
_021B2184:
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x46
	bl FUN_021D0B2C
	ldr r1, _021B21A4 ; =0x000001AE
	adds r0, r4, #0
	ldrb r1, [r5, r1]
	bl FUN_021D0B64
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021D0B8C
	pop {r4, r5, r6, pc}
	nop
_021B21A4: .word 0x000001AE
	thumb_func_end FUN_021B2150

	thumb_func_start FUN_021B21A8
FUN_021B21A8: ; 0x021B21A8
	adds r2, r0, #0
	adds r2, #0xd8
	str r1, [r2]
	movs r1, #0
	adds r0, #0xdc
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B21A8

	thumb_func_start FUN_021B21B8
FUN_021B21B8: ; 0x021B21B8
	push {r3, lr}
	adds r2, r0, #0
	adds r2, #0xd8
	adds r1, r0, #0
	ldr r2, [r2]
	adds r1, #0xdc
	blx r2
	pop {r3, pc}
	thumb_func_end FUN_021B21B8

	thumb_func_start FUN_021B21C8
FUN_021B21C8: ; 0x021B21C8
	ldr r0, _021B21D0 ; =0x021DB084
	ldr r0, [r0, #0xc]
	bx lr
	nop
_021B21D0: .word 0x021DB084
	thumb_func_end FUN_021B21C8

	thumb_func_start FUN_021B21D4
FUN_021B21D4: ; 0x021B21D4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219E350
	adds r5, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	ldr r1, _021B2248 ; =0x00000129
	ldr r2, _021B224C ; =0x021D6EF4
	ldrb r3, [r5, r1]
	ldrb r5, [r2, r3]
	adds r2, r1, #0
	adds r2, #0xeb
	ldr r2, [r4, r2]
	cmp r2, #1
	beq _021B2200
	cmp r2, #2
	beq _021B2200
	cmp r2, #3
	bne _021B2212
_021B2200:
	movs r0, #0xf
	adds r1, r2, #5
	muls r0, r5, r0
	adds r0, r1, r0
	movs r1, #0x85
	movs r2, #0
	lsls r1, r1, #2
	str r2, [r4, r1]
	pop {r3, r4, r5, pc}
_021B2212:
	adds r1, #0x94
	ldrb r2, [r4, r1]
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	cmp r2, r0
	ble _021B2226
	movs r0, #0xf
	muls r0, r5, r0
	adds r0, #9
	pop {r3, r4, r5, pc}
_021B2226:
	cmp r2, #0
	bne _021B223A
	movs r0, #2
	bl FUN_02005748
	movs r1, #0xf
	muls r1, r5, r1
	adds r0, #0xd
	adds r0, r1, r0
	pop {r3, r4, r5, pc}
_021B223A:
	movs r0, #6
	bl FUN_02005748
	movs r1, #0xf
	muls r1, r5, r1
	adds r0, r1, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B2248: .word 0x00000129
_021B224C: .word 0x021D6EF4
	thumb_func_end FUN_021B21D4

	thumb_func_start FUN_021B2250
FUN_021B2250: ; 0x021B2250
	movs r2, #0x85
	lsls r2, r2, #2
	str r1, [r0, r2]
	bx lr
	thumb_func_end FUN_021B2250

	thumb_func_start FUN_021B2258
FUN_021B2258: ; 0x021B2258
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r2, [r4]
	ldr r1, _021B22A4 ; =0x021DB084
	adds r5, r0, #0
	str r2, [r1, #0xc]
	cmp r2, #0
	beq _021B2272
	cmp r2, #8
	beq _021B2276
	cmp r2, #9
	beq _021B228C
	b _021B229E
_021B2272:
	movs r0, #8
	str r0, [r4]
_021B2276:
	ldr r1, _021B22A8 ; =FUN_021B34A0
	adds r0, r5, #0
	bl FUN_021B21A8
	adds r0, r5, #0
	bl FUN_021B20C0
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B229E
_021B228C:
	bl FUN_021B20E4
	adds r0, r5, #0
	bl FUN_021B21B8
	cmp r0, #0
	beq _021B229E
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B229E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021B22A4: .word 0x021DB084
_021B22A8: .word FUN_021B34A0
	thumb_func_end FUN_021B2258

	thumb_func_start FUN_021B22AC
FUN_021B22AC: ; 0x021B22AC
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	ldr r2, [r5]
	ldr r1, _021B23EC ; =0x021DB084
	adds r4, r0, #0
	str r2, [r1, #0xc]
	cmp r2, #9
	bls _021B22BE
	b _021B23E6
_021B22BE:
	adds r1, r2, r2
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B22CA: ; jump table
	.short _021B22DE - _021B22CA - 2 ; case 0
	.short _021B231E - _021B22CA - 2 ; case 1
	.short _021B23E6 - _021B22CA - 2 ; case 2
	.short _021B2332 - _021B22CA - 2 ; case 3
	.short _021B2340 - _021B22CA - 2 ; case 4
	.short _021B234E - _021B22CA - 2 ; case 5
	.short _021B2370 - _021B22CA - 2 ; case 6
	.short _021B2388 - _021B22CA - 2 ; case 7
	.short _021B239C - _021B22CA - 2 ; case 8
	.short _021B23C8 - _021B22CA - 2 ; case 9
_021B22DE:
	movs r6, #0x71
	lsls r6, r6, #2
	movs r0, #0
	adds r1, r6, #0
	strb r0, [r4, r6]
	subs r1, #0x16
	ldrb r1, [r4, r1]
	cmp r1, #0
	beq _021B22F6
	movs r1, #8
	str r1, [r5]
	pop {r4, r5, r6, pc}
_021B22F6:
	ldr r0, [r4]
	bl FUN_0219E3DC
	subs r2, r6, #7
	ldrb r2, [r4, r2]
	adds r1, r4, r6
	bl FUN_021B265C
	cmp r0, #0
	beq _021B2312
_021B230A:
	ldr r0, [r5]
	adds r0, r0, #1
_021B230E:
	str r0, [r5]
	b _021B23E6
_021B2312:
	movs r0, #3
	str r0, [r5]
	adds r0, r4, r6
	bl FUN_021B27D0
	b _021B23E6
_021B231E:
	bl FUN_021B28A4
	cmp r0, #0
	beq _021B23E6
	movs r0, #0x71
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	movs r0, #3
_021B2330:
	b _021B230E
_021B2332:
	ldr r1, _021B23F0 ; =0x000001BD
	ldr r0, [r4, #0x54]
	ldrb r1, [r4, r1]
	bl FUN_021D0BB0
	movs r0, #4
	b _021B2330
_021B2340:
	ldr r0, [r4, #0x54]
	bl FUN_021D0BD0
	cmp r0, #0
	bne _021B23E6
	movs r0, #5
	b _021B2330
_021B234E:
	bl FUN_021B21D4
	adds r2, r0, #0
	adds r0, r4, #0
	lsls r2, r2, #0x10
	adds r0, #0x58
	movs r1, #9
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #6
	b _021B2330
_021B2370:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B23E6
	movs r0, #7
	str r0, [r5]
	movs r0, #0x25
	movs r1, #0x1e
	lsls r0, r0, #4
	strb r1, [r4, r0]
	b _021B23E6
_021B2388:
	movs r0, #0x25
	lsls r0, r0, #4
	ldrb r1, [r4, r0]
	subs r1, r1, #1
	strb r1, [r4, r0]
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _021B23E6
	movs r0, #8
	b _021B2330
_021B239C:
	ldr r0, [r4]
	bl FUN_0219E3DC
	adds r2, r0, #0
	movs r1, #0xa
	ldr r6, _021B23F0 ; =0x000001BD
	ldrsh r1, [r2, r1]
	ldrb r2, [r4, r6]
	ldr r0, [r4, #0x54]
	bl FUN_021D0B90
	ldrb r0, [r4, r6]
	ldr r1, _021B23F4 ; =FUN_021B34A0
	adds r0, r0, #1
	strb r0, [r4, r6]
	adds r0, r4, #0
	bl FUN_021B21A8
	adds r0, r4, #0
	bl FUN_021B20C0
	b _021B230A
_021B23C8:
	bl FUN_021B20E4
	adds r0, r4, #0
	bl FUN_021B21B8
	cmp r0, #0
	beq _021B23E6
	adds r0, r4, #0
	bl FUN_021B19E4
	movs r1, #0x7a
	lsls r1, r1, #2
	strh r0, [r4, r1]
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B23E6:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_021B23EC: .word 0x021DB084
_021B23F0: .word 0x000001BD
_021B23F4: .word FUN_021B34A0
	thumb_func_end FUN_021B22AC

	thumb_func_start FUN_021B23F8
FUN_021B23F8: ; 0x021B23F8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B2412
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021B22AC
	pop {r3, r4, r5, pc}
_021B2412:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021B2258
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B23F8

	thumb_func_start FUN_021B241C
FUN_021B241C: ; 0x021B241C
	strb r1, [r0]
	strb r2, [r0, #1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B241C

	thumb_func_start FUN_021B2424
FUN_021B2424: ; 0x021B2424
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	movs r5, #0x71
	lsls r5, r5, #2
	ldrb r1, [r4, r5]
	cmp r1, #0xa
	bls _021B243A
	b _021B2574
_021B243A:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B2446: ; jump table
	.short _021B245C - _021B2446 - 2 ; case 0
	.short _021B248E - _021B2446 - 2 ; case 1
	.short _021B24CA - _021B2446 - 2 ; case 2
	.short _021B24DA - _021B2446 - 2 ; case 3
	.short _021B24F4 - _021B2446 - 2 ; case 4
	.short _021B2500 - _021B2446 - 2 ; case 5
	.short _021B2536 - _021B2446 - 2 ; case 6
	.short _021B2542 - _021B2446 - 2 ; case 7
	.short _021B2552 - _021B2446 - 2 ; case 8
	.short _021B2562 - _021B2446 - 2 ; case 9
	.short _021B2566 - _021B2446 - 2 ; case 10
_021B245C:
	subs r1, r5, #7
	ldrb r1, [r4, r1]
	subs r1, r1, #1
	lsls r1, r1, #1
	adds r2, r0, r1
	movs r0, #0xa8
	ldrsh r1, [r2, r0]
	subs r0, #0xa9
	cmp r1, r0
	bne _021B247E
	movs r0, #0xd0
	ldrsh r1, [r2, r0]
	subs r0, #0xd1
	cmp r1, r0
	bne _021B247E
	movs r0, #9
	b _021B2572
_021B247E:
	bl FUN_021D5984
	movs r0, #0x71
	lsls r0, r0, #2
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	b _021B2574
_021B248E:
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r2, #0
	movs r1, #9
	movs r3, #0
	str r2, [sp]
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	adds r0, r5, #0
	adds r0, #0xd4
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0xa
	movs r2, #2
_021B24C4:
	bl FUN_021B241C
	b _021B2574
_021B24CA:
	adds r0, r5, #0
	adds r0, #0xd0
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0xa
	movs r2, #3
	b _021B24C4
_021B24DA:
	subs r1, r5, #7
	ldrb r1, [r4, r1]
	subs r1, r1, #1
	lsls r1, r1, #1
	adds r1, r0, r1
	movs r0, #0xa8
	ldrsh r2, [r1, r0]
	subs r0, #0xa9
	cmp r2, r0
	beq _021B24F0
	b _021B2514
_021B24F0:
	movs r0, #5
	b _021B2572
_021B24F4:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B2574
	b _021B2540
_021B2500:
	subs r1, r5, #7
	ldrb r1, [r4, r1]
	subs r1, r1, #1
	lsls r1, r1, #1
	adds r1, r0, r1
	movs r0, #0xd0
	ldrsh r2, [r1, r0]
	subs r0, #0xd1
	cmp r2, r0
	beq _021B2532
_021B2514:
	adds r0, r4, #0
	lsls r2, r2, #0x10
	adds r0, #0x58
	movs r1, #8
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
_021B252C:
	ldrb r0, [r4, r5]
	adds r0, r0, #1
	b _021B2572
_021B2532:
	movs r0, #7
	b _021B2572
_021B2536:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B2574
_021B2540:
	b _021B252C
_021B2542:
	adds r0, r5, #0
	adds r0, #0xd5
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0xa
	movs r2, #8
	b _021B24C4
_021B2552:
	adds r0, r5, #0
	adds r0, #0xd1
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0xa
	movs r2, #9
	b _021B24C4
_021B2562:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B2566:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B2574
	adds r0, r5, #1
	ldrb r0, [r4, r0]
_021B2572:
	strb r0, [r4, r5]
_021B2574:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B2424

	thumb_func_start FUN_021B2578
FUN_021B2578: ; 0x021B2578
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r6, #0
	mvns r6, r6
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	movs r0, #0
	mov ip, r6
	mov lr, r6
_021B258E:
	movs r1, #0x78
	muls r1, r0, r1
	adds r1, r5, r1
	movs r2, #0xfa
	ldrsh r2, [r1, r2]
	mov r3, lr
	str r2, [sp, #4]
	ldr r2, [sp, #4]
	cmp r2, r3
	bne _021B25B6
	movs r2, #0xfc
	ldrsh r3, [r1, r2]
	mov r2, ip
	cmp r3, r2
	bne _021B25B6
	movs r2, #0xf8
	ldrsh r1, [r1, r2]
	cmp r7, r1
	bne _021B25CA
	b _021B25C8
_021B25B6:
	movs r2, #0xf8
	ldrsh r1, [r1, r2]
	cmp r7, r1
	bne _021B25CA
	movs r1, #0x10
	ldrsb r2, [r4, r1]
	ldr r1, [sp, #4]
	cmp r2, r1
	bne _021B25CA
_021B25C8:
	adds r6, r0, #0
_021B25CA:
	adds r0, r0, #1
	cmp r0, #0xc
	blt _021B258E
	cmp r7, #0x65
	bne _021B25F0
	movs r3, #0
	movs r7, #0x78
	movs r1, #0xfc
_021B25DA:
	adds r0, r3, #0
	muls r0, r7, r0
	adds r0, r5, r0
	ldrsh r2, [r0, r1]
	ldr r0, [sp]
	cmp r0, r2
	bne _021B25EA
	adds r6, r3, #0
_021B25EA:
	adds r3, r3, #1
	cmp r3, #0xc
	blt _021B25DA
_021B25F0:
	cmp r6, #0
	bge _021B2622
	movs r3, #0
	movs r0, #0xfc
_021B25F8:
	movs r1, #0x78
	muls r1, r3, r1
	adds r2, r5, r1
	ldrsh r1, [r2, r0]
	cmp r1, #0
	bne _021B261C
	movs r7, #0xfe
	ldrh r1, [r4, #0x26]
	ldrsh r2, [r2, r7]
	cmp r1, r2
	bne _021B261C
	ldr r1, [r4, #0x28]
	adds r2, r1, #0
	lsrs r2, r3
	movs r1, #1
	tst r1, r2
	bne _021B261C
	adds r6, r3, #0
_021B261C:
	adds r3, r3, #1
	cmp r3, #0xc
	blt _021B25F8
_021B2622:
	cmp r6, #0
	bge _021B2654
	movs r3, #0
	movs r0, #0xfc
_021B262A:
	movs r1, #0x78
	muls r1, r3, r1
	adds r2, r5, r1
	ldrsh r1, [r2, r0]
	cmp r1, #1
	bne _021B264E
	movs r7, #0xfe
	ldrh r1, [r4, #0x24]
	ldrsh r2, [r2, r7]
	cmp r1, r2
	bne _021B264E
	ldr r1, [r4, #0x28]
	adds r2, r1, #0
	lsrs r2, r3
	movs r1, #1
	tst r1, r2
	bne _021B264E
	adds r6, r3, #0
_021B264E:
	adds r3, r3, #1
	cmp r3, #0xc
	blt _021B262A
_021B2654:
	adds r0, r6, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B2578

	thumb_func_start FUN_021B265C
FUN_021B265C: ; 0x021B265C
	push {r3, r4, r5, lr}
	movs r3, #0
	adds r5, r0, #0
	movs r4, #0
	bl FUN_021B2578
	cmp r0, #0
	bge _021B2670
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_021B2670:
	adds r2, r0, #0
	movs r1, #0x78
	muls r2, r1, r2
	movs r0, #0x78
	adds r2, r5, r2
	adds r0, #0xc8
	ldrsh r0, [r2, r0]
	subs r1, #0x79
	cmp r0, r1
	beq _021B2686
	movs r4, #1
_021B2686:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B265C

	thumb_func_start FUN_021B268C
FUN_021B268C: ; 0x021B268C
	push {r4, r5}
	movs r2, #6
	ldrsb r3, [r1, r2]
	movs r2, #0x78
	adds r4, r3, #0
	muls r4, r2, r4
	adds r5, r0, r4
	ldr r3, [r1, #8]
	movs r0, #0xc
	adds r4, r3, #0
	muls r4, r0, r4
	adds r3, r5, r4
	adds r2, #0xce
	ldrsh r2, [r3, r2]
	subs r0, #0xd
	cmp r2, r0
	beq _021B26B0
	str r2, [r1, #0xc]
_021B26B0:
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021B268C

	thumb_func_start FUN_021B26B4
FUN_021B26B4: ; 0x021B26B4
	push {r3, r4}
	movs r2, #6
	ldrsb r3, [r1, r2]
	movs r2, #0x78
	adds r4, r3, #0
	muls r4, r2, r4
	adds r3, r0, r4
	ldrb r0, [r1, #4]
	subs r2, #0x79
	lsls r0, r0, #1
	adds r3, r3, r0
	movs r0, #0x78
	adds r0, #0xb4
	ldrsh r3, [r3, r0]
	cmp r3, r2
	beq _021B26E0
	ldr r0, [r1, #0x2c]
	cmp r3, r0
	beq _021B26E0
	movs r0, #0
	pop {r3, r4}
	bx lr
_021B26E0:
	movs r0, #1
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B26B4

	thumb_func_start FUN_021B26E8
FUN_021B26E8: ; 0x021B26E8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219E34C
	ldr r1, _021B2700 ; =0x000001CA
	ldrsb r2, [r4, r1]
	subs r1, #0xba
	adds r0, r0, r2
	ldrb r0, [r0, r1]
	pop {r4, pc}
	nop
_021B2700: .word 0x000001CA
	thumb_func_end FUN_021B26E8

	thumb_func_start FUN_021B2704
FUN_021B2704: ; 0x021B2704
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_0219E34C
	adds r1, r0, r5
	movs r0, #0x11
	lsls r0, r0, #4
	strb r4, [r1, r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B2704

	thumb_func_start FUN_021B271C
FUN_021B271C: ; 0x021B271C
	push {r3, lr}
	ldr r0, [r0]
	bl FUN_0219E34C
	movs r1, #0x49
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	pop {r3, pc}
	thumb_func_end FUN_021B271C

	thumb_func_start FUN_021B272C
FUN_021B272C: ; 0x021B272C
	push {r4, lr}
	ldr r0, [r0]
	adds r4, r1, #0
	bl FUN_0219E34C
	movs r1, #0x49
	lsls r1, r1, #2
	str r4, [r0, r1]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B272C

	thumb_func_start FUN_021B2740
FUN_021B2740: ; 0x021B2740
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B2786
	movs r0, #0xe
	ldrsh r0, [r4, r0]
	cmp r0, r6
	bne _021B2764
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021B272C
	pop {r4, r5, r6, pc}
_021B2764:
	movs r0, #0x78
	adds r1, r6, #0
	muls r1, r0, r1
	adds r1, r4, r1
	adds r0, #0x8a
	ldrsh r0, [r1, r0]
	cmp r0, #0x3c
	blt _021B277E
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021B272C
	pop {r4, r5, r6, pc}
_021B277E:
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021B272C
_021B2786:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B2740

	thumb_func_start FUN_021B2788
FUN_021B2788: ; 0x021B2788
	push {r3, r4, r5, lr}
	movs r3, #0x78
	muls r3, r2, r3
	adds r3, r1, r3
	movs r1, #0xf8
	ldrsh r1, [r3, r1]
	adds r5, r0, #0
	subs r1, #0x64
	cmp r1, #1
	bhi _021B27CC
	movs r4, #0x81
	lsls r4, r4, #2
	adds r1, r5, r4
	bl FUN_021B9790
	ldr r0, [r5]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021B27CC
	adds r1, r4, #0
	subs r1, #0x40
	ldr r0, [r5, #0x54]
	adds r1, r5, r1
	bl FUN_021B96F0
	ldr r0, [r5]
	bl FUN_0219E34C
	adds r1, r4, #0
	adds r1, #0x1c
	ldr r1, [r5, r1]
	subs r4, #0xd8
	str r1, [r0, r4]
_021B27CC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B2788

	thumb_func_start FUN_021B27D0
FUN_021B27D0: ; 0x021B27D0
	movs r1, #0
	strh r1, [r0, #0x24]
	strh r1, [r0, #0x26]
	bx lr
	thumb_func_end FUN_021B27D0

	thumb_func_start FUN_021B27D8
FUN_021B27D8: ; 0x021B27D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	str r1, [sp]
	ldr r1, [sp, #4]
	movs r2, #6
	ldrsb r2, [r1, r2]
	adds r7, r0, #0
	movs r1, #0x78
	adds r3, r2, #0
	muls r3, r1, r3
	ldr r1, [sp]
	movs r2, #5
	adds r1, r1, r3
	movs r3, #0xc
	movs r4, #0
	movs r0, #0
	movs r6, #0xc
	lsls r2, r2, #6
	subs r3, #0xd
_021B2800:
	adds r5, r0, #0
	muls r5, r6, r5
	adds r5, r1, r5
	ldrsh r5, [r5, r2]
	cmp r5, r3
	beq _021B280E
	adds r4, r4, #1
_021B280E:
	adds r0, r0, #1
	cmp r0, #4
	blt _021B2800
	ldr r2, [sp, #4]
	ldr r0, [r7, #0x54]
	adds r1, r4, #0
	adds r2, #8
	bl FUN_021CFB68
	movs r5, #0
	cmp r4, #0
	ble _021B2870
	ldr r0, _021B287C ; =0x000001A2
	str r0, [sp, #8]
	subs r0, #0x62
	str r0, [sp, #8]
_021B282E:
	ldr r0, [sp, #4]
	lsls r1, r5, #2
	adds r6, r0, r1
	ldr r1, _021B287C ; =0x000001A2
	movs r0, #0x28
	ldrh r1, [r7, r1]
	bl FUN_0204855C
	ldr r2, [sp, #4]
	str r0, [r6, #0x30]
	movs r1, #6
	ldrsb r1, [r2, r1]
	movs r2, #0x78
	adds r3, r1, #0
	muls r3, r2, r3
	movs r1, #0xc
	adds r2, r5, #0
	muls r2, r1, r2
	ldr r1, [sp]
	adds r1, r1, r3
	adds r2, r2, r1
	ldr r1, [sp, #8]
	ldrsh r1, [r2, r1]
	bl FUN_021D5944
	ldr r0, [r7, #0x54]
	ldr r2, [r6, #0x30]
	adds r1, r5, #0
	bl FUN_021CFB74
	adds r5, r5, #1
	cmp r5, r4
	blt _021B282E
_021B2870:
	ldr r1, _021B2880 ; =FUN_021B4214
	adds r0, r7, #0
	bl FUN_021B21A8
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021B287C: .word 0x000001A2
_021B2880: .word FUN_021B4214
	thumb_func_end FUN_021B27D8

	thumb_func_start FUN_021B2884
FUN_021B2884: ; 0x021B2884
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r6, r0, #0
	adds r7, r4, #0
_021B288C:
	lsls r0, r4, #2
	adds r5, r6, r0
	ldr r0, [r5, #0x30]
	cmp r0, #0
	beq _021B289C
	bl FUN_02048590
	str r7, [r5, #0x30]
_021B289C:
	adds r4, r4, #1
	cmp r4, #4
	blt _021B288C
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B2884

	thumb_func_start FUN_021B28A4
FUN_021B28A4: ; 0x021B28A4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	adds r6, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3EC
	str r0, [sp, #4]
	ldr r0, [r4]
	bl FUN_0219E3FC
	movs r5, #0x71
	lsls r5, r5, #2
	ldrb r1, [r4, r5]
	adds r7, r0, #0
	cmp r1, #0x1e
	bls _021B28CE
	b _021B2D28
_021B28CE:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B28DA: ; jump table
	.short _021B2918 - _021B28DA - 2 ; case 0
	.short _021B29B2 - _021B28DA - 2 ; case 1
	.short _021B2A00 - _021B28DA - 2 ; case 2
	.short _021B2D28 - _021B28DA - 2 ; case 3
	.short _021B2D28 - _021B28DA - 2 ; case 4
	.short _021B2D28 - _021B28DA - 2 ; case 5
	.short _021B2A12 - _021B28DA - 2 ; case 6
	.short _021B2D28 - _021B28DA - 2 ; case 7
	.short _021B2A56 - _021B28DA - 2 ; case 8
	.short _021B2D28 - _021B28DA - 2 ; case 9
	.short _021B2AA8 - _021B28DA - 2 ; case 10
	.short _021B2D28 - _021B28DA - 2 ; case 11
	.short _021B2AB8 - _021B28DA - 2 ; case 12
	.short _021B2D28 - _021B28DA - 2 ; case 13
	.short _021B2AD2 - _021B28DA - 2 ; case 14
	.short _021B2B0C - _021B28DA - 2 ; case 15
	.short _021B2B3E - _021B28DA - 2 ; case 16
	.short _021B2B9C - _021B28DA - 2 ; case 17
	.short _021B2D28 - _021B28DA - 2 ; case 18
	.short _021B2BD4 - _021B28DA - 2 ; case 19
	.short _021B2D28 - _021B28DA - 2 ; case 20
	.short _021B2C0C - _021B28DA - 2 ; case 21
	.short _021B2C1E - _021B28DA - 2 ; case 22
	.short _021B2C46 - _021B28DA - 2 ; case 23
	.short _021B2C50 - _021B28DA - 2 ; case 24
	.short _021B2C60 - _021B28DA - 2 ; case 25
	.short _021B2C70 - _021B28DA - 2 ; case 26
	.short _021B2C80 - _021B28DA - 2 ; case 27
	.short _021B2CDE - _021B28DA - 2 ; case 28
	.short _021B2D06 - _021B28DA - 2 ; case 29
	.short _021B2D16 - _021B28DA - 2 ; case 30
_021B2918:
	ldr r0, [r4]
	bl FUN_0219CA20
	subs r2, r5, #7
	adds r3, r0, #0
	ldrb r2, [r4, r2]
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B2578
	adds r1, r5, #6
	strb r0, [r4, r1]
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021B2788
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021B2740
	bl FUN_021D5984
	adds r0, r5, #6
	ldrsb r0, [r4, r0]
	cmp r0, #0
	blt _021B29AC
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021B298C
	adds r0, r4, #0
	bl FUN_021B271C
	adds r7, r0, #0
	ldr r0, [r4]
	movs r1, #0xb
	bl FUN_0219CA38
	adds r1, r5, #6
	lsls r2, r7, #0x18
	adds r3, r0, #0
	ldrsb r1, [r4, r1]
	adds r0, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021D6028
	cmp r0, #0
	beq _021B298C
	movs r0, #0x19
	strb r0, [r4, r5]
	subs r0, #0x1a
	adds r5, #0xc
	b _021B2ACE
_021B298C:
	movs r0, #0x72
	lsls r0, r0, #2
	movs r2, #0
	strb r2, [r4, r0]
	adds r1, r0, #1
	strb r2, [r4, r1]
	adds r1, r0, #0
	subs r2, r2, #1
	adds r1, #8
	str r2, [r4, r1]
	subs r1, r0, #4
	ldrb r1, [r4, r1]
	subs r0, r0, #4
	adds r1, r1, #1
_021B29A8:
	strb r1, [r4, r0]
	b _021B2D28
_021B29AC:
	movs r0, #0x16
_021B29AE:
	strb r0, [r4, r5]
	b _021B2D28
_021B29B2:
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B26B4
	cmp r0, #0
	bne _021B29C2
	movs r0, #2
	b _021B29AE
_021B29C2:
	adds r2, r5, #6
	ldrsb r3, [r4, r2]
	adds r0, r5, #4
	ldrb r1, [r4, r0]
	movs r2, #0x78
	adds r5, r3, #0
	muls r5, r2, r5
	lsls r0, r1, #1
	adds r3, r6, r5
	adds r5, r3, r0
	movs r0, #0x78
	adds r0, #0x8c
	ldrsh r3, [r5, r0]
	movs r0, #0x78
	subs r0, #0x79
	cmp r3, r0
	bne _021B29F0
	adds r0, r2, #0
	adds r0, #0xa0
	ldrsh r0, [r5, r0]
	subs r2, #0x79
	cmp r0, r2
	beq _021B29F4
_021B29F0:
	cmp r1, #0xa
	bne _021B29F8
_021B29F4:
	movs r1, #0xe
	b _021B29FA
_021B29F8:
	movs r1, #6
_021B29FA:
	movs r0, #0x71
	lsls r0, r0, #2
	b _021B29A8
_021B2A00:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021B2E18
	cmp r0, #0
	bne _021B2A0E
	b _021B2D28
_021B2A0E:
	movs r0, #1
	b _021B29AE
_021B2A12:
	adds r0, r5, #6
	ldrsb r0, [r4, r0]
	movs r1, #0x78
	adds r2, r0, #0
	adds r0, r5, #4
	ldrb r0, [r4, r0]
	muls r2, r1, r2
	adds r2, r6, r2
	lsls r0, r0, #1
	adds r2, r2, r0
	movs r0, #0x78
	adds r0, #0x8c
	ldrsh r2, [r2, r0]
	subs r1, #0x79
	cmp r2, r1
	beq _021B2A52
	adds r0, r4, #0
	lsls r2, r2, #0x10
	adds r0, #0x58
	movs r1, #8
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	adds r0, r4, r5
	movs r1, #0x18
	movs r2, #8
	b _021B2D24
_021B2A52:
	movs r0, #8
	b _021B29AE
_021B2A56:
	adds r0, r5, #6
	ldrsb r0, [r4, r0]
	movs r1, #0x78
	adds r2, r0, #0
	adds r0, r5, #4
	ldrb r0, [r4, r0]
	muls r2, r1, r2
	adds r2, r6, r2
	lsls r0, r0, #1
	adds r2, r2, r0
	movs r0, #0x78
	adds r0, #0xa0
	ldrsh r2, [r2, r0]
	subs r1, #0x79
	cmp r2, r1
	beq _021B2A9A
	adds r0, r4, #0
	lsls r2, r2, #0x10
	adds r0, #0x58
	movs r1, #8
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	adds r0, r4, r5
	movs r1, #0x18
	movs r2, #1
	bl FUN_021B241C
	b _021B2A9E
_021B2A9A:
	movs r0, #1
	strb r0, [r4, r5]
_021B2A9E:
	movs r0, #0x72
	lsls r0, r0, #2
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	b _021B29A8
_021B2AA8:
	adds r0, r5, #0
	adds r0, #0xd5
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0xc
	b _021B2D24
_021B2AB8:
	adds r0, r5, #0
	adds r0, #0xd1
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0x16
	bl FUN_021B241C
_021B2ACA:
	movs r0, #0
	adds r5, #0x2c
_021B2ACE:
	str r0, [r4, r5]
	b _021B2D28
_021B2AD2:
	adds r0, r5, #6
	ldrsb r0, [r4, r0]
	movs r1, #0x78
	adds r2, r0, #0
	muls r2, r1, r2
	movs r0, #0x78
	adds r2, r6, r2
	adds r0, #0xc8
	ldrsh r0, [r2, r0]
	subs r1, #0x79
	cmp r0, r1
	beq _021B2B08
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B2B04
	movs r0, #0xf
	strb r0, [r4, r5]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r4, r5
	bl FUN_021B27D8
	b _021B2D28
_021B2B04:
	movs r0, #0x10
	b _021B29AE
_021B2B08:
	movs r0, #0x15
	b _021B29AE
_021B2B0C:
	adds r0, r4, #0
	bl FUN_021B21B8
	cmp r0, #0
	bne _021B2B18
	b _021B2D28
_021B2B18:
	adds r0, r4, r5
	bl FUN_021B2884
	adds r1, r5, #6
	adds r2, r5, #0
	adds r2, #8
	ldrsb r1, [r4, r1]
	ldr r2, [r4, r2]
	adds r0, r4, #0
	bl FUN_021B2704
	adds r3, r5, #0
	adds r2, r5, #6
	adds r3, #8
	adds r0, r6, #0
	adds r1, r4, r5
	ldrsb r2, [r4, r2]
	ldr r3, [r4, r3]
	b _021B2B56
_021B2B3E:
	adds r0, r4, #0
	adds r1, r4, r5
	bl FUN_021B26E8
	adds r3, r0, #0
	adds r0, r5, #0
	adds r0, #8
	str r3, [r4, r0]
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r6, #0
	adds r1, r4, r5
_021B2B56:
	bl FUN_021B2D30
	adds r0, r5, #6
	ldrsb r0, [r4, r0]
	movs r2, #0x78
	adds r1, r0, #0
	muls r1, r2, r1
	adds r0, r6, r1
	adds r1, r5, #0
	adds r1, #8
	ldr r3, [r4, r1]
	movs r1, #0xc
	muls r1, r3, r1
	adds r3, r5, #0
	adds r0, r0, r1
	adds r2, #0xcc
	ldrsh r1, [r0, r2]
	ldr r0, [sp, #4]
	adds r2, r5, #6
	strb r1, [r0, #8]
	adds r1, r5, #0
	adds r3, #8
	adds r1, #0x40
	ldrsb r2, [r4, r2]
	ldr r3, [r4, r3]
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021B97E4
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B268C
	movs r0, #0x11
	b _021B29AE
_021B2B9C:
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r4, #0
	movs r7, #0x78
	adds r3, r2, #0
	muls r3, r7, r3
	adds r2, r6, r3
	adds r3, r5, #0
	adds r3, #8
	ldr r6, [r4, r3]
	movs r3, #0xc
	muls r3, r6, r3
	adds r2, r2, r3
	adds r7, #0xc8
	ldrh r2, [r2, r7]
	adds r0, #0x58
	movs r1, #8
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	adds r0, r4, r5
	movs r1, #0x18
	movs r2, #0x13
	b _021B2D24
_021B2BD4:
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r4, #0
	movs r7, #0x78
	adds r3, r2, #0
	muls r3, r7, r3
	adds r2, r6, r3
	adds r3, r5, #0
	adds r3, #8
	ldr r6, [r4, r3]
	movs r3, #0xc
	muls r3, r6, r3
	adds r2, r2, r3
	adds r7, #0xca
	ldrh r2, [r2, r7]
	adds r0, #0x58
	movs r1, #8
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	adds r0, r4, r5
	movs r1, #0x18
	movs r2, #0x15
	b _021B2D24
_021B2C0C:
	subs r0, r5, #7
	ldrb r0, [r4, r0]
	cmp r0, #0x64
	blo _021B2C1A
	movs r0, #0x16
	strb r0, [r4, r5]
	b _021B2ACA
_021B2C1A:
	movs r0, #0xa
	b _021B29AE
_021B2C1E:
	adds r0, r5, #6
	ldrsb r2, [r4, r0]
	cmp r2, #0
	blt _021B2C36
	adds r0, r5, #0
	adds r0, #0x28
	ldr r1, [r4, r0]
	movs r0, #1
	lsls r0, r2
	orrs r0, r1
	adds r5, #0x28
	str r0, [r4, r5]
_021B2C36:
	movs r0, #0x71
	lsls r0, r0, #2
	adds r0, r4, r0
	bl FUN_021B27D0
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B2C46:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B2D28
	b _021B2C5A
_021B2C50:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B2D28
_021B2C5A:
	adds r0, r5, #1
	ldrb r0, [r4, r0]
	b _021B29AE
_021B2C60:
	adds r0, r5, #0
	adds r0, #0xda
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0x1a
	b _021B2D24
_021B2C70:
	adds r0, r5, #0
	adds r0, #0xdb
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0x1b
	b _021B2D24
_021B2C80:
	ldr r0, [r4]
	bl FUN_0219BFA8
	str r0, [sp, #8]
	ldr r1, [r4, #0x54]
	adds r0, r7, #0
	bl FUN_021D6024
	adds r0, r4, #0
	adds r1, r4, r5
	bl FUN_021B26E8
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	bl FUN_02008BF0
	str r0, [sp]
	adds r2, r5, #6
	ldr r3, [sp, #0xc]
	ldrsb r2, [r4, r2]
	lsls r3, r3, #0x10
	adds r0, r7, #0
	adds r1, r6, #0
	lsrs r3, r3, #0x10
	bl FUN_021D6004
	adds r0, r4, #0
	adds r1, r4, r5
	bl FUN_021B26E8
	adds r3, r0, #0
	adds r0, r5, #0
	adds r0, #8
	str r3, [r4, r0]
	adds r2, r5, #6
	ldrsb r2, [r4, r2]
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B2D30
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B268C
	ldrb r0, [r4, r5]
	adds r0, r0, #1
	b _021B29AE
_021B2CDE:
	bl FUN_021D5ED0
	adds r0, r7, #0
	bl FUN_021D6000
	cmp r0, #0
	beq _021B2D28
	adds r2, r5, #6
	adds r3, r5, #0
	adds r1, r5, #0
	adds r3, #8
	adds r1, #0x40
	ldrsb r2, [r4, r2]
	ldr r3, [r4, r3]
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021B97E4
	movs r0, #0x1d
	b _021B29AE
_021B2D06:
	adds r0, r5, #0
	adds r0, #0xdc
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0x1e
	b _021B2D24
_021B2D16:
	adds r0, r5, #0
	adds r0, #0xdd
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #0x17
	movs r2, #0x16
_021B2D24:
	bl FUN_021B241C
_021B2D28:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B28A4

	thumb_func_start FUN_021B2D30
FUN_021B2D30: ; 0x021B2D30
	push {r4, r5}
	movs r4, #0x78
	adds r5, r2, #0
	muls r5, r4, r5
	adds r0, #0xf8
	adds r2, r0, r5
	ldrsh r0, [r0, r5]
	subs r4, #0x79
	cmp r0, r4
	bne _021B2D54
	movs r0, #2
	ldrsh r4, [r2, r0]
	subs r0, r0, #3
	cmp r4, r0
	bne _021B2D54
	ldrh r0, [r2, #4]
	cmp r0, #1
	bls _021B2D58
_021B2D54:
	adds r0, r3, #1
	strb r0, [r1, #0x10]
_021B2D58:
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021B2D30

	thumb_func_start FUN_021B2D5C
FUN_021B2D5C: ; 0x021B2D5C
	push {r4, r5, r6, r7}
	movs r3, #0
	ldr r0, [r0, #0x2c]
	ldr r7, _021B2DF8 ; =0x021D7008
	subs r4, r3, #1
	movs r2, #0
	movs r5, #0x18
_021B2D6A:
	adds r6, r2, #0
	muls r6, r5, r6
	ldr r6, [r7, r6]
	cmp r0, r6
	bne _021B2D76
	adds r4, r2, #0
_021B2D76:
	adds r2, r2, #1
	cmp r2, #7
	blt _021B2D6A
	cmp r4, #0
	blt _021B2DF2
	cmp r1, #0x12
	bgt _021B2DA6
	bge _021B2DCE
	cmp r1, #0x10
	bgt _021B2DA0
	bge _021B2DE2
	cmp r1, #2
	bgt _021B2DF2
	cmp r1, #0
	blt _021B2DF2
	beq _021B2DC2
	cmp r1, #1
	beq _021B2DE4
	cmp r1, #2
	beq _021B2DE6
	b _021B2DF2
_021B2DA0:
	cmp r1, #0x11
	beq _021B2DB8
	b _021B2DF2
_021B2DA6:
	cmp r1, #0x21
	bgt _021B2DB2
	bge _021B2DD8
	cmp r1, #0x20
	beq _021B2DE8
	b _021B2DF2
_021B2DB2:
	cmp r1, #0x22
	beq _021B2DCC
	b _021B2DF2
_021B2DB8:
	movs r0, #0x18
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021B2DFC ; =0x021D700C
_021B2DC0:
	b _021B2DF0
_021B2DC2:
	movs r0, #0x18
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021B2E00 ; =0x021D7010
	b _021B2DC0
_021B2DCC:
	b _021B2DE8
_021B2DCE:
	movs r0, #0x18
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021B2E04 ; =0x021D7018
	b _021B2DF0
_021B2DD8:
	movs r0, #0x18
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021B2E08 ; =0x021D701C
	b _021B2DF0
_021B2DE2:
	b _021B2DCE
_021B2DE4:
	b _021B2DD8
_021B2DE6:
	b _021B2DE8
_021B2DE8:
	movs r0, #0x18
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _021B2E0C ; =0x021D7014
_021B2DF0:
	ldr r3, [r0, r1]
_021B2DF2:
	adds r0, r3, #0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
_021B2DF8: .word 0x021D7008
_021B2DFC: .word 0x021D700C
_021B2E00: .word 0x021D7010
_021B2E04: .word 0x021D7018
_021B2E08: .word 0x021D701C
_021B2E0C: .word 0x021D7014
	thumb_func_end FUN_021B2D5C

	thumb_func_start FUN_021B2E10
FUN_021B2E10: ; 0x021B2E10
	movs r2, #9
	strb r2, [r0, #2]
	strb r1, [r0, #3]
	bx lr
	thumb_func_end FUN_021B2E10

	thumb_func_start FUN_021B2E18
FUN_021B2E18: ; 0x021B2E18
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	ldr r5, _021B2FCC ; =0x000001C6
	adds r4, r1, #0
	ldrb r1, [r4, r5]
	adds r6, r0, #0
	cmp r1, #0xa
	bls _021B2E2A
	b _021B2FC4
_021B2E2A:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B2E36: ; jump table
	.short _021B2E4C - _021B2E36 - 2 ; case 0
	.short _021B2E80 - _021B2E36 - 2 ; case 1
	.short _021B2ECA - _021B2E36 - 2 ; case 2
	.short _021B2EF0 - _021B2E36 - 2 ; case 3
	.short _021B2F0E - _021B2E36 - 2 ; case 4
	.short _021B2F2A - _021B2E36 - 2 ; case 5
	.short _021B2F4A - _021B2E36 - 2 ; case 6
	.short _021B2F6A - _021B2E36 - 2 ; case 7
	.short _021B2FA2 - _021B2E36 - 2 ; case 8
	.short _021B2FA8 - _021B2E36 - 2 ; case 9
	.short _021B2FB6 - _021B2E36 - 2 ; case 10
_021B2E4C:
	subs r1, r5, #2
	adds r1, r4, r1
	bl FUN_021B26B4
	cmp r0, #0
	beq _021B2E5E
	movs r0, #0xa
_021B2E5A:
	strb r0, [r4, r5]
	b _021B2FC4
_021B2E5E:
	adds r1, r5, #4
	ldrsb r1, [r4, r1]
	subs r0, r5, #2
	movs r3, #0x78
	adds r2, r1, #0
	muls r2, r3, r2
	adds r1, r6, r2
	adds r2, r5, #2
	ldrb r2, [r4, r2]
	adds r3, #0xb4
	adds r0, r4, r0
	lsls r2, r2, #1
	adds r1, r1, r2
	ldrsh r1, [r1, r3]
	bl FUN_021B2D5C
	b _021B2E5A
_021B2E80:
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	movs r1, #9
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	adds r0, r5, #0
	adds r0, #0xd2
_021B2EAE:
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf
	ands r1, r0
	movs r0, #0x10
	b _021B2EE8
_021B2ECA:
	adds r0, r5, #0
	adds r0, #0xce
_021B2ECE:
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf0
	ands r1, r0
	movs r0, #1
_021B2EE8:
	orrs r0, r1
_021B2EEA:
	adds r5, #0x2a
	str r0, [r4, r5]
	b _021B2FC4
_021B2EF0:
	adds r0, r5, #0
	adds r0, #0xd3
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf
_021B2F0A:
	ands r0, r1
	b _021B2EEA
_021B2F0E:
	adds r0, r5, #0
	adds r0, #0xcf
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf0
	b _021B2F0A
_021B2F2A:
	adds r0, r5, #0
	adds r0, #0xd4
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf
	ands r1, r0
	movs r0, #0x20
_021B2F48:
	b _021B2EE8
_021B2F4A:
	adds r0, r5, #0
	adds r0, #0xd5
	bl FUN_021DF308
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021B2E10
	adds r0, r5, #0
	adds r0, #0x2a
	ldr r1, [r4, r0]
	movs r0, #0xf0
	ands r1, r0
	movs r0, #2
	b _021B2F48
_021B2F6A:
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	movs r1, #9
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	adds r0, r5, #0
	adds r0, #0xd2
	bl FUN_021DF308
	adds r0, r5, #0
	adds r0, #0xd6
	b _021B2EAE
_021B2FA2:
	adds r0, r5, #0
	adds r0, #0xd7
	b _021B2ECE
_021B2FA8:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B2FC4
	adds r0, r5, #1
	ldrb r0, [r4, r0]
	b _021B2E5A
_021B2FB6:
	movs r1, #0
	strb r1, [r4, r5]
	adds r0, r5, #1
	strb r1, [r4, r0]
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B2FC4:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021B2FCC: .word 0x000001C6
	thumb_func_end FUN_021B2E18

	thumb_func_start FUN_021B2FD0
FUN_021B2FD0: ; 0x021B2FD0
	push {r4, r5}
	movs r5, #0
	movs r2, #0x30
_021B2FD6:
	lsls r3, r5, #2
	adds r4, r0, r3
	ldrsh r3, [r4, r2]
	cmp r1, r3
	bne _021B2FE8
	movs r0, #0x32
	ldrsh r0, [r4, r0]
	pop {r4, r5}
	bx lr
_021B2FE8:
	adds r5, r5, #1
	cmp r5, #3
	blt _021B2FD6
	movs r0, #0
	mvns r0, r0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B2FD0

	thumb_func_start FUN_021B2FF8
FUN_021B2FF8: ; 0x021B2FF8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	movs r5, #0x71
	lsls r5, r5, #2
	adds r6, r0, #0
	ldrb r0, [r4, r5]
	cmp r0, #4
	bhi _021B30D4
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B301C: ; jump table
	.short _021B3026 - _021B301C - 2 ; case 0
	.short _021B307C - _021B301C - 2 ; case 1
	.short _021B3098 - _021B301C - 2 ; case 2
	.short _021B30B2 - _021B301C - 2 ; case 3
	.short _021B30C6 - _021B301C - 2 ; case 4
_021B3026:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #2
	beq _021B3036
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B3036:
	adds r0, r5, #0
	adds r0, #0xc
	ldr r0, [r4, r0]
	cmp r0, #0
	bge _021B3052
	subs r1, r5, #7
	ldrb r1, [r4, r1]
	adds r0, r6, #0
	bl FUN_021B2FD0
	cmp r0, #0
	blt _021B3052
	adds r5, #0xc
	str r0, [r4, r5]
_021B3052:
	movs r5, #0x1d
	lsls r5, r5, #4
	ldr r0, [r4, r5]
	cmp r0, #0
	ble _021B3076
	movs r1, #0
	movs r0, #1
	movs r2, #0x10
	movs r3, #0
	str r1, [sp]
	bl FUN_021DFCB0
	adds r0, r5, #0
	subs r0, #0xc
	ldrb r0, [r4, r0]
	subs r5, #0xc
	adds r0, r0, #1
	b _021B3094
_021B3076:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B307C:
	movs r0, #1
	movs r6, #1
	bl FUN_021DFD3C
	cmp r0, #0
	bne _021B30D4
	adds r0, r6, #0
	adds r1, r6, #0
	bl FUN_021DFDB4
_021B3090:
	ldrb r0, [r4, r5]
	adds r0, r0, #1
_021B3094:
	strb r0, [r4, r5]
	b _021B30D4
_021B3098:
	adds r0, r5, #0
	adds r0, #0xc
	ldr r0, [r4, r0]
	bl FUN_021E0244
	movs r2, #0
	movs r0, #1
	movs r1, #0x10
	movs r3, #0
	str r2, [sp]
	bl FUN_021DFCB0
	b _021B3090
_021B30B2:
	movs r0, #1
	movs r1, #0
	bl FUN_021DFDB4
	movs r0, #1
	bl FUN_021DFD3C
	cmp r0, #0
	bne _021B30D4
	b _021B3090
_021B30C6:
	movs r0, #0
	mvns r0, r0
	adds r5, #0xc
	str r0, [r4, r5]
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B30D4:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B2FF8

	thumb_func_start FUN_021B30DC
FUN_021B30DC: ; 0x021B30DC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_0219CA20
	movs r2, #0x71
	lsls r2, r2, #2
	adds r1, r5, r2
	subs r2, r2, #7
	adds r3, r0, #0
	ldrb r2, [r5, r2]
	adds r0, r6, #0
	bl FUN_021B2578
	adds r2, r0, #0
	movs r1, #0x78
	muls r2, r1, r2
	movs r0, #0x78
	adds r1, #0xb1
	adds r2, r6, r2
	adds r0, #0x8a
	ldrsh r2, [r2, r0]
	ldrb r1, [r7, r1]
	ldr r0, _021B313C ; =0x021D6EF4
	cmp r2, #0x3c
	ldrb r1, [r0, r1]
	ble _021B3120
	movs r0, #0xf
	adds r4, r1, #0
	muls r4, r0, r4
	adds r4, #0xc
	b _021B3138
_021B3120:
	cmp r2, #0
	blt _021B312E
	movs r0, #0xf
	adds r4, r1, #0
	muls r4, r0, r4
	adds r4, #0xa
	b _021B3138
_021B312E:
	bge _021B3138
	movs r0, #0xf
	adds r4, r1, #0
	muls r4, r0, r4
	adds r4, #0xb
_021B3138:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B313C: .word 0x021D6EF4
	thumb_func_end FUN_021B30DC

	thumb_func_start FUN_021B3140
FUN_021B3140: ; 0x021B3140
	push {r3, r4, r5, r6, r7, lr}
	movs r5, #0x71
	adds r4, r0, #0
	lsls r5, r5, #2
	ldrb r0, [r4, r5]
	cmp r0, #9
	bls _021B3150
	b _021B326C
_021B3150:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B315C: ; jump table
	.short _021B3170 - _021B315C - 2 ; case 0
	.short _021B31AC - _021B315C - 2 ; case 1
	.short _021B326C - _021B315C - 2 ; case 2
	.short _021B31BC - _021B315C - 2 ; case 3
	.short _021B31F4 - _021B315C - 2 ; case 4
	.short _021B3204 - _021B315C - 2 ; case 5
	.short _021B3236 - _021B315C - 2 ; case 6
	.short _021B324C - _021B315C - 2 ; case 7
	.short _021B325E - _021B315C - 2 ; case 8
	.short _021B3268 - _021B315C - 2 ; case 9
_021B3170:
	ldr r0, [r4]
	bl FUN_0219E350
	adds r7, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_021B6654
	cmp r0, #1
	bne _021B318E
	movs r1, #0x64
	b _021B3190
_021B318E:
	movs r1, #0x65
_021B3190:
	subs r0, r5, #7
	strb r1, [r4, r0]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021B30DC
	movs r1, #0x1e
	lsls r1, r1, #4
	str r0, [r4, r1]
	movs r0, #1
	subs r1, #0x1c
	strb r0, [r4, r1]
	b _021B326C
_021B31AC:
	adds r0, r5, #0
	adds r0, #0xde
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #8
	movs r2, #3
_021B31BA:
	b _021B322C
_021B31BC:
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r2, #0
	movs r1, #9
	movs r3, #0
	str r2, [sp]
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	adds r0, r5, #0
	adds r0, #0xd4
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #8
	movs r2, #4
	b _021B31BA
_021B31F4:
	adds r0, r5, #0
	adds r0, #0xd0
	bl FUN_021DF308
	adds r0, r4, r5
	movs r1, #8
	movs r2, #5
	b _021B31BA
_021B3204:
	adds r0, r5, #0
	adds r0, #0x1c
	ldr r2, [r4, r0]
	cmp r2, #0
	blt _021B3232
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #9
_021B3214:
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	adds r0, r4, r5
	movs r1, #7
	movs r2, #9
_021B322C:
	bl FUN_021B241C
	b _021B326C
_021B3232:
	movs r0, #6
_021B3234:
	b _021B325A
_021B3236:
	adds r0, r5, #0
	adds r0, #0x20
	ldr r2, [r4, r0]
	cmp r2, #0
	blt _021B3248
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #8
	b _021B3214
_021B3248:
	movs r0, #9
	b _021B3234
_021B324C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B326C
_021B3256:
	adds r0, r5, #1
	ldrb r0, [r4, r0]
_021B325A:
	strb r0, [r4, r5]
	b _021B326C
_021B325E:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B326C
	b _021B3256
_021B3268:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B326C:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B3140

	thumb_func_start FUN_021B3270
FUN_021B3270: ; 0x021B3270
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	adds r6, r2, #0
	cmp r1, #6
	bls _021B3282
	b _021B3460
_021B3282:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B328E: ; jump table
	.short _021B329C - _021B328E - 2 ; case 0
	.short _021B3398 - _021B328E - 2 ; case 1
	.short _021B33B8 - _021B328E - 2 ; case 2
	.short _021B33CE - _021B328E - 2 ; case 3
	.short _021B3414 - _021B328E - 2 ; case 4
	.short _021B3428 - _021B328E - 2 ; case 5
	.short _021B3446 - _021B328E - 2 ; case 6
_021B329C:
	ldr r1, _021B3468 ; =0x000001BA
	ldrb r2, [r4, r1]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1f
	beq _021B32B0
	bl FUN_021B3480
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B32B0:
	subs r1, #0xc
	ldrb r1, [r4, r1]
	add r2, sp, #0
	ldr r0, [r4, #0x14]
	adds r2, #1
	add r3, sp, #0
	bl FUN_021D46E4
	adds r6, r0, #0
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0
	beq _021B32D2
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93A8
_021B32D2:
	adds r0, r4, #0
	adds r0, #0xe0
	str r6, [r0]
	add r0, sp, #0
	ldrb r0, [r0, #1]
	lsls r1, r0, #2
	adds r0, r4, #0
	adds r0, #0xe4
	str r1, [r0]
	ldr r1, [r6]
	lsls r0, r1, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #8
	bne _021B332E
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B9424
	ldr r0, [r4, #0x54]
	cmp r0, #0
	beq _021B3318
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0xb7
	movs r6, #1
	bl FUN_021D0B2C
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	str r6, [r5]
	b _021B3460
_021B3318:
	adds r0, r4, #0
	bl FUN_021B3480
	ldr r1, _021B3468 ; =0x000001BA
	movs r0, #0x10
	ldrb r2, [r4, r1]
	add sp, #4
	orrs r0, r2
	strb r0, [r4, r1]
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B332E:
	cmp r0, #9
	bne _021B3372
	ldr r1, _021B3468 ; =0x000001BA
	movs r0, #0x20
	ldrb r2, [r4, r1]
	orrs r0, r2
	strb r0, [r4, r1]
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B9424
	ldr r0, [r4, #0x54]
	cmp r0, #0
	beq _021B3366
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0xb8
	bl FUN_021D0B2C
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #2
_021B3362:
	str r0, [r5]
	b _021B3460
_021B3366:
	adds r0, r4, #0
	bl FUN_021B3480
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B3372:
	cmp r0, #1
	bne _021B3394
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1d
	cmp r0, #6
	blo _021B3394
	movs r2, #0x4b
	lsls r2, r2, #2
	lsls r1, r1, #9
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x10
	ldr r3, [r4, r2]
	ldr r0, _021B346C ; =0xFF80007F
	lsrs r1, r1, #9
	ands r0, r3
	orrs r0, r1
	str r0, [r4, r2]
_021B3394:
	movs r0, #3
	b _021B3362
_021B3398:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B3460
	adds r0, r4, #0
	bl FUN_021B3480
	ldr r1, _021B3468 ; =0x000001BA
	movs r0, #0x10
	ldrb r2, [r4, r1]
	add sp, #4
	orrs r0, r2
	strb r0, [r4, r1]
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B33B8:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B3460
	adds r0, r4, #0
	bl FUN_021B3480
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B33CE:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #0
	bne _021B33E6
	movs r0, #0x71
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B33E6:
	ldr r0, _021B3470 ; =0x000001AE
	ldrb r1, [r4, r0]
	cmp r1, #0
	beq _021B33FA
	movs r1, #0
	adds r0, #0x16
	strb r1, [r4, r0]
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B33FA:
	ldr r1, [r4, #0x54]
	cmp r1, #0
	beq _021B340E
	cmp r6, #0
	beq _021B340E
	movs r1, #0
	adds r0, #0x16
	strb r1, [r4, r0]
	movs r0, #4
	b _021B3362
_021B340E:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B3414:
	bl FUN_021B28A4
	cmp r0, #0
	beq _021B3460
	movs r0, #0x71
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	movs r0, #5
	b _021B3362
_021B3428:
	bl FUN_021B2FF8
	cmp r0, #0
	beq _021B3460
	movs r0, #0x71
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	subs r1, r0, #7
	ldrb r1, [r4, r1]
	subs r0, r0, #7
	adds r1, r1, #1
	strb r1, [r4, r0]
	movs r0, #6
	b _021B3362
_021B3446:
	bl FUN_021B2424
	cmp r0, #0
	beq _021B3460
	adds r0, r4, #0
	bl FUN_021B19E4
	movs r1, #0x7a
	lsls r1, r1, #2
	strh r0, [r4, r1]
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B3460:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021B3468: .word 0x000001BA
_021B346C: .word 0xFF80007F
_021B3470: .word 0x000001AE
	thumb_func_end FUN_021B3270
_021B3474:
	.byte 0x01, 0x4B, 0x01, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x71, 0x32, 0x1B, 0x02

	thumb_func_start FUN_021B3480
FUN_021B3480: ; 0x021B3480
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r0, r4, r0
	str r0, [r4, #0xc]
	bl FUN_021BDC9C
	adds r0, r4, #0
	ldr r1, [r4, #0xc]
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #4
	adds r4, #0xe4
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_021B3480

	thumb_func_start FUN_021B34A0
FUN_021B34A0: ; 0x021B34A0
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _021B3540 ; =0x00000125
	movs r4, #0
	adds r5, r0, #0
	strb r4, [r5, r6]
	subs r2, r4, #1
	adds r1, r6, #1
	strb r2, [r5, r1]
	adds r1, r6, #2
	strb r4, [r5, r1]
	adds r1, r6, #0
	adds r1, #0x95
	ldrb r2, [r5, r1]
	movs r1, #4
	adds r3, r6, #0
	bics r2, r1
	adds r1, r6, #0
	adds r1, #0x95
	strb r2, [r5, r1]
	adds r1, r6, #0
	adds r1, #0x73
	adds r1, r5, r1
	str r1, [sp]
	subs r2, r6, #1
	adds r3, #0x67
	ldrb r2, [r5, r2]
	movs r1, #0
	adds r3, r5, r3
	bl FUN_021B5DBC
	adds r0, r5, #0
	bl FUN_021B4664
	adds r0, r5, #0
	bl FUN_021B45A8
	adds r0, r6, #7
	adds r6, r5, r0
_021B34EC:
	lsls r0, r4, #2
	adds r0, r6, r0
	bl FUN_021BDC9C
	adds r4, r4, #1
	cmp r4, #3
	blo _021B34EC
	movs r6, #0x49
	lsls r6, r6, #2
	ldrb r0, [r5, r6]
	movs r4, #0
	cmp r0, #0
	bls _021B3532
	adds r7, r5, r6
	adds r6, #0x8a
_021B350A:
	ldrb r1, [r5, r6]
	lsls r2, r4, #0x18
	ldr r0, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219D228
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #0
	bl FUN_021B46B8
	cmp r0, #0
	bne _021B352A
	ldr r0, _021B3544 ; =0x00000127
	strb r4, [r5, r0]
	b _021B3532
_021B352A:
	ldrb r0, [r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _021B350A
_021B3532:
	ldr r1, _021B3548 ; =FUN_021B3668
	adds r0, r5, #0
	bl FUN_021B21A8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B3540: .word 0x00000125
_021B3544: .word 0x00000127
_021B3548: .word FUN_021B3668
	thumb_func_end FUN_021B34A0

	thumb_func_start FUN_021B354C
FUN_021B354C: ; 0x021B354C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x54]
	bl FUN_021D022C
	movs r0, #0x4a
	movs r1, #1
	lsls r0, r0, #2
	strb r1, [r4, r0]
	pop {r4, pc}
	thumb_func_end FUN_021B354C

	thumb_func_start FUN_021B3560
FUN_021B3560: ; 0x021B3560
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r1, [sp, #4]
	ldr r1, [r1]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B3578
	cmp r1, #1
	beq _021B358A
	cmp r1, #2
	beq _021B363C
	b _021B3658
_021B3578:
	ldr r0, [r5, #0x54]
	bl FUN_021D0A58
_021B357E:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [r0]
	b _021B3658
_021B358A:
	ldr r0, [r5, #0x54]
	bl FUN_021D0A68
	cmp r0, #0
	beq _021B3658
	ldr r0, _021B3660 ; =0x00000125
	subs r1, r0, #1
	ldrb r2, [r5, r0]
	ldrb r1, [r5, r1]
	cmp r2, r1
	bhs _021B363A
	adds r1, r5, #0
	str r1, [sp, #8]
	adds r1, #0x38
	str r1, [sp, #8]
	adds r1, r0, #7
	adds r6, r5, r0
	adds r7, r5, r1
	adds r1, r6, #0
	str r1, [sp, #0x18]
	subs r1, r0, #1
	str r1, [sp, #0x14]
	adds r1, r0, #0
	str r1, [sp, #0x10]
	adds r1, #0x89
	adds r0, r5, r0
	str r1, [sp, #0x10]
	str r0, [sp, #0xc]
_021B35C2:
	ldr r1, [sp, #0x10]
	ldr r0, [r5, #4]
	ldrb r1, [r5, r1]
	bl FUN_0219D228
	str r0, [r5, #8]
	ldr r0, [sp, #0xc]
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [r5, #0xc]
	bl FUN_021BDC9C
	ldr r1, [r5, #8]
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	bl FUN_021B46B8
	cmp r0, #0
	bne _021B3628
	ldr r1, [r5, #8]
	adds r0, r5, #0
	add r2, sp, #0x1c
	bl FUN_021B4A64
	adds r1, r0, #0
	cmp r1, #4
	bhs _021B361E
	ldr r0, [r5, #8]
	bl FUN_021BAD00
	adds r4, r0, #0
	ldr r0, [sp, #8]
	adds r3, r4, #0
	str r0, [sp]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	bl FUN_021BDA60
	adds r2, r0, #0
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	bl FUN_021BDB38
	b _021B3628
_021B361E:
	ldr r0, [r5, #0xc]
	ldr r2, [r5, #8]
	adds r1, r5, #0
	bl FUN_021B47D4
_021B3628:
	ldrb r0, [r6]
	adds r0, r0, #1
	strb r0, [r6]
	ldr r0, [sp, #0x18]
	ldrb r2, [r0]
	ldr r0, [sp, #0x14]
	ldrb r0, [r5, r0]
	cmp r2, r0
	blo _021B35C2
_021B363A:
	b _021B357E
_021B363C:
	movs r2, #0x4b
	lsls r2, r2, #2
	adds r1, r5, #0
	adds r3, r5, r2
	adds r1, #0xe0
	subs r2, #8
	str r3, [r1]
	ldrb r1, [r5, r2]
	adds r5, #0xe4
	lsls r1, r1, #2
	str r1, [r5]
	ldr r1, _021B3664 ; =FUN_021B4538
	bl FUN_021B21A8
_021B3658:
	movs r0, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B3660: .word 0x00000125
_021B3664: .word FUN_021B4538
	thumb_func_end FUN_021B3560

	thumb_func_start FUN_021B3668
FUN_021B3668: ; 0x021B3668
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #8
	bls _021B3676
	b _021B3936
_021B3676:
	adds r2, r1, r1
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_021B3682: ; jump table
	.short _021B3694 - _021B3682 - 2 ; case 0
	.short _021B36F2 - _021B3682 - 2 ; case 1
	.short _021B3732 - _021B3682 - 2 ; case 2
	.short _021B3746 - _021B3682 - 2 ; case 3
	.short _021B3762 - _021B3682 - 2 ; case 4
	.short _021B38DC - _021B3682 - 2 ; case 5
	.short _021B38EA - _021B3682 - 2 ; case 6
	.short _021B38F2 - _021B3682 - 2 ; case 7
	.short _021B3928 - _021B3682 - 2 ; case 8
_021B3694:
	ldr r6, _021B393C ; =0x000001AE
	ldr r0, [r4, #4]
	adds r2, r6, #0
	subs r2, #0x89
	ldrb r1, [r4, r6]
	ldrb r2, [r4, r2]
	bl FUN_0219D228
	str r0, [r4, #8]
	adds r0, r6, #0
	subs r0, #0x82
	adds r1, r4, r0
	adds r0, r6, #0
	subs r0, #0x89
	ldrb r0, [r4, r0]
	movs r2, #0
	lsls r0, r0, #2
	adds r0, r1, r0
	adds r1, r6, #0
	str r0, [r4, #0xc]
	adds r1, #9
	strb r2, [r4, r1]
	bl FUN_021BDC9C
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r0, r4, #0
	bl FUN_021B46B8
	cmp r0, #0
	beq _021B36DC
	ldr r1, _021B3940 ; =FUN_021B4468
	adds r0, r4, #0
_021B36D6:
	bl FUN_021B21A8
	b _021B3936
_021B36DC:
	subs r6, #8
	adds r0, r4, #0
	adds r1, r4, r6
	bl FUN_021B3A9C
	cmp r0, #1
	bne _021B36F0
	adds r0, r4, #0
	ldr r1, _021B3944 ; =FUN_021B3980
	b _021B36D6
_021B36F0:
	b _021B3922
_021B36F2:
	ldr r0, _021B3948 ; =0x00000126
	subs r2, r0, #1
	ldrsb r3, [r4, r0]
	ldrb r2, [r4, r2]
	cmp r3, r2
	bne _021B3706
	adds r0, r0, #2
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021B372E
_021B3706:
	adds r2, r4, #0
	ldr r1, [r4, #8]
	adds r0, r4, #0
	adds r2, #0x58
	bl FUN_021B2150
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D0274
	movs r0, #0x4a
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	subs r1, r0, #3
	ldrb r1, [r4, r1]
	subs r0, r0, #2
	strb r1, [r4, r0]
	b _021B3922
_021B372E:
	adds r0, r1, #2
	b _021B3934
_021B3732:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	bne _021B3740
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B3740:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_021B3746:
	ldr r0, _021B394C ; =0x00000125
	movs r2, #1
	ldrb r1, [r4, r0]
	adds r0, r0, #2
	ldrb r0, [r4, r0]
	cmp r1, r0
	bhi _021B3756
	movs r2, #0
_021B3756:
	ldr r0, [r4, #0x54]
	ldr r1, [r4, #8]
	ldr r3, [r4, #0xc]
	bl FUN_021CF02C
	b _021B3922
_021B3762:
	ldr r1, _021B3950 ; =FUN_021B3560
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r4, #0x54]
	beq _021B3776
	bl FUN_021CF068
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B3776:
	bl FUN_021CF070
	cmp r0, #4
	bls _021B3780
	b _021B3936
_021B3780:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B378C: ; jump table
	.short _021B3936 - _021B378C - 2 ; case 0
	.short _021B37BC - _021B378C - 2 ; case 1
	.short _021B37CE - _021B378C - 2 ; case 2
	.short _021B3796 - _021B378C - 2 ; case 3
	.short _021B380E - _021B378C - 2 ; case 4
_021B3796:
	ldr r0, [r4, #8]
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B37AA
	ldr r0, [r4, #0x54]
	bl FUN_021CF230
	b _021B3830
_021B37AA:
	ldr r1, _021B394C ; =0x00000125
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	movs r2, #0
	bl FUN_021B4678
	adds r0, r4, #0
	ldr r1, _021B3954 ; =FUN_021B3F6C
	b _021B36D6
_021B37BC:
	ldr r1, _021B394C ; =0x00000125
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	movs r2, #0
	bl FUN_021B4678
	adds r0, r4, #0
	ldr r1, _021B3958 ; =FUN_021B3C40
	b _021B36D6
_021B37CE:
	ldr r0, [r4, #8]
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B37DC
	b _021B3830
_021B37DC:
	ldr r0, _021B395C ; =0x000001B2
	ldrb r0, [r4, r0]
	cmp r0, #1
	bne _021B37F8
	ldr r0, [r4]
	bl FUN_0219DB48
	cmp r0, #0
	bne _021B37F8
	ldr r0, [r4, #0x54]
	bl FUN_021CF230
	movs r0, #5
	b _021B3934
_021B37F8:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B3808
	adds r0, r4, #0
	ldr r1, _021B3960 ; =FUN_021B41A8
	b _021B36D6
_021B3808:
	adds r0, r4, #0
	ldr r1, _021B3964 ; =FUN_021B4064
	b _021B36D6
_021B380E:
	ldr r1, _021B394C ; =0x00000125
	adds r0, r1, #2
	ldrb r2, [r4, r1]
	ldrb r0, [r4, r0]
	cmp r2, r0
	bne _021B3846
	ldr r0, [r4, #8]
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B3834
	ldr r0, [r4]
	bl FUN_0219BF60
	cmp r0, #2
	beq _021B3834
_021B3830:
	movs r0, #6
	b _021B3934
_021B3834:
	ldr r1, _021B394C ; =0x00000125
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	movs r2, #0
	bl FUN_021B4678
	adds r0, r4, #0
	ldr r1, _021B3968 ; =FUN_021B42C0
	b _021B36D6
_021B3846:
	cmp r2, #0
	beq _021B3936
	adds r5, r4, r1
	adds r0, r5, #0
	adds r7, r1, #0
	str r0, [sp]
	adds r7, #0x89
	adds r6, r5, #0
_021B3856:
	ldrb r0, [r5]
	subs r0, r0, #1
	strb r0, [r5]
	ldrb r1, [r4, r7]
	ldrb r2, [r6]
	ldr r0, [r4, #4]
	bl FUN_0219D228
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	bl FUN_021B46B8
	cmp r0, #0
	bne _021B38D2
	ldr r5, _021B394C ; =0x00000125
	adds r0, r4, #0
	ldrb r1, [r4, r5]
	bl FUN_021B4684
	adds r1, r5, #0
	adds r1, #0x8e
	ldrb r1, [r4, r1]
	adds r1, r1, r0
	adds r0, r5, #0
	adds r0, #0x8e
	strb r1, [r4, r0]
	adds r0, r5, #7
	adds r1, r4, r0
	ldrb r0, [r4, r5]
	lsls r0, r0, #2
	adds r0, r1, r0
	bl FUN_021BDCBC
	cmp r0, #3
	bne _021B38A6
	adds r5, #0x73
	adds r0, r4, r5
	bl FUN_021B3970
_021B38A6:
	movs r5, #0x4b
	lsls r5, r5, #2
	subs r0, r5, #7
	ldrb r0, [r4, r0]
	adds r1, r4, r5
	lsls r0, r0, #2
	adds r0, r1, r0
	bl FUN_021BDCBC
	cmp r0, #2
	bne _021B38C6
	subs r1, r5, #7
	ldrb r1, [r4, r1]
	adds r0, r4, #0
	bl FUN_021B4600
_021B38C6:
	ldr r1, _021B396C ; =FUN_021B3668
	adds r0, r4, #0
	bl FUN_021B21A8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B38D2:
	ldr r0, [sp]
	ldrb r0, [r0]
	cmp r0, #0
	bne _021B3856
	b _021B3936
_021B38DC:
	ldr r0, [r4, #0x54]
	bl FUN_021CF240
	cmp r0, #0
	beq _021B3936
	movs r0, #3
	b _021B3934
_021B38EA:
	ldr r0, [r4, #0x54]
	bl FUN_021CF220
	b _021B3922
_021B38F2:
	ldr r0, [r4, #0x54]
	bl FUN_021CF240
	cmp r0, #0
	beq _021B3936
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0xc5
	bl FUN_021D0B2C
	ldr r0, [r4, #8]
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021B354C
_021B3922:
	ldr r0, [r5]
	adds r0, r0, #1
	b _021B3934
_021B3928:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B3936
	movs r0, #1
_021B3934:
	str r0, [r5]
_021B3936:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B393C: .word 0x000001AE
_021B3940: .word FUN_021B4468
_021B3944: .word FUN_021B3980
_021B3948: .word 0x00000126
_021B394C: .word 0x00000125
_021B3950: .word FUN_021B3560
_021B3954: .word FUN_021B3F6C
_021B3958: .word FUN_021B3C40
_021B395C: .word 0x000001B2
_021B3960: .word FUN_021B41A8
_021B3964: .word FUN_021B4064
_021B3968: .word FUN_021B42C0
_021B396C: .word FUN_021B3668
	thumb_func_end FUN_021B3668

	thumb_func_start FUN_021B3970
FUN_021B3970: ; 0x021B3970
	bx pc
	nop
	thumb_func_end FUN_021B3970
_021B3974:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x91, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B3980
FUN_021B3980: ; 0x021B3980
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #3
	bhi _021B3A7C
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B399A: ; jump table
	.short _021B39A2 - _021B399A - 2 ; case 0
	.short _021B3A2C - _021B399A - 2 ; case 1
	.short _021B3A52 - _021B399A - 2 ; case 2
	.short _021B3A6C - _021B399A - 2 ; case 3
_021B39A2:
	ldr r0, [r4]
	movs r1, #0
	movs r6, #0
	bl FUN_0219C8F8
	adds r7, r0, #0
	ldr r0, [r4]
	adds r1, r7, #0
	bl FUN_0219D95C
	str r0, [sp, #4]
	ldr r0, [r4]
	adds r1, r7, #0
	bl FUN_0219D978
	movs r1, #9
	movs r2, #0
	movs r3, #0
	str r6, [sp]
	bl FUN_021DF8CC
	movs r6, #0x27
	lsls r6, r6, #4
	adds r0, r6, #0
	bl FUN_021DF308
	adds r2, r6, #0
	subs r2, #0xca
	ldrh r2, [r4, r2]
	ldr r0, [r4, #0x54]
	ldr r1, [sp, #4]
	bl FUN_021D02C8
	adds r0, r6, #0
	subs r0, #0xca
	ldrh r1, [r4, r0]
	ldr r0, _021B3A84 ; =0x0000FFED
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _021B3A28
	ldr r0, [r4]
	adds r1, r7, #0
	bl FUN_0219D978
	bl FUN_021BD7A0
	cmp r0, #0
	beq _021B3A28
	subs r6, #0xb6
	ldrb r0, [r4, r6]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bne _021B3A28
	ldr r0, _021B3A88 ; =0x0000047B
	bl FUN_021E0204
	bl FUN_021E018C
	cmp r0, #0
	bne _021B3A28
	movs r0, #8
	bl FUN_02005EA0
	movs r0, #1
_021B3A26:
	b _021B3A4E
_021B3A28:
	movs r0, #2
	b _021B3A26
_021B3A2C:
	bl FUN_02005EC0
	cmp r0, #0
	bne _021B3A7C
	ldr r0, _021B3A88 ; =0x0000047B
	ldr r1, _021B3A8C ; =0x0000FFFF
	bl FUN_02005DF4
	ldr r1, _021B3A90 ; =0x000001BA
	movs r0, #1
	ldrb r2, [r4, r1]
	bics r2, r0
	movs r0, #1
	orrs r0, r2
	strb r0, [r4, r1]
_021B3A4A:
	ldr r0, [r5]
	adds r0, r0, #1
_021B3A4E:
	str r0, [r5]
	b _021B3A7C
_021B3A52:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B3A7C
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B3A7C
	ldr r0, _021B3A94 ; =0x00000271
	bl FUN_021DF308
	b _021B3A4A
_021B3A6C:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B3A7C
	ldr r1, _021B3A98 ; =FUN_021B3668
	adds r0, r4, #0
	bl FUN_021B21A8
_021B3A7C:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B3A84: .word 0x0000FFED
_021B3A88: .word 0x0000047B
_021B3A8C: .word 0x0000FFFF
_021B3A90: .word 0x000001BA
_021B3A94: .word 0x00000271
_021B3A98: .word FUN_021B3668
	thumb_func_end FUN_021B3980

	thumb_func_start FUN_021B3A9C
FUN_021B3A9C: ; 0x021B3A9C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	adds r7, r0, #0
	ldr r0, [r7]
	str r1, [sp]
	bl FUN_0219BF14
	cmp r0, #1
	bne _021B3AC8
	ldr r0, [r7]
	movs r1, #0
	movs r4, #0
	bl FUN_0219C8F8
	adds r5, r0, #0
	ldr r0, [r7]
	adds r1, r5, #0
	bl FUN_0219D95C
	str r0, [sp, #8]
	cmp r0, #0
	bne _021B3ACA
_021B3AC8:
	b _021B3C32
_021B3ACA:
	ldr r0, [r7, #4]
	adds r1, r5, #0
	bl FUN_0219D408
	str r0, [sp, #0x14]
	ldr r0, [r7, #4]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0219D228
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B3B16
	ldr r0, [r7]
	adds r1, r5, #0
	bl FUN_0219D2D4
	movs r4, #1
	str r0, [sp, #0xc]
	cmp r0, #1
	bls _021B3B16
_021B3AF8:
	lsls r2, r4, #0x18
	ldr r0, [r7, #4]
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_0219D228
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B3B16
	ldr r0, [sp, #0xc]
	adds r4, r4, #1
	cmp r4, r0
	blo _021B3AF8
_021B3B16:
	movs r0, #0
	mvns r0, r0
	str r0, [sp, #0x10]
	ldr r0, _021B3C38 ; =0x000001A2
	movs r4, #0
	str r0, [sp, #0x34]
	subs r0, #0x88
	str r0, [sp, #0x34]
	ldr r0, _021B3C38 ; =0x000001A2
	str r0, [sp, #0x30]
	subs r0, #0x88
	str r0, [sp, #0x30]
	ldr r0, _021B3C38 ; =0x000001A2
	str r0, [sp, #0x2c]
	subs r0, #0x88
	str r0, [sp, #0x2c]
	ldr r0, _021B3C38 ; =0x000001A2
	str r0, [sp, #0x28]
	subs r0, #0x88
	str r0, [sp, #0x28]
	ldr r0, _021B3C38 ; =0x000001A2
	str r0, [sp, #0x24]
	subs r0, #0x88
	str r0, [sp, #0x24]
	ldr r0, _021B3C38 ; =0x000001A2
	str r0, [sp, #0x20]
	subs r0, #0x88
	str r0, [sp, #0x20]
_021B3B4E:
	ldr r0, [sp, #0x20]
	adds r5, r7, r4
	ldrb r0, [r5, r0]
	cmp r0, #0
	bne _021B3C16
	ldr r0, _021B3C3C ; =0x021D6F06
	lsls r1, r4, #1
	ldrh r0, [r0, r1]
	ldr r2, _021B3C38 ; =0x000001A2
	str r0, [sp, #4]
	ldrh r2, [r7, r2]
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	bl FUN_02030574
	cmp r0, #0
	beq _021B3C10
	ldr r0, [sp, #4]
	subs r0, #0x11
	str r0, [sp, #4]
	cmp r0, #3
	bhi _021B3C16
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B3B86: ; jump table
	.short _021B3BAE - _021B3B86 - 2 ; case 0
	.short _021B3B8E - _021B3B86 - 2 ; case 1
	.short _021B3BC0 - _021B3B86 - 2 ; case 2
	.short _021B3BDC - _021B3B86 - 2 ; case 3
_021B3B8E:
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	str r0, [sp, #0x18]
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021BD3B4
	ldr r1, [sp, #0x18]
	cmp r1, r0
	bhi _021B3C16
	str r4, [sp, #0x10]
	movs r1, #1
	ldr r0, [sp, #0x24]
	b _021B3C14
_021B3BAE:
	adds r0, r6, #0
	bl FUN_021BB388
	cmp r0, #0
	bne _021B3C16
	str r4, [sp, #0x10]
	movs r1, #1
	ldr r0, [sp, #0x28]
	b _021B3C14
_021B3BC0:
	ldr r0, [sp, #0x14]
	bl FUN_0219D4C8
	cmp r0, #1
	bls _021B3C16
	ldr r0, [sp, #0x14]
	bl FUN_0219D4CC
	cmp r0, #1
	bne _021B3C16
	str r4, [sp, #0x10]
	movs r1, #1
	ldr r0, [sp, #0x2c]
	b _021B3C14
_021B3BDC:
	ldr r0, [sp, #0x14]
	bl FUN_0219D4C8
	cmp r0, #1
	bls _021B3C16
	ldr r0, [sp, #0x14]
	bl FUN_0219D4CC
	cmp r0, #1
	bne _021B3C16
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	str r0, [sp, #0x1c]
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021BD3B4
	ldr r1, [sp, #0x1c]
	cmp r1, r0
	bhi _021B3C16
	str r4, [sp, #0x10]
	movs r1, #1
	ldr r0, [sp, #0x30]
	b _021B3C14
_021B3C10:
	ldr r0, [sp, #0x34]
	movs r1, #1
_021B3C14:
	strb r1, [r5, r0]
_021B3C16:
	adds r4, r4, #1
	cmp r4, #4
	blo _021B3B4E
	ldr r0, [sp, #0x10]
	cmp r0, #0
	blt _021B3C32
	lsls r1, r0, #1
	ldr r0, _021B3C3C ; =0x021D6F06
	ldrh r1, [r0, r1]
	ldr r0, [sp]
	add sp, #0x38
	strh r1, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B3C32:
	movs r0, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B3C38: .word 0x000001A2
_021B3C3C: .word 0x021D6F06
	thumb_func_end FUN_021B3A9C

	thumb_func_start FUN_021B3C40
FUN_021B3C40: ; 0x021B3C40
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #7
	bhi _021B3CD6
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B3C5A: ; jump table
	.short _021B3C6A - _021B3C5A - 2 ; case 0
	.short _021B3C9E - _021B3C5A - 2 ; case 1
	.short _021B3CAA - _021B3C5A - 2 ; case 2
	.short _021B3CB8 - _021B3C5A - 2 ; case 3
	.short _021B3DE4 - _021B3C5A - 2 ; case 4
	.short _021B3DF8 - _021B3C5A - 2 ; case 5
	.short _021B3E06 - _021B3C5A - 2 ; case 6
	.short _021B3E2C - _021B3C5A - 2 ; case 7
_021B3C6A:
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #3
	beq _021B3C90
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r0, r4, #0
	bl FUN_021B476C
	cmp r0, #0
	beq _021B3C8C
_021B3C82:
	ldr r1, _021B3E48 ; =FUN_021B4468
	adds r0, r4, #0
_021B3C86:
	bl FUN_021B21A8
	b _021B3E40
_021B3C8C:
	movs r0, #1
	b _021B3E3E
_021B3C90:
	adds r0, r4, #0
	adds r4, #0xac
	adds r1, r4, #0
	bl FUN_021B3E60
	movs r0, #2
_021B3C9C:
	b _021B3E3E
_021B3C9E:
	ldr r0, [r4, #0x54]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	bl FUN_021CF088
	b _021B3E3C
_021B3CAA:
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	ldr r2, [r4, #0xc]
	adds r1, #0xac
	bl FUN_021CF0D4
	b _021B3E3C
_021B3CB8:
	ldr r1, _021B3E4C ; =FUN_021B3560
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r4, #0x54]
	beq _021B3CCE
	bl FUN_021CF178
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B3CCE:
	bl FUN_021CF180
	cmp r0, #0
	bne _021B3CD8
_021B3CD6:
	b _021B3E40
_021B3CD8:
	ldr r0, [r4, #0xc]
	bl FUN_021BDCBC
	cmp r0, #0
	bne _021B3CE8
	adds r0, r4, #0
	ldr r1, _021B3E50 ; =FUN_021B3668
	b _021B3C86
_021B3CE8:
	cmp r0, #5
	bne _021B3CEE
	b _021B3C82
_021B3CEE:
	ldr r0, [r4, #8]
	ldr r7, [r4, #0xc]
	str r0, [sp, #4]
	ldr r0, _021B3E54 ; =0x00000125
	movs r6, #0
	ldrb r0, [r4, r0]
	str r0, [sp]
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021B3D26
	adds r0, r4, #0
	adds r0, #0xc4
	ldr r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1d
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl FUN_0219D3CC
	str r0, [sp]
	lsls r0, r0, #3
	adds r0, r4, r0
	adds r0, #0xac
	ldr r0, [r0]
	str r0, [sp, #4]
_021B3D26:
	adds r0, r7, #0
	bl FUN_021BDB94
	cmp r0, #0
	beq _021B3D6A
	movs r0, #0x6e
	ldr r1, [sp]
	lsls r0, r0, #2
	strb r1, [r4, r0]
	ldr r1, [r7]
	ldr r0, [sp, #4]
	lsls r1, r1, #9
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BAFB8
	movs r1, #0x6e
	lsls r1, r1, #2
	adds r1, r1, #1
	strb r0, [r4, r1]
	movs r0, #0x6e
	lsls r0, r0, #2
	adds r0, r0, #1
	ldrb r0, [r4, r0]
	cmp r0, #4
	beq _021B3D6A
	ldr r1, _021B3E58 ; =FUN_021B3EF8
	adds r0, r4, #0
	bl FUN_021B21A8
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B3D6A:
	ldr r2, [r7]
	adds r3, r4, #0
	lsls r2, r2, #9
	lsrs r2, r2, #0x10
	lsls r2, r2, #0x10
	ldr r1, [sp, #4]
	adds r0, r4, #0
	lsrs r2, r2, #0x10
	adds r3, #0x58
	bl FUN_021B47F8
	cmp r0, #0
	beq _021B3D9C
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0xff
	bl FUN_021D0B8C
	adds r0, r4, #0
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021B354C
	movs r0, #7
	b _021B3C9C
_021B3D9C:
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021B3DE0
	cmp r6, #0
	beq _021B3DE0
	cmp r6, #1
	beq _021B3DE0
	ldr r0, [sp, #4]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B3DE0
	adds r0, r4, #0
	adds r0, #0xc8
	bl FUN_021BDBA8
	adds r7, r0, #0
	ldr r0, [r4, #0xc]
	adds r1, r0, #4
	str r1, [r4, #0xc]
	adds r1, r6, #0
	bl FUN_021BDC64
	ldr r0, [r4, #0xc]
	adds r1, r7, #0
	movs r2, #6
	bl FUN_021BDB38
	ldr r0, _021B3E5C ; =0x000001B7
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
_021B3DE0:
	movs r0, #4
	b _021B3C9C
_021B3DE4:
	ldr r0, [r4]
	bl FUN_0219BDC0
	bl FUN_021BD758
	cmp r0, #0
	beq _021B3DF6
	movs r0, #5
	b _021B3C9C
_021B3DF6:
	b _021B3C82
_021B3DF8:
	ldr r0, [r4, #0x54]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	bl FUN_021CF188
	movs r0, #6
	b _021B3C9C
_021B3E06:
	ldr r1, _021B3E4C ; =FUN_021B3560
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r4, #0x54]
	beq _021B3E1C
	bl FUN_021CF1EC
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B3E1C:
	bl FUN_021CF1B4
	cmp r0, #1
	bne _021B3E26
	b _021B3C82
_021B3E26:
	cmp r0, #2
	bne _021B3E40
	b _021B3C8C
_021B3E2C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B3E40
	ldr r0, [r4, #0x54]
	bl FUN_021CF124
_021B3E3C:
	movs r0, #3
_021B3E3E:
	str r0, [r5]
_021B3E40:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B3E48: .word FUN_021B4468
_021B3E4C: .word FUN_021B3560
_021B3E50: .word FUN_021B3668
_021B3E54: .word 0x00000125
_021B3E58: .word FUN_021B3EF8
_021B3E5C: .word 0x000001B7
	thumb_func_end FUN_021B3C40

	thumb_func_start FUN_021B3E60
FUN_021B3E60: ; 0x021B3E60
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r0, #0
	movs r0, #0
	str r1, [sp]
	str r0, [sp, #8]
_021B3E6C:
	movs r0, #0x12
	ldr r1, [sp, #8]
	lsls r0, r0, #4
	lsls r1, r1, #0x18
	ldr r0, [r7, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r4, r0, #0
	ldr r0, [sp, #8]
	movs r2, #0
	lsls r1, r0, #3
	ldr r0, [sp]
	adds r6, r0, r1
	str r4, [r0, r1]
_021B3E8A:
	adds r1, r6, r2
	movs r0, #0
	adds r2, r2, #1
	strb r0, [r1, #4]
	cmp r2, #4
	blo _021B3E8A
	adds r0, r4, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B3EEA
	adds r0, r4, #0
	bl FUN_021BAC88
	movs r5, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _021B3EEA
_021B3EAE:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021BADC4
	cmp r0, #0
	beq _021B3ED6
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021BAD00
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_021B47F8
	cmp r0, #0
	beq _021B3EDC
_021B3ED6:
	adds r1, r6, r5
	movs r0, #0
	b _021B3EE0
_021B3EDC:
	adds r1, r6, r5
	movs r0, #1
_021B3EE0:
	strb r0, [r1, #4]
	ldr r0, [sp, #4]
	adds r5, r5, #1
	cmp r5, r0
	blo _021B3EAE
_021B3EEA:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	str r0, [sp, #8]
	cmp r0, #3
	blo _021B3E6C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B3E60

	thumb_func_start FUN_021B3EF8
FUN_021B3EF8: ; 0x021B3EF8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B3F0E
	cmp r1, #1
	beq _021B3F26
	cmp r1, #2
	beq _021B3F4E
	b _021B3F60
_021B3F0E:
	movs r2, #0x6e
	lsls r2, r2, #2
	ldrb r1, [r5, r2]
	adds r2, r2, #1
	ldrb r2, [r5, r2]
	ldr r0, [r5, #0x54]
	bl FUN_021CF5C8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B3F60
_021B3F26:
	movs r1, #0
	movs r6, #0
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r5, #0x54]
	beq _021B3F40
	bl FUN_021CF3FC
	movs r0, #2
	str r0, [r4]
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
_021B3F40:
	bl FUN_021CF408
	cmp r0, #0
	beq _021B3F60
	adds r0, r5, #0
	ldr r1, _021B3F64 ; =FUN_021B3C40
	b _021B3F5C
_021B3F4E:
	ldr r0, [r5, #0x54]
	bl FUN_021CF408
	cmp r0, #0
	beq _021B3F60
	ldr r1, _021B3F68 ; =FUN_021B3560
	adds r0, r5, #0
_021B3F5C:
	bl FUN_021B21A8
_021B3F60:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B3F64: .word FUN_021B3C40
_021B3F68: .word FUN_021B3560
	thumb_func_end FUN_021B3EF8

	thumb_func_start FUN_021B3F6C
FUN_021B3F6C: ; 0x021B3F6C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B3F84
	cmp r1, #1
	beq _021B3FCC
	cmp r1, #2
	beq _021B4020
	b _021B4032
_021B3F84:
	add r3, sp, #4
	ldr r1, [r5, #8]
	add r2, sp, #4
	adds r3, #2
	movs r6, #0
	bl FUN_021B4B1C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _021B3FA8
	ldr r0, [r5, #8]
	bl FUN_021BAC80
	add r1, sp, #4
	ldrb r1, [r1]
	cmp r1, r0
	bne _021B3FAA
_021B3FA8:
	movs r6, #1
_021B3FAA:
	movs r2, #0x66
	lsls r2, r2, #2
	adds r0, r5, r2
	adds r1, r2, #0
	str r0, [sp]
	subs r2, #0x73
	subs r1, #0xc
	ldrb r2, [r5, r2]
	ldr r0, [r5, #0x54]
	adds r1, r5, r1
	adds r3, r6, #0
	bl FUN_021CF360
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B4032
_021B3FCC:
	movs r1, #0
	movs r6, #0
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r5, #0x54]
	beq _021B3FE8
	bl FUN_021CF3FC
	movs r0, #2
	str r0, [r4]
	add sp, #8
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
_021B3FE8:
	bl FUN_021CF408
	cmp r0, #0
	beq _021B4032
	movs r4, #0x66
	lsls r4, r4, #2
	adds r0, r5, r4
	bl FUN_021B4044
	cmp r0, #0
	bne _021B401A
	adds r0, r5, r4
	bl FUN_021B4054
	adds r2, r0, #0
	cmp r2, #6
	bhs _021B401A
	subs r4, #0x73
	ldrb r1, [r5, r4]
	ldr r0, [r5, #0xc]
	bl FUN_021BDBFC
	adds r0, r5, #0
	ldr r1, _021B4038 ; =FUN_021B4468
	b _021B402E
_021B401A:
	adds r0, r5, #0
	ldr r1, _021B403C ; =FUN_021B3668
	b _021B402E
_021B4020:
	ldr r0, [r5, #0x54]
	bl FUN_021CF408
	cmp r0, #0
	beq _021B4032
	ldr r1, _021B4040 ; =FUN_021B3560
	adds r0, r5, #0
_021B402E:
	bl FUN_021B21A8
_021B4032:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B4038: .word FUN_021B4468
_021B403C: .word FUN_021B3668
_021B4040: .word FUN_021B3560
	thumb_func_end FUN_021B3F6C

	thumb_func_start FUN_021B4044
FUN_021B4044: ; 0x021B4044
	bx pc
	nop
	thumb_func_end FUN_021B4044
_021B4048:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x9D, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B4054
FUN_021B4054: ; 0x021B4054
	bx pc
	nop
	thumb_func_end FUN_021B4054
_021B4058:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xA5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B4064
FUN_021B4064: ; 0x021B4064
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B407C
	cmp r1, #1
	beq _021B40BE
	cmp r1, #2
	beq _021B4176
	b _021B4188
_021B407C:
	bl FUN_021B4690
	adds r7, r0, #0
	ldr r0, _021B4190 ; =0x00000125
	ldrb r1, [r5, r0]
	adds r0, r0, #2
	ldrb r0, [r5, r0]
	cmp r1, r0
	bne _021B4092
	movs r0, #1
	b _021B4094
_021B4092:
	movs r0, #0
_021B4094:
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	bl FUN_021B4244
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r6, [sp]
	str r0, [sp, #4]
	ldr r2, _021B4194 ; =0x000001B2
	ldr r0, [r5, #0x54]
	ldrb r1, [r5, r2]
	adds r2, r2, #1
	ldrb r2, [r5, r2]
	adds r3, r7, #0
	bl FUN_021CF5EC
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B4188
_021B40BE:
	movs r1, #0
	movs r7, #0
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r5, #0x54]
	beq _021B40DA
	bl FUN_021CF76C
	movs r0, #2
	str r0, [r4]
	add sp, #0x10
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B40DA:
	bl FUN_021CF77C
	cmp r0, #0
	beq _021B4188
	ldr r0, [r5, #0x54]
	bl FUN_021CF918
	adds r6, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021CF940
	str r0, [sp, #0xc]
	cmp r6, #0
	beq _021B4170
	ldr r0, [sp, #0xc]
	cmp r0, #6
	beq _021B4170
	ldr r0, [r5, #0x54]
	bl FUN_021CF92C
	adds r4, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021CF948
	str r0, [sp, #8]
	ldr r0, _021B4198 ; =0x000001B3
	ldrb r1, [r5, r0]
	cmp r1, r4
	blo _021B411A
	subs r1, r1, r4
	strb r1, [r5, r0]
	b _021B411E
_021B411A:
	strb r7, [r5, r0]
	ldrb r4, [r5, r0]
_021B411E:
	ldr r7, _021B4190 ; =0x00000125
	adds r0, r5, #0
	ldrb r1, [r5, r7]
	adds r2, r4, #0
	bl FUN_021B4678
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #8]
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021BDBC0
	ldr r0, [r5, #0x54]
	bl FUN_021CF954
	adds r0, r6, #0
	movs r1, #0xf
	bl FUN_021BD8C4
	cmp r0, #4
	bne _021B415E
	adds r0, r7, #0
	adds r0, #0x95
	ldrb r1, [r5, r0]
	movs r0, #4
	adds r7, #0x95
	orrs r0, r1
	strb r0, [r5, r7]
_021B415E:
	ldr r1, _021B4190 ; =0x00000125
	adds r0, r5, #0
	ldrb r1, [r5, r1]
	adds r2, r6, #0
	bl FUN_021B45C4
	adds r0, r5, #0
	ldr r1, _021B419C ; =FUN_021B4468
	b _021B4184
_021B4170:
	adds r0, r5, #0
	ldr r1, _021B41A0 ; =FUN_021B3668
	b _021B4184
_021B4176:
	ldr r0, [r5, #0x54]
	bl FUN_021CF77C
	cmp r0, #0
	beq _021B4188
	ldr r1, _021B41A4 ; =FUN_021B3560
	adds r0, r5, #0
_021B4184:
	bl FUN_021B21A8
_021B4188:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B4190: .word 0x00000125
_021B4194: .word 0x000001B2
_021B4198: .word 0x000001B3
_021B419C: .word FUN_021B4468
_021B41A0: .word FUN_021B3668
_021B41A4: .word FUN_021B3560
	thumb_func_end FUN_021B4064

	thumb_func_start FUN_021B41A8
FUN_021B41A8: ; 0x021B41A8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B41BE
	cmp r1, #1
	beq _021B41D0
	cmp r1, #2
	beq _021B41F4
	b _021B4206
_021B41BE:
	ldr r1, _021B420C ; =0x000001BD
	ldr r0, [r5, #0x54]
	ldrb r1, [r5, r1]
	bl FUN_021CF99C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B4206
_021B41D0:
	movs r1, #0
	movs r6, #0
	bl FUN_021B2114
	cmp r0, #0
	ldr r0, [r5, #0x54]
	beq _021B41EA
	bl FUN_021CFA00
	movs r0, #2
	str r0, [r4]
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
_021B41EA:
	bl FUN_021CFA0C
	cmp r0, #0
	beq _021B4206
	b _021B41FE
_021B41F4:
	ldr r0, [r5, #0x54]
	bl FUN_021CFA0C
	cmp r0, #0
	beq _021B4206
_021B41FE:
	ldr r1, _021B4210 ; =FUN_021B3668
	adds r0, r5, #0
	bl FUN_021B21A8
_021B4206:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_021B420C: .word 0x000001BD
_021B4210: .word FUN_021B3668
	thumb_func_end FUN_021B41A8

	thumb_func_start FUN_021B4214
FUN_021B4214: ; 0x021B4214
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	cmp r1, #0
	beq _021B4224
	cmp r1, #1
	beq _021B4232
	b _021B4240
_021B4224:
	ldr r0, [r0, #0x54]
	bl FUN_021CFB2C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B4240
_021B4232:
	ldr r0, [r0, #0x54]
	bl FUN_021CFB80
	cmp r0, #0
	beq _021B4240
	movs r0, #1
	pop {r4, pc}
_021B4240:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021B4214

	thumb_func_start FUN_021B4244
FUN_021B4244: ; 0x021B4244
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021B42B8
	ldr r0, [r5, #4]
	movs r1, #1
	bl FUN_0219D414
	str r0, [sp, #4]
	bl FUN_0219D4C8
	adds r4, r0, #0
	ldr r0, [r5]
	bl FUN_0219BECC
	adds r7, r0, #0
	cmp r7, r4
	bls _021B4272
	adds r7, r4, #0
_021B4272:
	movs r0, #0
	str r0, [sp]
	movs r5, #0
	movs r4, #0
	cmp r7, #0
	bls _021B42A8
_021B427E:
	lsls r1, r4, #0x18
	ldr r0, [sp, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B42A2
	adds r0, r6, #0
	adds r5, r5, #1
	bl FUN_021BB470
	cmp r0, #0
	beq _021B42A2
	movs r0, #1
	str r0, [sp]
_021B42A2:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B427E
_021B42A8:
	cmp r5, #1
	bne _021B42B8
	ldr r0, [sp]
	cmp r0, #0
	beq _021B42B8
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B42B8:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B4244

	thumb_func_start FUN_021B42C0
FUN_021B42C0: ; 0x021B42C0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #5
	bls _021B42D0
	b _021B444C
_021B42D0:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B42DC: ; jump table
	.short _021B42E8 - _021B42DC - 2 ; case 0
	.short _021B4394 - _021B42DC - 2 ; case 1
	.short _021B43B8 - _021B42DC - 2 ; case 2
	.short _021B43C4 - _021B42DC - 2 ; case 3
	.short _021B4400 - _021B42DC - 2 ; case 4
	.short _021B4434 - _021B42DC - 2 ; case 5
_021B42E8:
	ldr r0, [r4]
	bl FUN_0219BF60
	cmp r0, #0
	beq _021B42FA
	cmp r0, #1
	beq _021B4354
	cmp r0, #2
	beq _021B4370
_021B42FA:
	add r2, sp, #0
	adds r0, r4, #0
	add r1, sp, #0
	adds r2, #2
	bl FUN_021B4B60
	cmp r0, #4
	bne _021B4310
_021B430A:
	movs r0, #5
_021B430C:
	str r0, [r5]
	b _021B444C
_021B4310:
	add r6, sp, #0
	ldrh r0, [r6, #2]
	cmp r0, #0
	beq _021B433A
	adds r0, r4, #0
	ldr r2, _021B4454 ; =0x00000365
	adds r0, #0x58
	movs r1, #2
	bl FUN_021D0B2C
	adds r0, r4, #0
	ldrb r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	ldrh r1, [r6, #2]
	adds r0, #0x58
	bl FUN_021D0B64
	b _021B4346
_021B433A:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x4a
	bl FUN_021D0B2C
_021B4346:
	adds r0, r4, #0
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021B354C
	movs r0, #1
_021B4352:
	b _021B430C
_021B4354:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x4c
	movs r6, #1
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021B354C
	str r6, [r5]
	b _021B444C
_021B4370:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x4d
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0xff
	bl FUN_021D0B8C
	adds r0, r4, #0
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021B354C
	movs r0, #3
	b _021B4352
_021B4394:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B444C
	adds r2, r4, #0
	ldr r1, [r4, #8]
	adds r0, r4, #0
	adds r2, #0x58
	bl FUN_021B2150
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D0274
	movs r0, #2
	b _021B4352
_021B43B8:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B444C
	b _021B441E
_021B43C4:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	ldr r0, [r4, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B444C
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #8
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #3
	movs r2, #9
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r4, #0x80
	adds r1, #0x58
	adds r2, r4, #0
	movs r3, #1
	bl FUN_021D07D8
	movs r0, #4
	b _021B4352
_021B4400:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B444C
	ldr r0, [r4, #0x54]
	add r1, sp, #4
	bl FUN_021D0868
	cmp r0, #0
	beq _021B4424
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _021B441E
	b _021B430A
_021B441E:
	adds r0, r4, #0
	ldr r1, _021B4458 ; =FUN_021B3668
	b _021B4448
_021B4424:
	adds r0, r4, #0
	bl FUN_021B20E4
	cmp r0, #0
	beq _021B444C
	adds r0, r4, #0
	ldr r1, _021B445C ; =FUN_021B3560
	b _021B4448
_021B4434:
	ldr r0, [r4, #0xc]
	bl FUN_021BDC7C
	ldr r1, _021B4460 ; =0x000001BA
	movs r0, #4
	ldrb r2, [r4, r1]
	orrs r0, r2
	strb r0, [r4, r1]
	ldr r1, _021B4464 ; =FUN_021B4468
	adds r0, r4, #0
_021B4448:
	bl FUN_021B21A8
_021B444C:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_021B4454: .word 0x00000365
_021B4458: .word FUN_021B3668
_021B445C: .word FUN_021B3560
_021B4460: .word 0x000001BA
_021B4464: .word FUN_021B4468
	thumb_func_end FUN_021B42C0

	thumb_func_start FUN_021B4468
FUN_021B4468: ; 0x021B4468
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B447A
	cmp r0, #1
	beq _021B4488
	b _021B4524
_021B447A:
	ldr r0, [r5, #0x54]
	bl FUN_021CF230
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B4524
_021B4488:
	ldr r0, [r5, #0x54]
	bl FUN_021CF240
	cmp r0, #0
	beq _021B4524
	ldr r4, _021B4528 ; =0x00000125
	ldrb r0, [r5, r4]
	adds r0, r0, #1
	strb r0, [r5, r4]
	subs r0, r4, #1
	ldrb r0, [r5, r0]
	ldrb r2, [r5, r4]
	cmp r2, r0
	bhs _021B44FA
	adds r1, r4, #0
	adds r1, #0x95
	ldrb r1, [r5, r1]
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1f
	bne _021B44B6
	adds r0, r5, #0
	ldr r1, _021B452C ; =FUN_021B3668
	b _021B4520
_021B44B6:
	cmp r2, r0
	bhs _021B44FA
	adds r0, r4, #7
	adds r6, r5, r0
	subs r0, r4, #1
	adds r7, r4, #0
	str r0, [sp]
	adds r7, #0x89
_021B44C6:
	ldrb r1, [r5, r7]
	ldr r0, [r5, #4]
	bl FUN_0219D228
	ldrb r2, [r5, r4]
	adds r1, r0, #0
	adds r0, r5, #0
	lsls r2, r2, #2
	adds r2, r6, r2
	bl FUN_021B46B8
	cmp r0, #0
	bne _021B44EA
	ldrb r0, [r5, r4]
	lsls r0, r0, #2
	adds r0, r6, r0
	bl FUN_021BDC9C
_021B44EA:
	ldrb r0, [r5, r4]
	adds r0, r0, #1
	strb r0, [r5, r4]
	ldr r0, [sp]
	ldrb r2, [r5, r4]
	ldrb r0, [r5, r0]
	cmp r2, r0
	blo _021B44C6
_021B44FA:
	cmp r2, r0
	blo _021B4524
	ldr r1, _021B4530 ; =0x000001B7
	ldrb r2, [r5, r1]
	adds r0, r0, r2
	movs r2, #0
	strb r2, [r5, r1]
	subs r1, #0x8b
	adds r2, r5, r1
	adds r1, r5, #0
	adds r1, #0xe0
	lsls r0, r0, #0x18
	str r2, [r1]
	lsrs r1, r0, #0x16
	adds r0, r5, #0
	adds r0, #0xe4
	str r1, [r0]
	ldr r1, _021B4534 ; =FUN_021B4538
	adds r0, r5, #0
_021B4520:
	bl FUN_021B21A8
_021B4524:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B4528: .word 0x00000125
_021B452C: .word FUN_021B3668
_021B4530: .word 0x000001B7
_021B4534: .word FUN_021B4538
	thumb_func_end FUN_021B4468

	thumb_func_start FUN_021B4538
FUN_021B4538: ; 0x021B4538
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	cmp r1, #0
	beq _021B454E
	cmp r1, #1
	beq _021B4576
	cmp r1, #2
	beq _021B4582
	b _021B459A
_021B454E:
	bl FUN_021B4640
	ldr r0, [r5]
	bl FUN_0219BF24
	cmp r0, #0
	beq _021B4570
	ldr r0, _021B45A4 ; =0x000001B1
	movs r1, #1
	strb r1, [r5, r0]
	ldr r0, [r5, #0x54]
	bl FUN_021D0414
_021B4568:
	ldr r0, [r4]
	adds r0, r0, #1
_021B456C:
	str r0, [r4]
	b _021B459E
_021B4570:
	ldr r0, [r4]
	adds r0, r0, #2
	b _021B456C
_021B4576:
	ldr r0, [r5, #0x54]
	bl FUN_021D042C
	cmp r0, #0
	beq _021B459E
	b _021B4568
_021B4582:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B459E
	adds r0, r5, #0
	bl FUN_021B2138
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B459A:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B459E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021B45A4: .word 0x000001B1
	thumb_func_end FUN_021B4538

	thumb_func_start FUN_021B45A8
FUN_021B45A8: ; 0x021B45A8
	push {r3, r4}
	movs r4, #0
	movs r1, #0x6a
	adds r3, r4, #0
	lsls r1, r1, #2
_021B45B2:
	lsls r2, r4, #1
	adds r2, r0, r2
	adds r4, r4, #1
	strh r3, [r2, r1]
	cmp r4, #3
	blo _021B45B2
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B45A8

	thumb_func_start FUN_021B45C4
FUN_021B45C4: ; 0x021B45C4
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021B45FC ; =0x000001B2
	adds r5, r0, #0
	ldrb r0, [r5, r7]
	adds r6, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _021B45F8
	ldr r0, [r5]
	bl FUN_0219C8A0
	subs r1, r7, #4
	ldrb r1, [r5, r1]
	cmp r1, r0
	bne _021B45F8
	lsls r0, r6, #1
	adds r1, r5, r0
	adds r0, r7, #0
	subs r0, #0xa
	strh r4, [r1, r0]
	subs r1, r7, #4
	ldrb r1, [r5, r1]
	ldr r0, [r5]
	adds r2, r4, #0
	bl FUN_0219C93C
_021B45F8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B45FC: .word 0x000001B2
	thumb_func_end FUN_021B45C4

	thumb_func_start FUN_021B4600
FUN_021B4600: ; 0x021B4600
	push {r4, r5, r6, lr}
	ldr r6, _021B463C ; =0x000001B2
	adds r5, r0, #0
	ldrb r0, [r5, r6]
	adds r4, r1, #0
	cmp r0, #0
	bne _021B4638
	ldr r0, [r5]
	bl FUN_0219C8A0
	subs r1, r6, #4
	ldrb r1, [r5, r1]
	cmp r1, r0
	bne _021B4638
	adds r0, r6, #0
	subs r0, #0xa
	adds r3, r5, r0
	lsls r1, r4, #1
	ldrh r2, [r3, r1]
	cmp r2, #0
	beq _021B4638
	movs r0, #0
	strh r0, [r3, r1]
	subs r1, r6, #4
	ldrb r1, [r5, r1]
	ldr r0, [r5]
	bl FUN_0219C968
_021B4638:
	pop {r4, r5, r6, pc}
	nop
_021B463C: .word 0x000001B2
	thumb_func_end FUN_021B4600

	thumb_func_start FUN_021B4640
FUN_021B4640: ; 0x021B4640
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _021B4660 ; =0x000001B2
	ldrb r0, [r5, r0]
	cmp r0, #0
	bne _021B465E
	movs r4, #0
_021B464E:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B4600
	adds r4, r4, #1
	cmp r4, #3
	blo _021B464E
_021B465E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B4660: .word 0x000001B2
	thumb_func_end FUN_021B4640

	thumb_func_start FUN_021B4664
FUN_021B4664: ; 0x021B4664
	movs r1, #0x4e
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r3, _021B4674 ; =FUN_020787D4
	movs r1, #0
	movs r2, #3
	bx r3
	nop
_021B4674: .word FUN_020787D4
	thumb_func_end FUN_021B4664

	thumb_func_start FUN_021B4678
FUN_021B4678: ; 0x021B4678
	adds r1, r0, r1
	movs r0, #0x4e
	lsls r0, r0, #2
	strb r2, [r1, r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B4678

	thumb_func_start FUN_021B4684
FUN_021B4684: ; 0x021B4684
	adds r1, r0, r1
	movs r0, #0x4e
	lsls r0, r0, #2
	ldrb r0, [r1, r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B4684

	thumb_func_start FUN_021B4690
FUN_021B4690: ; 0x021B4690
	push {r4, r5}
	ldr r1, _021B46B4 ; =0x00000125
	movs r4, #0
	ldrb r5, [r0, r1]
	movs r3, #0
	cmp r5, #0
	bls _021B46AC
	adds r1, #0x13
_021B46A0:
	adds r2, r0, r3
	ldrb r2, [r2, r1]
	adds r3, r3, #1
	adds r4, r4, r2
	cmp r3, r5
	blo _021B46A0
_021B46AC:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5}
	bx lr
	.align 2, 0
_021B46B4: .word 0x00000125
	thumb_func_end FUN_021B4690

	thumb_func_start FUN_021B46B8
FUN_021B46B8: ; 0x021B46B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B46DA
	cmp r4, #0
	beq _021B46D4
	adds r0, r4, #0
	bl FUN_021BDC9C
_021B46D4:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B46DA:
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021BB41C
	cmp r0, #0
	beq _021B46F6
	cmp r4, #0
	beq _021B46F0
	adds r0, r4, #0
	bl FUN_021BDCAC
_021B46F0:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B46F6:
	adds r0, r5, #0
	movs r1, #0x19
	movs r6, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B472C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BBB54
	bl FUN_021CE400
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021BC004
	adds r2, r0, #0
	cmp r4, #0
	beq _021B4726
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BDB38
_021B4726:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B472C:
	adds r0, r5, #0
	movs r1, #0x1a
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4764
	adds r0, r5, #0
	bl FUN_021BBFE8
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021BC004
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BAFB8
	cmp r4, #0
	beq _021B475E
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021BDB38
_021B475E:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B4764:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B46B8

	thumb_func_start FUN_021B476C
FUN_021B476C: ; 0x021B476C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r7, r0, #0
	adds r0, r5, #0
	str r2, [sp]
	bl FUN_021BAC88
	str r0, [sp, #4]
	movs r6, #0
	movs r4, #0
	cmp r0, #0
	bls _021B47B8
_021B4786:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021BAD00
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r5, #0
	movs r3, #0
	bl FUN_021B47F8
	cmp r0, #0
	bne _021B47B0
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021BADC4
	cmp r0, #0
	beq _021B47B0
	adds r6, r6, #1
_021B47B0:
	ldr r0, [sp, #4]
	adds r4, r4, #1
	cmp r4, r0
	blo _021B4786
_021B47B8:
	cmp r6, #0
	bne _021B47CC
	ldr r0, [sp]
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021B47D4
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B47CC:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B476C

	thumb_func_start FUN_021B47D4
FUN_021B47D4: ; 0x021B47D4
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	adds r0, #0x38
	str r0, [sp]
	ldm r1, {r0, r1}
	movs r3, #0xa5
	bl FUN_021BDA60
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #0xa5
	bl FUN_021BDB38
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B47D4

	thumb_func_start FUN_021B47F8
FUN_021B47F8: ; 0x021B47F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r2, #0
	adds r7, r0, #0
	adds r6, r1, #0
	adds r4, r3, #0
	cmp r5, #0xa5
	bne _021B480E
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B480E:
	bl FUN_021B4AE4
	cmp r0, #0
	beq _021B486C
	adds r0, r6, #0
	movs r1, #0x1b
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B486C
	adds r0, r6, #0
	movs r1, #0x1b
	bl FUN_021BBB54
	bl FUN_021CE400
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021BAF90
	cmp r0, #0
	beq _021B486C
	ldr r0, [sp]
	cmp r0, r5
	beq _021B486C
	cmp r4, #0
	beq _021B4866
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x63
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BB380
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_021D0B64
_021B4866:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B486C:
	adds r0, r6, #0
	movs r1, #0x17
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B48B4
	adds r0, r6, #0
	movs r1, #0x17
	bl FUN_021BBB54
	bl FUN_021CE400
	str r0, [sp, #4]
	cmp r5, r0
	beq _021B48B4
	cmp r4, #0
	beq _021B48AE
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x64
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	ldr r1, [sp, #4]
	adds r0, r4, #0
	bl FUN_021D0B64
_021B48AE:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B48B4:
	adds r0, r6, #0
	movs r1, #0xb
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B48F4
	adds r0, r5, #0
	bl FUN_02021898
	cmp r0, #0
	bne _021B48F4
	cmp r4, #0
	beq _021B48EE
	ldr r2, _021B4A50 ; =0x0000023B
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B48EE:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B48F4:
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4936
	adds r0, r6, #0
	bl FUN_021BBFF8
	cmp r5, r0
	bne _021B4936
	cmp r4, #0
	beq _021B4930
	movs r2, #0x91
	adds r0, r4, #0
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B4930:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B4936:
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B497C
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BBB18
	cmp r5, r0
	bne _021B497C
	cmp r5, #0xa5
	beq _021B497C
	cmp r4, #0
	beq _021B4976
	ldr r2, _021B4A54 ; =0x00000253
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B4976:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B497C:
	adds r0, r6, #0
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B49BE
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_0202143C
	cmp r0, #0
	beq _021B49BE
	cmp r4, #0
	beq _021B49B8
	ldr r2, _021B4A58 ; =0x0000037A
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B49B8:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B49BE:
	ldr r0, [r7, #0x34]
	movs r1, #3
	bl FUN_021D5E50
	cmp r0, #0
	beq _021B4A04
	ldr r0, [r7, #0x34]
	ldr r1, [r7, #4]
	adds r2, r6, #0
	adds r3, r5, #0
	bl FUN_021D5D88
	cmp r0, #0
	beq _021B4A04
	cmp r4, #0
	beq _021B49FE
	ldr r2, _021B4A5C ; =0x0000024D
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B49FE:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B4A04:
	ldr r0, [r7, #0x34]
	movs r1, #2
	movs r7, #2
	bl FUN_021D5E50
	cmp r0, #0
	beq _021B4A48
	adds r0, r5, #0
	movs r1, #9
	bl FUN_0202143C
	cmp r0, #0
	beq _021B4A48
	cmp r4, #0
	beq _021B4A42
	ldr r2, _021B4A60 ; =0x0000043E
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D0B64
_021B4A42:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B4A48:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021B4A50: .word 0x0000023B
_021B4A54: .word 0x00000253
_021B4A58: .word 0x0000037A
_021B4A5C: .word 0x0000024D
_021B4A60: .word 0x0000043E
	thumb_func_end FUN_021B47F8

	thumb_func_start FUN_021B4A64
FUN_021B4A64: ; 0x021B4A64
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r5, r2, #0
	bl FUN_021BAC88
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r7, #4
	movs r4, #0
	cmp r0, #0
	bls _021B4ACA
_021B4A80:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BADC4
	cmp r0, #0
	beq _021B4ABA
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BAD00
	adds r2, r0, #0
	ldr r0, [sp]
	adds r1, r6, #0
	movs r3, #0
	bl FUN_021B47F8
	cmp r0, #0
	bne _021B4AA8
	movs r0, #1
	b _021B4AAA
_021B4AA8:
	movs r0, #0
_021B4AAA:
	strb r0, [r5, r4]
	cmp r7, #4
	bne _021B4ABE
	ldrb r0, [r5, r4]
	cmp r0, #0
	beq _021B4ABE
	adds r7, r4, #0
	b _021B4ABE
_021B4ABA:
	movs r0, #0
	strb r0, [r5, r4]
_021B4ABE:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #4]
	cmp r4, r0
	blo _021B4A80
_021B4ACA:
	cmp r4, #4
	bhs _021B4ADC
	movs r1, #0
_021B4AD0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	strb r1, [r5, r4]
	lsrs r4, r0, #0x18
	cmp r4, #4
	blo _021B4AD0
_021B4ADC:
	adds r0, r7, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B4A64

	thumb_func_start FUN_021B4AE4
FUN_021B4AE4: ; 0x021B4AE4
	push {r4, lr}
	ldr r0, [r0, #0x34]
	adds r4, r1, #0
	movs r1, #7
	bl FUN_021D5E50
	cmp r0, #0
	beq _021B4AF8
	movs r0, #0
	pop {r4, pc}
_021B4AF8:
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4B08
	movs r0, #0
	pop {r4, pc}
_021B4B08:
	adds r0, r4, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x67
	beq _021B4B18
	movs r0, #1
	pop {r4, pc}
_021B4B18:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021B4AE4

	thumb_func_start FUN_021B4B1C
FUN_021B4B1C: ; 0x021B4B1C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021B4AE4
	cmp r0, #0
	beq _021B4B3E
	adds r0, r6, #0
	bl FUN_021BB380
	ldr r1, _021B4B5C ; =0x00000127
	cmp r0, r1
	bne _021B4B3E
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_021B4B3E:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_021B4BFC
	cmp r0, #4
	bne _021B4B58
	movs r0, #0x1f
	strb r0, [r5]
	movs r0, #0
	strh r0, [r4]
	movs r0, #4
_021B4B58:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B4B5C: .word 0x00000127
	thumb_func_end FUN_021B4B1C

	thumb_func_start FUN_021B4B60
FUN_021B4B60: ; 0x021B4B60
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp]
	movs r1, #0x49
	adds r5, r0, #0
	lsls r1, r1, #2
	ldrb r0, [r5, r1]
	movs r4, #0
	str r2, [sp, #4]
	cmp r0, #0
	bls _021B4BC8
	adds r0, r5, r1
	str r0, [sp, #8]
	subs r7, r1, #4
_021B4B7C:
	lsls r1, r4, #0x18
	ldr r0, [r5, r7]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B4BBE
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B4AE4
	cmp r0, #0
	beq _021B4BAC
	adds r0, r6, #0
	bl FUN_021BB380
	cmp r0, #0xe4
	bne _021B4BAC
	add sp, #0xc
	movs r0, #4
	pop {r4, r5, r6, r7, pc}
_021B4BAC:
	adds r0, r6, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x32
	bne _021B4BBE
	add sp, #0xc
	movs r0, #4
	pop {r4, r5, r6, r7, pc}
_021B4BBE:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	ldrb r0, [r0]
	cmp r4, r0
	blo _021B4B7C
_021B4BC8:
	movs r4, #0
	cmp r0, #0
	bls _021B4BF6
	movs r7, #0x49
	lsls r7, r7, #2
	subs r6, r7, #4
_021B4BD4:
	lsls r1, r4, #0x18
	ldr r0, [r5, r6]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r1, r0, #0
	ldr r2, [sp]
	ldr r3, [sp, #4]
	adds r0, r5, #0
	bl FUN_021B4BFC
	cmp r0, #4
	bne _021B4BF8
	ldrb r0, [r5, r7]
	adds r4, r4, #1
	cmp r4, r0
	blo _021B4BD4
_021B4BF6:
	movs r0, #4
_021B4BF8:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B4B60

	thumb_func_start FUN_021B4BFC
FUN_021B4BFC: ; 0x021B4BFC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	str r2, [sp]
	str r3, [sp, #4]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl FUN_0219C638
	movs r2, #1
	adds r3, r0, #0
	lsls r2, r2, #8
	orrs r2, r3
	lsls r2, r2, #0x10
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x10
	add r3, sp, #0x10
	bl FUN_0219C5E4
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xc]
	movs r7, #0
	cmp r0, #0
	bls _021B4CCC
_021B4C38:
	add r1, sp, #0x10
	ldrb r1, [r1, r7]
	ldr r0, [r5, #4]
	bl FUN_0219D250
	movs r1, #0x11
	str r0, [sp, #8]
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #8]
	bl FUN_021BAC80
	cmp r4, #0x17
	bne _021B4C78
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B4D0C
	cmp r0, #0
	beq _021B4C78
	ldr r0, [sp, #8]
	bl FUN_021BAC80
	ldr r1, [sp]
	strb r0, [r1]
	ldr r0, [sp, #4]
	add sp, #0x14
	strh r4, [r0]
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4C78:
	cmp r4, #0x47
	bne _021B4C9C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B4D24
	cmp r0, #0
	beq _021B4C9C
	ldr r0, [sp, #8]
	bl FUN_021BAC80
	ldr r1, [sp]
	strb r0, [r1]
	ldr r0, [sp, #4]
	add sp, #0x14
	strh r4, [r0]
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4C9C:
	cmp r4, #0x2a
	bne _021B4CC0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B4DD4
	cmp r0, #0
	beq _021B4CC0
	ldr r0, [sp, #8]
	bl FUN_021BAC80
	ldr r1, [sp]
	strb r0, [r1]
	ldr r0, [sp, #4]
	add sp, #0x14
	strh r4, [r0]
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4CC0:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #0xc]
	cmp r7, r0
	blo _021B4C38
_021B4CCC:
	adds r0, r6, #0
	movs r1, #0x16
	bl FUN_021BBB04
	cmp r0, #0
	bne _021B4CF0
	adds r0, r6, #0
	movs r1, #8
	bl FUN_021BBB04
	cmp r0, #0
	bne _021B4CF0
	adds r0, r6, #0
	movs r1, #0x15
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4D06
_021B4CF0:
	adds r0, r6, #0
	bl FUN_021BAC80
	ldr r1, [sp]
	strb r0, [r1]
	ldr r0, [sp, #4]
	movs r1, #0
	strh r1, [r0]
	add sp, #0x14
	movs r0, #3
	pop {r4, r5, r6, r7, pc}
_021B4D06:
	movs r0, #4
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B4BFC

	thumb_func_start FUN_021B4D0C
FUN_021B4D0C: ; 0x021B4D0C
	push {r3, lr}
	adds r0, r1, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x17
	beq _021B4D1E
	movs r0, #1
	pop {r3, pc}
_021B4D1E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B4D0C

	thumb_func_start FUN_021B4D24
FUN_021B4D24: ; 0x021B4D24
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	bl FUN_021B4AE4
	adds r4, r0, #0
	ldr r0, [r6, #0x34]
	movs r1, #2
	bl FUN_021D5E50
	cmp r0, #0
	beq _021B4D40
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B4D40:
	adds r0, r5, #0
	movs r1, #0x1f
	movs r6, #0x1f
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4D52
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B4D52:
	adds r0, r5, #0
	movs r1, #0x15
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4D62
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B4D62:
	cmp r4, #0
	beq _021B4D76
	adds r0, r5, #0
	bl FUN_021BB380
	adds r6, #0xf7
	cmp r0, r6
	bne _021B4D76
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B4D76:
	adds r0, r5, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x1a
	bne _021B4D86
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B4D86:
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BB054
	cmp r0, #0
	beq _021B4D96
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B4D96:
	adds r0, r5, #0
	movs r1, #0x1e
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4DA6
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B4DA6:
	adds r0, r5, #0
	movs r1, #0x20
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B4DB6
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B4DB6:
	cmp r4, #0
	beq _021B4DCA
	adds r0, r5, #0
	bl FUN_021BB380
	ldr r1, _021B4DD0 ; =0x0000021D
	cmp r0, r1
	bne _021B4DCA
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B4DCA:
	movs r0, #1
	pop {r4, r5, r6, pc}
	nop
_021B4DD0: .word 0x0000021D
	thumb_func_end FUN_021B4D24

	thumb_func_start FUN_021B4DD4
FUN_021B4DD4: ; 0x021B4DD4
	push {r3, lr}
	adds r0, r1, #0
	movs r1, #8
	bl FUN_021BB054
	cmp r0, #0
	beq _021B4DE6
	movs r0, #1
	pop {r3, pc}
_021B4DE6:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B4DD4

	thumb_func_start FUN_021B4DEC
FUN_021B4DEC: ; 0x021B4DEC
	push {r3, r4}
	movs r4, #0
	movs r1, #0x45
	subs r3, r4, #1
	lsls r1, r1, #2
_021B4DF6:
	adds r2, r0, r4
	adds r4, r4, #1
	strb r3, [r2, r1]
	cmp r4, #6
	blo _021B4DF6
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021B4DEC

	thumb_func_start FUN_021B4E04
FUN_021B4E04: ; 0x021B4E04
	push {r3, r4}
	movs r2, #0x45
	movs r4, #0
	lsls r2, r2, #2
_021B4E0C:
	adds r3, r0, r4
	ldrsb r3, [r3, r2]
	cmp r1, r3
	bne _021B4E1A
	movs r0, #1
	pop {r3, r4}
	bx lr
_021B4E1A:
	adds r4, r4, #1
	cmp r4, #6
	blo _021B4E0C
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B4E04

	thumb_func_start FUN_021B4E28
FUN_021B4E28: ; 0x021B4E28
	cmp r1, #6
	bhs _021B4E34
	adds r1, r0, r1
	movs r0, #0x45
	lsls r0, r0, #2
	strb r2, [r1, r0]
_021B4E34:
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B4E28

	thumb_func_start FUN_021B4E38
FUN_021B4E38: ; 0x021B4E38
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r2, [sp]
	str r3, [sp, #4]
	movs r3, #6
	add r2, sp, #8
	strb r3, [r2, #1]
	add r3, sp, #8
	add r2, sp, #8
	adds r3, #2
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_021B4B1C
	cmp r0, #4
	beq _021B4E5E
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4E5E:
	movs r4, #0x12
	lsls r4, r4, #4
	ldr r0, [r5, r4]
	bl FUN_0219D4CC
	adds r1, r4, #4
	ldrb r1, [r5, r1]
	cmp r0, r1
	bhi _021B4E76
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4E76:
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl FUN_0219C638
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021B4F98
	adds r4, r0, #0
	bne _021B4E98
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4E98:
	bl FUN_021BC464
	cmp r0, #0
	beq _021B4EAC
	ldr r0, [r5]
	ldr r1, [r5, #4]
	adds r2, r4, #0
	bl FUN_0219CC98
	adds r4, r0, #0
_021B4EAC:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021B5010
	cmp r0, #0
	beq _021B4EBC
_021B4EB8:
	movs r0, #1
	b _021B4F2A
_021B4EBC:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021B504C
	cmp r0, #0
	beq _021B4ECC
	b _021B4EB8
_021B4ECC:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021B50DC
	cmp r0, #0
	beq _021B4EDC
	b _021B4EB8
_021B4EDC:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021B51EC
	cmp r0, #0
	beq _021B4EEC
	b _021B4EB8
_021B4EEC:
	add r7, sp, #8
	adds r7, #1
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021B5344
	cmp r0, #0
	beq _021B4F02
	b _021B4EB8
_021B4F02:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021B549C
	cmp r0, #0
	beq _021B4F12
	b _021B4EB8
_021B4F12:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021B5554
	cmp r0, #0
	beq _021B4F24
	b _021B4EB8
_021B4F24:
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4F2A:
	cmp r0, #0
	bne _021B4F34
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4F34:
	add r0, sp, #8
	ldrb r0, [r0, #1]
	cmp r0, #6
	bne _021B4F76
	add r7, sp, #0xc
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021B5C2C
	adds r6, r0, #0
	lsls r2, r6, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x18
	adds r3, r4, #0
	bl FUN_021B5C8C
	movs r4, #0
	cmp r6, #0
	bls _021B4F76
_021B4F5C:
	ldrb r1, [r7, r4]
	adds r0, r5, #0
	bl FUN_021B4E04
	cmp r0, #0
	bne _021B4F70
	ldrb r1, [r7, r4]
	add r0, sp, #8
	strb r1, [r0, #1]
	b _021B4F76
_021B4F70:
	adds r4, r4, #1
	cmp r4, r6
	blo _021B4F5C
_021B4F76:
	add r4, sp, #8
	ldrb r2, [r4, #1]
	cmp r2, #6
	bne _021B4F84
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021B4F84:
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021B4E28
	ldrb r1, [r4, #1]
	ldr r0, [sp, #4]
	strb r1, [r0]
	movs r0, #1
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B4E38

	thumb_func_start FUN_021B4F98
FUN_021B4F98: ; 0x021B4F98
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r6, #1
	adds r2, r1, #0
	adds r5, r0, #0
	lsls r6, r6, #8
	orrs r2, r6
	lsls r2, r2, #0x10
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x10
	add r3, sp, #0
	bl FUN_0219C5E4
	adds r4, r0, #0
	beq _021B500A
	adds r1, r6, #0
	adds r2, r5, #0
	adds r0, r6, #4
	adds r1, #8
	adds r2, #0xfc
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r6]
	blx FUN_0208D638
	adds r2, r6, #0
	adds r3, r6, #0
	adds r2, #0xc
	adds r3, #0x10
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	str r3, [r5, r6]
	cmp r4, #0
	beq _021B4FF8
	adds r0, r3, #0
	movs r1, #0
	movs r3, #0
	adds r2, r4, #0
	blx FUN_0208D638
	adds r3, r1, #0
_021B4FF8:
	lsls r1, r3, #0x18
	lsrs r2, r1, #0x18
	add r1, sp, #0
	ldrb r1, [r1, r2]
	ldr r0, [r5, #4]
	bl FUN_0219D250
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021B500A:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021B4F98

	thumb_func_start FUN_021B5010
FUN_021B5010: ; 0x021B5010
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r0, r5, #0
	movs r1, #0x14
	movs r6, #0x14
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B5046
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BBB54
	bl FUN_021CE37C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BBB5C
	adds r0, r0, #1
	cmp r0, r4
	bne _021B5046
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B5046:
	movs r0, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B5010

	thumb_func_start FUN_021B504C
FUN_021B504C: ; 0x021B504C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_0219BDC0
	cmp r0, #0
	beq _021B5062
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B5062:
	adds r0, r7, #0
	movs r1, #0x11
	movs r4, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x19
	bne _021B50D8
	adds r1, r6, #0
	adds r0, r5, #0
	adds r2, r7, #0
	movs r3, #4
	movs r6, #4
	bl FUN_021B58C0
	cmp r0, #0
	bne _021B50D8
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021B57D8
	cmp r0, #0
	beq _021B50D8
	adds r0, r4, #0
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	adds r0, #0xf3
	adds r1, #0xf7
	adds r2, #0xfc
	adds r3, #0xfc
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #0xfb
	adds r4, #0xff
	ldr r2, [r5, r2]
	ldr r3, [r5, r4]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	adds r6, #0xfc
	str r3, [r5, r6]
	adds r0, r3, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	blx FUN_0208D638
	cmp r1, #2
	bhs _021B50D8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B50D8:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B504C

	thumb_func_start FUN_021B50DC
FUN_021B50DC: ; 0x021B50DC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	str r1, [sp]
	adds r0, r2, #0
	str r2, [sp, #4]
	bl FUN_021BB03C
	str r0, [sp, #0xc]
	ldr r0, [sp]
	bl FUN_021BAC88
	str r0, [sp, #8]
	movs r5, #0
	movs r4, #0
	cmp r0, #0
	bls _021B5132
_021B50FE:
	lsls r1, r4, #0x18
	ldr r0, [sp]
	lsrs r1, r1, #0x18
	bl FUN_021BAD00
	adds r7, r0, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021B512A
	adds r0, r7, #0
	bl FUN_0202174C
	ldr r1, [sp, #0xc]
	bl FUN_021BD1F0
	cmp r0, #0
	beq _021B5128
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B5128:
	adds r5, r5, #1
_021B512A:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	cmp r4, r0
	blo _021B50FE
_021B5132:
	cmp r5, #2
	blo _021B51E4
	ldr r1, [sp, #4]
	adds r0, r6, #0
	movs r2, #4
	bl FUN_021B57D8
	cmp r0, #0
	beq _021B5190
	movs r4, #0x41
	lsls r4, r4, #2
	adds r2, r6, #0
	adds r1, r4, #4
	adds r2, #0xfc
	subs r3, r4, #4
	ldr r0, [r6, r4]
	ldr r1, [r6, r1]
	ldr r2, [r2]
	ldr r3, [r6, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #8
	ldr r3, [r6, r2]
	adds r2, r4, #0
	adds r2, #0xc
	ldr r2, [r6, r2]
	adds r3, r3, r0
	adcs r2, r1
	adds r0, r6, #0
	adds r0, #0xfc
	str r3, [r0]
	subs r0, r4, #4
	str r2, [r6, r0]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	movs r4, #0
	blx FUN_0208D638
	cmp r1, #2
	bhs _021B518A
	movs r4, #1
_021B518A:
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B5190:
	ldr r1, [sp, #4]
	adds r0, r6, #0
	movs r2, #3
	bl FUN_021B57D8
	cmp r0, #0
	beq _021B51E4
	movs r4, #0x41
	lsls r4, r4, #2
	adds r2, r6, #0
	adds r1, r4, #4
	adds r2, #0xfc
	subs r3, r4, #4
	ldr r0, [r6, r4]
	ldr r1, [r6, r1]
	ldr r2, [r2]
	ldr r3, [r6, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #8
	ldr r3, [r6, r2]
	adds r2, r4, #0
	adds r2, #0xc
	ldr r2, [r6, r2]
	adds r3, r3, r0
	adcs r2, r1
	adds r0, r6, #0
	adds r0, #0xfc
	str r3, [r0]
	subs r0, r4, #4
	movs r1, #0
	str r2, [r6, r0]
	lsrs r0, r2, #0x1f
	lsls r1, r1, #1
	orrs r1, r0
	movs r0, #1
	cmp r1, #1
	blo _021B51E6
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B51E4:
	movs r0, #0
_021B51E6:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B50DC

	thumb_func_start FUN_021B51EC
FUN_021B51EC: ; 0x021B51EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x1b
	adds r7, r2, #0
	movs r4, #0x1b
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B5216
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBB54
	bl FUN_021CE400
	str r0, [sp]
	cmp r0, #0
	bne _021B5218
_021B5216:
	b _021B533C
_021B5218:
	bl FUN_02021898
	adds r6, r0, #0
	ldr r0, [sp]
	bl FUN_0202174C
	str r0, [sp, #4]
	adds r0, r7, #0
	bl FUN_021BB03C
	adds r1, r0, #0
	ldr r0, [sp, #4]
	bl FUN_021BD1F0
	cmp r0, #0
	bne _021B52F2
	cmp r6, #0
	beq _021B52F2
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #4
	bl FUN_021B57D8
	cmp r0, #0
	beq _021B529A
	adds r0, r4, #0
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r4, #0
	adds r0, #0xe9
	adds r1, #0xed
	adds r2, #0xfc
	adds r3, #0xe5
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #0xf1
	ldr r6, [r5, r2]
	adds r2, r4, #0
	adds r2, #0xf5
	ldr r2, [r5, r2]
	adds r6, r6, r0
	adcs r2, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r6, [r0]
	adds r4, #0xe5
	str r2, [r5, r4]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	movs r4, #0
	blx FUN_0208D638
	cmp r1, #2
	bhs _021B5294
	movs r4, #1
_021B5294:
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B529A:
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #3
	bl FUN_021B57D8
	cmp r0, #0
	beq _021B52F2
	adds r0, r4, #0
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r4, #0
	adds r0, #0xe9
	adds r1, #0xed
	adds r2, #0xfc
	adds r3, #0xe5
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #0xf1
	ldr r6, [r5, r2]
	adds r2, r4, #0
	adds r2, #0xf5
	ldr r2, [r5, r2]
	adds r6, r6, r0
	adcs r2, r1
	adds r0, r5, #0
	adds r0, #0xfc
	movs r1, #0
	str r6, [r0]
	adds r4, #0xe5
	lsrs r0, r2, #0x1f
	lsls r1, r1, #1
	orrs r1, r0
	movs r0, #1
	str r2, [r5, r4]
	cmp r1, #1
	blo _021B533E
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B52F2:
	cmp r6, #0
	bne _021B533C
	movs r4, #0x41
	lsls r4, r4, #2
	adds r2, r5, #0
	adds r1, r4, #4
	adds r2, #0xfc
	subs r3, r4, #4
	ldr r0, [r5, r4]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #8
	ldr r6, [r5, r2]
	adds r2, r4, #0
	adds r2, #0xc
	ldr r2, [r5, r2]
	adds r6, r6, r0
	adcs r2, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r6, [r0]
	subs r0, r4, #4
	movs r1, #0
	str r2, [r5, r0]
	lsrs r0, r2, #0x1f
	lsls r1, r1, #1
	orrs r1, r0
	movs r0, #1
	cmp r1, #1
	blo _021B533E
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B533C:
	movs r0, #0
_021B533E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B51EC

	thumb_func_start FUN_021B5344
FUN_021B5344: ; 0x021B5344
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	str r3, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r3, #4
	adds r5, r0, #0
	str r1, [sp]
	bl FUN_021B58C0
	cmp r0, #0
	beq _021B53A4
	movs r4, #0x41
	lsls r4, r4, #2
	adds r2, r5, #0
	adds r1, r4, #4
	adds r2, #0xfc
	subs r3, r4, #4
	ldr r0, [r5, r4]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r2, #8
	ldr r6, [r5, r2]
	adds r2, r4, #0
	adds r2, #0xc
	ldr r2, [r5, r2]
	adds r6, r6, r0
	adcs r2, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r6, [r0]
	subs r0, r4, #4
	str r2, [r5, r0]
	adds r0, r2, #0
	ldr r3, [sp, #8]
	movs r1, #0
	movs r2, #3
	blx FUN_0208D638
	cmp r1, #0
	bne _021B53A4
	ldr r0, [sp, #8]
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
_021B53A4:
	ldr r0, [sp, #8]
	add r3, sp, #0x24
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [sp]
	movs r1, #1
	movs r2, #0
	adds r3, #2
	bl FUN_021BC180
	cmp r0, #0
	beq _021B5492
_021B53C0:
	movs r0, #0
	str r0, [sp, #0xc]
	movs r0, #0x41
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x20]
	movs r0, #0x41
	lsls r0, r0, #2
	subs r0, r0, #4
	str r0, [sp, #0x1c]
	movs r0, #0x41
	lsls r0, r0, #2
	str r0, [sp, #0x18]
	adds r0, #8
	str r0, [sp, #0x18]
	movs r0, #0x41
	lsls r0, r0, #2
	movs r7, #0x41
	subs r0, r0, #4
	lsls r7, r7, #2
	str r0, [sp, #0x14]
	movs r0, #0
	adds r7, #0xc
	str r0, [sp, #0x10]
_021B53F0:
	ldr r1, [sp, #0xc]
	movs r0, #0xa
	muls r0, r1, r0
	ldr r1, _021B5498 ; =0x021D6F5C
	adds r6, r1, r0
	add r1, sp, #0x24
	ldrb r2, [r1, #6]
	ldr r1, _021B5498 ; =0x021D6F5C
	ldrb r0, [r1, r0]
	cmp r2, r0
	bne _021B546C
	movs r4, #0
_021B5408:
	lsls r0, r4, #1
	adds r0, r6, r0
	ldrh r1, [r0, #2]
	cmp r1, #0
	beq _021B546C
	adds r0, r5, #0
	add r2, sp, #0x24
	bl FUN_021B5760
	cmp r0, #0
	beq _021B5466
	movs r0, #0x41
	ldr r1, [sp, #0x20]
	adds r2, r5, #0
	ldr r3, [sp, #0x1c]
	lsls r0, r0, #2
	adds r2, #0xfc
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r0, #0
	ldr r0, [sp, #0x18]
	adds r3, r1, #0
	ldr r0, [r5, r0]
	ldr r1, [r5, r7]
	adds r0, r0, r2
	adcs r1, r3
	adds r2, r5, #0
	adds r2, #0xfc
	str r0, [r2]
	ldr r0, [sp, #0x14]
	str r1, [r5, r0]
	ldr r0, [sp, #0x10]
	lsrs r1, r1, #0x1f
	lsls r0, r0, #1
	orrs r0, r1
	bne _021B5466
	add r0, sp, #0x24
	ldrb r1, [r0]
	ldr r0, [sp, #4]
	add sp, #0x30
	strb r1, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B5466:
	adds r4, r4, #1
	cmp r4, #4
	blo _021B5408
_021B546C:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, #4
	blo _021B53F0
	ldr r2, [sp, #8]
	add r3, sp, #0x24
	adds r0, r2, #0
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [sp]
	movs r1, #1
	adds r3, #2
	bl FUN_021BC180
	cmp r0, #0
	bne _021B53C0
_021B5492:
	movs r0, #0
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B5498: .word 0x021D6F5C
	thumb_func_end FUN_021B5344

	thumb_func_start FUN_021B549C
FUN_021B549C: ; 0x021B549C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r1, #0
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0x11
	adds r6, r2, #0
	bl FUN_021BB1F4
	cmp r0, #0x1e
	bne _021B554E
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	bne _021B54CA
	adds r0, r5, #0
	movs r1, #3
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B554E
_021B54CA:
	adds r0, r5, #0
	bl FUN_021BB484
	movs r1, #0x32
	lsls r1, r1, #0xc
	cmp r0, r1
	blt _021B554E
	add r3, sp, #0
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0
	adds r3, #2
	movs r5, #1
	movs r7, #0
	bl FUN_021BC180
	cmp r0, #0
	beq _021B550A
	adds r0, r4, #0
	add r4, sp, #0
	ldrb r1, [r4, #6]
	movs r2, #2
	add r3, sp, #0
	bl FUN_021B5840
	cmp r0, #0
	beq _021B554E
	ldrb r0, [r4]
	add sp, #0xc
	strb r0, [r6]
	adds r0, r5, #0
	pop {r4, r5, r6, r7, pc}
_021B550A:
	movs r6, #0x41
	lsls r6, r6, #2
	adds r2, r4, #0
	adds r1, r6, #4
	adds r2, #0xfc
	subs r3, r6, #4
	ldr r0, [r4, r6]
	ldr r1, [r4, r1]
	ldr r2, [r2]
	ldr r3, [r4, r3]
	blx FUN_0208D638
	adds r2, r6, #0
	adds r3, r6, #0
	adds r2, #8
	adds r3, #0xc
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r4, #0
	adds r0, #0xfc
	str r2, [r0]
	subs r0, r6, #4
	movs r1, #0
	str r3, [r4, r0]
	lsrs r0, r3, #0x1f
	lsls r1, r1, #1
	orrs r1, r0
	beq _021B5548
	adds r5, r7, #0
_021B5548:
	add sp, #0xc
	adds r0, r5, #0
	pop {r4, r5, r6, r7, pc}
_021B554E:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B549C

	thumb_func_start FUN_021B5554
FUN_021B5554: ; 0x021B5554
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x48
	str r3, [sp, #4]
	movs r3, #4
	adds r5, r0, #0
	adds r7, r1, #0
	str r2, [sp]
	bl FUN_021B58C0
	cmp r0, #0
	beq _021B55B4
	movs r4, #0x41
	lsls r4, r4, #2
	adds r2, r5, #0
	adds r1, r4, #4
	adds r2, #0xfc
	subs r3, r4, #4
	ldr r0, [r5, r4]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r4, #0
	adds r3, r4, #0
	adds r2, #8
	adds r3, #0xc
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	subs r0, r4, #4
	str r3, [r5, r0]
	adds r0, r3, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	movs r4, #0
	blx FUN_0208D638
	cmp r1, #0
	beq _021B55B4
	add sp, #0x48
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B55B4:
	movs r6, #0
	movs r4, #1
_021B55B8:
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021BB1F4
	adds r4, r4, #1
	adds r6, r6, r0
	cmp r4, #7
	bls _021B55B8
	cmp r6, #4
	blo _021B55D2
	add sp, #0x48
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B55D2:
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	add r3, sp, #0x40
	bl FUN_021BC180
	cmp r0, #0
	beq _021B5606
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_0219D4C8
	adds r7, r0, #0
	ldr r0, [r5]
	bl FUN_0219BDC0
	movs r1, #0x12
	lsls r1, r1, #4
	adds r1, r1, #4
	ldrb r1, [r5, r1]
	bl FUN_021BD794
	adds r4, r0, #0
	cmp r4, r7
	blo _021B5608
_021B5606:
	b _021B575A
_021B5608:
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x3c]
	subs r0, #0x1c
	str r0, [sp, #0x3c]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x38]
	subs r0, #0x18
	str r0, [sp, #0x38]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x34]
	subs r0, #0x20
	str r0, [sp, #0x34]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x30]
	subs r0, #0x14
	str r0, [sp, #0x30]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x2c]
	subs r0, #0x10
	str r0, [sp, #0x2c]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x28]
	subs r0, #0x20
	str r0, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0xc]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x24]
	subs r0, #0x1c
	str r0, [sp, #0x24]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x20]
	subs r0, #0x18
	str r0, [sp, #0x20]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x1c]
	subs r0, #0x20
	str r0, [sp, #0x1c]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x18]
	subs r0, #0x14
	str r0, [sp, #0x18]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x14]
	subs r0, #0x10
	str r0, [sp, #0x14]
	movs r0, #0x12
	lsls r0, r0, #4
	str r0, [sp, #0x10]
	subs r0, #0x20
	str r0, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #8]
_021B5688:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B4E04
	cmp r0, #0
	bne _021B5754
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r4, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	ldr r2, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #4
	bl FUN_021B58C0
	cmp r0, #0
	beq _021B5754
	adds r0, r6, #0
	bl FUN_021BB03C
	adds r1, r0, #0
	add r0, sp, #0x40
	ldrb r0, [r0, #4]
	bl FUN_021BD1F0
	cmp r0, #0
	bne _021B570A
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0x20]
	adds r2, r5, #0
	ldr r3, [sp, #0x1c]
	adds r2, #0xfc
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x14]
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	ldr r0, [sp, #0x10]
	lsrs r1, r3, #0x1f
	str r3, [r5, r0]
	ldr r0, [sp, #8]
	lsls r0, r0, #1
	orrs r0, r1
	bne _021B5754
	ldr r0, [sp, #4]
	add sp, #0x48
	strb r4, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B570A:
	cmp r0, #3
	bge _021B5754
	ldr r0, [sp, #0x3c]
	ldr r1, [sp, #0x38]
	adds r2, r5, #0
	ldr r3, [sp, #0x34]
	adds r2, #0xfc
	ldr r0, [r5, r0]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	ldr r2, [sp, #0x30]
	ldr r3, [sp, #0x2c]
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	ldr r0, [sp, #0x28]
	ldr r1, [sp, #0xc]
	str r3, [r5, r0]
	adds r0, r3, #0
	movs r2, #3
	movs r3, #0
	blx FUN_0208D638
	cmp r1, #0
	bne _021B5754
	ldr r0, [sp, #4]
	add sp, #0x48
	strb r4, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B5754:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B5688
_021B575A:
	movs r0, #0
	add sp, #0x48
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B5554

	thumb_func_start FUN_021B5760
FUN_021B5760: ; 0x021B5760
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #0x12
	str r1, [sp]
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	str r2, [sp, #4]
	bl FUN_0219D4C8
	adds r7, r0, #0
	ldr r0, [r5]
	bl FUN_0219BDC0
	movs r1, #0x12
	lsls r1, r1, #4
	adds r1, r1, #4
	ldrb r1, [r5, r1]
	bl FUN_021BD794
	adds r4, r0, #0
	cmp r4, r7
	bhs _021B57D2
_021B578E:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B4E04
	cmp r0, #0
	bne _021B57CC
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r4, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B57CC
	adds r0, r6, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	ldr r1, [sp]
	cmp r1, r0
	bne _021B57CC
	ldr r0, [sp, #4]
	add sp, #8
	strb r4, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B57CC:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B578E
_021B57D2:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B5760

	thumb_func_start FUN_021B57D8
FUN_021B57D8: ; 0x021B57D8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	adds r7, r1, #0
	str r2, [sp]
	bl FUN_0219D4C8
	adds r6, r0, #0
	ldr r0, [r5]
	bl FUN_0219BDC0
	movs r1, #0x12
	lsls r1, r1, #4
	adds r1, r1, #4
	ldrb r1, [r5, r1]
	bl FUN_021BD794
	adds r4, r0, #0
	cmp r4, r6
	bhs _021B583A
_021B5804:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B4E04
	cmp r0, #0
	bne _021B5834
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r4, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r1, r0, #0
	ldr r3, [sp]
	adds r0, r5, #0
	adds r2, r7, #0
	bl FUN_021B58C0
	cmp r0, #0
	beq _021B5834
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B5834:
	adds r4, r4, #1
	cmp r4, r6
	blo _021B5804
_021B583A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B57D8

	thumb_func_start FUN_021B5840
FUN_021B5840: ; 0x021B5840
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0x12
	str r1, [sp]
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl FUN_0219D4C8
	adds r7, r0, #0
	ldr r0, [r5]
	bl FUN_0219BDC0
	movs r1, #0x12
	lsls r1, r1, #4
	adds r1, r1, #4
	ldrb r1, [r5, r1]
	bl FUN_021BD794
	adds r4, r0, #0
	cmp r4, r7
	bhs _021B58BA
_021B5870:
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021B4E04
	cmp r0, #0
	bne _021B58B4
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r4, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021B58B4
	adds r0, r6, #0
	bl FUN_021BB03C
	adds r1, r0, #0
	ldr r0, [sp]
	bl FUN_021BD1F0
	ldr r1, [sp, #4]
	cmp r0, r1
	bgt _021B58B4
	ldr r0, [sp, #8]
	add sp, #0xc
	strb r4, [r0]
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B58B4:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B5870
_021B58BA:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B5840

	thumb_func_start FUN_021B58C0
FUN_021B58C0: ; 0x021B58C0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r1, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B593E
	adds r0, r4, #0
	bl FUN_021BB03C
	str r0, [sp, #8]
	adds r0, r6, #0
	bl FUN_021BAC88
	movs r5, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _021B593E
_021B58EC:
	lsls r1, r5, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021BAD00
	lsls r1, r5, #0x18
	adds r4, r0, #0
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021BADC4
	cmp r0, #0
	beq _021B5936
	adds r0, r4, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021B5936
	ldr r0, [sp]
	adds r1, r6, #0
	adds r2, r4, #0
	movs r3, #0
	bl FUN_021B47F8
	cmp r0, #0
	bne _021B5936
	adds r0, r4, #0
	bl FUN_0202174C
	ldr r1, [sp, #8]
	bl FUN_021BD1F0
	cmp r0, r7
	blt _021B5936
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B5936:
	ldr r0, [sp, #4]
	adds r5, r5, #1
	cmp r5, r0
	blo _021B58EC
_021B593E:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B58C0

	thumb_func_start FUN_021B5944
FUN_021B5944: ; 0x021B5944
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #1
	add r7, sp, #0
	movs r0, #2
	strb r4, [r7]
	movs r6, #2
	bl FUN_0219D3CC
	adds r1, r0, #0
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r1, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B5972
	adds r4, r4, #1
	strb r6, [r7, #1]
_021B5972:
	movs r0, #3
	movs r6, #3
	bl FUN_0219D3CC
	adds r1, r0, #0
	movs r0, #0x12
	lsls r0, r0, #4
	lsls r1, r1, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B5998
	add r0, sp, #0
	strb r6, [r0, r4]
	adds r4, r4, #1
_021B5998:
	cmp r4, #1
	bls _021B59E6
	movs r6, #0x41
	lsls r6, r6, #2
	adds r2, r5, #0
	adds r1, r6, #4
	adds r2, #0xfc
	subs r3, r6, #4
	ldr r0, [r5, r6]
	ldr r1, [r5, r1]
	ldr r2, [r2]
	ldr r3, [r5, r3]
	blx FUN_0208D638
	adds r2, r6, #0
	adds r3, r6, #0
	adds r2, #8
	adds r3, #0xc
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r2, r2, r0
	adcs r3, r1
	adds r0, r5, #0
	adds r0, #0xfc
	str r2, [r0]
	subs r0, r6, #4
	str r3, [r5, r0]
	cmp r4, #0
	beq _021B59E0
	adds r0, r3, #0
	movs r1, #0
	movs r3, #0
	adds r2, r4, #0
	blx FUN_0208D638
	adds r3, r1, #0
_021B59E0:
	add r0, sp, #0
	ldrb r0, [r0, r3]
	pop {r3, r4, r5, r6, r7, pc}
_021B59E6:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B5944

	thumb_func_start FUN_021B59EC
FUN_021B59EC: ; 0x021B59EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #4
	bhi _021B5A46
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B5A06: ; jump table
	.short _021B5A10 - _021B5A06 - 2 ; case 0
	.short _021B5A28 - _021B5A06 - 2 ; case 1
	.short _021B5A3A - _021B5A06 - 2 ; case 2
	.short _021B5B8E - _021B5A06 - 2 ; case 3
	.short _021B5BE6 - _021B5A06 - 2 ; case 4
_021B5A10:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B5A24
	bl FUN_021B21C8
	cmp r0, #8
	blt _021B5A46
	b _021B5A24
_021B5A24:
	movs r0, #1
	b _021B5C20
_021B5A28:
	bl FUN_021B4DEC
	ldr r0, _021B5C28 ; =0x00000125
	movs r1, #0
	strb r1, [r4, r0]
	adds r0, #0x92
	strb r1, [r4, r0]
	movs r0, #2
	str r0, [r5]
_021B5A3A:
	ldr r6, _021B5C28 ; =0x00000125
	subs r0, r6, #1
	ldrb r1, [r4, r6]
	ldrb r0, [r4, r0]
	cmp r1, r0
	blo _021B5A48
_021B5A46:
	b _021B5C22
_021B5A48:
	subs r0, r6, #5
	ldr r0, [r4, r0]
	bl FUN_0219D534
	adds r1, r6, #7
	str r0, [r4, #8]
	adds r2, r4, r1
	ldrb r1, [r4, r6]
	lsls r1, r1, #2
	adds r1, r2, r1
	str r1, [r4, #0xc]
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B5A6E
	ldr r0, [r4, #0xc]
	bl FUN_021BDC9C
	b _021B5BE2
_021B5A6E:
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r0, r4, #0
	bl FUN_021B46B8
	cmp r0, #0
	beq _021B5A7E
	b _021B5BE2
_021B5A7E:
	subs r2, r6, #5
	ldr r1, [r4, #8]
	ldr r2, [r4, r2]
	adds r0, r4, #0
	bl FUN_021B9218
	adds r1, r0, #0
	beq _021B5A9A
	ldrb r2, [r4, r6]
	ldr r0, [r4, #0xc]
	movs r3, #0
	bl FUN_021BDBC0
	b _021B5BE2
_021B5A9A:
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021B5AC2
	ldrb r2, [r4, r6]
	ldr r1, [r4, #8]
	adds r0, r4, #0
	add r3, sp, #4
	bl FUN_021B4E38
	cmp r0, #0
	beq _021B5AC2
	add r2, sp, #4
	ldrb r1, [r4, r6]
	ldrb r2, [r2]
	ldr r0, [r4, #0xc]
	bl FUN_021BDBFC
	b _021B5BE2
_021B5AC2:
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021B5B00
	adds r0, r4, #0
	bl FUN_021B5944
	adds r6, r0, #0
	cmp r6, #1
	beq _021B5B00
	bl FUN_0219D3CC
	adds r7, r0, #0
	ldr r0, [r4, #0xc]
	adds r1, r6, #0
	bl FUN_021BDC64
	movs r6, #0x12
	lsls r6, r6, #4
	ldr r0, [r4, r6]
	adds r1, r7, #0
	bl FUN_0219D534
	str r0, [r4, #8]
	movs r0, #1
	adds r6, #0x97
	strb r0, [r4, r6]
	ldr r0, [r4, #0xc]
	adds r0, r0, #4
	str r0, [r4, #0xc]
_021B5B00:
	ldr r0, [r4, #8]
	movs r1, #0x19
	movs r6, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B5B3A
	ldr r0, [r4, #8]
	adds r1, r6, #0
	bl FUN_021BBB54
	bl FUN_021CE400
	adds r6, r0, #0
	adds r0, r4, #0
	adds r0, #0xfc
	str r0, [sp]
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	adds r3, r6, #0
	bl FUN_021BDA60
	adds r2, r0, #0
	ldr r0, [r4, #0xc]
	adds r1, r6, #0
_021B5B34:
	bl FUN_021BDB38
	b _021B5BE2
_021B5B3A:
	ldr r1, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r0, r4, #0
	bl FUN_021B476C
	cmp r0, #0
	beq _021B5B4C
	movs r0, #4
	str r0, [r5]
_021B5B4C:
	ldr r0, [r4, #8]
	bl FUN_021BAC88
	add r6, sp, #0xc
	ldr r1, [r4, #8]
	adds r0, r4, #0
	adds r2, r6, #0
	bl FUN_021B4A64
	cmp r0, #4
	beq _021B5B82
	ldr r0, [r4, #8]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	bl FUN_0219C638
	adds r4, #0xf8
	adds r2, r0, #0
	ldr r0, [r4]
	adds r1, r6, #0
	bl FUN_0217F7FC
	movs r0, #3
	b _021B5C20
_021B5B82:
	ldr r0, [r4, #0xc]
	ldr r2, [r4, #8]
	adds r1, r4, #0
	bl FUN_021B47D4
	b _021B5BE2
_021B5B8E:
	adds r0, #0xf8
	ldr r0, [r0]
	bl FUN_0217F6F0
	cmp r0, #0
	bne _021B5C22
	adds r0, r4, #0
	adds r0, #0xf8
	ldr r0, [r0]
	bl FUN_0217F874
	adds r6, r0, #0
	cmp r6, #4
	beq _021B5BDC
	adds r0, r4, #0
	adds r0, #0xf8
	ldr r0, [r0]
	bl FUN_0217F880
	adds r7, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3EC
	cmp r0, #0
	beq _021B5BCC
	movs r1, #8
	ldrsb r0, [r0, r1]
	cmp r0, #0
	blt _021B5BCC
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_021B5BCC:
	ldr r0, [r4, #8]
	adds r1, r6, #0
	bl FUN_021BAD00
	adds r1, r0, #0
	ldr r0, [r4, #0xc]
	adds r2, r7, #0
	b _021B5B34
_021B5BDC:
	ldr r0, [r4, #0xc]
	bl FUN_021BDC7C
_021B5BE2:
	movs r0, #4
	b _021B5C20
_021B5BE6:
	ldr r1, _021B5C28 ; =0x00000125
	ldrb r0, [r4, r1]
	adds r0, r0, #1
	strb r0, [r4, r1]
	subs r0, r1, #1
	ldrb r2, [r4, r0]
	ldrb r0, [r4, r1]
	cmp r0, r2
	blo _021B5C1E
	adds r0, r1, #0
	adds r0, #0x92
	ldrb r0, [r4, r0]
	add sp, #0x10
	adds r0, r2, r0
	lsls r3, r0, #2
	adds r0, r1, #7
	adds r2, r4, r0
	adds r0, r4, #0
	adds r0, #0xe0
	str r2, [r0]
	adds r0, r4, #0
	adds r0, #0xe4
	str r3, [r0]
	movs r0, #0
	adds r1, #0x92
	strb r0, [r4, r1]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B5C1E:
	movs r0, #2
_021B5C20:
	str r0, [r5]
_021B5C22:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B5C28: .word 0x00000125
	thumb_func_end FUN_021B59EC

	thumb_func_start FUN_021B5C2C
FUN_021B5C2C: ; 0x021B5C2C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r0, [r7, r0]
	adds r6, r1, #0
	bl FUN_0219D4C8
	str r0, [sp]
	ldr r0, [r7]
	bl FUN_0219BDC0
	movs r1, #0x12
	lsls r1, r1, #4
	adds r1, r1, #4
	ldrb r1, [r7, r1]
	bl FUN_021BD794
	adds r5, r0, #0
	ldr r0, [sp]
	movs r4, #0
	cmp r5, r0
	bhs _021B5C86
_021B5C5A:
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r0, [r7, r0]
	adds r1, r5, #0
	bl FUN_0219D534
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021B5C7A
	cmp r6, #0
	beq _021B5C74
	strb r5, [r6, r4]
_021B5C74:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021B5C7A:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp]
	cmp r5, r0
	blo _021B5C5A
_021B5C86:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B5C2C

	thumb_func_start FUN_021B5C8C
FUN_021B5C8C: ; 0x021B5C8C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	str r0, [sp]
	str r2, [sp, #4]
	adds r0, r3, #0
	adds r7, r1, #0
	bl FUN_021BB03C
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #4]
	cmp r0, #0
	bls _021B5D70
_021B5CA8:
	ldr r0, [sp, #0x10]
	movs r5, #0
	lsls r0, r0, #1
	add r1, sp, #0x1c
	strh r5, [r1, r0]
	str r0, [sp, #0x18]
	movs r1, #0x12
	ldr r0, [sp]
	lsls r1, r1, #4
	ldr r0, [r0, r1]
	ldr r1, [sp, #0x10]
	ldrb r1, [r7, r1]
	bl FUN_0219D534
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B5D60
	adds r0, r6, #0
	bl FUN_021BAC88
	str r0, [sp, #0xc]
	cmp r0, #0
	bls _021B5D60
_021B5CDA:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021BADC4
	cmp r0, #0
	beq _021B5D54
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021BAD00
	adds r4, r0, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021B5D54
	adds r0, r4, #0
	bl FUN_0202174C
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_0202175C
	adds r4, r0, #0
	cmp r4, #0xa
	bhs _021B5D0E
	movs r4, #0x3c
_021B5D0E:
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x14]
	bl FUN_021BD1F0
	cmp r0, #5
	bhi _021B5D46
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B5D26: ; jump table
	.short _021B5D44 - _021B5D26 - 2 ; case 0
	.short _021B5D40 - _021B5D26 - 2 ; case 1
	.short _021B5D3C - _021B5D26 - 2 ; case 2
	.short _021B5D46 - _021B5D26 - 2 ; case 3
	.short _021B5D38 - _021B5D26 - 2 ; case 4
	.short _021B5D32 - _021B5D26 - 2 ; case 5
_021B5D32:
	lsls r0, r4, #0x12
_021B5D34:
	lsrs r4, r0, #0x10
	b _021B5D46
_021B5D38:
	lsls r0, r4, #0x11
	b _021B5D34
_021B5D3C:
	lsls r0, r4, #0xf
	b _021B5D34
_021B5D40:
	lsls r0, r4, #0xe
	b _021B5D34
_021B5D44:
	movs r4, #0
_021B5D46:
	ldr r0, [sp, #0x18]
	add r1, sp, #0x1c
	ldrh r0, [r1, r0]
	cmp r0, r4
	bhs _021B5D54
	ldr r0, [sp, #0x18]
	strh r4, [r1, r0]
_021B5D54:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #0xc]
	cmp r5, r0
	blo _021B5CDA
_021B5D60:
	ldr r0, [sp, #0x10]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0x10]
	ldr r0, [sp, #4]
	cmp r1, r0
	blo _021B5CA8
_021B5D70:
	ldr r0, [sp, #4]
	movs r5, #0
	cmp r0, #0
	bls _021B5DB6
	add r4, sp, #0x1c
_021B5D7A:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #4]
	cmp r6, r0
	bhs _021B5DAA
	lsls r3, r5, #1
_021B5D88:
	lsls r2, r6, #1
	ldrh r1, [r4, r2]
	ldrh r0, [r4, r3]
	cmp r0, r1
	bhs _021B5D9E
	strh r1, [r4, r3]
	strh r0, [r4, r2]
	ldrb r1, [r7, r5]
	ldrb r0, [r7, r6]
	strb r0, [r7, r5]
	strb r1, [r7, r6]
_021B5D9E:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #4]
	cmp r6, r0
	blo _021B5D88
_021B5DAA:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _021B5D7A
_021B5DB6:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B5C8C

	thumb_func_start FUN_021B5DBC
FUN_021B5DBC: ; 0x021B5DBC
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x12
	adds r4, r0, #0
	adds r5, r3, #0
	adds r6, r1, #0
	lsls r7, r7, #4
	ldr r1, [r4, r7]
	adds r0, r5, #0
	adds r3, r6, #0
	bl FUN_021B5DE8
	adds r1, r7, #4
	ldrb r1, [r4, r1]
	adds r0, r5, #0
	bl FUN_021B5DF8
	ldr r0, [sp, #0x18]
	adds r1, r5, #0
	bl FUN_021B5E08
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021B5DBC

	thumb_func_start FUN_021B5DE8
FUN_021B5DE8: ; 0x021B5DE8
	bx pc
	nop
	thumb_func_end FUN_021B5DE8
_021B5DEC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x21, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B5DF8
FUN_021B5DF8: ; 0x021B5DF8
	bx pc
	nop
	thumb_func_end FUN_021B5DF8
_021B5DFC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x39, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B5E08
FUN_021B5E08: ; 0x021B5E08
	bx pc
	nop
	thumb_func_end FUN_021B5E08
_021B5E0C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x69, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B5E18
FUN_021B5E18: ; 0x021B5E18
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r7, r0, #0
	ldrb r0, [r5, #6]
	movs r4, #0
	cmp r0, #0
	bls _021B5E46
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r6, r7, r0
_021B5E2C:
	adds r1, r5, r4
	ldrb r1, [r1, #3]
	lsls r0, r4, #2
	ldrb r2, [r5, r4]
	adds r0, r6, r0
	bl FUN_021BDBFC
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r5, #6]
	cmp r4, r0
	blo _021B5E2C
_021B5E46:
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r1, r7, r0
	adds r0, r7, #0
	adds r0, #0xe0
	str r1, [r0]
	ldrb r0, [r5, #6]
	adds r7, #0xe4
	lsls r0, r0, #2
	str r0, [r7]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B5E18

	thumb_func_start FUN_021B5E5C
FUN_021B5E5C: ; 0x021B5E5C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	movs r4, #0x12
	adds r5, r0, #0
	movs r0, #0
	lsls r4, r4, #4
	str r0, [sp, #4]
	ldr r0, [r5, r4]
	bl FUN_0219D4C8
	adds r1, r4, #0
	adds r1, #0x8e
	adds r7, r0, #0
	ldrb r1, [r5, r1]
	ldr r0, [r5]
	bl FUN_0219D2DC
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0x9b
	ldrb r0, [r5, r0]
	cmp r0, #0
	bls _021B5F02
	adds r4, #0xc
	adds r0, r5, r4
	str r0, [sp, #0xc]
_021B5E94:
	ldr r1, [sp]
	ldr r6, _021B5F1C ; =0x000001BE
	adds r1, r5, r1
	ldrb r1, [r1, r6]
	add r2, sp, #0x10
	ldr r0, [r5]
	adds r2, #1
	add r3, sp, #0x10
	bl FUN_0219C6D4
	ldr r4, [sp, #8]
	adds r0, r4, #0
	cmp r0, r7
	bhs _021B5EF2
	subs r6, #0x9e
_021B5EB2:
	lsls r1, r4, #0x18
	ldr r0, [r5, r6]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B5EEC
	ldr r0, [sp, #4]
	lsls r2, r4, #0x18
	adds r1, r0, #0
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #4]
	lsls r1, r0, #2
	ldr r0, [sp, #0xc]
	lsrs r2, r2, #0x18
	adds r0, r0, r1
	add r1, sp, #0x10
	ldrb r1, [r1]
	bl FUN_021BDBFC
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	b _021B5EF2
_021B5EEC:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B5EB2
_021B5EF2:
	ldr r0, [sp]
	adds r0, r0, #1
	str r0, [sp]
	ldr r0, _021B5F20 ; =0x000001BB
	ldrb r1, [r5, r0]
	ldr r0, [sp]
	cmp r0, r1
	blo _021B5E94
_021B5F02:
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r0, r5, #0
	adds r0, #0xe0
	str r1, [r0]
	ldr r0, [sp, #4]
	adds r5, #0xe4
	lsls r0, r0, #2
	str r0, [r5]
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021B5F1C: .word 0x000001BE
_021B5F20: .word 0x000001BB
	thumb_func_end FUN_021B5E5C

	thumb_func_start FUN_021B5F24
FUN_021B5F24: ; 0x021B5F24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	ldr r0, [r6, #0x50]
	str r1, [sp]
	add r1, sp, #4
	bl FUN_021D4C4C
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	movs r4, #0
	movs r5, #0
	cmp r7, #0
	bls _021B5F62
_021B5F40:
	ldr r1, [sp, #4]
	ldr r0, [r6]
	ldrb r1, [r1, r4]
	bl FUN_0219C690
	ldr r1, _021B5F6C ; =0x000001AE
	ldrb r1, [r6, r1]
	cmp r1, r0
	bne _021B5F5C
	ldr r0, [sp, #4]
	ldrb r1, [r0, r4]
	ldr r0, [sp]
	strb r1, [r0, r5]
	adds r5, r5, #1
_021B5F5C:
	adds r4, r4, #1
	cmp r4, r7
	blo _021B5F40
_021B5F62:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B5F6C: .word 0x000001AE
	thumb_func_end FUN_021B5F24

	thumb_func_start FUN_021B5F70
FUN_021B5F70: ; 0x021B5F70
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B5F82
	cmp r0, #1
	beq _021B5FB2
	b _021B5FDE
_021B5F82:
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #5
	bl FUN_021D0B2C
	adds r0, r5, #0
	adds r0, #0x80
	movs r1, #3
	movs r2, #1
	bl FUN_021D0B2C
	adds r1, r5, #0
	ldr r0, [r5, #0x54]
	adds r5, #0x80
	adds r1, #0x58
	adds r2, r5, #0
	movs r3, #0
	bl FUN_021D07D8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B5FDE
_021B5FB2:
	ldr r0, [r5, #0x54]
	add r1, sp, #0
	bl FUN_021D0868
	cmp r0, #0
	beq _021B5FDE
	ldr r0, [sp]
	movs r2, #0
	cmp r0, #0
	beq _021B5FC8
	movs r2, #1
_021B5FC8:
	movs r0, #0x6d
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r0, r5, #0
	strb r2, [r1]
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #1
	adds r5, #0xe4
	str r0, [r5]
	pop {r3, r4, r5, pc}
_021B5FDE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B5F70
_021B5FE4:
	.byte 0x01, 0x4B, 0x02, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x2D, 0x61, 0x1B, 0x02
	.byte 0x01, 0x4B, 0x01, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x2D, 0x61, 0x1B, 0x02

	thumb_func_start FUN_021B5FFC
FUN_021B5FFC: ; 0x021B5FFC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	ldr r4, _021B611C ; =0x000001BE
	adds r5, r0, #0
	adds r1, r5, r4
	bl FUN_021B5F24
	subs r1, r4, #3
	strb r0, [r5, r1]
	adds r0, r1, #0
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _021B60FA
	add r1, sp, #4
	adds r0, r5, #0
	adds r1, #2
	bl FUN_021B5C2C
	adds r7, r0, #0
	beq _021B60C0
	ldrb r1, [r5, r4]
	subs r0, r4, #3
	ldrb r6, [r5, r0]
	adds r0, r5, #0
	bl FUN_021B4F98
	adds r3, r0, #0
	beq _021B6040
	add r1, sp, #4
	adds r0, r5, #0
	adds r1, #2
	adds r2, r7, #0
	bl FUN_021B5C8C
_021B6040:
	cmp r6, r7
	bls _021B6072
	ldr r0, [r5]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021B6070
	movs r4, #0x4b
	lsls r4, r4, #2
	adds r0, r5, #0
	adds r1, r5, r4
	bl FUN_021B6308
	cmp r0, #0
	beq _021B6070
	adds r1, r5, #0
	adds r1, #0xe4
	str r0, [r1]
	adds r0, r5, r4
	adds r5, #0xe0
	str r0, [r5]
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B6070:
	adds r6, r7, #0
_021B6072:
	movs r4, #0
	cmp r6, #0
	bls _021B60B0
	movs r7, #0x4b
	lsls r7, r7, #2
	adds r0, r5, r7
	str r0, [sp]
	adds r7, #0x92
_021B6082:
	adds r1, r5, r4
	ldrb r1, [r1, r7]
	add r3, sp, #4
	ldr r0, [r5]
	add r2, sp, #4
	adds r3, #1
	bl FUN_0219C6D4
	add r2, sp, #4
	adds r2, #2
	ldr r0, [sp]
	lsls r1, r4, #2
	adds r0, r0, r1
	add r1, sp, #4
	ldrb r1, [r1, #1]
	ldrb r2, [r2, r4]
	bl FUN_021BDBFC
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021B6082
_021B60B0:
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r0, r5, #0
	adds r0, #0xe0
	str r1, [r0]
	lsls r0, r6, #2
	b _021B6110
_021B60C0:
	adds r0, r5, #0
	bl FUN_021B62DC
	cmp r0, #0
	beq _021B60EE
	adds r1, r4, #0
	subs r1, #0x92
	adds r0, r5, #0
	adds r1, r5, r1
	bl FUN_021B6308
	cmp r0, #0
	beq _021B60EE
	adds r1, r5, #0
	adds r1, #0xe4
	subs r4, #0x92
	str r0, [r1]
	adds r0, r5, r4
	adds r5, #0xe0
	str r0, [r5]
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B60EE:
	movs r4, #0x4b
	lsls r4, r4, #2
	adds r0, r5, r4
	bl FUN_021BDC2C
	b _021B6106
_021B60FA:
	adds r0, r4, #0
	subs r0, #0x92
	adds r0, r5, r0
	bl FUN_021BDC9C
	subs r4, #0x92
_021B6106:
	adds r0, r5, #0
	adds r1, r5, r4
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #4
_021B6110:
	adds r5, #0xe4
	str r0, [r5]
	movs r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021B611C: .word 0x000001BE
	thumb_func_end FUN_021B5FFC
_021B6120:
	.byte 0x01, 0x4B, 0x00, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x71, 0x32, 0x1B, 0x02

	thumb_func_start FUN_021B612C
FUN_021B612C: ; 0x021B612C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r1, #0
	str r2, [sp, #4]
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #6
	bls _021B613E
	b _021B62CE
_021B613E:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B614A: ; jump table
	.short _021B6158 - _021B614A - 2 ; case 0
	.short _021B6258 - _021B614A - 2 ; case 1
	.short _021B6280 - _021B614A - 2 ; case 2
	.short _021B6294 - _021B614A - 2 ; case 3
	.short _021B629C - _021B614A - 2 ; case 4
	.short _021B62BC - _021B614A - 2 ; case 5
	.short _021B62C8 - _021B614A - 2 ; case 6
_021B6158:
	ldr r6, _021B62D4 ; =0x000001BE
	adds r1, r4, r6
	bl FUN_021B5F24
	subs r1, r6, #3
	strb r0, [r4, r1]
	adds r0, r1, #0
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021B624A
	add r1, sp, #0xc
	adds r0, r4, #0
	adds r1, #2
	bl FUN_021B5C2C
	adds r7, r0, #0
	beq _021B6214
	subs r0, r6, #3
	ldrb r0, [r4, r0]
	str r0, [sp, #8]
	cmp r0, r7
	bls _021B6186
	str r7, [sp, #8]
_021B6186:
	adds r0, r4, #0
	bl FUN_021B62DC
	cmp r0, #0
	beq _021B61CA
	movs r6, #0x12
	lsls r6, r6, #4
	ldr r0, [r4, r6]
	movs r1, #0
	bl FUN_0219D534
	cmp r7, #1
	bne _021B61CA
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B61CA
	add r2, sp, #0xc
	adds r0, r6, #0
	adds r0, #0xc
	ldrb r2, [r2, #2]
	adds r0, r4, r0
	movs r1, #0
	bl FUN_021BDBFC
	adds r6, #0xc
_021B61BA:
	adds r0, r4, #0
	adds r1, r4, r6
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #4
	adds r4, #0xe4
	str r0, [r4]
_021B61C8:
	b _021B62B8
_021B61CA:
	ldr r6, _021B62D4 ; =0x000001BE
	add r2, sp, #0xc
	ldrb r1, [r4, r6]
	ldr r0, [r4]
	adds r2, #1
	add r3, sp, #0xc
	bl FUN_0219C6D4
	adds r0, r6, #0
	subs r0, #0x26
	adds r0, r4, r0
	str r0, [sp]
	adds r3, r6, #0
	subs r3, #0x32
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	adds r0, r4, #0
	adds r3, r4, r3
	bl FUN_021B5DBC
	adds r0, r6, #0
	subs r0, #0x26
	adds r0, r4, r0
	str r0, [sp]
	add r2, sp, #0xc
	subs r6, #0x32
	ldrb r2, [r2]
	ldr r0, [r4, #0x54]
	adds r1, r4, r6
	movs r3, #0
	bl FUN_021CF360
	adds r0, r4, #0
	bl FUN_021B20C0
	movs r0, #1
	b _021B61C8
_021B6214:
	adds r0, r4, #0
	bl FUN_021B62DC
	cmp r0, #0
	beq _021B623E
	adds r1, r6, #0
	subs r1, #0x92
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021B6308
	cmp r0, #0
	beq _021B623E
	adds r1, r4, #0
	adds r1, #0xe4
	subs r6, #0x92
	str r0, [r1]
	adds r0, r4, r6
	adds r4, #0xe0
	str r0, [r4]
	b _021B6298
_021B623E:
	movs r6, #0x4b
	lsls r6, r6, #2
	adds r0, r4, r6
	bl FUN_021BDC2C
	b _021B61BA
_021B624A:
	adds r0, r6, #0
	subs r0, #0x92
	adds r0, r4, r0
	bl FUN_021BDC9C
	subs r6, #0x92
	b _021B61BA
_021B6258:
	bl FUN_021B20E4
	cmp r0, #0
	ldr r0, [r4, #0x54]
	beq _021B626A
	bl FUN_021CF3FC
	movs r0, #2
	b _021B61C8
_021B626A:
	bl FUN_021CF408
	cmp r0, #0
	beq _021B62CE
	movs r1, #0x66
	lsls r1, r1, #2
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021B5E18
	b _021B6290
_021B6280:
	ldr r0, [r4, #0x54]
	bl FUN_021CF408
	cmp r0, #0
	beq _021B62CE
	adds r0, r4, #0
	bl FUN_021B5E5C
_021B6290:
	movs r0, #3
	b _021B61C8
_021B6294:
	bl FUN_021B2138
_021B6298:
	movs r0, #4
	b _021B61C8
_021B629C:
	ldr r0, [r4]
	bl FUN_0219BF24
	cmp r0, #0
	beq _021B62B6
	ldr r0, _021B62D8 ; =0x000001B1
	movs r1, #1
	strb r1, [r4, r0]
	ldr r0, [r4, #0x54]
	bl FUN_021D0414
	movs r0, #5
	b _021B61C8
_021B62B6:
	movs r0, #6
_021B62B8:
	str r0, [r5]
	b _021B62CE
_021B62BC:
	ldr r0, [r4, #0x54]
	bl FUN_021D042C
	cmp r0, #0
	beq _021B62CE
	b _021B62B6
_021B62C8:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B62CE:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021B62D4: .word 0x000001BE
_021B62D8: .word 0x000001B1
	thumb_func_end FUN_021B612C

	thumb_func_start FUN_021B62DC
FUN_021B62DC: ; 0x021B62DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #3
	bne _021B6302
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r0, [r4, r0]
	movs r1, #0
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B6302
	movs r0, #1
	pop {r4, pc}
_021B6302:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B62DC

	thumb_func_start FUN_021B6308
FUN_021B6308: ; 0x021B6308
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	movs r7, #2
	bl FUN_0219D3CC
	movs r6, #0x12
	adds r1, r0, #0
	lsls r6, r6, #4
	lsls r1, r1, #0x18
	ldr r0, [r5, r6]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B633A
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BDC64
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_021B633A:
	movs r0, #3
	movs r7, #3
	bl FUN_0219D3CC
	adds r1, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, r6]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B6362
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BDC64
	movs r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_021B6362:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B6308

	thumb_func_start FUN_021B6368
FUN_021B6368: ; 0x021B6368
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #5
	bls _021B6378
	b _021B64C6
_021B6378:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B6384: ; jump table
	.short _021B6390 - _021B6384 - 2 ; case 0
	.short _021B63E2 - _021B6384 - 2 ; case 1
	.short _021B641E - _021B6384 - 2 ; case 2
	.short _021B646A - _021B6384 - 2 ; case 3
	.short _021B64A0 - _021B6384 - 2 ; case 4
	.short _021B64AE - _021B6384 - 2 ; case 5
_021B6390:
	ldr r0, [r4, #0x50]
	add r1, sp, #8
	bl FUN_021D4C4C
	ldr r0, [sp, #8]
	ldrb r0, [r0]
	cmp r0, #0x1f
	beq _021B63DC
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x14
	movs r6, #1
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	bl FUN_021D0B64
	ldr r1, [sp, #8]
	adds r0, r4, #0
	ldrb r1, [r1]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0xff
	bl FUN_021D0B8C
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	str r6, [r5]
	b _021B64C6
_021B63DC:
	movs r0, #4
_021B63DE:
	str r0, [r5]
	b _021B64C6
_021B63E2:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	ldr r0, [r4, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B64C6
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #6
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #3
	movs r2, #7
	bl FUN_021D0B2C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r4, #0x80
	adds r1, #0x58
	adds r2, r4, #0
	movs r3, #1
	bl FUN_021D07D8
	movs r0, #2
_021B641C:
	b _021B63DE
_021B641E:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B64C6
	ldr r0, [r4, #0x54]
	add r1, sp, #4
	bl FUN_021D0868
	cmp r0, #0
	beq _021B64C6
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _021B6468
	movs r6, #0x66
	lsls r6, r6, #2
	adds r3, r6, #0
	adds r0, r4, r6
	subs r3, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	adds r3, r4, r3
	bl FUN_021B5DBC
	adds r0, r4, r6
	str r0, [sp]
	subs r6, #0xc
	ldr r0, [r4, #0x54]
	adds r1, r4, r6
	movs r2, #0
	movs r3, #0
	bl FUN_021CF360
	movs r0, #3
	b _021B641C
_021B6468:
	b _021B63DC
_021B646A:
	ldr r0, [r4, #0x54]
	bl FUN_021CF408
	cmp r0, #0
	beq _021B64C6
	movs r6, #0x66
	lsls r6, r6, #2
	adds r0, r4, r6
	bl FUN_021B64CC
	cmp r0, #0
	bne _021B649E
	adds r0, r4, r6
	bl FUN_021B64DC
	adds r2, r0, #0
	beq _021B649E
	cmp r2, #6
	bhs _021B649E
	subs r6, #0x6c
	adds r0, r4, r6
	movs r1, #0
	bl FUN_021BDBFC
	movs r0, #5
	b _021B641C
_021B649E:
	b _021B63DC
_021B64A0:
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r0, r4, r0
	bl FUN_021BDC9C
	movs r0, #5
	str r0, [r5]
_021B64AE:
	movs r0, #0x4b
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r4, #0
	adds r0, #0xe0
	str r1, [r0]
	movs r0, #4
	adds r4, #0xe4
	str r0, [r4]
	add sp, #0xc
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B64C6:
	movs r0, #0
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021B6368

	thumb_func_start FUN_021B64CC
FUN_021B64CC: ; 0x021B64CC
	bx pc
	nop
	thumb_func_end FUN_021B64CC
_021B64D0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B64DC
FUN_021B64DC: ; 0x021B64DC
	bx pc
	nop
	thumb_func_end FUN_021B64DC
_021B64E0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021B64EC
FUN_021B64EC: ; 0x021B64EC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x50]
	add r1, sp, #0
	bl FUN_021D4C4C
	adds r4, r0, #0
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _021B6508
	ldr r1, [sp]
	adds r2, r4, #0
	bl FUN_021D4630
_021B6508:
	adds r0, r5, #0
	adds r0, #0xa8
	ldr r0, [r0]
	cmp r0, #0
	beq _021B6524
	ldr r1, [sp]
	adds r2, r4, #0
	bl FUN_0219EF24
	ldr r0, [sp]
	bl FUN_021D4664
	ldr r1, _021B6528 ; =0x000001B6
	strb r0, [r5, r1]
_021B6524:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B6528: .word 0x000001B6
	thumb_func_end FUN_021B64EC

	thumb_func_start FUN_021B652C
FUN_021B652C: ; 0x021B652C
	push {r3, lr}
	ldr r2, [r0, #0x54]
	cmp r2, #0
	beq _021B653A
	bl FUN_021B6540
	pop {r3, pc}
_021B653A:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B652C

	thumb_func_start FUN_021B6540
FUN_021B6540: ; 0x021B6540
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #3
	bhi _021B6648
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B6558: ; jump table
	.short _021B6560 - _021B6558 - 2 ; case 0
	.short _021B661E - _021B6558 - 2 ; case 1
	.short _021B662C - _021B6558 - 2 ; case 2
	.short _021B6638 - _021B6558 - 2 ; case 3
_021B6560:
	ldr r0, _021B664C ; =0x000001BA
	ldrb r0, [r4, r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	beq _021B656E
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B656E:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0219C8F8
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_021B6654
	adds r7, r0, #0
	ldr r0, [r4]
	bl FUN_0219BF2C
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r4]
	adds r1, r7, #0
	bl FUN_0219CA88
	cmp r7, #0
	beq _021B65AE
	cmp r7, #1
	beq _021B65A0
	cmp r7, #2
	beq _021B65B8
	b _021B65C2
_021B65A0:
	movs r0, #0x31
	cmp r6, #0
	bne _021B65A8
	movs r0, #0x30
_021B65A8:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	b _021B65C6
_021B65AE:
	movs r0, #0x33
	cmp r6, #0
	bne _021B65B6
	movs r0, #0x32
_021B65B6:
	b _021B65A8
_021B65B8:
	movs r0, #0x35
	cmp r6, #0
	bne _021B65C0
	movs r0, #0x34
_021B65C0:
	b _021B65A8
_021B65C2:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B65C6:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	bl FUN_021D0B2C
	adds r0, r4, #0
	ldr r1, [sp]
	adds r0, #0x58
	bl FUN_021D0B64
	cmp r6, #0
	beq _021B65F0
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	bl FUN_021D0B64
_021B65F0:
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	cmp r7, #1
	bne _021B6612
	ldr r0, [r4]
	bl FUN_0219BF40
	ldr r1, _021B6650 ; =0x0000FFFF
	bl FUN_02005DF4
_021B660A:
	ldr r0, [r5]
	adds r0, r0, #1
_021B660E:
	str r0, [r5]
	b _021B6648
_021B6612:
	movs r0, #0x1e
	bl FUN_02005EA0
	ldr r0, [r5]
	adds r0, r0, #2
	b _021B660E
_021B661E:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6648
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B662C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6648
	b _021B660A
_021B6638:
	bl FUN_02005EC0
	cmp r0, #0
	bne _021B6648
	bl FUN_02005D8C
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6648:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B664C: .word 0x000001BA
_021B6650: .word 0x0000FFFF
	thumb_func_end FUN_021B6540

	thumb_func_start FUN_021B6654
FUN_021B6654: ; 0x021B6654
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #0x50]
	add r1, sp, #0
	bl FUN_021D4C4C
	ldr r1, [sp]
	ldrh r0, [r1, #2]
	cmp r0, #0
	beq _021B6670
	cmp r0, #1
	beq _021B6688
	b _021B66A0
_021B6670:
	ldrh r0, [r1]
	ldr r1, _021B66A8 ; =0x000001AE
	lsls r0, r0, #0x18
	ldrb r1, [r4, r1]
	lsrs r0, r0, #0x18
	bl FUN_0219C8D8
	cmp r0, #0
	bne _021B66A0
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021B6688:
	ldrh r0, [r1]
	ldr r1, _021B66A8 ; =0x000001AE
	lsls r0, r0, #0x18
	ldrb r1, [r4, r1]
	lsrs r0, r0, #0x18
	bl FUN_0219C8D8
	cmp r0, #0
	bne _021B66A0
	add sp, #4
	movs r0, #0
	pop {r3, r4, pc}
_021B66A0:
	ldr r0, [sp]
	ldrh r0, [r0, #2]
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021B66A8: .word 0x000001AE
	thumb_func_end FUN_021B6654

	thumb_func_start FUN_021B66AC
FUN_021B66AC: ; 0x021B66AC
	push {r3, lr}
	ldr r2, [r0, #0x54]
	cmp r2, #0
	beq _021B66BA
	bl FUN_021B66C0
	pop {r3, pc}
_021B66BA:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B66AC

	thumb_func_start FUN_021B66C0
FUN_021B66C0: ; 0x021B66C0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #0xd
	bls _021B66D0
	b _021B6AC2
_021B66D0:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B66DC: ; jump table
	.short _021B66F8 - _021B66DC - 2 ; case 0
	.short _021B6820 - _021B66DC - 2 ; case 1
	.short _021B6860 - _021B66DC - 2 ; case 2
	.short _021B6888 - _021B66DC - 2 ; case 3
	.short _021B68B4 - _021B66DC - 2 ; case 4
	.short _021B68F0 - _021B66DC - 2 ; case 5
	.short _021B6916 - _021B66DC - 2 ; case 6
	.short _021B6924 - _021B66DC - 2 ; case 7
	.short _021B6974 - _021B66DC - 2 ; case 8
	.short _021B69BE - _021B66DC - 2 ; case 9
	.short _021B6A02 - _021B66DC - 2 ; case 10
	.short _021B6A30 - _021B66DC - 2 ; case 11
	.short _021B6A56 - _021B66DC - 2 ; case 12
	.short _021B6AB2 - _021B66DC - 2 ; case 13
_021B66F8:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #0
	bne _021B67B8
	adds r0, r4, #0
	bl FUN_021B6654
	cmp r0, #1
	ldr r0, [r4]
	bne _021B6770
	bl FUN_0219BF40
	bl FUN_021E01A4
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0219C8F8
	adds r6, r0, #0
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r7, r0, #0
	cmp r6, r7
	bne _021B6742
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x2c
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	b _021B675E
_021B6742:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x2d
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
_021B675E:
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #1
_021B676E:
	b _021B696C
_021B6770:
	movs r1, #1
	lsls r1, r1, #8
	bl FUN_0219DB04
	cmp r0, #0
	bne _021B67B2
	ldr r0, [r4]
	bl FUN_0219C8A0
	adds r6, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x36
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #9
	b _021B676E
_021B67B2:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B67B8:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021B6800
	adds r0, r4, #0
	bl FUN_021B6654
	movs r6, #0x81
	lsls r6, r6, #2
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r4, r6
	bl FUN_021B97B4
	cmp r7, #1
	bne _021B67E6
	adds r0, r6, #0
	movs r1, #0
	subs r0, #0x40
	strb r1, [r4, r0]
	movs r0, #0x64
	b _021B67F0
_021B67E6:
	adds r0, r6, #0
	movs r1, #0
	subs r0, #0x40
	strb r1, [r4, r0]
	movs r0, #0x65
_021B67F0:
	subs r6, #0x47
	strb r0, [r4, r6]
	movs r0, #0xb
	str r0, [r5]
	ldr r0, [r4]
	bl FUN_021B9950
	b _021B6AC8
_021B6800:
	ldr r0, [r4]
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021B6868
	movs r6, #0x81
	lsls r6, r6, #2
	adds r0, r4, #0
	adds r1, r4, r6
	bl FUN_021B97B4
	movs r0, #0
	subs r6, #0x40
	strb r0, [r4, r6]
	movs r0, #0xc
	b _021B676E
_021B6820:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6868
	ldr r0, [r4]
	movs r1, #0
	movs r6, #0
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r1, #9
	movs r2, #0
	movs r3, #0
	str r6, [sp]
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	movs r0, #0x27
	lsls r0, r0, #4
	bl FUN_021DF308
	movs r0, #2
	b _021B676E
_021B6860:
	bl FUN_021DF828
	cmp r0, #0
	beq _021B686A
_021B6868:
	b _021B6AC8
_021B686A:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D95C
	adds r1, r0, #0
	ldr r0, [r4, #0x54]
	movs r2, #1
	bl FUN_021D02C8
	movs r0, #3
	b _021B676E
_021B6888:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B697E
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0219C8F8
	adds r6, r0, #0
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	cmp r6, r0
	beq _021B68B2
	ldr r0, _021B6AD0 ; =0x00000271
	bl FUN_021DF308
	movs r0, #4
	b _021B676E
_021B68B2:
	b _021B6920
_021B68B4:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B697E
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r2, #0
	movs r1, #9
	movs r3, #0
	str r2, [sp]
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	movs r0, #0x27
	lsls r0, r0, #4
	bl FUN_021DF308
	movs r0, #5
	b _021B676E
_021B68F0:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B697E
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D95C
	adds r1, r0, #0
	ldr r0, [r4, #0x54]
	movs r2, #1
	bl FUN_021D02C8
	movs r0, #6
	b _021B676E
_021B6916:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B697E
_021B6920:
	movs r0, #7
	b _021B676E
_021B6924:
	ldr r0, [r4]
	bl FUN_0219CAB8
	adds r6, r0, #0
	beq _021B6960
	ldr r0, [r4]
	bl FUN_0219C8A0
	adds r7, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x3a
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
_021B6960:
	ldr r0, [r4]
	bl FUN_0219CB2C
	cmp r0, #0
	bne _021B6970
_021B696A:
	movs r0, #0xd
_021B696C:
	str r0, [r5]
	b _021B6AC8
_021B6970:
	movs r0, #8
	b _021B676E
_021B6974:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	bne _021B6980
_021B697E:
	b _021B6AC8
_021B6980:
	ldr r0, [r4]
	bl FUN_0219CB2C
	adds r6, r0, #0
	beq _021B69BC
	ldr r0, [r4]
	bl FUN_0219C8A0
	adds r7, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x3b
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
_021B69BC:
	b _021B696A
_021B69BE:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6AC8
	ldr r0, [r4]
	bl FUN_0219CB60
	adds r6, r0, #0
	beq _021B69FE
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x38
	bl FUN_021D0B2C
	ldr r1, _021B6AD4 ; =0x000001AE
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
_021B69FE:
	movs r0, #0xa
	b _021B676E
_021B6A02:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6AC8
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x39
	bl FUN_021D0B2C
	ldr r1, _021B6AD4 ; =0x000001AE
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	b _021B696A
_021B6A30:
	bl FUN_021B28A4
	cmp r0, #0
	beq _021B6AC8
	ldr r0, [r4]
	bl FUN_0219E34C
	movs r5, #0x81
	lsls r5, r5, #2
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r4, r5
	bl FUN_021B9878
	subs r5, #0xd4
	str r0, [r6, r5]
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6A56:
	bl FUN_021B3140
	cmp r0, #0
	beq _021B6AC8
	ldr r0, [r4]
	bl FUN_0219E34C
	adds r7, r0, #0
	ldr r0, [r4]
	bl FUN_0219E3DC
	adds r6, r0, #0
	ldr r0, [r4]
	bl FUN_0219CA20
	movs r5, #0x71
	lsls r5, r5, #2
	subs r2, r5, #7
	adds r3, r0, #0
	ldrb r2, [r4, r2]
	adds r0, r6, #0
	adds r1, r4, r5
	bl FUN_021B2578
	str r0, [sp, #4]
	ldr r2, [sp, #4]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021B2788
	ldr r2, [sp, #4]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021B2740
	adds r1, r5, #0
	adds r1, #0x40
	adds r0, r4, #0
	adds r1, r4, r1
	bl FUN_021B9878
	subs r5, #0x94
	str r0, [r7, r5]
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6AB2:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6AC8
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6AC2:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6AC8:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B6AD0: .word 0x00000271
_021B6AD4: .word 0x000001AE
	thumb_func_end FUN_021B66C0

	thumb_func_start FUN_021B6AD8
FUN_021B6AD8: ; 0x021B6AD8
	push {r3, lr}
	ldr r2, [r0, #0x54]
	cmp r2, #0
	beq _021B6AE6
	bl FUN_021B6AEC
	pop {r3, pc}
_021B6AE6:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B6AD8

	thumb_func_start FUN_021B6AEC
FUN_021B6AEC: ; 0x021B6AEC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #5
	bls _021B6AFA
	b _021B6C3A
_021B6AFA:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021B6B06: ; jump table
	.short _021B6B12 - _021B6B06 - 2 ; case 0
	.short _021B6B86 - _021B6B06 - 2 ; case 1
	.short _021B6B9A - _021B6B06 - 2 ; case 2
	.short _021B6BCA - _021B6B06 - 2 ; case 3
	.short _021B6C1A - _021B6B06 - 2 ; case 4
	.short _021B6C2C - _021B6B06 - 2 ; case 5
_021B6B12:
	ldr r1, _021B6C40 ; =0x000001BA
	ldrb r1, [r4, r1]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	beq _021B6B20
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6B20:
	bl FUN_021B6654
	adds r6, r0, #0
	ldr r0, [r4]
	adds r1, r6, #0
	bl FUN_0219CA88
	cmp r6, #1
	bne _021B6B3C
	ldr r0, [r4]
	bl FUN_0219BF40
	bl FUN_021E01A4
_021B6B3C:
	cmp r6, #1
	bhi _021B6B82
	ldr r0, [r4]
	movs r1, #0
	movs r7, #0
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r1, #9
	movs r2, #0
	movs r3, #0
	str r7, [sp]
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	movs r7, #1
	bl FUN_021E81FC
	movs r0, #0x27
	lsls r0, r0, #4
	bl FUN_021DF308
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021B6C48
	str r7, [r5]
	b _021B6C3A
_021B6B82:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6B86:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B6C3A
	ldr r0, [r4, #0x54]
	bl FUN_021D0218
	movs r0, #2
_021B6B96:
	str r0, [r5]
	b _021B6C3A
_021B6B9A:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6C3A
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0219C8F8
	adds r6, r0, #0
	ldr r0, [r4]
	movs r1, #1
	movs r4, #1
	bl FUN_0219C8F8
	cmp r6, r0
	bne _021B6BC0
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B6BC0:
	ldr r0, _021B6C44 ; =0x00000271
	bl FUN_021DF308
	movs r0, #3
	b _021B6B96
_021B6BCA:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B6C3A
	adds r0, r4, #0
	bl FUN_021B6654
	adds r6, r0, #0
	ldr r0, [r4]
	movs r1, #1
	bl FUN_0219C8F8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	movs r1, #9
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	bl FUN_021E00AC
	movs r1, #9
	movs r2, #1
	bl FUN_021E81FC
	movs r0, #0x27
	lsls r0, r0, #4
	bl FUN_021DF308
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021B6C48
	movs r0, #4
	b _021B6B96
_021B6C1A:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B6C3A
	ldr r0, [r4, #0x54]
	bl FUN_021D0218
	movs r0, #5
	b _021B6B96
_021B6C2C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6C3A
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6C3A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B6C40: .word 0x000001BA
_021B6C44: .word 0x00000271
	thumb_func_end FUN_021B6AEC

	thumb_func_start FUN_021B6C48
FUN_021B6C48: ; 0x021B6C48
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	adds r1, r2, #0
	bl FUN_0219C8F8
	adds r7, r0, #0
	ldr r0, [r5]
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_0219D984
	adds r6, r0, #0
	beq _021B6C96
	bl FUN_02029DA0
	cmp r0, #0
	beq _021B6C96
	ldr r1, _021B6CD0 ; =0x000001A2
	adds r0, r6, #0
	ldrh r2, [r5, r1]
	ldr r1, _021B6CD4 ; =0x00007FFF
	ands r2, r1
	adds r1, r1, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_02029CAC
	adds r4, r0, #0
	ldr r0, [r5, #0x54]
	adds r1, r4, #0
	bl FUN_021D01FC
	adds r0, r4, #0
	bl FUN_02048590
	pop {r3, r4, r5, r6, r7, pc}
_021B6C96:
	ldr r0, [r5]
	adds r1, r7, #0
	bl FUN_0219D95C
	adds r6, r0, #0
	beq _021B6CCC
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #7
	movs r2, #0
	bl FUN_021D0B2C
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r4, #0
	bl FUN_021D0B64
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D0208
_021B6CCC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B6CD0: .word 0x000001A2
_021B6CD4: .word 0x00007FFF
	thumb_func_end FUN_021B6C48

	thumb_func_start FUN_021B6CD8
FUN_021B6CD8: ; 0x021B6CD8
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B6CEA
	cmp r0, #1
	beq _021B6D3A
	b _021B6D48
_021B6CEA:
	movs r1, #2
	ldr r0, [r5]
	lsls r1, r1, #8
	bl FUN_0219DB04
	cmp r0, #0
	bne _021B6D34
	ldr r0, [r5]
	bl FUN_0219CB2C
	adds r6, r0, #0
	beq _021B6D34
	ldr r0, [r5]
	bl FUN_0219C8A0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x3b
	bl FUN_021D0B2C
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	adds r1, r5, #0
	ldr r0, [r5, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
_021B6D34:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
_021B6D3A:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6D48
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B6D48:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B6CD8

	thumb_func_start FUN_021B6D4C
FUN_021B6D4C: ; 0x021B6D4C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #3
	bhi _021B6DF8
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B6D64: ; jump table
	.short _021B6D6C - _021B6D64 - 2 ; case 0
	.short _021B6D96 - _021B6D64 - 2 ; case 1
	.short _021B6DD8 - _021B6D64 - 2 ; case 2
	.short _021B6DEC - _021B6D64 - 2 ; case 3
_021B6D6C:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x36
_021B6D74:
	bl FUN_021D0B2C
	ldr r1, _021B6E00 ; =0x000001AE
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
_021B6D8E:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B6DFC
_021B6D96:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6DFC
	ldr r0, [r4]
	bl FUN_0219CB60
	adds r6, r0, #0
	beq _021B6DD6
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x37
	bl FUN_021D0B2C
	ldr r1, _021B6E00 ; =0x000001AE
	adds r0, r4, #0
	ldrb r1, [r4, r1]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r6, #0
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
_021B6DD6:
	b _021B6D8E
_021B6DD8:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6DFC
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x39
	b _021B6D74
_021B6DEC:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6DFC
	b _021B6D8E
_021B6DF8:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B6DFC:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B6E00: .word 0x000001AE
	thumb_func_end FUN_021B6D4C

	thumb_func_start FUN_021B6E04
FUN_021B6E04: ; 0x021B6E04
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B6E1A
	cmp r0, #1
	beq _021B6E38
	cmp r0, #2
	beq _021B6E44
	b _021B6E48
_021B6E1A:
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0xb7
	bl FUN_021D0B2C
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D022C
_021B6E30:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B6E48
_021B6E38:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B6E48
	b _021B6E30
_021B6E44:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B6E48:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B6E04

	thumb_func_start FUN_021B6E4C
FUN_021B6E4C: ; 0x021B6E4C
	push {r3, lr}
	ldr r2, [r0, #0x54]
	cmp r2, #0
	beq _021B6E5A
	bl FUN_021B6E60
	pop {r3, pc}
_021B6E5A:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B6E4C

	thumb_func_start FUN_021B6E60
FUN_021B6E60: ; 0x021B6E60
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r5, r1, #0
_021B6E68:
	ldr r0, [r5]
	cmp r0, #4
	bls _021B6E70
	b _021B6FAE
_021B6E70:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B6E7C: ; jump table
	.short _021B6E86 - _021B6E7C - 2 ; case 0
	.short _021B6F0C - _021B6E7C - 2 ; case 1
	.short _021B6F3C - _021B6E7C - 2 ; case 2
	.short _021B6F8A - _021B6E7C - 2 ; case 3
	.short _021B6FA8 - _021B6E7C - 2 ; case 4
_021B6E86:
	ldr r0, [r4, #0x50]
	add r1, sp, #8
	bl FUN_021D4C4C
	str r0, [sp, #4]
	adds r0, r4, #0
	adds r0, #0xa8
	ldr r0, [r0]
	cmp r0, #0
	beq _021B6ED0
	ldr r6, _021B6FB4 ; =0x000001B6
	ldrb r1, [r4, r6]
	cmp r1, #0
	beq _021B6ED0
	adds r2, r6, #4
	ldrb r2, [r4, r2]
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x1f
	beq _021B6ED0
	ldr r2, [sp, #8]
	ldr r3, [sp, #4]
	bl FUN_0219EFB4
	cmp r0, #0
	beq _021B6ECA
	ldr r0, [r4]
	bl FUN_0219CAA0
	adds r0, r6, #4
	ldrb r1, [r4, r0]
	movs r0, #8
	bics r1, r0
	adds r0, r6, #4
	strb r1, [r4, r0]
_021B6ECA:
	ldr r0, _021B6FB4 ; =0x000001B6
	movs r1, #0
	strb r1, [r4, r0]
_021B6ED0:
	ldr r0, [sp, #4]
	movs r7, #0x4f
	lsls r7, r7, #2
	lsls r0, r0, #0x10
	ldr r6, [r4, r7]
	lsrs r0, r0, #0x10
	str r0, [sp]
	adds r1, r6, #0
	ldr r0, [sp, #8]
	ldr r2, [sp]
	adds r1, #8
	blx FUN_02078698
	ldr r0, [sp]
	adds r1, r7, #0
	str r0, [r6]
	movs r0, #0
	str r0, [r6, #4]
	adds r1, #0x75
	ldrb r1, [r4, r1]
	cmp r1, #0
	beq _021B6F06
	adds r7, #0x75
	strb r0, [r4, r7]
	ldr r0, [r4, #0x54]
	bl FUN_021D043C
_021B6F06:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_021B6F0C:
	movs r0, #0x4f
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	cmp r1, r0
	bne _021B6F24
	movs r0, #4
	str r0, [r5]
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B6F24:
	adds r0, r4, #0
	adds r0, #0x18
	bl FUN_021B93A0
	cmp r0, #0
	beq _021B6F36
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B6F36:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_021B6F3C:
	movs r6, #0x4f
	lsls r6, r6, #2
	adds r1, r6, #4
	ldr r0, [r4, r6]
	adds r1, r4, r1
	bl FUN_021B15A4
	adds r6, #0x44
	str r0, [r4, r6]
	cmp r0, #0x5e
	bne _021B6F58
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B6F58:
	ldr r3, _021B6FB8 ; =0x021D71A0
	movs r1, #0
_021B6F5C:
	lsls r2, r1, #3
	ldr r2, [r3, r2]
	cmp r0, r2
	beq _021B6F6A
	adds r1, r1, #1
	cmp r1, #0x5d
	blo _021B6F5C
_021B6F6A:
	cmp r1, #0x5d
	bne _021B6F70
	b _021B6FA2
_021B6F70:
	ldr r0, _021B6FB8 ; =0x021D71A0
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r0, #4]
	movs r0, #0x61
	lsls r0, r0, #2
	str r1, [r4, r0]
	movs r1, #0
	adds r0, r0, #4
	str r1, [r4, r0]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
_021B6F8A:
	movs r3, #0x62
	lsls r3, r3, #2
	adds r2, r3, #0
	adds r1, r4, r3
	subs r3, r3, #4
	subs r2, #0x48
	ldr r3, [r4, r3]
	adds r0, r4, #0
	adds r2, r4, r2
	blx r3
	cmp r0, #0
	beq _021B6FAE
_021B6FA2:
	movs r0, #1
	str r0, [r5]
	b _021B6E68
_021B6FA8:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B6FAE:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021B6FB4: .word 0x000001B6
_021B6FB8: .word 0x021D71A0
	thumb_func_end FUN_021B6E60

	thumb_func_start FUN_021B6FBC
FUN_021B6FBC: ; 0x021B6FBC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B6FD2
	cmp r1, #1
	beq _021B7016
	b _021B7026
_021B6FD2:
	ldr r1, [r6]
	add r2, sp, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021B702C
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	bl FUN_021D0B2C
	ldr r0, [sp]
	cmp r0, #0
	beq _021B6FFA
	adds r0, r5, #0
	ldr r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
_021B6FFA:
	adds r0, r5, #0
	ldr r1, [r6, #4]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D022C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7026
_021B7016:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7026
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B7026:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021B6FBC

	thumb_func_start FUN_021B702C
FUN_021B702C: ; 0x021B702C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _021B7094 ; =0x000001AE
	ldrb r0, [r4, r0]
	cmp r1, r0
	bne _021B707E
	movs r0, #0
	str r0, [r2]
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #0
	bne _021B707A
	ldr r0, [r4]
	bl FUN_0219BF24
	cmp r0, #0
	bne _021B707A
	adds r0, r4, #0
	bl FUN_021B1F40
	cmp r0, #0x4b
	blo _021B705E
	movs r0, #0x1d
	pop {r4, pc}
_021B705E:
	cmp r0, #0x32
	bls _021B7066
	movs r0, #0x1c
	pop {r4, pc}
_021B7066:
	cmp r0, #0x19
	bls _021B706E
	movs r0, #0x1b
	pop {r4, pc}
_021B706E:
	cmp r0, #0
	beq _021B7076
	movs r0, #0x1a
	pop {r4, pc}
_021B7076:
	movs r0, #0x19
	pop {r4, pc}
_021B707A:
	movs r0, #0x1a
	pop {r4, pc}
_021B707E:
	movs r0, #1
	str r0, [r2]
	ldr r0, [r4]
	bl FUN_0219D8C8
	cmp r0, #0
	beq _021B7090
	movs r0, #0x1e
	pop {r4, pc}
_021B7090:
	movs r0, #0x1f
	pop {r4, pc}
	.align 2, 0
_021B7094: .word 0x000001AE
	thumb_func_end FUN_021B702C

	thumb_func_start FUN_021B7098
FUN_021B7098: ; 0x021B7098
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B70AC
	cmp r0, #1
	beq _021B70CE
	b _021B70DC
_021B70AC:
	ldr r1, [r6]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	ldr r2, [r6, #4]
	adds r1, r0, #0
	lsls r2, r2, #0x10
	ldr r0, [r5, #0x54]
	lsrs r2, r2, #0x10
	bl FUN_021D0058
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B70DC
_021B70CE:
	ldr r0, [r5, #0x54]
	bl FUN_021D0078
	cmp r0, #0
	beq _021B70DC
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B70DC:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B7098

	thumb_func_start FUN_021B70E0
FUN_021B70E0: ; 0x021B70E0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r2]
	adds r6, r1, #0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [r2, #4]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [r6]
	cmp r0, #0
	beq _021B7108
	cmp r0, #1
	beq _021B71A0
	cmp r0, #2
	beq _021B71C2
	b _021B71F0
_021B7108:
	cmp r1, #0
	beq _021B7198
	ldr r0, [r5, #4]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0219D23C
	bl FUN_021BAC80
	ldr r1, _021B71F4 ; =0x000001AE
	adds r7, r0, #0
	ldrb r1, [r5, r1]
	ldr r0, [r5]
	adds r2, r4, #0
	bl FUN_0219C594
	cmp r0, #0
	bne _021B714A
	ldr r0, _021B71F4 ; =0x000001AE
	ldrb r0, [r5, r0]
	cmp r0, r4
	bne _021B7148
	adds r0, r5, #0
	bl FUN_021B71F8
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	bl FUN_021D0B2C
_021B7146:
	b _021B7184
_021B7148:
	b _021B716E
_021B714A:
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _021B716E
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0xe
	bl FUN_021D0B2C
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r4, #0
	bl FUN_021D0B64
	b _021B7146
_021B716E:
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x11
	bl FUN_021D0B2C
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r4, #0
	bl FUN_021D0B64
_021B7184:
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D022C
_021B7198:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021B71F0
_021B71A0:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B71F0
	ldr r0, [r5]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0219C498
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021D0088
	b _021B7198
_021B71C2:
	ldr r0, [r5, #0x54]
	bl FUN_021D00C4
	cmp r0, #0
	beq _021B71F0
	adds r0, r5, #0
	bl FUN_021B1F24
	ldr r0, [r5]
	bl FUN_0219C8A0
	cmp r4, r0
	bne _021B71EC
	movs r2, #0x71
	lsls r2, r2, #2
	adds r1, r5, r2
	subs r2, #0xa4
	ldr r2, [r5, r2]
	adds r0, r5, #0
	bl FUN_021B9730
_021B71EC:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B71F0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B71F4: .word 0x000001AE
	thumb_func_end FUN_021B70E0

	thumb_func_start FUN_021B71F8
FUN_021B71F8: ; 0x021B71F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219BDC0
	cmp r0, #0
	bne _021B7264
	ldr r1, _021B7268 ; =0x000001AE
	ldr r0, [r4]
	ldrb r1, [r4, r1]
	movs r2, #0
	bl FUN_0219C910
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [r4, #4]
	movs r2, #0
	bl FUN_0219D23C
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021B722C
	movs r0, #0xb
	pop {r4, pc}
_021B722C:
	adds r0, r4, #0
	bl FUN_021BB484
	ldr r1, _021B726C ; =0x0004D800
	cmp r0, r1
	blt _021B723C
	movs r0, #0xb
	pop {r4, pc}
_021B723C:
	movs r1, #0x37
	lsls r1, r1, #0xc
	cmp r0, r1
	blt _021B7248
	movs r0, #0x15
	pop {r4, pc}
_021B7248:
	movs r1, #0x82
	lsls r1, r1, #0xa
	cmp r0, r1
	blt _021B7254
	movs r0, #0x16
	pop {r4, pc}
_021B7254:
	movs r1, #0xa
	lsls r1, r1, #0xc
	cmp r0, r1
	blt _021B7260
	movs r0, #0x17
	pop {r4, pc}
_021B7260:
	movs r0, #0x18
	pop {r4, pc}
_021B7264:
	movs r0, #0xb
	pop {r4, pc}
	.align 2, 0
_021B7268: .word 0x000001AE
_021B726C: .word 0x0004D800
	thumb_func_end FUN_021B71F8

	thumb_func_start FUN_021B7270
FUN_021B7270: ; 0x021B7270
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B7284
	cmp r1, #1
	beq _021B72A6
	b _021B72B4
_021B7284:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7290
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7290:
	ldr r1, [r6]
	ldr r0, [r5, #0x54]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r6, #4
	bl FUN_021D0290
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B72B4
_021B72A6:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B72B4
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B72B4:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B7270

	thumb_func_start FUN_021B72B8
FUN_021B72B8: ; 0x021B72B8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B72CC
	cmp r1, #1
	beq _021B72F0
	b _021B730E
_021B72CC:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B72D8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B72D8:
	ldr r1, [r6]
	adds r6, #8
	lsls r1, r1, #0x10
	ldr r0, [r5, #0x54]
	lsrs r1, r1, #0x10
	adds r2, r6, #0
	bl FUN_021D0290
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B730E
_021B72F0:
	ldr r0, [r5, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B7300
	ldr r0, [r6, #4]
	bl FUN_02006254
_021B7300:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B730E
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B730E:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B72B8

	thumb_func_start FUN_021B7314
FUN_021B7314: ; 0x021B7314
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B7328
	cmp r1, #1
	beq _021B734A
	b _021B7358
_021B7328:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7334
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7334:
	ldr r1, [r6]
	ldr r0, [r5, #0x54]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r6, #4
	bl FUN_021D02AC
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7358
_021B734A:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7358
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7358:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B7314

	thumb_func_start FUN_021B735C
FUN_021B735C: ; 0x021B735C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B7370
	cmp r1, #1
	beq _021B7394
	b _021B73B2
_021B7370:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B737C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B737C:
	ldr r1, [r6]
	adds r6, #8
	lsls r1, r1, #0x10
	ldr r0, [r5, #0x54]
	lsrs r1, r1, #0x10
	adds r2, r6, #0
	bl FUN_021D02AC
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B73B2
_021B7394:
	ldr r0, [r5, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B73A4
	ldr r0, [r6, #4]
	bl FUN_02006254
_021B73A4:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B73B2
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B73B2:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B735C

	thumb_func_start FUN_021B73B8
FUN_021B73B8: ; 0x021B73B8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B73CC
	cmp r1, #1
	beq _021B73F2
	b _021B7400
_021B73CC:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B73D8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B73D8:
	ldr r1, [r6]
	ldr r2, [r6, #4]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x10
	ldr r0, [r5, #0x54]
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x10
	bl FUN_021D030C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7400
_021B73F2:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7400
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7400:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B73B8

	thumb_func_start FUN_021B7404
FUN_021B7404: ; 0x021B7404
	push {r4, lr}
	adds r4, r1, #0
	cmp r4, #0xae
	beq _021B7416
	adds r0, r4, #0
	movs r1, #0x1b
	bl FUN_020212AC
	pop {r4, pc}
_021B7416:
	ldr r0, [r0, #4]
	adds r1, r2, #0
	bl FUN_0219D1C8
	cmp r0, #0
	beq _021B7428
	bl FUN_021BD910
	pop {r4, pc}
_021B7428:
	adds r0, r4, #0
	movs r1, #0x1b
	bl FUN_020212AC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B7404

	thumb_func_start FUN_021B7434
FUN_021B7434: ; 0x021B7434
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r1, #0
	ldr r1, [r6]
	adds r5, r0, #0
	adds r4, r2, #0
	cmp r1, #0
	beq _021B744A
	cmp r1, #1
	beq _021B74AA
	b _021B74BA
_021B744A:
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7458
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B7458:
	ldr r0, [r5]
	bl FUN_0219BDC8
	cmp r0, #0
	beq _021B74A4
	ldr r0, [r4]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r4, #4]
	adds r2, r7, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	ldr r0, [r4, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x10]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	bl FUN_021B7404
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [r5, #0x54]
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r1, r7, #0
	bl FUN_021CFCA0
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021B74BA
_021B74A4:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B74AA:
	ldr r0, [r5, #0x54]
	bl FUN_021CFCE4
	cmp r0, #0
	beq _021B74BA
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B74BA:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B7434

	thumb_func_start FUN_021B74C0
FUN_021B74C0: ; 0x021B74C0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B74D4
	cmp r0, #1
	beq _021B74FC
	b _021B750C
_021B74D4:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C66C
	adds r1, r0, #0
	ldr r0, [r6, #4]
	movs r2, #1
	cmp r0, #0
	bne _021B74EE
	movs r2, #0
_021B74EE:
	ldr r0, [r5, #0x54]
	bl FUN_021CFF54
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B750C
_021B74FC:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B7508
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7508:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B750C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B74C0

	thumb_func_start FUN_021B7510
FUN_021B7510: ; 0x021B7510
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B7524
	cmp r0, #1
	beq _021B754E
	b _021B755C
_021B7524:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	ldr r1, [r6, #8]
	ldr r3, [r6, #4]
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r5, #0x54]
	lsrs r1, r1, #0x10
	lsrs r3, r3, #0x18
	bl FUN_021CFCF4
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B755C
_021B754E:
	ldr r0, [r5, #0x54]
	bl FUN_021CFD20
	cmp r0, #0
	beq _021B755C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B755C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B7510

	thumb_func_start FUN_021B7560
FUN_021B7560: ; 0x021B7560
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r0, [r1]
	str r1, [sp, #4]
	cmp r0, #0
	beq _021B7574
	cmp r0, #1
	beq _021B75C0
	b _021B75D0
_021B7574:
	ldr r0, [r2]
	movs r4, #0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, [r2, #4]
	str r0, [sp, #0xc]
	ldr r0, [r2, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	cmp r6, #0
	ble _021B75A4
	add r7, sp, #0x10
_021B758E:
	movs r0, #0x4f
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	bl FUN_021B1608
	strb r0, [r7, r4]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blt _021B758E
_021B75A4:
	ldr r0, [sp, #8]
	ldr r2, [sp, #0xc]
	str r0, [sp]
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	add r3, sp, #0x10
	bl FUN_021CFE80
	ldr r0, [sp, #4]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [r0]
	b _021B75D0
_021B75C0:
	ldr r0, [r5, #0x54]
	bl FUN_021CFEBC
	cmp r0, #0
	beq _021B75D0
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B75D0:
	movs r0, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B7560

	thumb_func_start FUN_021B75D8
FUN_021B75D8: ; 0x021B75D8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B75F0
	cmp r0, #1
	beq _021B760E
	cmp r0, #2
	beq _021B7624
	b _021B7632
_021B75F0:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021CFF84
_021B7606:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7632
_021B760E:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFA0
	cmp r0, #0
	beq _021B7632
	ldr r0, [r5, #0x54]
	movs r1, #0x61
	adds r2, r6, #0
	bl FUN_021D0290
	b _021B7606
_021B7624:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7632
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7632:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B75D8

	thumb_func_start FUN_021B7638
FUN_021B7638: ; 0x021B7638
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B764C
	cmp r0, #1
	beq _021B7672
	b _021B7676
_021B764C:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5]
	bl FUN_0219C71C
	adds r1, r0, #0
	ldr r0, [r6, #4]
	bl FUN_021DFBE8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7676
_021B7672:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7676:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B7638

	thumb_func_start FUN_021B767C
FUN_021B767C: ; 0x021B767C
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B7696
	cmp r1, #1
	beq _021B76D2
	cmp r1, #2
	beq _021B770A
	b _021B771A
_021B7696:
	bl FUN_021B19D0
	cmp r0, #0
	bne _021B76CA
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r6, r0, #0
	movs r0, #1
	movs r1, #0x1b
	bl FUN_020212AC
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021CFCA0
_021B76CA:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B771A
_021B76D2:
	ldr r0, [r5, #0x54]
	bl FUN_021CFCE4
	cmp r0, #0
	beq _021B771A
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	bne _021B76FC
	ldr r0, _021B7720 ; =0x00000564
	bl FUN_02006254
_021B76FC:
	ldr r0, [r5, #0x54]
	movs r1, #1
	adds r2, r6, #0
	movs r3, #1
	bl FUN_021CFCF4
	b _021B76CA
_021B770A:
	ldr r0, [r5, #0x54]
	bl FUN_021CFD20
	cmp r0, #0
	beq _021B771A
	add sp, #0xc
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B771A:
	movs r0, #0
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_021B7720: .word 0x00000564
	thumb_func_end FUN_021B767C

	thumb_func_start FUN_021B7724
FUN_021B7724: ; 0x021B7724
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B7738
	cmp r0, #1
	beq _021B776A
	b _021B7788
_021B7738:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021D000C
	ldr r1, [r6]
	ldr r0, [r5, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D25C
	bl FUN_021BAC84
	ldr r1, _021B778C ; =0x000001EA
	strh r0, [r5, r1]
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7788
_021B776A:
	ldr r0, [r5, #0x54]
	bl FUN_021D0028
	cmp r0, #0
	beq _021B7788
	ldr r1, [r6]
	ldr r0, [r5, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BBCAC
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7788:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B778C: .word 0x000001EA
	thumb_func_end FUN_021B7724

	thumb_func_start FUN_021B7790
FUN_021B7790: ; 0x021B7790
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B77A2
	cmp r0, #1
	beq _021B77C0
	b _021B77CE
_021B77A2:
	ldr r2, [r2]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021D0038
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B77CE
_021B77C0:
	ldr r0, [r5, #0x54]
	bl FUN_021D0048
	cmp r0, #0
	beq _021B77CE
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B77CE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B7790

	thumb_func_start FUN_021B77D4
FUN_021B77D4: ; 0x021B77D4
	push {r4, r5, r6, lr}
	ldr r2, [r2]
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5]
	bl FUN_0219C71C
	adds r6, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B77FE
	cmp r0, #1
	beq _021B782A
	b _021B783A
_021B77FE:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B780C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B780C:
	ldr r0, [r5]
	bl FUN_0219BDC8
	cmp r0, #0
	bne _021B781A
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B781A:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D03E0
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B783A
_021B782A:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0400
	cmp r0, #0
	beq _021B783A
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B783A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B77D4

	thumb_func_start FUN_021B7840
FUN_021B7840: ; 0x021B7840
	push {r4, r5, r6, lr}
	ldr r2, [r2]
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5]
	bl FUN_0219C71C
	adds r6, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B786A
	cmp r0, #1
	beq _021B7896
	b _021B78A6
_021B786A:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7878
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7878:
	ldr r0, [r5]
	bl FUN_0219BDC8
	cmp r0, #0
	bne _021B7886
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7886:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D03F0
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B78A6
_021B7896:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0400
	cmp r0, #0
	beq _021B78A6
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B78A6:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B7840

	thumb_func_start FUN_021B78AC
FUN_021B78AC: ; 0x021B78AC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, [r2]
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [r5]
	cmp r0, #0
	beq _021B78C8
	cmp r0, #1
	beq _021B78FA
	cmp r0, #2
	beq _021B7912
	b _021B7920
_021B78C8:
	ldr r2, [r2, #4]
	ldr r0, [r6, #0x34]
	lsls r2, r2, #0x10
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	bl FUN_021D5B2C
	adds r0, r6, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B78E4
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B78E4:
	cmp r4, #5
	bhs _021B78F2
	ldr r0, _021B7924 ; =0x021D6F4A
	lsls r1, r4, #2
	ldrh r0, [r0, r1]
	bl FUN_021DF308
_021B78F2:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B7920
_021B78FA:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B7920
	ldr r1, _021B7928 ; =0x021D6F48
	lsls r2, r4, #2
	ldrh r1, [r1, r2]
	ldr r0, [r6, #0x54]
	movs r2, #0
	bl FUN_021D0290
	b _021B78F2
_021B7912:
	ldr r0, [r6, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7920
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7920:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B7924: .word 0x021D6F4A
_021B7928: .word 0x021D6F48
	thumb_func_end FUN_021B78AC

	thumb_func_start FUN_021B792C
FUN_021B792C: ; 0x021B792C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021B793E
	cmp r0, #1
	beq _021B7982
	b _021B7996
_021B793E:
	ldr r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bhi _021B796E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B7954: ; jump table
	.short _021B796E - _021B7954 - 2 ; case 0
	.short _021B795E - _021B7954 - 2 ; case 1
	.short _021B7962 - _021B7954 - 2 ; case 2
	.short _021B796A - _021B7954 - 2 ; case 3
	.short _021B7966 - _021B7954 - 2 ; case 4
_021B795E:
	movs r1, #0x59
	b _021B7972
_021B7962:
	movs r1, #0x5a
	b _021B7972
_021B7966:
	movs r1, #0x5b
	b _021B7972
_021B796A:
	movs r1, #0x5c
	b _021B7972
_021B796E:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B7972:
	ldr r0, [r4, #0x54]
	movs r2, #0
	bl FUN_021D0290
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B7996
_021B7982:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B7996
	ldr r0, [r4, #0x34]
	bl FUN_021D5B34
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B7996:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B792C

	thumb_func_start FUN_021B799C
FUN_021B799C: ; 0x021B799C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B79AE
	cmp r0, #1
	beq _021B79CC
	b _021B79DA
_021B79AE:
	ldr r2, [r2]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021CFF84
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B79DA
_021B79CC:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFA0
	cmp r0, #0
	beq _021B79DA
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B79DA:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B799C

	thumb_func_start FUN_021B79E0
FUN_021B79E0: ; 0x021B79E0
	push {r4, r5, r6, lr}
	ldr r2, [r2]
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r6, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B7A02
	cmp r0, #1
	beq _021B7A2E
	b _021B7A3E
_021B7A02:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7A10
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7A10:
	ldr r0, [r5]
	bl FUN_0219BDC8
	cmp r0, #0
	bne _021B7A1E
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7A1E:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0450
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7A3E
_021B7A2E:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0468
	cmp r0, #0
	beq _021B7A3E
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7A3E:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B79E0

	thumb_func_start FUN_021B7A44
FUN_021B7A44: ; 0x021B7A44
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	adds r5, r0, #0
	ldr r0, [r6]
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, [r4]
	cmp r0, #0
	beq _021B7A5E
	cmp r0, #1
	beq _021B7A8A
	b _021B7A98
_021B7A5E:
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5, #0x54]
	bl FUN_021CFF84
	ldr r1, [r6]
	ldr r0, [r5, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D25C
	bl FUN_021BAC84
	ldr r1, _021B7A9C ; =0x000001EA
	strh r0, [r5, r1]
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7A98
_021B7A8A:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFA0
	cmp r0, #0
	beq _021B7A98
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7A98:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B7A9C: .word 0x000001EA
	thumb_func_end FUN_021B7A44

	thumb_func_start FUN_021B7AA0
FUN_021B7AA0: ; 0x021B7AA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B7AB4
	cmp r0, #1
	beq _021B7B1C
	b _021B7B2C
_021B7AB4:
	ldr r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [r2, #4]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r2, #8]
	adds r1, r7, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5]
	bl FUN_0219C698
	str r0, [sp, #0xc]
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0219C698
	str r0, [sp, #0x10]
	ldr r0, [r5]
	adds r1, r7, #0
	bl FUN_0219C71C
	adds r7, r0, #0
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0219C71C
	adds r6, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [sp, #8]
	bl FUN_0219D408
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x10]
	bl FUN_0219D544
	ldr r0, [sp, #0xc]
	adds r2, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x10]
	adds r3, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #8]
	bl FUN_021D051C
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7B2C
_021B7B1C:
	ldr r0, [r5, #0x54]
	bl FUN_021D0568
	cmp r0, #0
	beq _021B7B2C
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B7B2C:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B7AA0

	thumb_func_start FUN_021B7B34
FUN_021B7B34: ; 0x021B7B34
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	adds r6, r2, #0
	cmp r0, #3
	bhi _021B7C3C
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B7B50: ; jump table
	.short _021B7B58 - _021B7B50 - 2 ; case 0
	.short _021B7B60 - _021B7B50 - 2 ; case 1
	.short _021B7BCA - _021B7B50 - 2 ; case 2
	.short _021B7C2C - _021B7B50 - 2 ; case 3
_021B7B58:
	ldr r0, _021B7C44 ; =0x00000281
	bl FUN_021DF308
	b _021B7BC2
_021B7B60:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B7C3C
	ldr r0, [r6]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r6, #4]
	adds r1, r7, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r4]
	adds r2, r6, #0
	bl FUN_0219C498
	str r0, [sp, #8]
	ldr r0, [r4]
	adds r1, r7, #0
	movs r2, #1
	bl FUN_0219C498
	str r0, [sp, #0xc]
	ldr r0, [r4]
	ldr r1, [sp, #8]
	bl FUN_0219C71C
	str r0, [sp, #0x10]
	ldr r0, [r4]
	ldr r1, [sp, #0xc]
	bl FUN_0219C71C
	str r0, [sp, #0x14]
	ldr r0, [r4, #4]
	adds r1, r7, #0
	bl FUN_0219D408
	adds r1, r6, #0
	movs r2, #1
	bl FUN_0219D544
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [r4, #0x54]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x14]
	adds r1, r7, #0
_021B7BBE:
	bl FUN_021D051C
_021B7BC2:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B7C3C
_021B7BCA:
	ldr r0, [r4, #0x54]
	bl FUN_021D0568
	cmp r0, #0
	beq _021B7C3C
	ldr r0, [r6, #8]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r6, #0xc]
	adds r1, r7, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r4]
	adds r2, r6, #0
	bl FUN_0219C498
	str r0, [sp, #0x18]
	ldr r0, [r4]
	adds r1, r7, #0
	movs r2, #1
	bl FUN_0219C498
	str r0, [sp, #0x1c]
	ldr r0, [r4]
	ldr r1, [sp, #0x18]
	bl FUN_0219C71C
	str r0, [sp, #0x20]
	ldr r0, [r4]
	ldr r1, [sp, #0x1c]
	bl FUN_0219C71C
	str r0, [sp, #0x24]
	ldr r0, [r4, #4]
	adds r1, r7, #0
	bl FUN_0219D408
	adds r1, r6, #0
	movs r2, #1
	bl FUN_0219D544
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [r4, #0x54]
	adds r1, r7, #0
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	b _021B7BBE
_021B7C2C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0568
	cmp r0, #0
	beq _021B7C3C
	add sp, #0x28
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B7C3C:
	movs r0, #0
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B7C44: .word 0x00000281
	thumb_func_end FUN_021B7B34

	thumb_func_start FUN_021B7C48
FUN_021B7C48: ; 0x021B7C48
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	cmp r1, #0
	beq _021B7C58
	cmp r1, #1
	beq _021B7C70
	b _021B7C7C
_021B7C58:
	ldr r1, [r2]
	ldr r0, [r0]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	bl FUN_021DF808
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7C7C
_021B7C70:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B7C7C
	movs r0, #1
	pop {r4, pc}
_021B7C7C:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021B7C48

	thumb_func_start FUN_021B7C80
FUN_021B7C80: ; 0x021B7C80
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B7C92
	cmp r0, #1
	beq _021B7CBE
	b _021B7CDA
_021B7C92:
	ldr r1, [r2]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7CB0
	movs r0, #1
	bl FUN_021E02EC
_021B7CB0:
	adds r0, r6, #0
	bl FUN_021DF818
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7CDA
_021B7CBE:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B7CDA
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B7CD6
	movs r0, #0
	bl FUN_021E02EC
_021B7CD6:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B7CDA:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B7C80

	thumb_func_start FUN_021B7CE0
FUN_021B7CE0: ; 0x021B7CE0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	ldr r0, [r6]
	adds r4, r2, #0
	cmp r0, #0
	beq _021B7CF6
	cmp r0, #1
	beq _021B7D4C
	b _021B7D5C
_021B7CF6:
	ldr r1, [r4]
	ldr r0, [r5, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	adds r7, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r4]
	str r0, [sp]
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C66C
	ldr r2, [r4, #4]
	str r0, [sp, #4]
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C66C
	adds r4, r0, #0
	ldr r1, [sp]
	adds r0, r7, #0
	bl FUN_021BC490
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #4]
	adds r2, r4, #0
	bl FUN_021D04CC
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021B7D5C
_021B7D4C:
	ldr r0, [r5, #0x54]
	bl FUN_021D04EC
	cmp r0, #0
	beq _021B7D5C
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B7D5C:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B7CE0

	thumb_func_start FUN_021B7D64
FUN_021B7D64: ; 0x021B7D64
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	beq _021B7D78
	cmp r1, #1
	beq _021B7DB2
	b _021B7DC0
_021B7D78:
	bl FUN_021B19D0
	cmp r0, #0
	bne _021B7DAE
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r7, r0, #0
	ldr r0, [r6, #4]
	bl FUN_021BD328
	ldr r1, [r6, #8]
	adds r3, r0, #0
	lsls r1, r1, #0x10
	ldr r0, [r5, #0x54]
	lsrs r1, r1, #0x10
	adds r2, r7, #0
	bl FUN_021CFDB8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7DC0
_021B7DAE:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B7DB2:
	ldr r0, [r5, #0x54]
	bl FUN_021CFDF0
	cmp r0, #0
	beq _021B7DC0
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B7DC0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B7D64

	thumb_func_start FUN_021B7DC4
FUN_021B7DC4: ; 0x021B7DC4
	push {r3, lr}
	ldr r0, [r2]
	bl FUN_021E01A4
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021B7DC4

	thumb_func_start FUN_021B7DD0
FUN_021B7DD0: ; 0x021B7DD0
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	cmp r1, #0
	beq _021B7DE0
	cmp r1, #1
	beq _021B7DEE
	b _021B7DFC
_021B7DE0:
	ldr r0, [r0, #0x54]
	bl FUN_021D04FC
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B7DFC
_021B7DEE:
	ldr r0, [r0, #0x54]
	bl FUN_021D050C
	cmp r0, #0
	beq _021B7DFC
	movs r0, #1
	pop {r4, pc}
_021B7DFC:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021B7DD0

	thumb_func_start FUN_021B7E00
FUN_021B7E00: ; 0x021B7E00
	push {r3, r4, r5, r6, r7, lr}
	adds r1, r2, #0
	ldr r1, [r1]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r2, [sp]
	bl FUN_0219D250
	bl FUN_021BB084
	adds r4, r0, #0
	movs r5, #0
_021B7E1A:
	ldr r0, [sp]
	lsls r1, r5, #2
	adds r6, r0, r1
	ldr r0, [r6, #4]
	cmp r0, #0
	beq _021B7E48
	ldr r0, _021B7E54 ; =0x021D6F0E
	lsls r1, r5, #1
	ldrh r7, [r0, r1]
	adds r0, r4, #0
	movs r2, #0
	adds r1, r7, #0
	bl FUN_0201CD24
	ldr r1, [r6, #4]
	adds r2, r1, r0
	cmp r2, #0xff
	bls _021B7E40
	movs r2, #0xff
_021B7E40:
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_0201CD48
_021B7E48:
	adds r5, r5, #1
	cmp r5, #6
	blo _021B7E1A
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B7E54: .word 0x021D6F0E
	thumb_func_end FUN_021B7E00

	thumb_func_start FUN_021B7E58
FUN_021B7E58: ; 0x021B7E58
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r2]
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	ldr r1, [sp, #8]
	str r2, [sp]
	bl FUN_0219D250
	adds r6, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [sp, #8]
	bl FUN_0219C66C
	adds r1, r0, #0
	movs r7, #0
	str r0, [sp, #4]
	cmp r1, #0xff
	beq _021B7E92
	bl FUN_021DFC1C
	cmp r0, #0
	beq _021B7E92
	movs r7, #1
_021B7E92:
	ldr r0, [r4]
	cmp r0, #0xd
	bhi _021B7F70
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B7EA4: ; jump table
	.short _021B7EC0 - _021B7EA4 - 2 ; case 0
	.short _021B7ED0 - _021B7EA4 - 2 ; case 1
	.short _021B7F14 - _021B7EA4 - 2 ; case 2
	.short _021B7F1E - _021B7EA4 - 2 ; case 3
	.short _021B7F48 - _021B7EA4 - 2 ; case 4
	.short _021B7F66 - _021B7EA4 - 2 ; case 5
	.short _021B7F76 - _021B7EA4 - 2 ; case 6
	.short _021B7FA6 - _021B7EA4 - 2 ; case 7
	.short _021B7FE8 - _021B7EA4 - 2 ; case 8
	.short _021B8022 - _021B7EA4 - 2 ; case 9
	.short _021B8048 - _021B7EA4 - 2 ; case 10
	.short _021B806E - _021B7EA4 - 2 ; case 11
	.short _021B8082 - _021B7EA4 - 2 ; case 12
	.short _021B8094 - _021B7EA4 - 2 ; case 13
_021B7EC0:
	ldr r0, [sp]
	ldr r1, [r0, #4]
	ldr r0, _021B80A8 ; =0x021DB084
	str r1, [r0, #4]
	movs r1, #0
	str r1, [r0, #8]
	movs r0, #1
	str r0, [r4]
_021B7ED0:
	ldr r5, _021B80A8 ; =0x021DB084
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _021B7F0E
	ldr r2, _021B80AC ; =0x021DB09C
	str r0, [sp, #0xc]
	adds r0, r6, #0
	add r1, sp, #0xc
	bl FUN_021BC1F8
	cmp r0, #0
	beq _021B7EEE
	movs r0, #3
	str r0, [r4]
	b _021B7F08
_021B7EEE:
	cmp r7, #0
	beq _021B7F00
	ldr r0, [sp, #4]
	ldr r1, [r5, #4]
	adds r2, r6, #0
	bl FUN_021DFB3C
	movs r0, #2
	b _021B7F02
_021B7F00:
	movs r0, #0xd
_021B7F02:
	str r0, [r4]
	movs r0, #0
	str r0, [sp, #0xc]
_021B7F08:
	ldr r0, [sp, #0xc]
	str r0, [r5, #4]
	b _021B80A2
_021B7F0E:
	movs r0, #0xd
_021B7F10:
	str r0, [r4]
	b _021B80A2
_021B7F14:
	bl FUN_021DFB98
	cmp r0, #0
	bne _021B7F70
	b _021B7F0E
_021B7F1E:
	adds r0, r6, #0
	bl FUN_021BC6E0
	movs r0, #9
	bl FUN_02038BF4
	adds r0, r6, #0
	bl FUN_021BC43C
	adds r0, r6, #0
	bl FUN_021BC6EC
	cmp r7, #0
	beq _021B7F46
	ldr r0, [sp, #4]
	adds r1, r6, #0
	bl FUN_021DFB68
	movs r0, #4
	b _021B7F10
_021B7F46:
	b _021B7F72
_021B7F48:
	bl FUN_021DFB98
	cmp r0, #0
	bne _021B7F70
	bl FUN_020062A8
	cmp r0, #0
	bne _021B7F70
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #4]
	ldr r2, _021B80B0 ; =0x0000025D
	bl FUN_021CFFB8
	movs r0, #5
	b _021B7F10
_021B7F66:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFD4
	cmp r0, #0
	bne _021B7F72
_021B7F70:
	b _021B80A2
_021B7F72:
	movs r0, #6
	b _021B7F10
_021B7F76:
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x3c
	bl FUN_021D0B2C
	adds r0, r5, #0
	ldr r1, [sp, #8]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r1, _021B80A8 ; =0x021DB084
	adds r0, r5, #0
	ldrb r1, [r1, #0x18]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D022C
	movs r0, #7
	b _021B7F10
_021B7FA6:
	ldr r0, [r5, #0x54]
	ldr r6, _021B80A8 ; =0x021DB084
	bl FUN_021D0338
	cmp r0, #0
	beq _021B7FC4
	movs r0, #1
	bl FUN_02005E54
	bl FUN_02005ED4
	ldr r0, _021B80B4 ; =0x00000515
	ldr r1, _021B80B8 ; =0x0000FFFF
	bl FUN_02005DF4
_021B7FC4:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B80A2
	bl FUN_02005FA8
	cmp r0, #0
	bne _021B80A2
	bl FUN_02005F0C
	movs r0, #0
	movs r5, #0
	bl FUN_02005E54
	str r5, [r6, #8]
	movs r0, #8
	b _021B7F10
_021B7FE8:
	ldr r7, _021B80A8 ; =0x021DB084
	ldr r0, [r7, #8]
	adds r0, r0, #1
	str r0, [r7, #8]
	bl FUN_0203DF28
	movs r1, #3
	tst r0, r1
	bne _021B8008
	bl FUN_0203DA74
	cmp r0, #0
	bne _021B8008
	ldr r0, [r7, #8]
	cmp r0, #0x50
	ble _021B80A2
_021B8008:
	movs r0, #0
	str r0, [r7, #8]
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0219DBA4
	ldr r0, [r5, #0x54]
	ldr r2, _021B80AC ; =0x021DB09C
	adds r1, r6, #0
	bl FUN_021D09B8
	movs r0, #9
	b _021B7F10
_021B8022:
	ldr r0, [r5, #0x54]
	bl FUN_021D09C8
	cmp r0, #0
	beq _021B80A2
	bl FUN_0203DF28
	movs r1, #3
	tst r0, r1
	bne _021B803E
	bl FUN_0203DA74
	cmp r0, #0
	beq _021B80A2
_021B803E:
	ldr r0, [r5, #0x54]
	bl FUN_021D09D8
	movs r0, #0xa
	b _021B7F10
_021B8048:
	ldr r0, [r5, #0x54]
	bl FUN_021D09E8
	cmp r0, #0
	beq _021B80A2
	bl FUN_0203DF28
	movs r1, #3
	tst r0, r1
	bne _021B8064
	bl FUN_0203DA74
	cmp r0, #0
	beq _021B80A2
_021B8064:
	ldr r0, [r5, #0x54]
	bl FUN_021D09F8
	movs r0, #0xb
	b _021B7F10
_021B806E:
	ldr r0, [r5, #0x54]
	bl FUN_021D0A08
	cmp r0, #0
	beq _021B80A2
	ldr r0, _021B80A8 ; =0x021DB084
	movs r1, #0
	str r1, [r0, #8]
	movs r0, #0xc
	b _021B7F10
_021B8082:
	ldr r1, _021B80BC ; =0x021DB08C
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_021B80EC
	cmp r0, #0
	beq _021B80A2
	movs r0, #1
	b _021B7F10
_021B8094:
	ldr r0, [r5]
	ldr r1, [sp, #8]
	bl FUN_0219CC74
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B80A2:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B80A8: .word 0x021DB084
_021B80AC: .word 0x021DB09C
_021B80B0: .word 0x0000025D
_021B80B4: .word 0x00000515
_021B80B8: .word 0x0000FFFF
_021B80BC: .word 0x021DB08C
	thumb_func_end FUN_021B7E58

	thumb_func_start FUN_021B80C0
FUN_021B80C0: ; 0x021B80C0
	push {r3, lr}
	cmp r0, #3
	beq _021B80CC
	cmp r0, #5
	beq _021B80D4
	b _021B80E2
_021B80CC:
	ldr r0, _021B80E8 ; =0x0000056B
	bl FUN_02006254
	b _021B80E2
_021B80D4:
	ldr r0, _021B80E8 ; =0x0000056B
	bl FUN_020062C4
	cmp r0, #0
	beq _021B80E2
	movs r0, #1
	pop {r3, pc}
_021B80E2:
	movs r0, #0
	pop {r3, pc}
	nop
_021B80E8: .word 0x0000056B
	thumb_func_end FUN_021B80C0

	thumb_func_start FUN_021B80EC
FUN_021B80EC: ; 0x021B80EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xbc
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, r2, #0
	ldr r6, _021B83FC ; =0x021DB084
	str r2, [sp]
	bl FUN_021BAC80
	adds r7, r0, #0
	ldr r0, [r5]
	cmp r0, #0xd
	bhi _021B815C
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B8112: ; jump table
	.short _021B812E - _021B8112 - 2 ; case 0
	.short _021B8138 - _021B8112 - 2 ; case 1
	.short _021B8176 - _021B8112 - 2 ; case 2
	.short _021B81B8 - _021B8112 - 2 ; case 3
	.short _021B81E2 - _021B8112 - 2 ; case 4
	.short _021B81F6 - _021B8112 - 2 ; case 5
	.short _021B822E - _021B8112 - 2 ; case 6
	.short _021B826A - _021B8112 - 2 ; case 7
	.short _021B82A2 - _021B8112 - 2 ; case 8
	.short _021B8316 - _021B8112 - 2 ; case 9
	.short _021B8322 - _021B8112 - 2 ; case 10
	.short _021B835A - _021B8112 - 2 ; case 11
	.short _021B83A4 - _021B8112 - 2 ; case 12
	.short _021B83E6 - _021B8112 - 2 ; case 13
_021B812E:
	movs r0, #0
	str r0, [r6, #0x14]
	strh r0, [r6]
	movs r0, #1
	str r0, [r5]
_021B8138:
	ldr r0, [sp]
	bl FUN_021BB084
	ldr r2, _021B8400 ; =0x000001A2
	ldr r1, _021B8404 ; =0x021DB098
	ldrh r2, [r4, r2]
	bl FUN_0201D384
	strh r0, [r6]
	ldrh r2, [r6]
	cmp r2, #0
	bne _021B8156
	add sp, #0xbc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021B8156:
	ldr r0, _021B8408 ; =0x0000FFFE
	cmp r2, r0
	bne _021B815E
_021B815C:
	b _021B83F4
_021B815E:
	movs r0, #2
	lsls r0, r0, #0xe
	adds r1, r2, #0
	tst r1, r0
	beq _021B8172
	subs r0, r0, #1
	ands r0, r2
	strh r0, [r6]
_021B816E:
	movs r0, #5
	b _021B83F2
_021B8172:
	movs r0, #2
_021B8174:
	b _021B83F2
_021B8176:
	ldr r0, [r4, #4]
	adds r1, r7, #0
	bl FUN_0219D250
	str r0, [sp, #8]
	bl FUN_021BB084
	ldr r0, [sp, #8]
	bl FUN_021BC43C
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #5
	movs r2, #3
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	ldrh r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	movs r0, #3
	str r0, [r5]
_021B81B8:
	ldr r0, [r4, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B81D4
	movs r0, #1
	bl FUN_02005E54
	bl FUN_02005ED4
	ldr r0, _021B840C ; =0x00000515
	ldr r1, _021B8410 ; =0x0000FFFF
	bl FUN_02005DF4
_021B81D4:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B82AE
	movs r0, #4
	b _021B8174
_021B81E2:
	bl FUN_02005FA8
	cmp r0, #0
	bne _021B82AE
	bl FUN_02005F0C
	movs r0, #0
	bl FUN_02005E54
	b _021B83F0
_021B81F6:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #5
	movs r2, #4
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	ldrh r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0xff
	bl FUN_021D0B8C
	adds r1, r4, #0
	ldr r0, [r4, #0x54]
	adds r1, #0x58
	bl FUN_021D022C
	movs r0, #6
	str r0, [r5]
_021B822E:
	ldr r0, [r4, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B825C
	add r6, sp, #0x94
	adds r0, r6, #0
	movs r1, #6
	movs r2, #2
	bl FUN_021D0B2C
	add r7, sp, #0x6c
	adds r0, r7, #0
	movs r1, #6
	movs r2, #3
	bl FUN_021D0B2C
	ldr r0, [r4, #0x54]
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #1
	bl FUN_021D07D8
_021B825C:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B82AE
	movs r0, #7
	b _021B8174
_021B826A:
	ldr r0, [r4, #0x54]
	add r1, sp, #0x18
	bl FUN_021D0868
	cmp r0, #0
	beq _021B82AE
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021B829E
	ldr r1, _021B8414 ; =0x000001AE
	ldr r0, [r4, #4]
	ldrb r1, [r4, r1]
	bl FUN_0219D414
	adds r1, r7, #0
	bl FUN_0219D5F0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	ldrh r2, [r6]
	ldr r0, [r4, #0x54]
	lsrs r1, r1, #0x18
	bl FUN_021D0878
	movs r0, #8
	b _021B8174
_021B829E:
	movs r0, #0xa
	b _021B8174
_021B82A2:
	ldr r0, [r4, #0x54]
	add r1, sp, #0x10
	bl FUN_021D0894
	cmp r0, #0
	bne _021B82B0
_021B82AE:
	b _021B83F4
_021B82B0:
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r0, #4
	bne _021B82BA
	b _021B816E
_021B82BA:
	ldr r0, [r4, #4]
	adds r1, r7, #0
	bl FUN_0219D250
	bl FUN_021BB084
	add r1, sp, #0x10
	ldrb r1, [r1]
	movs r2, #0
	str r0, [sp, #0xc]
	adds r1, #0x36
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	add r2, sp, #0x10
	ldrh r1, [r6]
	ldrb r2, [r2]
	ldr r0, [sp, #0xc]
	bl FUN_0201D250
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #5
	movs r2, #5
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	ldr r2, _021B8418 ; =FUN_021B80C0
	adds r1, r4, #0
	bl FUN_021D0250
	movs r0, #9
	b _021B8174
_021B8316:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B83F4
	b _021B8172
_021B8322:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #5
	movs r2, #7
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	ldrh r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0xff
	bl FUN_021D0B8C
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #0xb
	b _021B8174
_021B835A:
	ldr r0, [r4, #0x54]
	bl FUN_021D0338
	cmp r0, #0
	beq _021B8396
	add r7, sp, #0x44
	adds r0, r7, #0
	movs r1, #6
	movs r2, #4
	bl FUN_021D0B2C
	ldrh r1, [r6]
	adds r0, r7, #0
	bl FUN_021D0B64
	add r0, sp, #0x1c
	movs r1, #6
	movs r2, #5
	bl FUN_021D0B2C
	ldrh r1, [r6]
	add r0, sp, #0x1c
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r1, r7, #0
	add r2, sp, #0x1c
	movs r3, #1
	bl FUN_021D07D8
_021B8396:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B83F4
	movs r0, #0xc
	b _021B8174
_021B83A4:
	ldr r0, [r4, #0x54]
	add r1, sp, #0x14
	bl FUN_021D0868
	cmp r0, #0
	beq _021B83F4
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _021B83E4
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #5
	movs r2, #8
	bl FUN_021D0B2C
	adds r0, r4, #0
	adds r0, #0x58
	adds r1, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	ldrh r1, [r6]
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	movs r0, #0xd
	b _021B8174
_021B83E4:
	b _021B816E
_021B83E6:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B83F4
_021B83F0:
	movs r0, #1
_021B83F2:
	str r0, [r5]
_021B83F4:
	movs r0, #0
	add sp, #0xbc
	pop {r4, r5, r6, r7, pc}
	nop
_021B83FC: .word 0x021DB084
_021B8400: .word 0x000001A2
_021B8404: .word 0x021DB098
_021B8408: .word 0x0000FFFE
_021B840C: .word 0x00000515
_021B8410: .word 0x0000FFFF
_021B8414: .word 0x000001AE
_021B8418: .word FUN_021B80C0
	thumb_func_end FUN_021B80EC

	thumb_func_start FUN_021B841C
FUN_021B841C: ; 0x021B841C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r1, #0
	adds r4, r0, #0
	ldr r0, [r6]
	adds r5, r2, #0
	cmp r0, #4
	bls _021B842E
	b _021B855E
_021B842E:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B843A: ; jump table
	.short _021B8444 - _021B843A - 2 ; case 0
	.short _021B846E - _021B843A - 2 ; case 1
	.short _021B84CA - _021B843A - 2 ; case 2
	.short _021B84F6 - _021B843A - 2 ; case 3
	.short _021B8552 - _021B843A - 2 ; case 4
_021B8444:
	ldr r1, [r5]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	ldr r1, [r5, #0x10]
	ldr r2, [r5, #4]
	str r1, [sp]
	ldr r1, [r5, #0x14]
	lsls r2, r2, #0x18
	lsls r1, r1, #0x10
	ldr r3, [r5, #8]
	lsrs r1, r1, #0x10
	lsrs r2, r2, #0x18
	bl FUN_021DF670
_021B8466:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021B8564
_021B846E:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B8564
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _021B84AE
	ldr r1, [r5]
	ldr r0, [r4, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D1C8
	adds r5, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x41
	bl FUN_021D0B2C
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	bl FUN_021D0B64
	ldr r0, _021B856C ; =0x00000518
	bl FUN_021E026C
	b _021B84C8
_021B84AE:
	ldr r0, [r5, #4]
	cmp r0, #4
	bhs _021B84BC
	lsls r1, r0, #1
	ldr r0, _021B8570 ; =0x021D6EFE
	ldrh r2, [r0, r1]
	b _021B84BE
_021B84BC:
	movs r2, #0x3d
_021B84BE:
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	bl FUN_021D0B2C
_021B84C8:
	b _021B8540
_021B84CA:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B8564
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _021B84F0
	ldr r1, [r5]
	ldr r0, [r4, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D1C8
	adds r1, r0, #0
	ldr r0, [r4]
	bl FUN_0219DC40
	b _021B8466
_021B84F0:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B84F6:
	bl FUN_02005FA8
	cmp r0, #0
	bne _021B8564
	bl FUN_021DF580
	ldr r0, _021B8574 ; =0x0000047C
	ldr r1, _021B8578 ; =0x0000FFFF
	bl FUN_02005DF4
	ldr r0, [r4]
	bl FUN_0219CBBC
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _021B854C
	ldr r1, [r5]
	ldr r0, [r4, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D1C8
	adds r5, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x42
	bl FUN_021D0B2C
	adds r0, r5, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x58
	bl FUN_021D0B64
_021B8540:
	ldr r0, [r4, #0x54]
	adds r4, #0x58
	adds r1, r4, #0
	bl FUN_021D022C
	b _021B8466
_021B854C:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B8552:
	ldr r0, [r4, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B8564
	b _021B8466
_021B855E:
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021B8564:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021B856C: .word 0x00000518
_021B8570: .word 0x021D6EFE
_021B8574: .word 0x0000047C
_021B8578: .word 0x0000FFFF
	thumb_func_end FUN_021B841C

	thumb_func_start FUN_021B857C
FUN_021B857C: ; 0x021B857C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B8594
	cmp r0, #1
	beq _021B85B2
	cmp r0, #2
	beq _021B85D2
	b _021B85E0
_021B8594:
	ldr r1, [r6]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	ldr r1, [r6, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021DF6B8
_021B85AA:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B85E0
_021B85B2:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B85E0
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #1
	movs r2, #0x43
	bl FUN_021D0B2C
	ldr r0, [r5, #0x54]
	adds r5, #0x58
	adds r1, r5, #0
	bl FUN_021D022C
	b _021B85AA
_021B85D2:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B85E0
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B85E0:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B857C

	thumb_func_start FUN_021B85E4
FUN_021B85E4: ; 0x021B85E4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B85FC
	cmp r0, #1
	beq _021B862C
	cmp r0, #2
	beq _021B867C
	b _021B868A
_021B85FC:
	ldr r0, [r6]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r6, #4]
	adds r1, r7, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5, #4]
	bl FUN_0219D408
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl FUN_0219D584
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021D0680
_021B8624:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B868A
_021B862C:
	ldr r0, [r5, #0x54]
	bl FUN_021D06EC
	cmp r0, #0
	beq _021B868A
	ldr r0, [r6, #4]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #1
	bne _021B8644
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8644:
	ldr r1, [r6]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D8C8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r7, #3
	bne _021B8664
	cmp r0, #0
	beq _021B8660
	movs r0, #0x26
	b _021B8662
_021B8660:
	movs r0, #0x27
_021B8662:
	b _021B866E
_021B8664:
	cmp r0, #0
	beq _021B866C
	movs r0, #0x28
	b _021B866E
_021B866C:
	movs r0, #0x29
_021B866E:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [r5, #0x54]
	adds r2, r6, #0
	bl FUN_021D0290
	b _021B8624
_021B867C:
	ldr r0, [r5, #0x54]
	bl FUN_021D0328
	cmp r0, #0
	beq _021B868A
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B868A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B85E4

	thumb_func_start FUN_021B8690
FUN_021B8690: ; 0x021B8690
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r5, r0, #0
	ldr r0, [r6]
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [sp]
	bl FUN_0219C638
	adds r7, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B86BC
	cmp r0, #1
	beq _021B86EA
	cmp r0, #2
	beq _021B870E
	b _021B871C
_021B86BC:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B86D8
	ldr r0, [r5, #4]
	ldr r1, [sp]
	bl FUN_0219D250
	ldr r1, [r6, #4]
	bl FUN_021BBF10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B86D8:
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	movs r2, #0
	bl FUN_021D0380
_021B86E2:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8720
_021B86EA:
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	bl FUN_021D0390
	cmp r0, #0
	beq _021B8720
	ldr r0, [r5, #4]
	ldr r1, [sp]
	bl FUN_0219D250
	ldr r1, [r6, #4]
	bl FUN_021BBF10
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	bl FUN_021D03C0
	b _021B86E2
_021B870E:
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	bl FUN_021D03D0
	cmp r0, #0
	beq _021B8720
	b _021B86E2
_021B871C:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8720:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B8690

	thumb_func_start FUN_021B8724
FUN_021B8724: ; 0x021B8724
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r0, [r2]
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [r2, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r0, [r2, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, [r2, #0xc]
	ldr r1, [r5, #4]
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [r5]
	ldr r2, [sp, #8]
	bl FUN_0219C638
	adds r6, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [sp, #4]
	bl FUN_0219C638
	str r0, [sp, #0xc]
	ldr r0, [r5, #4]
	ldr r1, [sp, #8]
	bl FUN_0219D250
	str r0, [sp, #0x10]
	ldr r0, [r5, #4]
	ldr r1, [sp, #4]
	bl FUN_0219D250
	str r0, [sp, #0x14]
	ldr r0, [r4]
	cmp r0, #6
	bls _021B877E
	b _021B8880
_021B877E:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021B878A: ; jump table
	.short _021B8798 - _021B878A - 2 ; case 0
	.short _021B87F2 - _021B878A - 2 ; case 1
	.short _021B8814 - _021B878A - 2 ; case 2
	.short _021B8836 - _021B878A - 2 ; case 3
	.short _021B884A - _021B878A - 2 ; case 4
	.short _021B885C - _021B878A - 2 ; case 5
	.short _021B8872 - _021B878A - 2 ; case 6
_021B8798:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B87B8
	ldr r0, [sp, #0x10]
	ldr r1, [sp]
	bl FUN_021BBF10
	ldr r0, [sp, #0x14]
	adds r1, r7, #0
	bl FUN_021BBF10
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B87B8:
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	bl FUN_0219D340
	cmp r0, #0
	beq _021B87DA
	ldr r0, [sp, #0x10]
	ldr r1, [sp]
	bl FUN_021BBF10
	ldr r0, [sp, #0x14]
	adds r1, r7, #0
	bl FUN_021BBF10
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B87DA:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021D0380
	movs r1, #8
_021B87E6:
	ldr r0, _021B888C ; =0x021DB084
	str r1, [r0, #0x10]
_021B87EA:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8886
_021B87F2:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0390
	ldr r0, _021B888C ; =0x021DB084
	ldr r1, [r0, #0x10]
	cmp r1, #0
	beq _021B8808
	subs r1, r1, #1
	str r1, [r0, #0x10]
	b _021B8886
_021B8808:
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #0xc]
	movs r2, #0
	bl FUN_021D0380
	b _021B87EA
_021B8814:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0390
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #0xc]
	bl FUN_021D0390
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r6, #0
	beq _021B8886
	cmp r0, #0
	beq _021B8886
	b _021B87EA
_021B8836:
	ldr r0, [sp, #0x10]
	ldr r1, [sp]
	bl FUN_021BBF10
	ldr r0, [sp, #0x14]
	adds r1, r7, #0
	bl FUN_021BBF10
	movs r1, #0
	b _021B87E6
_021B884A:
	ldr r0, _021B888C ; =0x021DB084
	ldr r1, [r0, #0x10]
	adds r1, r1, #1
	str r1, [r0, #0x10]
	cmp r1, #8
	bls _021B8886
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	b _021B886C
_021B885C:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D03D0
	cmp r0, #0
	beq _021B8886
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #0xc]
_021B886C:
	bl FUN_021D03C0
	b _021B87EA
_021B8872:
	ldr r0, [r5, #0x54]
	ldr r1, [sp, #0xc]
	bl FUN_021D03D0
	cmp r0, #0
	beq _021B8886
	b _021B87EA
_021B8880:
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8886:
	movs r0, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B888C: .word 0x021DB084
	thumb_func_end FUN_021B8724

	thumb_func_start FUN_021B8890
FUN_021B8890: ; 0x021B8890
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B88A2
	cmp r0, #1
	beq _021B88DE
	b _021B88EA
_021B88A2:
	ldr r0, [r2]
	ldr r1, [r5, #4]
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5]
	adds r2, r6, #0
	bl FUN_0219C638
	str r0, [sp]
	ldr r0, [r5, #4]
	adds r1, r6, #0
	bl FUN_0219D250
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021B19D0
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BC46C
	ldr r0, [r5, #0x54]
	ldr r1, [sp]
	adds r2, r7, #0
	bl FUN_021D0480
_021B88D6:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B88EE
_021B88DE:
	ldr r0, [r5, #0x54]
	bl FUN_021D0490
	cmp r0, #0
	beq _021B88EE
	b _021B88D6
_021B88EA:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B88EE:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B8890

	thumb_func_start FUN_021B88F4
FUN_021B88F4: ; 0x021B88F4
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r2, #0
	cmp r1, #0
	bne _021B891A
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B890C
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B890C:
	ldr r0, [r4]
	bl FUN_021DF308
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021B8926
_021B891A:
	bl FUN_021DF828
	cmp r0, #0
	bne _021B8926
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B8926:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B88F4

	thumb_func_start FUN_021B892C
FUN_021B892C: ; 0x021B892C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r1, [r6]
	adds r5, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5]
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	adds r7, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	bne _021B8988
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B8956
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8956:
	ldr r0, [r5]
	bl FUN_0219BDC8
	cmp r0, #0
	bne _021B8972
	ldr r0, [r6, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021B899C
	cmp r0, #0
	beq _021B8972
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8972:
	ldr r2, [r6, #4]
	ldr r0, [r5, #0x54]
	lsls r2, r2, #0x10
	adds r1, r7, #0
	lsrs r2, r2, #0x10
	bl FUN_021CFFB8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8996
_021B8988:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFD4
	cmp r0, #0
	beq _021B8996
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8996:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021B892C

	thumb_func_start FUN_021B899C
FUN_021B899C: ; 0x021B899C
	bx pc
	nop
	thumb_func_end FUN_021B899C
_021B89A0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x5D, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021B89AC
FUN_021B89AC: ; 0x021B89AC
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r1, #0
	bne _021B89F8
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B89C6
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B89C6:
	ldr r1, [r6]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	ldr r1, [r6, #4]
	adds r7, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5]
	lsrs r1, r1, #0x18
	bl FUN_0219C71C
	ldr r3, [r6, #8]
	adds r2, r0, #0
	lsls r3, r3, #0x10
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	lsrs r3, r3, #0x10
	bl FUN_021CFFE8
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8A06
_021B89F8:
	ldr r0, [r5, #0x54]
	bl FUN_021CFFF8
	cmp r0, #0
	beq _021B8A06
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8A06:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B89AC

	thumb_func_start FUN_021B8A0C
FUN_021B8A0C: ; 0x021B8A0C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r2, #0
	cmp r0, #0
	beq _021B8A20
	cmp r0, #1
	beq _021B8A5E
	b _021B8A6A
_021B8A20:
	ldr r2, [r6]
	ldr r0, [r5]
	lsls r2, r2, #0x18
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r5]
	bl FUN_0219C71C
	ldr r1, [r6]
	adds r7, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r6, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021BBF18
	ldr r0, [r5, #0x54]
	adds r1, r7, #0
	bl FUN_021D04A0
_021B8A56:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8A6E
_021B8A5E:
	ldr r0, [r5, #0x54]
	bl FUN_021D04BC
	cmp r0, #0
	beq _021B8A6E
	b _021B8A56
_021B8A6A:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B8A6E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B8A0C

	thumb_func_start FUN_021B8A74
FUN_021B8A74: ; 0x021B8A74
	push {r4, r5, r6, lr}
	ldr r2, [r2]
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r6, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B8A96
	cmp r0, #1
	beq _021B8AB6
	b _021B8AC4
_021B8A96:
	adds r0, r5, #0
	bl FUN_021B19D0
	cmp r0, #0
	beq _021B8AA4
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B8AA4:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021D0380
_021B8AAE:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8AC8
_021B8AB6:
	ldr r0, [r5, #0x54]
	adds r1, r6, #0
	bl FUN_021D0390
	cmp r0, #0
	beq _021B8AC8
	b _021B8AAE
_021B8AC4:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021B8AC8:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B8A74

	thumb_func_start FUN_021B8ACC
FUN_021B8ACC: ; 0x021B8ACC
	push {r3, r4, r5, lr}
	ldr r2, [r2]
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r5]
	ldr r1, [r5, #4]
	lsrs r2, r2, #0x18
	bl FUN_0219C638
	adds r1, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021B8AEE
	cmp r0, #1
	beq _021B8AFC
	b _021B8B0A
_021B8AEE:
	ldr r0, [r5, #0x54]
	bl FUN_021D03A0
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021B8B0A
_021B8AFC:
	ldr r0, [r5, #0x54]
	bl FUN_021D03B0
	cmp r0, #0
	beq _021B8B0A
	movs r0, #1
	pop {r3, r4, r5, pc}
_021B8B0A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B8ACC

	thumb_func_start FUN_021B8B10
FUN_021B8B10: ; 0x021B8B10
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BB7D0
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8B10

	thumb_func_start FUN_021B8B30
FUN_021B8B30: ; 0x021B8B30
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BB7E4
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8B30

	thumb_func_start FUN_021B8B50
FUN_021B8B50: ; 0x021B8B50
	push {r3, r4, r5, lr}
	ldr r1, [r2, #4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r1, [r2, #8]
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r1, [r2]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_021BAE48
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B8B50

	thumb_func_start FUN_021B8B78
FUN_021B8B78: ; 0x021B8B78
	push {r3, r4, r5, lr}
	ldr r1, [r2, #4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r1, [r2, #8]
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r1, [r2]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_021BAE80
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B8B78

	thumb_func_start FUN_021B8BA0
FUN_021B8BA0: ; 0x021B8BA0
	push {r4, lr}
	ldr r1, [r2, #4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r1, [r2]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r4, #0
	bl FUN_021BAF0C
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8BA0

	thumb_func_start FUN_021B8BC0
FUN_021B8BC0: ; 0x021B8BC0
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BB7F8
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8BC0

	thumb_func_start FUN_021B8BD8
FUN_021B8BD8: ; 0x021B8BD8
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021BAEB4
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021B8BD8

	thumb_func_start FUN_021B8BFC
FUN_021B8BFC: ; 0x021B8BFC
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021BAEE0
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021B8BFC

	thumb_func_start FUN_021B8C20
FUN_021B8C20: ; 0x021B8C20
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021BB600
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021B8C20

	thumb_func_start FUN_021B8C40
FUN_021B8C40: ; 0x021B8C40
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021BB678
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021B8C40

	thumb_func_start FUN_021B8C60
FUN_021B8C60: ; 0x021B8C60
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	ldr r1, [r5]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r5, #4]
	movs r1, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r4, r0, #0
	bl FUN_021BB6E8
	ldr r2, [r5, #8]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #2
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	ldr r2, [r5, #0xc]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #3
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	ldr r2, [r5, #0x10]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #4
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	ldr r2, [r5, #0x14]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #5
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	ldr r2, [r5, #0x18]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #6
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	ldr r2, [r5, #0x1c]
	adds r0, r4, #0
	lsls r2, r2, #0x18
	movs r1, #7
	lsrs r2, r2, #0x18
	bl FUN_021BB6E8
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B8C60

	thumb_func_start FUN_021B8CD8
FUN_021B8CD8: ; 0x021B8CD8
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BB73C
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8CD8

	thumb_func_start FUN_021B8CF0
FUN_021B8CF0: ; 0x021B8CF0
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BB748
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8CF0

	thumb_func_start FUN_021B8D08
FUN_021B8D08: ; 0x021B8D08
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BB778
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8D08

	thumb_func_start FUN_021B8D24
FUN_021B8D24: ; 0x021B8D24
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	bl FUN_021BB874
	movs r0, #1
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021B8D24

	thumb_func_start FUN_021B8D44
FUN_021B8D44: ; 0x021B8D44
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BBA30
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8D44

	thumb_func_start FUN_021B8D5C
FUN_021B8D5C: ; 0x021B8D5C
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BBA78
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8D5C

	thumb_func_start FUN_021B8D78
FUN_021B8D78: ; 0x021B8D78
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	movs r2, #0x51
	adds r1, r0, #0
	lsls r2, r2, #2
	ldr r0, [r1, r2]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r2, #4
	ldr r0, [r1, r0]
	subs r2, r2, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [r1, #4]
	ldr r1, [r1, r2]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D408
	adds r7, r0, #0
	cmp r4, r5
	beq _021B8DAC
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_0219D544
_021B8DAC:
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0219D524
	ldr r1, [r6, #0xc]
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BBC2C
	adds r0, r4, #0
	bl FUN_021BBDC0
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B8D78

	thumb_func_start FUN_021B8DCC
FUN_021B8DCC: ; 0x021B8DCC
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BBEF0
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8DCC

	thumb_func_start FUN_021B8DEC
FUN_021B8DEC: ; 0x021B8DEC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	ldr r0, [r2, #4]
	add r1, sp, #0xc
	str r0, [sp, #4]
	ldr r0, [r2, #8]
	ldr r6, [r2]
	bl FUN_021BD8F8
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	cmp r0, #0
	bls _021B8E4E
_021B8E0A:
	ldr r0, [sp, #8]
	bl FUN_021B8E54
	adds r7, r0, #0
	beq _021B8E4E
	movs r5, #0
	cmp r6, #0
	bls _021B8E42
_021B8E1A:
	ldr r0, [sp]
	add r1, sp, #0xc
	ldrb r1, [r1, r5]
	ldr r0, [r0, #4]
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021B8E3C
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl FUN_021BB8A4
_021B8E3C:
	adds r5, r5, #1
	cmp r5, r6
	blo _021B8E1A
_021B8E42:
	ldr r0, [sp, #8]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _021B8E0A
_021B8E4E:
	movs r0, #1
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021B8DEC

	thumb_func_start FUN_021B8E54
FUN_021B8E54: ; 0x021B8E54
	bx pc
	nop
	thumb_func_end FUN_021B8E54
_021B8E58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x81, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021B8E64
FUN_021B8E64: ; 0x021B8E64
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BBF70
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8E64

	thumb_func_start FUN_021B8E84
FUN_021B8E84: ; 0x021B8E84
	push {r4, lr}
	sub sp, #8
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #0x10]
	ldr r3, [r4, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, [r4, #0x14]
	lsls r3, r3, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsrs r3, r3, #0x18
	bl FUN_021BBF84
	movs r0, #1
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8E84

	thumb_func_start FUN_021B8EC0
FUN_021B8EC0: ; 0x021B8EC0
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BB824
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8EC0

	thumb_func_start FUN_021B8EDC
FUN_021B8EDC: ; 0x021B8EDC
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BB848
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8EDC

	thumb_func_start FUN_021B8EF8
FUN_021B8EF8: ; 0x021B8EF8
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BB800
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8EF8

	thumb_func_start FUN_021B8F14
FUN_021B8F14: ; 0x021B8F14
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BBC80
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8F14

	thumb_func_start FUN_021B8F30
FUN_021B8F30: ; 0x021B8F30
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	bl FUN_021BBF10
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8F30

	thumb_func_start FUN_021B8F4C
FUN_021B8F4C: ; 0x021B8F4C
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BB384
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8F4C

	thumb_func_start FUN_021B8F6C
FUN_021B8F6C: ; 0x021B8F6C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #0xc]
	ldr r2, [r4, #0x10]
	str r1, [sp]
	ldr r1, [r4, #4]
	ldr r3, [r4, #8]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_021BAF74
	movs r0, #1
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B8F6C

	thumb_func_start FUN_021B8FA0
FUN_021B8FA0: ; 0x021B8FA0
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BBD30
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8FA0

	thumb_func_start FUN_021B8FB8
FUN_021B8FB8: ; 0x021B8FB8
	push {r3, lr}
	ldr r3, [r2, #4]
	ldr r1, [r2]
	adds r2, r3, #0
	ldr r0, [r0, #0x34]
	movs r3, #0
	bl FUN_021D5B60
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021B8FB8

	thumb_func_start FUN_021B8FCC
FUN_021B8FCC: ; 0x021B8FCC
	push {r3, lr}
	ldm r2, {r1, r2}
	lsls r2, r2, #0x18
	ldr r0, [r0, #0x34]
	lsrs r2, r2, #0x18
	bl FUN_021D5C44
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8FCC

	thumb_func_start FUN_021B8FE0
FUN_021B8FE0: ; 0x021B8FE0
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #0x34]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021D5CA0
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8FE0

	thumb_func_start FUN_021B8FF4
FUN_021B8FF4: ; 0x021B8FF4
	push {r3, lr}
	ldr r0, [r0, #0x34]
	ldr r1, [r2]
	bl FUN_021D5C00
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B8FF4

	thumb_func_start FUN_021B9004
FUN_021B9004: ; 0x021B9004
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021BC1E0
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021B9004

	thumb_func_start FUN_021B9024
FUN_021B9024: ; 0x021B9024
	push {r4, r5, r6, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	adds r5, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	adds r6, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r1, r6, #0
	bl FUN_021BBE08
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021B9024

	thumb_func_start FUN_021B9050
FUN_021B9050: ; 0x021B9050
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BC59C
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B9050

	thumb_func_start FUN_021B9070
FUN_021B9070: ; 0x021B9070
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BC5B0
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B9070

	thumb_func_start FUN_021B9088
FUN_021B9088: ; 0x021B9088
	push {r3, lr}
	ldr r3, _021B90B0 ; =0x000001AE
	ldr r1, [r2]
	ldr r2, [r2, #4]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x18
	ldrb r3, [r0, r3]
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	cmp r1, r3
	bne _021B90A6
	adds r1, r2, #0
	bl FUN_021B19F0
	b _021B90AC
_021B90A6:
	ldr r0, [r0]
	bl FUN_0219D444
_021B90AC:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
_021B90B0: .word 0x000001AE
	thumb_func_end FUN_021B9088

	thumb_func_start FUN_021B90B4
FUN_021B90B4: ; 0x021B90B4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r2]
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [r4, #4]
	adds r1, r5, #0
	bl FUN_0219D408
	adds r1, r0, #0
	ldr r0, [r4]
	adds r2, r5, #0
	bl FUN_0219D644
	movs r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B90B4

	thumb_func_start FUN_021B90D4
FUN_021B90D4: ; 0x021B90D4
	push {r3, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	bl FUN_021BBF78
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B90D4

	thumb_func_start FUN_021B90EC
FUN_021B90EC: ; 0x021B90EC
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021BBAA4
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B90EC

	thumb_func_start FUN_021B910C
FUN_021B910C: ; 0x021B910C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r6, [r4, #0x10]
	ldr r5, [r4, #0x14]
	ldr r3, [r4, #0xc]
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	add r4, sp, #0
	strh r6, [r4]
	strh r5, [r4, #2]
	strb r3, [r4, #4]
	strb r1, [r4, #5]
	add r1, sp, #0
	strb r2, [r4, #6]
	bl FUN_021BC088
	movs r0, #1
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021B910C

	thumb_func_start FUN_021B9140
FUN_021B9140: ; 0x021B9140
	push {r4, lr}
	ldr r1, [r2]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	adds r4, r0, #0
	bl FUN_021BBC48
	adds r0, r4, #0
	bl FUN_021BC6C8
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B9140

	thumb_func_start FUN_021B9160
FUN_021B9160: ; 0x021B9160
	push {r3, lr}
	ldr r0, [r0, #0x34]
	movs r1, #0
	movs r2, #0
	bl FUN_021D5DE4
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021B9160

	thumb_func_start FUN_021B9170
FUN_021B9170: ; 0x021B9170
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	ldr r1, [r5]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r4, [r5, #4]
	bl FUN_0219D250
	ldr r2, [r5, #8]
	adds r1, r4, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	bl FUN_021BB1B0
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021B9170

	thumb_func_start FUN_021B9194
FUN_021B9194: ; 0x021B9194
	push {r4, lr}
	adds r4, r2, #0
	ldr r1, [r4]
	ldr r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D250
	ldr r1, [r4, #4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BC018
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B9194

	thumb_func_start FUN_021B91B4
FUN_021B91B4: ; 0x021B91B4
	ldr r1, _021B91BC ; =0x000001AE
	ldrb r0, [r0, r1]
	bx lr
	nop
_021B91BC: .word 0x000001AE
	thumb_func_end FUN_021B91B4

	thumb_func_start FUN_021B91C0
FUN_021B91C0: ; 0x021B91C0
	movs r1, #0x12
	lsls r1, r1, #4
	ldr r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021B91C0
_021B91C8:
	.byte 0x40, 0x6B, 0x01, 0x4B, 0x18, 0x47, 0xC0, 0x46
	.byte 0x15, 0x5B, 0x1D, 0x02, 0x87, 0x21, 0x89, 0x00, 0x40, 0x5A, 0x70, 0x47, 0x22, 0x21, 0x09, 0x01
	.byte 0x40, 0x58, 0x70, 0x47

	thumb_func_start FUN_021B91E4
FUN_021B91E4: ; 0x021B91E4
	ldr r1, _021B91EC ; =0x000001B3
	ldrb r0, [r0, r1]
	bx lr
	nop
_021B91EC: .word 0x000001B3
	thumb_func_end FUN_021B91E4

	thumb_func_start FUN_021B91F0
FUN_021B91F0: ; 0x021B91F0
	push {r4, r5, r6, lr}
	ldr r6, _021B9214 ; =0x000001AE
	adds r5, r0, #0
	movs r4, #0
_021B91F8:
	ldrb r1, [r5, r6]
	lsls r2, r4, #0x18
	ldr r0, [r5]
	lsrs r2, r2, #0x18
	bl FUN_0219D8DC
	lsls r1, r4, #1
	adds r1, r5, r1
	adds r1, #0xf0
	adds r4, r4, #1
	strh r0, [r1]
	cmp r4, #4
	blo _021B91F8
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B9214: .word 0x000001AE
	thumb_func_end FUN_021B91F0

	thumb_func_start FUN_021B9218
FUN_021B9218: ; 0x021B9218
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r2, #0
	bl FUN_0219D4C8
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x13
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B923A
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B923A:
	movs r4, #0
_021B923C:
	ldr r0, _021B92C0 ; =0x021D6EF0
	ldrb r1, [r0, r4]
	ldr r0, [sp, #4]
	cmp r1, r0
	blo _021B92BA
	lsls r0, r4, #1
	str r0, [sp]
	adds r0, r6, r0
	adds r0, #0xf0
	ldrh r0, [r0]
	cmp r0, #0
	beq _021B92B4
	movs r1, #0x29
	movs r7, #0
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021B9278
	adds r0, r5, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #4
	bl FUN_021BD3B4
	cmp r7, r0
	bhi _021B92B4
	b _021B929E
_021B9278:
	ldr r0, [sp]
	adds r1, r5, #0
	adds r0, r6, r0
	adds r0, #0xf0
	ldrh r0, [r0]
	bl FUN_021B92C4
	cmp r0, #0
	beq _021B928C
	b _021B929E
_021B928C:
	ldr r0, [sp]
	adds r1, r5, #0
	adds r0, r6, r0
	adds r0, #0xf0
	ldrh r0, [r0]
	bl FUN_021B931C
	cmp r0, #0
	beq _021B92A0
_021B929E:
	movs r7, #1
_021B92A0:
	cmp r7, #0
	beq _021B92B4
	ldr r0, [sp]
	adds r6, #0xf0
	ldrh r0, [r6, r0]
	ldr r1, [sp]
	movs r2, #0
	add sp, #8
	strh r2, [r6, r1]
	pop {r3, r4, r5, r6, r7, pc}
_021B92B4:
	adds r4, r4, #1
	cmp r4, #4
	blo _021B923C
_021B92BA:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B92C0: .word 0x021D6EF0
	thumb_func_end FUN_021B9218

	thumb_func_start FUN_021B92C4
FUN_021B92C4: ; 0x021B92C4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r4, #0
_021B92CC:
	ldr r0, _021B9318 ; =0x021D6F1A
	lsls r1, r4, #1
	adds r5, r0, r1
	ldr r2, _021B9318 ; =0x021D6F1A
	adds r0, r6, #0
	ldrb r1, [r2, r1]
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021B92F2
	ldrb r1, [r5, #1]
	adds r0, r7, #0
	movs r2, #1
	bl FUN_021BB554
	cmp r0, #0
	beq _021B92F2
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B92F2:
	adds r4, r4, #1
	cmp r4, #6
	blo _021B92CC
	adds r0, r6, #0
	movs r1, #0x24
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021B9312
	adds r0, r7, #0
	bl FUN_021BB754
	cmp r0, #0
	bne _021B9312
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B9312:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B9318: .word 0x021D6F1A
	thumb_func_end FUN_021B92C4

	thumb_func_start FUN_021B931C
FUN_021B931C: ; 0x021B931C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r4, #0
_021B9324:
	ldr r0, _021B9354 ; =0x021D6F26
	lsls r1, r4, #1
	adds r5, r0, r1
	ldr r2, _021B9354 ; =0x021D6F26
	adds r0, r6, #0
	ldrb r1, [r2, r1]
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021B9348
	ldrb r1, [r5, #1]
	adds r0, r7, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021B9348
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021B9348:
	adds r4, r4, #1
	cmp r4, #7
	blo _021B9324
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B9354: .word 0x021D6F26
	thumb_func_end FUN_021B931C

	thumb_func_start FUN_021B9358
FUN_021B9358: ; 0x021B9358
	ldrb r3, [r0, #2]
	movs r1, #0
	movs r2, #8
	bics r3, r2
	strb r3, [r0, #2]
	ldrb r3, [r0, #2]
	movs r2, #2
	strb r1, [r0, #1]
	bics r3, r2
	strb r3, [r0, #2]
	ldrb r3, [r0, #2]
	movs r2, #4
	strb r1, [r0]
	bics r3, r2
	strb r3, [r0, #2]
	ldrb r3, [r0, #2]
	movs r2, #1
	strh r1, [r0, #6]
	bics r3, r2
	strb r3, [r0, #2]
	ldrb r3, [r0, #2]
	movs r2, #0x10
	strh r1, [r0, #8]
	bics r3, r2
	strb r3, [r0, #2]
	ldrb r3, [r0, #2]
	movs r2, #0x20
	strh r1, [r0, #0xa]
	bics r3, r2
	strb r3, [r0, #2]
	strh r1, [r0, #0xc]
	strh r1, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B9358

	thumb_func_start FUN_021B939C
FUN_021B939C: ; 0x021B939C
	strh r1, [r0, #0xa]
	bx lr
	thumb_func_end FUN_021B939C

	thumb_func_start FUN_021B93A0
FUN_021B93A0: ; 0x021B93A0
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021B93A0

	thumb_func_start FUN_021B93A8
FUN_021B93A8: ; 0x021B93A8
	ldrb r2, [r0, #2]
	movs r1, #8
	orrs r1, r2
	strb r1, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B93A8

	thumb_func_start FUN_021B93B4
FUN_021B93B4: ; 0x021B93B4
	ldrb r0, [r0, #1]
	bx lr
	thumb_func_end FUN_021B93B4

	thumb_func_start FUN_021B93B8
FUN_021B93B8: ; 0x021B93B8
	ldrb r3, [r0, #2]
	movs r2, #1
	strh r1, [r0, #8]
	bics r3, r2
	movs r2, #1
	orrs r2, r3
	strb r2, [r0, #2]
	movs r2, #0
	strh r2, [r0, #0xc]
	ldrb r2, [r0, #2]
	movs r1, #2
	bics r2, r1
	strb r2, [r0, #2]
	ldrb r2, [r0, #2]
	movs r1, #4
	bics r2, r1
	strb r2, [r0, #2]
	bx lr
	thumb_func_end FUN_021B93B8

	thumb_func_start FUN_021B93DC
FUN_021B93DC: ; 0x021B93DC
	ldrb r2, [r0, #2]
	movs r1, #0
	strb r1, [r0]
	movs r1, #1
	bics r2, r1
	strb r2, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B93DC

	thumb_func_start FUN_021B93EC
FUN_021B93EC: ; 0x021B93EC
	ldrh r1, [r0, #0xc]
	ldrh r0, [r0, #8]
	cmp r1, r0
	bne _021B93F8
	movs r0, #1
	bx lr
_021B93F8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021B93EC

	thumb_func_start FUN_021B93FC
FUN_021B93FC: ; 0x021B93FC
	ldrh r0, [r0, #8]
	bx lr
	thumb_func_end FUN_021B93FC

	thumb_func_start FUN_021B9400
FUN_021B9400: ; 0x021B9400
	ldrb r2, [r0, #2]
	lsls r1, r2, #0x1e
	lsrs r1, r1, #0x1f
	beq _021B940C
	movs r0, #0
	bx lr
_021B940C:
	movs r1, #0x10
	orrs r1, r2
	strb r1, [r0, #2]
	movs r0, #1
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B9400

	thumb_func_start FUN_021B9418
FUN_021B9418: ; 0x021B9418
	ldrb r2, [r0, #2]
	movs r1, #0x10
	bics r2, r1
	strb r2, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B9418

	thumb_func_start FUN_021B9424
FUN_021B9424: ; 0x021B9424
	ldrb r2, [r0, #2]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021B9424

	thumb_func_start FUN_021B9430
FUN_021B9430: ; 0x021B9430
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _021B95AC ; =0x000001AF
	adds r4, r1, #0
	ldrb r0, [r5, r0]
	cmp r0, #2
	bne _021B9452
	ldrb r1, [r4, #2]
	lsls r0, r1, #0x1b
	lsrs r0, r0, #0x1f
	bne _021B9452
	lsls r0, r1, #0x1a
	lsrs r0, r0, #0x1f
	bne _021B9452
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	bne _021B9454
_021B9452:
	b _021B95A8
_021B9454:
	lsls r2, r1, #0x1c
	movs r7, #0
	lsrs r2, r2, #0x1f
	beq _021B94AC
	movs r2, #8
	bics r1, r2
	strb r1, [r4, #2]
	ldrb r1, [r4, #2]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	bne _021B9488
	ldrh r1, [r4, #6]
	cmp r1, r0
	bhs _021B94AC
	ldrb r0, [r4]
	cmp r0, #0
	bne _021B94AC
	adds r0, r1, #1
	strh r0, [r4, #6]
	ldrh r0, [r4, #4]
	cmp r0, #0
	bne _021B9484
	ldrh r0, [r4, #6]
	strh r0, [r4, #8]
_021B9484:
	movs r7, #1
	b _021B94AC
_021B9488:
	ldrh r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	cmp r0, r2
	bhs _021B94A2
	adds r0, r0, #1
	strh r0, [r4, #0xc]
	ldrh r0, [r4, #0xc]
	cmp r0, r2
	bne _021B94A2
	strh r2, [r4, #6]
	ldr r0, [r5, #0x54]
	cmp r0, #0
	bne _021B94A4
_021B94A2:
	b _021B95A8
_021B94A4:
	ldrh r1, [r4, #6]
	bl FUN_021D0A88
	pop {r3, r4, r5, r6, r7, pc}
_021B94AC:
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _021B95A8
	ldr r0, [r5, #0x54]
	cmp r0, #0
	beq _021B95A8
	ldrb r1, [r4]
	cmp r1, #0
	beq _021B94C6
	cmp r1, #1
	beq _021B9594
	cmp r1, #2
	pop {r3, r4, r5, r6, r7, pc}
_021B94C6:
	bl FUN_021D0A78
	movs r6, #0
	cmp r0, #0
	beq _021B9524
	cmp r0, #1
	beq _021B9532
	cmp r0, #2
	bne _021B9544
	movs r0, #1
	strb r0, [r4, #1]
	ldr r0, [r5, #0x54]
	bl FUN_021D0A18
	ldrb r1, [r4, #2]
	movs r0, #2
	movs r2, #1
	orrs r0, r1
	strb r0, [r4, #2]
	movs r0, #1
	strb r0, [r4]
	ldrh r1, [r4, #6]
	ldr r0, [r5, #0x54]
	bl FUN_021D0AE0
	ldr r0, [r5]
	bl FUN_0219CA14
	ldr r0, [r5]
	bl FUN_0219BE30
	movs r0, #0x1e
	bl FUN_02005EA0
	adds r0, r6, #0
	movs r1, #0x3e
	bl FUN_02005D08
	adds r0, r6, #0
	bl FUN_020067A4
	bl FUN_021E0540
	ldr r0, [r5]
	bl FUN_0219CBBC
	b _021B9544
_021B9524:
	ldrh r0, [r4, #8]
	cmp r0, #1
	bls _021B9530
	subs r0, r0, #1
	strh r0, [r4, #8]
	movs r6, #1
_021B9530:
	b _021B9540
_021B9532:
	ldrh r1, [r4, #8]
	ldrh r0, [r4, #0xa]
	cmp r1, r0
	bhs _021B9540
	adds r0, r1, #1
	strh r0, [r4, #8]
	movs r6, #1
_021B9540:
	movs r0, #0x2d
	strh r0, [r4, #4]
_021B9544:
	cmp r6, #0
	bne _021B954C
	cmp r7, #0
	beq _021B9556
_021B954C:
	ldrh r1, [r4, #6]
	ldrh r2, [r4, #8]
	ldr r0, [r5, #0x54]
	bl FUN_021D0A88
_021B9556:
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _021B95A8
	subs r0, r0, #1
	strh r0, [r4, #4]
	ldrh r0, [r4, #4]
	cmp r0, #0
	bne _021B95A8
	movs r6, #2
	strb r6, [r4, #1]
	ldr r0, [r5, #0x54]
	bl FUN_021D0A18
	ldrb r0, [r4, #2]
	orrs r0, r6
	strb r0, [r4, #2]
	movs r0, #1
	strb r0, [r4]
	movs r0, #0x1e
	bl FUN_02005EA0
	movs r0, #0
	movs r1, #0x3e
	bl FUN_02005D08
	movs r0, #0
	bl FUN_020067A4
	bl FUN_021E0540
	pop {r3, r4, r5, r6, r7, pc}
_021B9594:
	bl FUN_021D0A28
	cmp r0, #0
	beq _021B95A8
	ldrb r1, [r4, #2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r4, #2]
	movs r0, #2
	strb r0, [r4]
_021B95A8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B95AC: .word 0x000001AF
	thumb_func_end FUN_021B9430

	thumb_func_start FUN_021B95B0
FUN_021B95B0: ; 0x021B95B0
	push {r3, lr}
	adds r0, #0x58
	ldrh r0, [r0]
	cmp r0, #0xc
	bhs _021B95CA
	ldr r0, _021B95DC ; =0x021D6FC0
	lsls r1, r1, #3
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _021B95D8
	bl FUN_02006254
	pop {r3, pc}
_021B95CA:
	ldr r0, _021B95E0 ; =0x021D6FC4
	lsls r1, r1, #3
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _021B95D8
	bl FUN_02006254
_021B95D8:
	pop {r3, pc}
	nop
_021B95DC: .word 0x021D6FC0
_021B95E0: .word 0x021D6FC4
	thumb_func_end FUN_021B95B0

	thumb_func_start FUN_021B95E4
FUN_021B95E4: ; 0x021B95E4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r7, #0x4b
	lsls r7, r7, #2
	str r0, [sp]
	adds r5, r1, #0
	str r2, [sp, #4]
	movs r6, #0
	movs r4, #0
	adds r7, #0x64
_021B95F8:
	ldr r0, [r5, #0x5c]
	adds r1, r0, #0
	lsrs r1, r4
	movs r0, #1
	tst r0, r1
	beq _021B9624
	ldr r0, [sp]
	ldr r3, [sp, #4]
	movs r1, #1
	adds r2, r4, #0
	bl FUN_021D0BEC
	movs r0, #0x4b
	lsls r0, r0, #2
	bl FUN_02005748
	adds r1, r0, r7
	lsls r0, r4, #1
	adds r0, r5, r0
	adds r0, #0x60
	strh r1, [r0]
	adds r6, r6, #1
_021B9624:
	adds r4, r4, #1
	cmp r4, #0x16
	blt _021B95F8
	cmp r6, #0
	beq _021B9636
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021B95B0
_021B9636:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021B95E4

	thumb_func_start FUN_021B963C
FUN_021B963C: ; 0x021B963C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	str r0, [sp]
	str r1, [sp, #4]
	movs r0, #0
	ldr r1, [r1, #0x5c]
	movs r6, #0
	mov ip, r0
	movs r4, #0
	add r5, sp, #0x10
	movs r7, #1
_021B9652:
	adds r3, r1, #0
	lsrs r3, r0
	tst r3, r7
	beq _021B965E
	strb r0, [r5, r6]
	adds r6, r6, #1
_021B965E:
	adds r0, r0, #1
	cmp r0, #0x16
	blt _021B9652
	ldr r5, _021B96E4 ; =0x021D6F34
	movs r1, #0
_021B9668:
	lsls r3, r1, #2
	adds r0, r5, r3
	ldrb r3, [r5, r3]
	cmp r3, r2
	bgt _021B967A
	ldrb r0, [r0, #1]
	cmp r0, r2
	blt _021B967A
	mov ip, r1
_021B967A:
	adds r1, r1, #1
	cmp r1, #5
	blt _021B9668
	mov r0, ip
	lsls r5, r0, #2
	ldr r0, _021B96E8 ; =0x021D6F37
	ldrb r0, [r0, r5]
	bl FUN_02005748
	ldr r1, _021B96EC ; =0x021D6F36
	ldrb r1, [r1, r5]
	adds r0, r1, r0
	str r0, [sp, #8]
	beq _021B96DE
	ldr r7, [sp, #4]
	adds r7, #0x5c
_021B969A:
	adds r0, r6, #0
	bl FUN_02005748
	add r1, sp, #0x10
	ldrsb r5, [r1, r0]
	str r0, [sp, #0xc]
	cmp r5, #0
	blt _021B96D8
	ldr r0, [sp]
	movs r1, #1
	adds r2, r5, #0
	movs r3, #9
	bl FUN_021D0BEC
	ldr r0, [sp, #4]
	lsls r1, r5, #1
	adds r1, r0, r1
	movs r2, #0
	adds r1, #0x60
	movs r0, #0
	strh r0, [r1]
	movs r0, #1
	ldr r1, [r7]
	lsls r0, r5
	eors r0, r1
	str r0, [r7]
	ldr r0, [sp, #0xc]
	mvns r2, r2
	add r1, sp, #0x10
	adds r4, r4, #1
	strb r2, [r1, r0]
_021B96D8:
	ldr r0, [sp, #8]
	cmp r4, r0
	bne _021B969A
_021B96DE:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B96E4: .word 0x021D6F34
_021B96E8: .word 0x021D6F37
_021B96EC: .word 0x021D6F36
	thumb_func_end FUN_021B963C

	thumb_func_start FUN_021B96F0
FUN_021B96F0: ; 0x021B96F0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	movs r2, #0x44
	ldrsh r2, [r4, r2]
	adds r5, r0, #0
	cmp r2, #0
	bge _021B9714
	adds r2, r4, #0
	adds r2, #0x58
	ldrh r2, [r2]
	bl FUN_021B963C
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #5
	bl FUN_021B95E4
	pop {r3, r4, r5, pc}
_021B9714:
	cmp r2, #0x3c
	ble _021B971E
	movs r2, #7
	bl FUN_021B95E4
_021B971E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B96F0

	thumb_func_start FUN_021B9720
FUN_021B9720: ; 0x021B9720
	push {r3, lr}
	cmp r2, #0
	beq _021B972C
	movs r2, #1
	bl FUN_021B95E4
_021B972C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021B9720

	thumb_func_start FUN_021B9730
FUN_021B9730: ; 0x021B9730
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	movs r1, #0
	bl FUN_0219D534
	bl FUN_021BB084
	adds r6, r0, #0
	movs r1, #5
	movs r2, #0
	bl FUN_0201CD24
	adds r0, r6, #0
	movs r1, #0xb3
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_0201F03C
	adds r2, r0, #0
	movs r0, #0x42
	ldrsh r1, [r4, r0]
	ldr r0, _021B978C ; =0x021D6EF9
	ldrb r0, [r0, r2]
	adds r1, r1, r0
	adds r0, r4, #0
	adds r0, #0x42
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4d
	ldrb r0, [r0]
	movs r1, #0x71
	lsls r1, r1, #2
	adds r0, r0, #1
	adds r4, #0x4d
	strb r0, [r4]
	ldr r0, [r5, #0x54]
	adds r1, r5, r1
	bl FUN_021B9720
	pop {r4, r5, r6, pc}
	nop
_021B978C: .word 0x021D6EF9
	thumb_func_end FUN_021B9730

	thumb_func_start FUN_021B9790
FUN_021B9790: ; 0x021B9790
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_0219E3DC
	strb r4, [r5, #0xe]
	movs r1, #4
	ldrsh r3, [r5, r1]
	movs r1, #0x78
	adds r2, r4, #0
	muls r2, r1, r2
	adds r0, r0, r2
	adds r1, #0x8a
	ldrsh r0, [r0, r1]
	adds r0, r3, r0
	strh r0, [r5, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021B9790

	thumb_func_start FUN_021B97B4
FUN_021B97B4: ; 0x021B97B4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0219E3DC
	movs r1, #0xc
	ldrsh r1, [r0, r1]
	ldr r0, _021B97E0 ; =0x000001BD
	ldrb r0, [r5, r0]
	subs r1, r1, r0
	bpl _021B97CE
	rsbs r1, r1, #0
_021B97CE:
	movs r0, #5
	subs r0, r0, r1
	bpl _021B97D6
	movs r0, #0
_021B97D6:
	strh r0, [r4]
	ldr r0, _021B97E0 ; =0x000001BD
	ldrb r0, [r5, r0]
	strb r0, [r4, #0xc]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B97E0: .word 0x000001BD
	thumb_func_end FUN_021B97B4

	thumb_func_start FUN_021B97E4
FUN_021B97E4: ; 0x021B97E4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r2, #0
	adds r4, r1, #0
	str r3, [sp]
	bl FUN_0219E3DC
	movs r1, #0x78
	adds r2, r6, #0
	muls r2, r1, r2
	adds r2, r0, r2
	ldr r0, [sp]
	movs r7, #0xc
	adds r3, r0, #0
	muls r3, r7, r3
	adds r0, r2, r3
	adds r1, #0xd0
	ldrsh r1, [r0, r1]
	movs r3, #6
	ldrsh r0, [r4, r3]
	lsls r6, r1, #0x10
	asrs r6, r6, #0x10
	adds r0, r0, r6
	strh r0, [r4, #6]
	ldrb r0, [r4, #0xf]
	adds r0, r0, #1
	strb r0, [r4, #0xf]
	cmp r1, #0
	ble _021B9832
	adds r3, #0xfa
	ldrsh r0, [r2, r3]
	adds r1, r0, #0
	ldr r0, _021B986C ; =0x021D6F84
	muls r1, r7, r1
	ldr r4, [r0, r1]
	adds r0, r5, #0
	movs r1, #1
	b _021B9856
_021B9832:
	bge _021B9846
	adds r3, #0xfa
	ldrsh r0, [r2, r3]
	adds r1, r0, #0
	ldr r0, _021B9870 ; =0x021D6F88
	muls r1, r7, r1
	ldr r4, [r0, r1]
	adds r0, r5, #0
	movs r1, #3
	b _021B9856
_021B9846:
	adds r3, #0xfa
	ldrsh r0, [r2, r3]
	adds r1, r0, #0
	ldr r0, _021B9874 ; =0x021D6F8C
	muls r1, r7, r1
	ldr r4, [r0, r1]
	adds r0, r5, #0
	movs r1, #2
_021B9856:
	bl FUN_021B2250
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r5, #0x54]
	adds r1, r5, r1
	adds r2, r4, #0
	bl FUN_021B95E4
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B986C: .word 0x021D6F84
_021B9870: .word 0x021D6F88
_021B9874: .word 0x021D6F8C
	thumb_func_end FUN_021B97E4

	thumb_func_start FUN_021B9878
FUN_021B9878: ; 0x021B9878
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0219E3DC
	adds r6, r0, #0
	ldr r0, [r5]
	bl FUN_0219E350
	movs r1, #2
	ldrsh r2, [r4, r1]
	movs r1, #0
	ldrsh r1, [r4, r1]
	adds r2, r1, r2
	movs r1, #4
	ldrsh r1, [r4, r1]
	adds r2, r1, r2
	movs r1, #6
	ldrsh r1, [r4, r1]
	adds r1, r1, r2
	bne _021B98A6
	movs r1, #1
_021B98A6:
	movs r2, #4
	ldrsh r2, [r6, r2]
	strh r2, [r4, #8]
	movs r2, #0x4a
	lsls r2, r2, #2
	ldrb r0, [r0, r2]
	adds r2, r1, #0
	strh r0, [r4, #0xa]
	movs r0, #8
	ldrsh r0, [r4, r0]
	muls r2, r0, r2
	movs r0, #0xa
	ldrsh r0, [r4, r0]
	adds r1, r2, #0
	muls r1, r0, r1
	ldr r0, _021B98DC ; =0x0000270F
	str r1, [r4, #0x14]
	cmp r1, r0
	ble _021B98CE
	b _021B98D4
_021B98CE:
	ldr r0, _021B98E0 ; =0xFFFFD8F2
	cmp r1, r0
	bge _021B98D6
_021B98D4:
	str r0, [r4, #0x14]
_021B98D6:
	ldr r0, [r4, #0x14]
	pop {r4, r5, r6, pc}
	nop
_021B98DC: .word 0x0000270F
_021B98E0: .word 0xFFFFD8F2
	thumb_func_end FUN_021B9878

	thumb_func_start FUN_021B98E4
FUN_021B98E4: ; 0x021B98E4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021B9948
	ldr r6, _021B994C ; =0x000001AE
	ldrb r0, [r5, r6]
	cmp r0, #0
	bne _021B9948
	adds r0, r6, #0
	str r0, [sp, #4]
	adds r0, #0x76
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r7, r6, #0
	str r0, [sp]
	adds r0, #0x76
	movs r4, #0
	str r0, [sp]
	adds r7, #0x76
	adds r6, #0x76
_021B9914:
	lsls r0, r4, #1
	adds r0, r5, r0
	ldrh r1, [r0, r6]
	cmp r1, #0
	beq _021B9942
	ldr r1, [sp, #4]
	ldrh r1, [r0, r1]
	subs r2, r1, #1
	ldr r1, [sp]
	strh r2, [r0, r1]
	ldrh r0, [r0, r7]
	cmp r0, #0
	bne _021B9942
	ldr r0, [r5, #0x54]
	adds r1, r4, #0
	bl FUN_021D0C34
	ldr r0, [r5, #0x54]
	movs r1, #1
	adds r2, r4, #0
	movs r3, #0
	bl FUN_021D0BEC
_021B9942:
	adds r4, r4, #1
	cmp r4, #0x16
	blt _021B9914
_021B9948:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B994C: .word 0x000001AE
	thumb_func_end FUN_021B98E4

	thumb_func_start FUN_021B9950
FUN_021B9950: ; 0x021B9950
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0219E350
	movs r1, #0x49
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	cmp r0, #0
	bne _021B996E
	adds r0, r4, #0
	bl FUN_0219BF48
	bl FUN_021E01A4
	pop {r4, pc}
_021B996E:
	cmp r0, #1
	bne _021B997E
	adds r0, r4, #0
	bl FUN_0219BF40
	bl FUN_021E01A4
	pop {r4, pc}
_021B997E:
	cmp r0, #2
	bne _021B998C
	adds r0, r4, #0
	bl FUN_0219BF54
	bl FUN_021E01A4
_021B998C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021B9950

	thumb_func_start FUN_021B9990
FUN_021B9990: ; 0x021B9990
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r4, _021B9A58 ; =0x021DB0AC
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r5, #0
	beq _021B9A50
	movs r0, #0xd4
	str r0, [sp]
	ldr r1, _021B9A5C ; =0x00003B2C
	ldr r3, _021B9A60 ; =0x021DAFB0
	adds r0, r7, #0
	movs r2, #1
	bl FUN_0203A228
	str r0, [r4]
	str r5, [r0]
	ldr r0, [r4]
	strh r6, [r0, #8]
	ldr r0, [r4]
	strh r7, [r0, #4]
	adds r0, r5, #0
	bl FUN_02042A98
	ldr r1, [r4]
	movs r5, #0
	strb r0, [r1, #6]
	ldr r0, [r4]
	movs r1, #0x28
	strb r1, [r0, #7]
	ldr r1, [r4]
	movs r0, #0
	strb r0, [r1, #0xd]
	ldr r1, [r4]
	strb r0, [r1, #0xe]
	movs r1, #1
_021B99D8:
	adds r2, r1, #0
	lsls r2, r0
	tst r2, r6
	beq _021B99E2
	adds r5, r5, #1
_021B99E2:
	adds r0, r0, #1
	cmp r0, #4
	blo _021B99D8
	bl FUN_02042AA4
	cmp r5, r0
	bls _021B99F2
	adds r5, r0, #0
_021B99F2:
	ldr r0, [r4]
	movs r1, #0
	strb r5, [r0, #0xb]
	ldr r0, [r4]
	ldr r7, _021B9A64 ; =0x00003AE4
	strb r1, [r0, #0xf]
	ldr r0, [r4]
	adds r3, r7, #0
	strb r1, [r0, #0x10]
	ldr r0, [r4]
	adds r2, r1, #0
	strb r1, [r0, #0xa]
	movs r5, #4
	adds r3, #0x10
_021B9A0E:
	ldr r6, [r4]
	lsls r0, r1, #2
	adds r6, r6, r0
	str r2, [r6, r7]
	ldr r6, [r4]
	adds r0, r6, r0
	str r2, [r0, r3]
	ldr r0, [r4]
	adds r0, r0, r1
	adds r1, r1, #1
	strb r5, [r0, #0x11]
	cmp r1, #4
	blo _021B9A0E
	ldr r3, _021B9A58 ; =0x021DB0AC
	ldr r1, _021B9A68 ; =0x00003B04
	movs r0, #0
_021B9A2E:
	ldr r5, [r3]
	lsls r4, r2, #2
	adds r4, r5, r4
	adds r2, r2, #1
	str r0, [r4, r1]
	cmp r2, #4
	blo _021B9A2E
	ldr r2, [r3]
	ldr r1, _021B9A6C ; =0x00003B14
	str r0, [r2, r1]
	ldr r2, [r3]
	adds r1, r1, #4
	str r0, [r2, r1]
	movs r0, #1
	bl FUN_021BA334
	pop {r3, r4, r5, r6, r7, pc}
_021B9A50:
	movs r0, #0
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021B9A58: .word 0x021DB0AC
_021B9A5C: .word 0x00003B2C
_021B9A60: .word 0x021DAFB0
_021B9A64: .word 0x00003AE4
_021B9A68: .word 0x00003B04
_021B9A6C: .word 0x00003B14
	thumb_func_end FUN_021B9990

	thumb_func_start FUN_021B9A70
FUN_021B9A70: ; 0x021B9A70
	push {r4, lr}
	ldr r0, _021B9A90 ; =0x021DB0AC
	ldr r0, [r0]
	cmp r0, #0
	beq _021B9A8C
	movs r0, #1
	movs r4, #1
	bl FUN_021BA358
	cmp r0, #0
	bne _021B9A88
	movs r4, #0
_021B9A88:
	adds r0, r4, #0
	pop {r4, pc}
_021B9A8C:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
_021B9A90: .word 0x021DB0AC
	thumb_func_end FUN_021B9A70

	thumb_func_start FUN_021B9A94
FUN_021B9A94: ; 0x021B9A94
	push {r4, lr}
	ldr r4, _021B9AAC ; =0x021DB0AC
	ldr r0, [r4]
	cmp r0, #0
	beq _021B9AA8
	bl FUN_021BA2AC
	ldr r0, [r4]
	bl FUN_0203A278
_021B9AA8:
	pop {r4, pc}
	nop
_021B9AAC: .word 0x021DB0AC
	thumb_func_end FUN_021B9A94

	thumb_func_start FUN_021B9AB0
FUN_021B9AB0: ; 0x021B9AB0
	push {r3, lr}
	ldr r0, _021B9AD0 ; =0x021DB0AC
	ldr r0, [r0]
	cmp r0, #0
	beq _021B9ACA
	bl FUN_020120C8
	cmp r0, #0
	beq _021B9AC6
	movs r0, #1
	pop {r3, pc}
_021B9AC6:
	movs r0, #0
	pop {r3, pc}
_021B9ACA:
	movs r0, #0
	pop {r3, pc}
	nop
_021B9AD0: .word 0x021DB0AC
	thumb_func_end FUN_021B9AB0

	thumb_func_start FUN_021B9AD4
FUN_021B9AD4: ; 0x021B9AD4
	push {r3, lr}
	ldr r2, _021B9AF4 ; =0x021DB0AC
	ldr r1, _021B9AF8 ; =0x00003B1C
	ldr r3, [r2]
	adds r3, r3, r1
	movs r1, #0x64
	strh r1, [r3]
	strh r0, [r3, #2]
	ldr r0, [r2]
	adds r1, #0x9c
	ldr r0, [r0]
	movs r2, #4
	bl FUN_02042C14
	pop {r3, pc}
	nop
_021B9AF4: .word 0x021DB0AC
_021B9AF8: .word 0x00003B1C
	thumb_func_end FUN_021B9AD4

	thumb_func_start FUN_021B9AFC
FUN_021B9AFC: ; 0x021B9AFC
	push {r3, r4, r5, r6}
	ldr r1, _021B9B68 ; =0x021DB0AC
	lsls r3, r0, #1
	ldr r5, [r1]
	ldr r1, _021B9B6C ; =0x00003B20
	adds r6, r5, r1
	adds r4, r6, #1
	ldrb r1, [r4, r3]
	cmp r1, #0
	bne _021B9B64
	ldrh r1, [r2]
	ldrh r2, [r2, #2]
	adds r0, r5, r0
	strb r2, [r0, #0x11]
	lsls r0, r1, #0x18
	lsrs r2, r0, #0x18
	strb r2, [r6, r3]
	movs r0, #1
	strb r0, [r4, r3]
	ldrb r0, [r6, #9]
	cmp r0, r1
	bge _021B9B2A
	strb r2, [r6, #9]
_021B9B2A:
	ldrb r0, [r6, #8]
	adds r0, r0, #1
	strb r0, [r6, #8]
	ldr r0, _021B9B68 ; =0x021DB0AC
	ldrb r1, [r6, #8]
	ldr r2, [r0]
	ldrb r0, [r2, #0xb]
	cmp r1, r0
	blo _021B9B64
	movs r0, #0x28
	strb r0, [r2, #7]
	movs r0, #0
_021B9B42:
	lsls r1, r0, #1
	adds r3, r6, r1
	ldrb r1, [r3, #1]
	cmp r1, #0
	beq _021B9B5E
	ldrb r2, [r6, #9]
	ldrb r1, [r3]
	cmp r2, r1
	bne _021B9B5E
	ldr r1, _021B9B68 ; =0x021DB0AC
	ldr r1, [r1]
	strb r0, [r1, #7]
	pop {r3, r4, r5, r6}
	bx lr
_021B9B5E:
	adds r0, r0, #1
	cmp r0, #4
	blt _021B9B42
_021B9B64:
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_021B9B68: .word 0x021DB0AC
_021B9B6C: .word 0x00003B20
	thumb_func_end FUN_021B9AFC

	thumb_func_start FUN_021B9B70
FUN_021B9B70: ; 0x021B9B70
	ldr r1, _021B9B80 ; =0x021DB0AC
	lsls r0, r0, #1
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _021B9B84 ; =0x00003B21
	ldrb r0, [r1, r0]
	bx lr
	nop
_021B9B80: .word 0x021DB0AC
_021B9B84: .word 0x00003B21
	thumb_func_end FUN_021B9B70

	thumb_func_start FUN_021B9B88
FUN_021B9B88: ; 0x021B9B88
	ldr r0, _021B9B9C ; =0x021DB0AC
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, #0x28
	beq _021B9B96
	movs r0, #1
	bx lr
_021B9B96:
	movs r0, #0
	bx lr
	nop
_021B9B9C: .word 0x021DB0AC
	thumb_func_end FUN_021B9B88

	thumb_func_start FUN_021B9BA0
FUN_021B9BA0: ; 0x021B9BA0
	ldr r0, _021B9BB4 ; =0x021DB0AC
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	ldrb r0, [r0, #6]
	cmp r1, r0
	bne _021B9BB0
	movs r0, #1
	bx lr
_021B9BB0:
	movs r0, #0
	bx lr
	.align 2, 0
_021B9BB4: .word 0x021DB0AC
	thumb_func_end FUN_021B9BA0

	thumb_func_start FUN_021B9BB8
FUN_021B9BB8: ; 0x021B9BB8
	ldr r0, _021B9BCC ; =0x021DB0AC
	ldr r1, [r0]
	cmp r1, #0
	beq _021B9BC6
	ldr r0, _021B9BD0 ; =0x00003B29
	ldrb r0, [r1, r0]
	bx lr
_021B9BC6:
	movs r0, #0x64
	bx lr
	nop
_021B9BCC: .word 0x021DB0AC
_021B9BD0: .word 0x00003B29
	thumb_func_end FUN_021B9BB8

	thumb_func_start FUN_021B9BD4
FUN_021B9BD4: ; 0x021B9BD4
	ldr r1, _021B9BF4 ; =0x021DB0AC
	movs r2, #0
	ldr r3, [r1]
_021B9BDA:
	adds r1, r3, r2
	ldrb r1, [r1, #0x11]
	cmp r0, r1
	bne _021B9BE8
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bx lr
_021B9BE8:
	adds r2, r2, #1
	cmp r2, #4
	blt _021B9BDA
	movs r0, #0x28
	bx lr
	nop
_021B9BF4: .word 0x021DB0AC
	thumb_func_end FUN_021B9BD4

	thumb_func_start FUN_021B9BF8
FUN_021B9BF8: ; 0x021B9BF8
	push {r3, lr}
	sub sp, #0x10
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, _021B9C1C ; =0x021DB0AC
	movs r1, #0xff
	ldr r0, [r0]
	adds r2, r1, #2
	ldr r0, [r0]
	movs r3, #0x20
	bl FUN_02042C44
	add sp, #0x10
	pop {r3, pc}
	nop
_021B9C1C: .word 0x021DB0AC
	thumb_func_end FUN_021B9BF8

	thumb_func_start FUN_021B9C20
FUN_021B9C20: ; 0x021B9C20
	push {r3, r4}
	ldr r0, _021B9C48 ; =0x021DB0AC
	ldr r4, [r0]
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	bne _021B9C44
	adds r3, r4, #0
	adds r3, #0x18
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	movs r0, #1
	strb r0, [r4, #0xa]
_021B9C44:
	pop {r3, r4}
	bx lr
	.align 2, 0
_021B9C48: .word 0x021DB0AC
	thumb_func_end FUN_021B9C20

	thumb_func_start FUN_021B9C4C
FUN_021B9C4C: ; 0x021B9C4C
	adds r3, r0, #0
	ldr r0, _021B9C74 ; =0x021DB0AC
	ldr r2, [r0]
	ldrb r0, [r2, #0xa]
	cmp r0, #0
	beq _021B9C6E
	adds r2, #0x18
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	movs r0, #1
	bx lr
_021B9C6E:
	movs r0, #0
	bx lr
	nop
_021B9C74: .word 0x021DB0AC
	thumb_func_end FUN_021B9C4C

	thumb_func_start FUN_021B9C78
FUN_021B9C78: ; 0x021B9C78
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bl FUN_0201FD24
	adds r3, r0, #0
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, _021B9CA8 ; =0x021DB0AC
	movs r1, #0xff
	ldr r0, [r0]
	adds r2, r1, #3
	ldr r0, [r0]
	bl FUN_02042C44
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	pop {r4, pc}
	nop
_021B9CA8: .word 0x021DB0AC
	thumb_func_end FUN_021B9C78

	thumb_func_start FUN_021B9CAC
FUN_021B9CAC: ; 0x021B9CAC
	push {r3, r4, r5, lr}
	lsls r5, r0, #2
	ldr r0, _021B9CE0 ; =0x000001CE
	ldr r4, _021B9CE4 ; =0x021DB0AC
	str r0, [sp]
	ldr r0, [r4]
	ldr r3, _021B9CE8 ; =0x021DAFB0
	ldrh r1, [r0, #4]
	ldr r0, _021B9CEC ; =0x00007FFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	lsls r0, r0, #0x10
	adds r1, r2, #0
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r4]
	adds r2, r1, r5
	ldr r1, _021B9CF0 ; =0x00003AE4
	str r0, [r2, r1]
	ldr r0, [r4]
	adds r0, r0, r5
	ldr r0, [r0, r1]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B9CE0: .word 0x000001CE
_021B9CE4: .word 0x021DB0AC
_021B9CE8: .word 0x021DAFB0
_021B9CEC: .word 0x00007FFF
_021B9CF0: .word 0x00003AE4
	thumb_func_end FUN_021B9CAC
_021B9CF4:
	.byte 0x03, 0x4A, 0x80, 0x00, 0x12, 0x68, 0x12, 0x18, 0x02, 0x48, 0x11, 0x50
	.byte 0x70, 0x47, 0xC0, 0x46, 0xAC, 0xB0, 0x1D, 0x02, 0xF4, 0x3A, 0x00, 0x00

	thumb_func_start FUN_021B9D0C
FUN_021B9D0C: ; 0x021B9D0C
	push {r4, r5, r6, lr}
	ldr r4, _021B9D38 ; =0x021DB0AC
	ldr r6, _021B9D3C ; =0x00003AF4
	movs r5, #0
_021B9D14:
	adds r0, r5, #0
	bl FUN_021B9B70
	cmp r0, #0
	beq _021B9D2E
	ldr r1, [r4]
	lsls r0, r5, #2
	adds r0, r1, r0
	ldr r0, [r0, r6]
	cmp r0, #0
	bne _021B9D2E
	movs r0, #0
	pop {r4, r5, r6, pc}
_021B9D2E:
	adds r5, r5, #1
	cmp r5, #4
	blt _021B9D14
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021B9D38: .word 0x021DB0AC
_021B9D3C: .word 0x00003AF4
	thumb_func_end FUN_021B9D0C

	thumb_func_start FUN_021B9D40
FUN_021B9D40: ; 0x021B9D40
	push {r3, lr}
	bl FUN_021BA52C
	bl FUN_021BA2AC
	pop {r3, pc}
	thumb_func_end FUN_021B9D40

	thumb_func_start FUN_021B9D4C
FUN_021B9D4C: ; 0x021B9D4C
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bl FUN_02007E70
	cmp r0, #0
	beq _021B9D62
	bl FUN_02007E20
	adds r3, r0, #0
	b _021B9D70
_021B9D62:
	ldr r0, _021B9D90 ; =0x021DB0AC
	movs r3, #4
	ldr r1, [r0]
	ldr r0, _021B9D94 ; =0x00003B1C
	adds r4, r1, r0
	movs r0, #0
	str r0, [r4]
_021B9D70:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, _021B9D90 ; =0x021DB0AC
	movs r1, #0xff
	ldr r0, [r0]
	adds r2, r1, #4
	ldr r0, [r0]
	bl FUN_02042C44
	add sp, #0x10
	pop {r4, pc}
	nop
_021B9D90: .word 0x021DB0AC
_021B9D94: .word 0x00003B1C
	thumb_func_end FUN_021B9D4C

	thumb_func_start FUN_021B9D98
FUN_021B9D98: ; 0x021B9D98
	push {r3, r4, r5, lr}
	cmp r2, #4
	bne _021B9DAE
	ldr r1, _021B9DE0 ; =0x021DB0AC
	ldr r2, [r1]
	ldr r1, _021B9DE4 ; =0x00000BF4
	adds r2, r2, r1
	subs r1, #0x38
	muls r1, r0, r1
	adds r0, r2, r1
	pop {r3, r4, r5, pc}
_021B9DAE:
	lsls r5, r0, #2
	ldr r0, _021B9DE8 ; =0x0000021F
	ldr r4, _021B9DE0 ; =0x021DB0AC
	str r0, [sp]
	ldr r0, [r4]
	ldr r3, _021B9DEC ; =0x021DAFB0
	ldrh r1, [r0, #4]
	ldr r0, _021B9DF0 ; =0x00007FFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	lsls r0, r0, #0x10
	adds r1, r2, #0
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r4]
	adds r2, r1, r5
	ldr r1, _021B9DF4 ; =0x00003AE4
	str r0, [r2, r1]
	ldr r0, [r4]
	adds r0, r0, r5
	ldr r0, [r0, r1]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B9DE0: .word 0x021DB0AC
_021B9DE4: .word 0x00000BF4
_021B9DE8: .word 0x0000021F
_021B9DEC: .word 0x021DAFB0
_021B9DF0: .word 0x00007FFF
_021B9DF4: .word 0x00003AE4
	thumb_func_end FUN_021B9D98

	thumb_func_start FUN_021B9DF8
FUN_021B9DF8: ; 0x021B9DF8
	push {r3, r4}
	cmp r1, #4
	bne _021B9E1E
	ldr r2, _021B9E30 ; =0x021DB0AC
	ldr r3, _021B9E34 ; =0x00000BF4
	ldr r2, [r2]
	adds r4, r2, r3
	adds r2, r3, #0
	subs r2, #0x38
	muls r2, r0, r2
	adds r0, r3, #0
	adds r2, r4, r2
	subs r0, #0x3c
	strh r1, [r2, r0]
	movs r0, #0
	subs r3, #0x3a
	strh r0, [r2, r3]
	pop {r3, r4}
	bx lr
_021B9E1E:
	ldr r2, _021B9E30 ; =0x021DB0AC
	lsls r0, r0, #2
	ldr r2, [r2]
	adds r2, r2, r0
	ldr r0, _021B9E38 ; =0x00003AF4
	str r1, [r2, r0]
	pop {r3, r4}
	bx lr
	nop
_021B9E30: .word 0x021DB0AC
_021B9E34: .word 0x00000BF4
_021B9E38: .word 0x00003AF4
	thumb_func_end FUN_021B9DF8

	thumb_func_start FUN_021B9E3C
FUN_021B9E3C: ; 0x021B9E3C
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021B9E78 ; =0x021DB0AC
	ldr r7, _021B9E7C ; =0x00000BBC
	ldr r6, _021B9E80 ; =0x000017AE
	movs r5, #0
_021B9E46:
	adds r0, r5, #0
	bl FUN_021B9B70
	cmp r0, #0
	beq _021B9E6E
	adds r1, r5, #0
	ldr r0, [r4]
	muls r1, r7, r1
	adds r1, r0, r1
	ldrh r1, [r1, r6]
	cmp r1, #0
	beq _021B9E6E
	lsls r1, r5, #2
	adds r1, r0, r1
	ldr r0, _021B9E84 ; =0x00003AF4
	ldr r0, [r1, r0]
	cmp r0, #0
	bne _021B9E6E
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021B9E6E:
	adds r5, r5, #1
	cmp r5, #4
	blt _021B9E46
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021B9E78: .word 0x021DB0AC
_021B9E7C: .word 0x00000BBC
_021B9E80: .word 0x000017AE
_021B9E84: .word 0x00003AF4
	thumb_func_end FUN_021B9E3C

	thumb_func_start FUN_021B9E88
FUN_021B9E88: ; 0x021B9E88
	push {r3, lr}
	bl FUN_021B9BD4
	cmp r0, #0x28
	beq _021B9EA8
	lsls r1, r0, #2
	ldr r0, _021B9EAC ; =0x021DB0AC
	ldr r0, [r0]
	adds r2, r0, r1
	ldr r0, _021B9EB0 ; =0x00003AF4
	ldr r1, [r2, r0]
	cmp r1, #0
	beq _021B9EA8
	subs r0, #0x10
	ldr r0, [r2, r0]
	pop {r3, pc}
_021B9EA8:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
_021B9EAC: .word 0x021DB0AC
_021B9EB0: .word 0x00003AF4
	thumb_func_end FUN_021B9E88

	thumb_func_start FUN_021B9EB4
FUN_021B9EB4: ; 0x021B9EB4
	push {r3, lr}
	bl FUN_021BA52C
	bl FUN_021BA2AC
	pop {r3, pc}
	thumb_func_end FUN_021B9EB4

	thumb_func_start FUN_021B9EC0
FUN_021B9EC0: ; 0x021B9EC0
	push {r3, lr}
	sub sp, #0x10
	adds r3, r0, #0
	str r3, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, _021B9EEC ; =0x021DB0AC
	ldr r3, [r3]
	ldr r0, [r0]
	movs r1, #0xff
	lsrs r3, r3, #8
	ldr r0, [r0]
	adds r2, r1, #5
	adds r3, r3, #4
	bl FUN_02042C44
	add sp, #0x10
	pop {r3, pc}
	nop
_021B9EEC: .word 0x021DB0AC
	thumb_func_end FUN_021B9EC0

	thumb_func_start FUN_021B9EF0
FUN_021B9EF0: ; 0x021B9EF0
	push {r3, r4, r5, lr}
	ldr r5, _021B9F28 ; =0x021DB0AC
	ldr r4, _021B9F2C ; =0x00003B14
	ldr r1, [r5]
	ldr r0, [r1, r4]
	cmp r0, #0
	bne _021B9F1E
	ldr r0, _021B9F30 ; =0x00000279
	ldr r3, _021B9F34 ; =0x021DAFB0
	str r0, [sp]
	ldrh r1, [r1, #4]
	ldr r0, _021B9F38 ; =0x00007FFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	lsls r0, r0, #0x10
	adds r1, r2, #0
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r5]
	str r0, [r1, r4]
_021B9F1E:
	ldr r0, _021B9F28 ; =0x021DB0AC
	ldr r1, [r0]
	ldr r0, _021B9F2C ; =0x00003B14
	ldr r0, [r1, r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021B9F28: .word 0x021DB0AC
_021B9F2C: .word 0x00003B14
_021B9F30: .word 0x00000279
_021B9F34: .word 0x021DAFB0
_021B9F38: .word 0x00007FFF
	thumb_func_end FUN_021B9EF0

	thumb_func_start FUN_021B9F3C
FUN_021B9F3C: ; 0x021B9F3C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r2, #0
	ldr r4, _021B9FB0 ; =0x021DB0AC
	ldr r1, [r5]
	ldr r0, [r4]
	lsls r2, r1, #0x18
	lsrs r2, r2, #0x16
	ldr r6, _021B9FB4 ; =0x00003B04
	adds r2, r0, r2
	ldr r2, [r2, r6]
	cmp r2, #0
	bne _021B9F7E
	ldr r2, _021B9FB8 ; =0x00000282
	ldr r3, _021B9FBC ; =0x021DAFB0
	str r2, [sp]
	ldrh r2, [r0, #4]
	ldr r0, _021B9FC0 ; =0x00007FFF
	lsrs r1, r1, #8
	ands r2, r0
	adds r0, r0, #1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r5]
	ldr r2, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x16
	adds r1, r2, r1
	str r0, [r1, r6]
_021B9F7E:
	ldr r4, _021B9FB0 ; =0x021DB0AC
	ldr r2, [r5]
	ldr r3, [r4]
	lsls r1, r2, #0x18
	adds r0, r5, #4
	lsrs r1, r1, #0x16
	ldr r5, _021B9FB4 ; =0x00003B04
	adds r1, r3, r1
	ldr r1, [r1, r5]
	lsrs r2, r2, #8
	blx FUN_0207894C
	adds r0, r5, #0
	ldr r1, [r4]
	adds r0, #0x10
	ldr r0, [r1, r0]
	bl FUN_0203A278
	ldr r0, [r4]
	movs r1, #0
	adds r5, #0x10
	str r1, [r0, r5]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021B9FB0: .word 0x021DB0AC
_021B9FB4: .word 0x00003B04
_021B9FB8: .word 0x00000282
_021B9FBC: .word 0x021DAFB0
_021B9FC0: .word 0x00007FFF
	thumb_func_end FUN_021B9F3C

	thumb_func_start FUN_021B9FC4
FUN_021B9FC4: ; 0x021B9FC4
	ldr r1, _021B9FDC ; =0x021DB0AC
	lsls r0, r0, #2
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _021B9FE0 ; =0x00003B04
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _021B9FD8
	movs r0, #1
	bx lr
_021B9FD8:
	movs r0, #0
	bx lr
	.align 2, 0
_021B9FDC: .word 0x021DB0AC
_021B9FE0: .word 0x00003B04
	thumb_func_end FUN_021B9FC4

	thumb_func_start FUN_021B9FE4
FUN_021B9FE4: ; 0x021B9FE4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl FUN_021B9BD4
	cmp r0, #0x28
	beq _021B9FFE
	ldr r1, _021BA030 ; =0x021DB0AC
	lsls r0, r0, #2
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _021BA034 ; =0x00003AE4
	ldr r0, [r1, r0]
	pop {r4, r5, r6, pc}
_021B9FFE:
	ldr r0, _021BA030 ; =0x021DB0AC
	ldr r1, [r0]
	lsls r0, r4, #2
	adds r1, r1, r0
	ldr r0, _021BA038 ; =0x00003B04
	ldr r4, [r1, r0]
	cmp r4, #0
	beq _021BA02C
	adds r0, r4, #0
	bl FUN_0201FE24
	adds r6, r0, #0
	ldr r5, _021BA03C ; =0x00000000
	beq _021BA028
_021BA01A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0201FF34
	adds r5, r5, #1
	cmp r5, r6
	blo _021BA01A
_021BA028:
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
_021BA02C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021BA030: .word 0x021DB0AC
_021BA034: .word 0x00003AE4
_021BA038: .word 0x00003B04
_021BA03C: .word 0x00000000
	thumb_func_end FUN_021B9FE4

	thumb_func_start FUN_021BA040
FUN_021BA040: ; 0x021BA040
	ldr r3, _021BA044 ; =FUN_021BA2AC
	bx r3
	.align 2, 0
_021BA044: .word FUN_021BA2AC
	thumb_func_end FUN_021BA040

	thumb_func_start FUN_021BA048
FUN_021BA048: ; 0x021BA048
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bl FUN_02008B08
	adds r3, r0, #0
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, _021BA074 ; =0x021DB0AC
	movs r1, #0xff
	ldr r0, [r0]
	adds r2, r1, #6
	ldr r0, [r0]
	bl FUN_02042C44
	add sp, #0x10
	pop {r4, pc}
	nop
_021BA074: .word 0x021DB0AC
	thumb_func_end FUN_021BA048

	thumb_func_start FUN_021BA078
FUN_021BA078: ; 0x021BA078
	push {r3, r4, r5, lr}
	lsls r5, r0, #2
	movs r0, #0xb5
	lsls r0, r0, #2
	ldr r4, _021BA0B0 ; =0x021DB0AC
	str r0, [sp]
	ldr r0, [r4]
	ldr r3, _021BA0B4 ; =0x021DAFB0
	ldrh r1, [r0, #4]
	ldr r0, _021BA0B8 ; =0x00007FFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	lsls r0, r0, #0x10
	adds r1, r2, #0
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r4]
	adds r2, r1, r5
	ldr r1, _021BA0BC ; =0x00003AE4
	str r0, [r2, r1]
	ldr r0, [r4]
	adds r0, r0, r5
	ldr r0, [r0, r1]
	pop {r3, r4, r5, pc}
	nop
_021BA0B0: .word 0x021DB0AC
_021BA0B4: .word 0x021DAFB0
_021BA0B8: .word 0x00007FFF
_021BA0BC: .word 0x00003AE4
	thumb_func_end FUN_021BA078
_021BA0C0:
	.byte 0x03, 0x4A, 0x80, 0x00, 0x12, 0x68, 0x12, 0x18, 0x02, 0x48, 0x11, 0x50, 0x70, 0x47, 0xC0, 0x46
	.byte 0xAC, 0xB0, 0x1D, 0x02, 0xF4, 0x3A, 0x00, 0x00

	thumb_func_start FUN_021BA0D8
FUN_021BA0D8: ; 0x021BA0D8
	push {r4, r5, r6, lr}
	ldr r4, _021BA104 ; =0x021DB0AC
	ldr r6, _021BA108 ; =0x00003AF4
	movs r5, #0
_021BA0E0:
	adds r0, r5, #0
	bl FUN_021B9B70
	cmp r0, #0
	beq _021BA0FA
	ldr r1, [r4]
	lsls r0, r5, #2
	adds r0, r1, r0
	ldr r0, [r0, r6]
	cmp r0, #0
	bne _021BA0FA
	movs r0, #0
	pop {r4, r5, r6, pc}
_021BA0FA:
	adds r5, r5, #1
	cmp r5, #4
	blt _021BA0E0
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021BA104: .word 0x021DB0AC
_021BA108: .word 0x00003AF4
	thumb_func_end FUN_021BA0D8

	thumb_func_start FUN_021BA10C
FUN_021BA10C: ; 0x021BA10C
	push {r3, lr}
	bl FUN_021B9BD4
	cmp r0, #0x28
	beq _021BA124
	ldr r1, _021BA13C ; =0x021DB0AC
	lsls r0, r0, #2
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _021BA140 ; =0x00003AE4
	ldr r0, [r1, r0]
	pop {r3, pc}
_021BA124:
	ldr r0, _021BA13C ; =0x021DB0AC
	ldr r1, _021BA144 ; =0x00003B14
	ldr r2, [r0]
	ldr r0, [r2, r1]
	cmp r0, #0
	beq _021BA138
	adds r1, r1, #4
	ldr r1, [r2, r1]
	cmp r1, #0
	bne _021BA13A
_021BA138:
	movs r0, #0
_021BA13A:
	pop {r3, pc}
	.align 2, 0
_021BA13C: .word 0x021DB0AC
_021BA140: .word 0x00003AE4
_021BA144: .word 0x00003B14
	thumb_func_end FUN_021BA10C

	thumb_func_start FUN_021BA148
FUN_021BA148: ; 0x021BA148
	push {r3, r4, r5, lr}
	sub sp, #0x10
	ldr r4, _021BA18C ; =0x021DB0AC
	ldr r1, [r4]
	ldrh r2, [r1, #4]
	ldr r1, _021BA190 ; =0x00007FFF
	ands r2, r1
	adds r1, r1, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BA24C
	adds r5, r0, #0
	str r5, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [r4]
	movs r1, #0xff
	ldr r0, [r0]
	adds r2, r1, #7
	movs r3, #0x6c
	bl FUN_02042C44
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BA2A4
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BA18C: .word 0x021DB0AC
_021BA190: .word 0x00007FFF
	thumb_func_end FUN_021BA148

	thumb_func_start FUN_021BA194
FUN_021BA194: ; 0x021BA194
	push {r3, r4, lr}
	sub sp, #4
	ldr r0, _021BA1C8 ; =0x0000031E
	ldr r4, _021BA1CC ; =0x021DB0AC
	str r0, [sp]
	ldr r0, [r4]
	ldr r3, _021BA1D0 ; =0x021DAFB0
	ldrh r1, [r0, #4]
	ldr r0, _021BA1D4 ; =0x00007FFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	lsls r0, r0, #0x10
	adds r1, r2, #0
	lsrs r0, r0, #0x10
	movs r2, #1
	bl FUN_0203A228
	ldr r2, [r4]
	ldr r1, _021BA1D8 ; =0x00003B14
	str r0, [r2, r1]
	ldr r0, [r4]
	ldr r0, [r0, r1]
	add sp, #4
	pop {r3, r4, pc}
	nop
_021BA1C8: .word 0x0000031E
_021BA1CC: .word 0x021DB0AC
_021BA1D0: .word 0x021DAFB0
_021BA1D4: .word 0x00007FFF
_021BA1D8: .word 0x00003B14
	thumb_func_end FUN_021BA194
_021BA1DC:
	.byte 0x02, 0x48, 0x02, 0x68
	.byte 0x02, 0x48, 0x11, 0x50, 0x70, 0x47, 0xC0, 0x46, 0xAC, 0xB0, 0x1D, 0x02, 0x18, 0x3B, 0x00, 0x00

	thumb_func_start FUN_021BA1F0
FUN_021BA1F0: ; 0x021BA1F0
	ldr r0, _021BA204 ; =0x021DB0AC
	ldr r1, [r0]
	ldr r0, _021BA208 ; =0x00003B18
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _021BA200
	movs r0, #1
	bx lr
_021BA200:
	movs r0, #0
	bx lr
	.align 2, 0
_021BA204: .word 0x021DB0AC
_021BA208: .word 0x00003B18
	thumb_func_end FUN_021BA1F0

	thumb_func_start FUN_021BA20C
FUN_021BA20C: ; 0x021BA20C
	ldr r0, _021BA218 ; =0x021DB0AC
	ldr r1, [r0]
	ldr r0, _021BA21C ; =0x00003B14
	ldr r0, [r1, r0]
	bx lr
	nop
_021BA218: .word 0x021DB0AC
_021BA21C: .word 0x00003B14
	thumb_func_end FUN_021BA20C

	thumb_func_start FUN_021BA220
FUN_021BA220: ; 0x021BA220
	push {r3, r4, r5, lr}
	ldr r5, _021BA23C ; =0x021DB0AC
	ldr r4, _021BA240 ; =0x00003B14
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl FUN_0203A278
	ldr r0, [r5]
	movs r2, #0
	str r2, [r0, r4]
	ldr r1, [r5]
	adds r0, r4, #4
	str r2, [r1, r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BA23C: .word 0x021DB0AC
_021BA240: .word 0x00003B14
	thumb_func_end FUN_021BA220

	thumb_func_start FUN_021BA244
FUN_021BA244: ; 0x021BA244
	ldr r3, _021BA248 ; =FUN_021BA2AC
	bx r3
	.align 2, 0
_021BA248: .word FUN_021BA2AC
	thumb_func_end FUN_021BA244

	thumb_func_start FUN_021BA24C
FUN_021BA24C: ; 0x021BA24C
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _021BA29C ; =0x00000349
	ldr r3, _021BA2A0 ; =0x021DAFB0
	str r0, [sp]
	adds r0, r1, #0
	movs r1, #0x6c
	movs r2, #1
	bl FUN_0203A228
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x28
	blx FUN_0207894C
	bl FUN_02048720
	adds r1, r5, #0
	adds r1, #0x28
	movs r2, #0x40
	blx FUN_02078650
	ldr r0, [r4, #0x14]
	cmp r0, #0
	beq _021BA296
	bl FUN_02048624
	str r0, [r5, #0x68]
	ldr r0, [r4, #0x14]
	bl FUN_0204871C
	adds r1, r5, #0
	adds r1, #0x28
	movs r2, #0x20
	bl FUN_02024B00
_021BA296:
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
	nop
_021BA29C: .word 0x00000349
_021BA2A0: .word 0x021DAFB0
	thumb_func_end FUN_021BA24C

	thumb_func_start FUN_021BA2A4
FUN_021BA2A4: ; 0x021BA2A4
	ldr r3, _021BA2A8 ; =FUN_0203A278
	bx r3
	.align 2, 0
_021BA2A8: .word FUN_0203A278
	thumb_func_end FUN_021BA2A4

	thumb_func_start FUN_021BA2AC
FUN_021BA2AC: ; 0x021BA2AC
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021BA324 ; =0x00003AE4
	ldr r6, _021BA328 ; =0x021DB0AC
	movs r4, #0
	adds r7, #0x10
_021BA2B6:
	ldr r0, [r6]
	lsls r5, r4, #2
	adds r1, r0, r5
	ldr r0, _021BA324 ; =0x00003AE4
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _021BA2DA
	bl FUN_0203A278
	ldr r0, [r6]
	movs r1, #0
	adds r2, r0, r5
	ldr r0, _021BA324 ; =0x00003AE4
	str r1, [r2, r0]
	ldr r0, [r6]
	adds r1, r0, r5
	movs r0, #0
	str r0, [r1, r7]
_021BA2DA:
	adds r4, r4, #1
	cmp r4, #4
	blt _021BA2B6
	ldr r6, _021BA328 ; =0x021DB0AC
	ldr r7, _021BA32C ; =0x00003B04
	movs r5, #0
_021BA2E6:
	ldr r0, [r6]
	lsls r4, r5, #2
	adds r0, r0, r4
	ldr r0, [r0, r7]
	cmp r0, #0
	beq _021BA2FE
	bl FUN_0203A278
	ldr r0, [r6]
	adds r1, r0, r4
	movs r0, #0
	str r0, [r1, r7]
_021BA2FE:
	adds r5, r5, #1
	cmp r5, #4
	blt _021BA2E6
	ldr r5, _021BA328 ; =0x021DB0AC
	ldr r4, _021BA330 ; =0x00003B14
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _021BA320
	bl FUN_0203A278
	ldr r0, [r5]
	movs r2, #0
	str r2, [r0, r4]
	ldr r1, [r5]
	adds r0, r4, #4
	str r2, [r1, r0]
_021BA320:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BA324: .word 0x00003AE4
_021BA328: .word 0x021DB0AC
_021BA32C: .word 0x00003B04
_021BA330: .word 0x00003B14
	thumb_func_end FUN_021BA2AC

	thumb_func_start FUN_021BA334
FUN_021BA334: ; 0x021BA334
	push {r3, lr}
	adds r1, r0, #0
	ldr r0, _021BA354 ; =0x021DB0AC
	ldr r2, [r0]
	cmp r2, #0
	beq _021BA352
	strb r1, [r2, #0xf]
	ldr r3, [r0]
	movs r2, #1
	strb r2, [r3, #0x10]
	ldr r3, [r0]
	ldr r0, [r3]
	ldrh r3, [r3, #8]
	bl FUN_02040B64
_021BA352:
	pop {r3, pc}
	.align 2, 0
_021BA354: .word 0x021DB0AC
	thumb_func_end FUN_021BA334

	thumb_func_start FUN_021BA358
FUN_021BA358: ; 0x021BA358
	push {r4, lr}
	ldr r4, _021BA394 ; =0x021DB0AC
	adds r1, r0, #0
	ldr r3, [r4]
	cmp r3, #0
	beq _021BA390
	ldrb r0, [r3, #0x10]
	cmp r0, #0
	ldr r0, [r3]
	beq _021BA384
	ldrb r1, [r3, #0xf]
	movs r2, #1
	bl FUN_02040690
	cmp r0, #0
	beq _021BA38C
	ldr r1, [r4]
	movs r2, #0
	strb r2, [r1, #0xf]
	ldr r1, [r4]
	strb r2, [r1, #0x10]
	pop {r4, pc}
_021BA384:
	ldrh r3, [r3, #8]
	movs r2, #1
	bl FUN_02040B64
_021BA38C:
	movs r0, #0
	pop {r4, pc}
_021BA390:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
_021BA394: .word 0x021DB0AC
	thumb_func_end FUN_021BA358

	thumb_func_start FUN_021BA398
FUN_021BA398: ; 0x021BA398
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021B9BD4
	adds r1, r0, #0
	cmp r1, #0x28
	beq _021BA3C8
	str r5, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	ldr r0, _021BA3D0 ; =0x021DB0AC
	ldr r2, _021BA3D4 ; =0x00000107
	ldr r0, [r0]
	adds r3, r4, #0
	ldr r0, [r0]
	bl FUN_02042C44
	add sp, #0x10
	pop {r3, r4, r5, pc}
_021BA3C8:
	movs r0, #1
	add sp, #0x10
	pop {r3, r4, r5, pc}
	nop
_021BA3D0: .word 0x021DB0AC
_021BA3D4: .word 0x00000107
	thumb_func_end FUN_021BA398

	thumb_func_start FUN_021BA3D8
FUN_021BA3D8: ; 0x021BA3D8
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021BA408 ; =0x021DB0AC
	ldr r7, _021BA40C ; =0x00000BBC
	ldr r6, _021BA410 ; =0x000017AE
	movs r5, #0
_021BA3E2:
	adds r0, r5, #0
	bl FUN_021B9B70
	cmp r0, #0
	beq _021BA3FE
	adds r0, r5, #0
	ldr r1, [r4]
	muls r0, r7, r0
	adds r0, r1, r0
	ldrh r0, [r0, r6]
	cmp r0, #0
	beq _021BA3FE
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021BA3FE:
	adds r5, r5, #1
	cmp r5, #4
	blt _021BA3E2
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BA408: .word 0x021DB0AC
_021BA40C: .word 0x00000BBC
_021BA410: .word 0x000017AE
	thumb_func_end FUN_021BA3D8

	thumb_func_start FUN_021BA414
FUN_021BA414: ; 0x021BA414
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_021B9BD4
	ldr r1, _021BA434 ; =0x021DB0AC
	ldr r2, _021BA438 ; =0x00000BF4
	ldr r1, [r1]
	adds r3, r1, r2
	adds r1, r2, #0
	subs r1, #0x38
	muls r1, r0, r1
	adds r0, r3, r1
	subs r2, #0x3c
	str r0, [r4]
	ldrh r0, [r0, r2]
	pop {r4, pc}
	.align 2, 0
_021BA434: .word 0x021DB0AC
_021BA438: .word 0x00000BF4
	thumb_func_end FUN_021BA414
_021BA43C:
	.byte 0x03, 0x49, 0x0A, 0x68
	.byte 0x03, 0x49, 0x52, 0x18, 0x38, 0x39, 0x41, 0x43, 0x50, 0x18, 0x70, 0x47, 0xAC, 0xB0, 0x1D, 0x02
	.byte 0xF4, 0x0B, 0x00, 0x00

	thumb_func_start FUN_021BA454
FUN_021BA454: ; 0x021BA454
	push {r4, r5}
	ldr r5, _021BA48C ; =0x00000BBC
	adds r4, r0, #0
	ldr r0, _021BA490 ; =0x021DB0AC
	adds r2, r5, #0
	ldr r3, [r0]
	adds r2, #0x38
	muls r4, r5, r4
	adds r2, r3, r2
	lsls r1, r1, #0x10
	adds r3, r2, r4
	lsrs r2, r1, #0x10
	subs r1, r5, #4
	strh r2, [r3, r1]
	movs r1, #0
	subs r5, r5, #2
	strh r1, [r3, r5]
	ldr r3, [r0]
	adds r5, r3, r4
	ldr r3, _021BA494 ; =0x000017AC
	strh r2, [r5, r3]
	ldr r0, [r0]
	adds r2, r0, r4
	adds r0, r3, #2
	strh r1, [r2, r0]
	pop {r4, r5}
	bx lr
	nop
_021BA48C: .word 0x00000BBC
_021BA490: .word 0x021DB0AC
_021BA494: .word 0x000017AC
	thumb_func_end FUN_021BA454

	thumb_func_start FUN_021BA498
FUN_021BA498: ; 0x021BA498
	ldr r3, _021BA49C ; =FUN_021BA52C
	bx r3
	.align 2, 0
_021BA49C: .word FUN_021BA52C
	thumb_func_end FUN_021BA498

	thumb_func_start FUN_021BA4A0
FUN_021BA4A0: ; 0x021BA4A0
	ldr r0, _021BA4A8 ; =0x021DB0AC
	ldr r0, [r0]
	ldrb r0, [r0, #0xd]
	bx lr
	.align 2, 0
_021BA4A8: .word 0x021DB0AC
	thumb_func_end FUN_021BA4A0

	thumb_func_start FUN_021BA4AC
FUN_021BA4AC: ; 0x021BA4AC
	ldr r1, _021BA4BC ; =0x021DB0AC
	ldr r1, [r1]
	adds r1, #0x38
	str r1, [r0]
	ldr r0, _021BA4C0 ; =0x00000BB8
	ldrh r0, [r1, r0]
	bx lr
	nop
_021BA4BC: .word 0x021DB0AC
_021BA4C0: .word 0x00000BB8
	thumb_func_end FUN_021BA4AC

	thumb_func_start FUN_021BA4C4
FUN_021BA4C4: ; 0x021BA4C4
	push {r3, r4, r5, lr}
	sub sp, #0x10
	ldr r5, _021BA4F4 ; =0x021DB0AC
	adds r3, r1, #0
	ldr r1, [r5]
	movs r2, #0x42
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [r1]
	ldrb r1, [r1, #7]
	lsls r2, r2, #2
	bl FUN_02042C44
	cmp r0, #0
	beq _021BA4EE
	ldr r1, [r5]
	strb r4, [r1, #0xd]
_021BA4EE:
	add sp, #0x10
	pop {r3, r4, r5, pc}
	nop
_021BA4F4: .word 0x021DB0AC
	thumb_func_end FUN_021BA4C4
_021BA4F8:
	.byte 0x07, 0x4A, 0x13, 0x68, 0x58, 0x7B, 0x00, 0x28
	.byte 0x08, 0xD1, 0x06, 0x48, 0x38, 0x33, 0x19, 0x52, 0x00, 0x21, 0x80, 0x1C, 0x19, 0x52, 0x10, 0x68
	.byte 0x01, 0x21, 0x41, 0x73, 0x70, 0x47, 0xC0, 0x46, 0xAC, 0xB0, 0x1D, 0x02, 0xB8, 0x0B, 0x00, 0x00
	.byte 0x01, 0x48, 0x00, 0x68, 0x38, 0x30, 0x70, 0x47, 0xAC, 0xB0, 0x1D, 0x02

	thumb_func_start FUN_021BA52C
FUN_021BA52C: ; 0x021BA52C
	push {r4, r5, r6, r7}
	ldr r2, _021BA55C ; =0x00000BF4
	ldr r3, _021BA55C ; =0x00000BF4
	ldr r4, _021BA55C ; =0x00000BF4
	movs r0, #0
	adds r6, r0, #0
	movs r5, #1
	subs r2, #0x38
	subs r3, #0x3c
	subs r4, #0x3a
_021BA540:
	ldr r1, _021BA560 ; =0x021DB0AC
	ldr r7, [r1]
	ldr r1, _021BA55C ; =0x00000BF4
	adds r7, r7, r1
	adds r1, r0, #0
	muls r1, r2, r1
	adds r1, r7, r1
	strh r6, [r1, r3]
	adds r0, r0, #1
	strh r5, [r1, r4]
	cmp r0, #4
	blt _021BA540
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
_021BA55C: .word 0x00000BF4
_021BA560: .word 0x021DB0AC
	thumb_func_end FUN_021BA52C

	thumb_func_start FUN_021BA564
FUN_021BA564: ; 0x021BA564
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _021BA594 ; =0x00000477
	ldr r3, _021BA598 ; =0x021DAFB0
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r4, #4
	movs r2, #1
	bl FUN_0203A228
	ldr r1, [r0]
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	lsls r1, r4, #8
	orrs r2, r1
	movs r1, #0xff
	bics r2, r1
	movs r1, #4
	orrs r1, r2
	str r1, [r0]
	add sp, #4
	pop {r3, r4, pc}
	nop
_021BA594: .word 0x00000477
_021BA598: .word 0x021DAFB0
	thumb_func_end FUN_021BA564

	thumb_func_start FUN_021BA59C
FUN_021BA59C: ; 0x021BA59C
	ldr r3, _021BA5A0 ; =FUN_0203A278
	bx r3
	.align 2, 0
_021BA5A0: .word FUN_0203A278
	thumb_func_end FUN_021BA59C

	thumb_func_start FUN_021BA5A4
FUN_021BA5A4: ; 0x021BA5A4
	push {r4, lr}
	adds r3, r0, #0
	ldr r4, [r3]
	movs r0, #0xff
	bics r4, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	orrs r2, r0
	str r2, [r3]
	adds r0, r1, #0
	adds r1, r3, #4
	lsrs r2, r2, #8
	blx FUN_0207894C
	pop {r4, pc}
	thumb_func_end FUN_021BA5A4

	thumb_func_start FUN_021BA5C4
FUN_021BA5C4: ; 0x021BA5C4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0xe3
	movs r1, #0x7e
	str r0, [sp]
	adds r0, r2, #0
	ldr r3, _021BA730 ; =0x021DAFBC
	lsls r1, r1, #2
	movs r2, #1
	bl FUN_0203A228
	adds r4, r0, #0
	strb r6, [r4, #0x19]
	adds r0, r5, #0
	movs r1, #5
	movs r2, #0
	movs r6, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xc]
	str r5, [r4]
	adds r0, r5, #0
	movs r1, #0xa0
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0x10]
	adds r0, r5, #0
	movs r1, #0xa1
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xe]
	adds r0, r5, #0
	movs r1, #6
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0x12]
	ldrh r1, [r4, #0x12]
	ldr r0, _021BA734 ; =0x0000027E
	cmp r1, r0
	bls _021BA620
	strh r6, [r4, #0x12]
_021BA620:
	movs r6, #0
	strh r6, [r4, #0x14]
	ldrb r1, [r4, #0x1b]
	movs r0, #0x20
	movs r2, #0
	bics r1, r0
	strb r1, [r4, #0x1b]
	str r6, [r4, #4]
	ldrb r1, [r4, #0x1b]
	movs r0, #0x40
	bics r1, r0
	strb r1, [r4, #0x1b]
	ldrb r1, [r4, #0x1b]
	movs r0, #0x80
	bics r1, r0
	strb r1, [r4, #0x1b]
	adds r0, r5, #0
	movs r1, #0x6f
	bl FUN_0201CD24
	ldrb r1, [r4, #0x1b]
	movs r2, #0x1f
	lsls r0, r0, #0x18
	bics r1, r2
	lsrs r2, r0, #0x18
	movs r0, #0x1f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x1b]
	adds r0, r5, #0
	movs r1, #0xa
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0x16]
	adds r0, r5, #0
	movs r1, #0x9e
	movs r2, #0
	bl FUN_0201CD24
	strb r0, [r4, #0x18]
	ldrb r1, [r4, #0x1b]
	ldrh r0, [r4, #0xc]
	movs r2, #1
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	bl FUN_0201EF48
	strb r0, [r4, #0x1a]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #1
	bl FUN_021BA73C
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	bl FUN_021BA7C4
	movs r1, #5
	lsls r1, r1, #6
	strb r0, [r4, r1]
	adds r0, r1, #3
	strb r6, [r4, r0]
	adds r0, r4, #0
	adds r0, #0xfc
	bl FUN_021BAC00
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021BBBF8
	adds r0, r5, #0
	bl FUN_0201CF70
	adds r5, r0, #0
	beq _021BA6CC
	bl FUN_021BD56C
	lsls r1, r5, #2
	adds r1, r4, r1
	str r0, [r1, #0x1c]
	adds r0, r4, r5
	adds r0, #0xac
	strb r6, [r0]
_021BA6CC:
	movs r5, #0x52
	lsls r5, r5, #2
	ldr r0, _021BA738 ; =0x00002710
	subs r1, r5, #2
	strh r0, [r4, r5]
	movs r0, #0
	strh r0, [r4, r1]
	adds r1, r5, #0
	adds r1, #0xaa
	strh r0, [r4, r1]
	adds r1, r5, #2
	strh r0, [r4, r1]
	adds r1, r5, #4
	strh r0, [r4, r1]
	movs r2, #0x11
	subs r1, r5, #4
	strb r2, [r4, r1]
	adds r1, r5, #6
	strh r0, [r4, r1]
	adds r1, r5, #0
	adds r1, #0xac
	strh r0, [r4, r1]
	adds r1, r5, #0
	movs r2, #0x1f
	adds r1, #0xae
	strb r2, [r4, r1]
	subs r1, r5, #6
	strb r0, [r4, r1]
	adds r0, r5, #0
	adds r0, #0xb
	adds r0, r4, r0
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r5, #0xd
	adds r0, r4, r5
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r4, #0
	bl FUN_021BC034
	adds r0, r4, #0
	bl FUN_021BC604
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
_021BA730: .word 0x021DAFBC
_021BA734: .word 0x0000027E
_021BA738: .word 0x00002710
	thumb_func_end FUN_021BA5C4

	thumb_func_start FUN_021BA73C
FUN_021BA73C: ; 0x021BA73C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r3, #0
	cmp r2, #0
	beq _021BA760
	adds r0, r4, #0
	movs r1, #0xa0
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r5, #0x10]
	adds r0, r4, #0
	movs r1, #0xa1
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r5, #0xe]
_021BA760:
	adds r0, r4, #0
	movs r1, #8
	movs r2, #0
	movs r7, #0
	bl FUN_0201CD24
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021BAAF4
	cmp r6, #0
	beq _021BA78C
	adds r0, r4, #0
	movs r1, #0xa
	adds r2, r7, #0
	bl FUN_0201CD24
	movs r1, #0x4f
	lsls r1, r1, #2
	strh r0, [r5, r1]
_021BA78C:
	adds r0, r4, #0
	movs r1, #0x6f
	movs r2, #0
	movs r4, #0x6f
	bl FUN_0201CD24
	movs r1, #0x6f
	adds r1, #0xd2
	strb r0, [r5, r1]
	movs r1, #0x6f
	adds r1, #0xd2
	ldrh r0, [r5, #0xc]
	ldrb r1, [r5, r1]
	movs r2, #0x26
	bl FUN_0201EF48
	movs r1, #0x6f
	adds r1, #0xcf
	strh r0, [r5, r1]
	movs r0, #0x6f
	adds r0, #0xcf
	ldrh r0, [r5, r0]
	cmp r0, #1
	bhs _021BA7C2
	movs r0, #1
	adds r4, #0xcf
	strh r0, [r5, r4]
_021BA7C2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BA73C

	thumb_func_start FUN_021BA7C4
FUN_021BA7C4: ; 0x021BA7C4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	str r0, [sp]
	adds r0, r1, #0
	str r1, [sp, #4]
	str r2, [sp, #8]
	bl FUN_0201CC38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	movs r6, #0
	cmp r0, #0
	beq _021BA806
	ldr r1, _021BA898 ; =0x00000109
	ldr r0, [sp]
	adds r2, r6, #0
	adds r1, r0, r1
	movs r7, #0xe
	movs r3, #0xf
	movs r4, #0xf0
_021BA7F0:
	adds r0, r2, #0
	muls r0, r7, r0
	ldrb r5, [r1, r0]
	adds r2, r2, #1
	bics r5, r3
	strb r5, [r1, r0]
	ldrb r5, [r1, r0]
	bics r5, r4
	strb r5, [r1, r0]
	cmp r2, #4
	blo _021BA7F0
_021BA806:
	movs r1, #0x41
	ldr r0, [sp]
	lsls r1, r1, #2
	movs r5, #0
	adds r4, r0, r1
	movs r7, #0xe
_021BA812:
	adds r0, r5, #0
	muls r0, r7, r0
	lsls r2, r5, #0x18
	ldr r1, [sp, #4]
	adds r0, r4, r0
	lsrs r2, r2, #0x18
	bl FUN_021BAA84
	cmp r0, #0
	beq _021BA828
	adds r6, r6, #1
_021BA828:
	adds r5, r5, #1
	cmp r5, #4
	blo _021BA812
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021BA88A
	movs r0, #0x41
	lsls r0, r0, #2
	adds r0, r0, #6
	mov ip, r0
	movs r0, #0x41
	lsls r0, r0, #2
	adds r0, r0, #2
	str r0, [sp, #0x10]
	movs r0, #0x41
	movs r7, #0x41
	lsls r0, r0, #2
	movs r1, #0x41
	movs r2, #0x41
	lsls r7, r7, #2
	adds r0, r0, #4
	lsls r1, r1, #2
	lsls r2, r2, #2
	movs r5, #0
	adds r7, #8
	str r0, [sp, #0x14]
	adds r1, #0xa
	adds r2, #0xc
_021BA860:
	adds r3, r5, #0
	movs r0, #0xe
	muls r3, r0, r3
	ldr r0, [sp]
	adds r5, r5, #1
	adds r4, r0, r3
	movs r0, #0x41
	lsls r0, r0, #2
	ldrh r3, [r4, r0]
	mov r0, ip
	strh r3, [r4, r0]
	ldr r0, [sp, #0x10]
	ldrh r0, [r4, r0]
	strh r0, [r4, r7]
	ldr r0, [sp, #0x14]
	ldrh r0, [r4, r0]
	strh r0, [r4, r1]
	movs r0, #1
	strb r0, [r4, r2]
	cmp r5, #4
	blo _021BA860
_021BA88A:
	ldr r0, [sp, #4]
	ldr r1, [sp, #0xc]
	bl FUN_0201CC78
	adds r0, r6, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BA898: .word 0x00000109
	thumb_func_end FUN_021BA7C4

	thumb_func_start FUN_021BA89C
FUN_021BA89C: ; 0x021BA89C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r4, [r0]
	movs r0, #0x41
	lsls r0, r0, #2
	adds r0, r0, #2
	str r0, [sp, #4]
	movs r0, #0x41
	lsls r0, r0, #2
	movs r5, #0
	adds r7, r0, #4
_021BA8B4:
	movs r0, #0xe
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, [sp]
	lsls r2, r5, #0x18
	adds r6, r0, r1
	movs r1, #0x41
	lsls r1, r1, #2
	ldrh r1, [r6, r1]
	adds r0, r4, #0
	lsrs r2, r2, #0x18
	bl FUN_0201D250
	ldr r2, [sp, #4]
	adds r1, r5, #0
	ldrb r2, [r6, r2]
	adds r0, r4, #0
	adds r1, #0x3a
	bl FUN_0201CD48
	adds r1, r5, #0
	ldrb r2, [r6, r7]
	adds r0, r4, #0
	adds r1, #0x3e
	bl FUN_0201CD48
	adds r5, r5, #1
	cmp r5, #4
	blo _021BA8B4
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BA89C

	thumb_func_start FUN_021BA8F4
FUN_021BA8F4: ; 0x021BA8F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r7, r0, #0
	ldr r0, [r7]
	movs r5, #0
	str r0, [sp]
	movs r0, #5
	lsls r0, r0, #6
	str r0, [sp, #8]
	strb r5, [r7, r0]
	adds r4, r7, r0
	subs r0, #0x3c
	adds r0, r7, r0
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	str r0, [sp, #0x20]
	subs r0, #0x3c
	str r0, [sp, #0x20]
	ldr r0, [sp, #8]
	str r0, [sp, #0x1c]
	subs r0, #0x36
	str r0, [sp, #0x1c]
	ldr r0, [sp, #8]
	str r0, [sp, #0x18]
	subs r0, #0x3a
	str r0, [sp, #0x18]
	ldr r0, [sp, #8]
	str r0, [sp, #0x14]
	subs r0, #0x34
	str r0, [sp, #0x14]
	ldr r0, [sp, #8]
	str r0, [sp, #0x10]
	subs r0, #0x38
	str r0, [sp, #0x10]
	ldr r0, [sp, #8]
	str r0, [sp, #0xc]
	subs r0, #0x32
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	subs r0, #0x30
	str r0, [sp, #8]
_021BA946:
	movs r0, #0xe
	adds r6, r5, #0
	muls r6, r0, r6
	ldr r0, [sp, #4]
	lsls r2, r5, #0x18
	ldr r1, [sp]
	adds r0, r0, r6
	lsrs r2, r2, #0x18
	bl FUN_021BAA84
	cmp r0, #0
	beq _021BA964
	ldrb r0, [r4]
	adds r0, r0, #1
	strb r0, [r4]
_021BA964:
	ldr r1, [sp, #8]
	adds r0, r7, r6
	ldrb r1, [r0, r1]
	cmp r1, #0
	beq _021BA986
	ldr r1, [sp, #0x20]
	ldrh r2, [r0, r1]
	ldr r1, [sp, #0x1c]
	strh r2, [r0, r1]
	ldr r1, [sp, #0x18]
	ldrh r2, [r0, r1]
	ldr r1, [sp, #0x14]
	strh r2, [r0, r1]
	ldr r1, [sp, #0x10]
	ldrh r2, [r0, r1]
	ldr r1, [sp, #0xc]
	strh r2, [r0, r1]
_021BA986:
	adds r5, r5, #1
	cmp r5, #4
	blo _021BA946
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BA8F4

	thumb_func_start FUN_021BA990
FUN_021BA990: ; 0x021BA990
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	movs r0, #5
	lsls r0, r0, #6
	str r0, [sp]
	ldr r2, [sp]
	ldr r7, [sp]
	subs r2, #0x30
	mov ip, r2
	ldr r2, [sp]
	ldr r6, [sp]
	subs r2, #0x3c
	mov lr, r2
	ldr r2, [sp]
	movs r1, #0
	str r2, [sp, #8]
	subs r2, #0x36
	str r2, [sp, #8]
	ldr r2, [sp]
	strb r1, [r5, r0]
	str r2, [sp, #4]
	subs r2, #0x3a
	str r2, [sp, #4]
	ldr r2, [sp]
	adds r0, r5, r0
	str r2, [sp, #0xc]
	subs r2, #0x34
	str r2, [sp, #0xc]
	ldr r2, [sp]
	subs r7, #0x38
	subs r2, #0x36
	subs r6, #0x32
	str r2, [sp]
_021BA9D4:
	movs r2, #0xe
	muls r2, r1, r2
	adds r2, r5, r2
	mov r3, lr
	ldrh r4, [r2, r3]
	ldr r3, [sp, #8]
	strh r4, [r2, r3]
	ldr r3, [sp, #4]
	ldrh r4, [r2, r3]
	ldr r3, [sp, #0xc]
	strh r4, [r2, r3]
	ldrh r3, [r2, r7]
	strh r3, [r2, r6]
	ldr r3, [sp]
	ldrh r3, [r2, r3]
	cmp r3, #0
	beq _021BA9FC
	ldrb r3, [r0]
	adds r3, r3, #1
	strb r3, [r0]
_021BA9FC:
	movs r4, #1
	mov r3, ip
	adds r1, r1, #1
	strb r4, [r2, r3]
	cmp r1, #4
	blo _021BA9D4
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BA990

	thumb_func_start FUN_021BAA0C
FUN_021BAA0C: ; 0x021BAA0C
	ldrb r2, [r0, #0xb]
	movs r1, #0xf
	bics r2, r1
	strb r2, [r0, #0xb]
	ldrb r2, [r0, #5]
	bics r2, r1
	strb r2, [r0, #5]
	bx lr
	thumb_func_end FUN_021BAA0C

	thumb_func_start FUN_021BAA1C
FUN_021BAA1C: ; 0x021BAA1C
	push {r4, lr}
	adds r4, r0, #0
	cmp r3, #0
	beq _021BAA3C
	bl FUN_021BAA48
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	beq _021BAA46
	ldrh r0, [r4]
	strh r0, [r4, #6]
	ldrh r0, [r4, #2]
	strh r0, [r4, #8]
	ldrh r0, [r4, #4]
	strh r0, [r4, #0xa]
	pop {r4, pc}
_021BAA3C:
	adds r0, r4, #6
	bl FUN_021BAA48
	movs r0, #0
	strb r0, [r4, #0xc]
_021BAA46:
	pop {r4, pc}
	thumb_func_end FUN_021BAA1C

	thumb_func_start FUN_021BAA48
FUN_021BAA48: ; 0x021BAA48
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	ldrb r2, [r5, #5]
	movs r0, #0xf
	strh r1, [r5]
	bics r2, r0
	strb r2, [r5, #5]
	ldrb r2, [r5, #5]
	movs r0, #0xf0
	bics r2, r0
	strb r2, [r5, #5]
	cmp r1, #0
	beq _021BAA6E
	adds r0, r1, #0
	movs r1, #0
	bl FUN_020216DC
	b _021BAA70
_021BAA6E:
	movs r0, #0
_021BAA70:
	strb r0, [r5, #3]
	cmp r4, #0
	beq _021BAA7E
	ldrb r0, [r5, #3]
	cmp r0, r4
	bls _021BAA7E
	strb r4, [r5, #3]
_021BAA7E:
	ldrb r0, [r5, #3]
	strb r0, [r5, #2]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BAA48

	thumb_func_start FUN_021BAA84
FUN_021BAA84: ; 0x021BAA84
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r4, r1, #0
	adds r1, r6, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, #0x36
	movs r2, #0
	movs r7, #1
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	ldrh r1, [r5]
	lsrs r0, r0, #0x10
	cmp r1, r0
	beq _021BAAB4
	ldrb r2, [r5, #5]
	movs r1, #0xf
	bics r2, r1
	strb r2, [r5, #5]
	ldrb r2, [r5, #5]
	movs r1, #0xf0
	bics r2, r1
	strb r2, [r5, #5]
_021BAAB4:
	strh r0, [r5]
	ldrh r0, [r5]
	cmp r0, #0
	beq _021BAAE8
	adds r1, r6, #0
	adds r0, r4, #0
	adds r1, #0x3a
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r6, #0
	strb r0, [r5, #2]
	adds r0, r4, #0
	adds r1, #0x42
	movs r2, #0
	bl FUN_0201CD24
	adds r6, #0x3e
	strb r0, [r5, #3]
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_0201CD24
	strb r0, [r5, #4]
	b _021BAAF0
_021BAAE8:
	movs r7, #0
	strb r7, [r5, #2]
	strb r7, [r5, #3]
	strb r7, [r5, #4]
_021BAAF0:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BAA84

	thumb_func_start FUN_021BAAF4
FUN_021BAAF4: ; 0x021BAAF4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r2, #0
	beq _021BAB1E
	adds r0, r4, #0
	movs r1, #0xae
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xf8
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xaf
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xf9
	strb r0, [r1]
_021BAB1E:
	adds r0, r4, #0
	bl FUN_0201CEE0
	adds r1, r5, #0
	adds r1, #0xfa
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xa2
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xee
	strh r0, [r1]
	adds r0, r4, #0
	movs r1, #0xa3
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xf0
	strh r0, [r1]
	adds r0, r4, #0
	movs r1, #0xa5
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xf2
	strh r0, [r1]
	adds r0, r4, #0
	movs r1, #0xa6
	movs r2, #0
	bl FUN_0201CD24
	adds r1, r5, #0
	adds r1, #0xf4
	strh r0, [r1]
	adds r0, r4, #0
	movs r1, #0xa4
	movs r2, #0
	bl FUN_0201CD24
	adds r5, #0xf6
	strh r0, [r5]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BAAF4

	thumb_func_start FUN_021BAB7C
FUN_021BAB7C: ; 0x021BAB7C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #0x1b]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	beq _021BABA0
	ldr r1, [r4]
	movs r2, #0
	movs r3, #1
	bl FUN_021BA73C
	adds r0, r4, #0
	bl FUN_021BA990
	ldrb r1, [r4, #0x1b]
	movs r0, #0x20
	bics r1, r0
	strb r1, [r4, #0x1b]
_021BABA0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BAB7C

	thumb_func_start FUN_021BABA4
FUN_021BABA4: ; 0x021BABA4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0x41
	lsls r0, r0, #2
	movs r5, #0
	adds r4, r6, r0
	movs r7, #0xe
_021BABB2:
	adds r0, r5, #0
	muls r0, r7, r0
	adds r0, r4, r0
	bl FUN_021BAA0C
	adds r5, r5, #1
	cmp r5, #4
	blo _021BABB2
	ldr r0, _021BABD8 ; =0x0000014A
	movs r3, #0
	strh r3, [r6, r0]
	adds r1, r0, #2
	strh r3, [r6, r1]
	subs r1, r0, #6
	movs r2, #0x11
	strb r2, [r6, r1]
	adds r0, r0, #4
	strh r3, [r6, r0]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BABD8: .word 0x0000014A
	thumb_func_end FUN_021BABA4

	thumb_func_start FUN_021BABDC
FUN_021BABDC: ; 0x021BABDC
	push {r3, r4}
	movs r4, #0
	ldr r1, _021BABF4 ; =0x00000157
	adds r3, r4, #0
_021BABE4:
	adds r2, r0, r4
	adds r4, r4, #1
	strb r3, [r2, r1]
	cmp r4, #5
	blo _021BABE4
	pop {r3, r4}
	bx lr
	nop
_021BABF4: .word 0x00000157
	thumb_func_end FUN_021BABDC

	thumb_func_start FUN_021BABF8
FUN_021BABF8: ; 0x021BABF8
	ldr r3, _021BABFC ; =FUN_0203A278
	bx r3
	.align 2, 0
_021BABFC: .word FUN_0203A278
	thumb_func_end FUN_021BABF8

	thumb_func_start FUN_021BAC00
FUN_021BAC00: ; 0x021BAC00
	ldr r3, _021BAC04 ; =FUN_021BAC08
	bx r3
	.align 2, 0
_021BAC04: .word FUN_021BAC08
	thumb_func_end FUN_021BAC00

	thumb_func_start FUN_021BAC08
FUN_021BAC08: ; 0x021BAC08
	movs r1, #6
	strb r1, [r0]
	strb r1, [r0, #1]
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	strb r1, [r0, #4]
	strb r1, [r0, #5]
	strb r1, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAC08

	thumb_func_start FUN_021BAC1C
FUN_021BAC1C: ; 0x021BAC1C
	movs r1, #0
	ldrsb r2, [r0, r1]
	cmp r2, #6
	bge _021BAC2A
	movs r1, #6
	strb r1, [r0]
	movs r1, #1
_021BAC2A:
	movs r2, #1
	ldrsb r3, [r0, r2]
	cmp r3, #6
	bge _021BAC38
	movs r1, #6
	strb r1, [r0, #1]
	adds r1, r2, #0
_021BAC38:
	movs r2, #2
	ldrsb r2, [r0, r2]
	cmp r2, #6
	bge _021BAC46
	movs r1, #6
	strb r1, [r0, #2]
	movs r1, #1
_021BAC46:
	movs r2, #3
	ldrsb r2, [r0, r2]
	cmp r2, #6
	bge _021BAC54
	movs r1, #6
	strb r1, [r0, #3]
	movs r1, #1
_021BAC54:
	movs r2, #4
	ldrsb r2, [r0, r2]
	cmp r2, #6
	bge _021BAC62
	movs r1, #6
	strb r1, [r0, #4]
	movs r1, #1
_021BAC62:
	movs r2, #5
	ldrsb r2, [r0, r2]
	cmp r2, #6
	bge _021BAC70
	movs r1, #6
	strb r1, [r0, #5]
	movs r1, #1
_021BAC70:
	movs r2, #6
	ldrsb r3, [r0, r2]
	cmp r3, #6
	bge _021BAC7C
	strb r2, [r0, #6]
	movs r1, #1
_021BAC7C:
	adds r0, r1, #0
	bx lr
	thumb_func_end FUN_021BAC1C

	thumb_func_start FUN_021BAC80
FUN_021BAC80: ; 0x021BAC80
	ldrb r0, [r0, #0x19]
	bx lr
	thumb_func_end FUN_021BAC80

	thumb_func_start FUN_021BAC84
FUN_021BAC84: ; 0x021BAC84
	ldrh r0, [r0, #0xc]
	bx lr
	thumb_func_end FUN_021BAC84

	thumb_func_start FUN_021BAC88
FUN_021BAC88: ; 0x021BAC88
	movs r1, #5
	lsls r1, r1, #6
	ldrb r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021BAC88

	thumb_func_start FUN_021BAC90
FUN_021BAC90: ; 0x021BAC90
	push {r4, r5}
	movs r2, #0xe
	movs r5, #0
	movs r4, #0
	movs r1, #0xe
	adds r2, #0xf6
_021BAC9C:
	adds r3, r5, #0
	muls r3, r1, r3
	adds r3, r0, r3
	ldrh r3, [r3, r2]
	cmp r3, #0
	beq _021BACB0
	adds r5, r5, #1
	adds r4, r4, #1
	cmp r5, #4
	blo _021BAC9C
_021BACB0:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021BAC90

	thumb_func_start FUN_021BACB8
FUN_021BACB8: ; 0x021BACB8
	push {r3, r4, r5, r6}
	movs r5, #5
	lsls r5, r5, #6
	ldrb r3, [r0, r5]
	movs r2, #0
	movs r1, #0
	cmp r3, #0
	bls _021BACEE
	adds r3, r0, r5
	movs r4, #0xe
	subs r5, #0x31
_021BACCE:
	adds r6, r2, #0
	muls r6, r4, r6
	adds r6, r0, r6
	ldrb r6, [r6, r5]
	lsls r6, r6, #0x1c
	lsrs r6, r6, #0x1c
	beq _021BACE2
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
_021BACE2:
	adds r2, r2, #1
	lsls r2, r2, #0x18
	ldrb r6, [r3]
	lsrs r2, r2, #0x18
	cmp r2, r6
	blo _021BACCE
_021BACEE:
	adds r0, r1, #0
	pop {r3, r4, r5, r6}
	bx lr
	thumb_func_end FUN_021BACB8

	thumb_func_start FUN_021BACF4
FUN_021BACF4: ; 0x021BACF4
	ldr r1, _021BACFC ; =0x00000143
	ldrb r0, [r0, r1]
	bx lr
	nop
_021BACFC: .word 0x00000143
	thumb_func_end FUN_021BACF4

	thumb_func_start FUN_021BAD00
FUN_021BAD00: ; 0x021BAD00
	movs r2, #0xe
	adds r3, r1, #0
	muls r3, r2, r3
	adds r0, r0, r3
	adds r2, #0xfc
	ldrh r0, [r0, r2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAD00

	thumb_func_start FUN_021BAD10
FUN_021BAD10: ; 0x021BAD10
	movs r2, #0xe
	adds r3, r1, #0
	muls r3, r2, r3
	adds r0, r0, r3
	adds r2, #0xf6
	ldrh r0, [r0, r2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAD10

	thumb_func_start FUN_021BAD20
FUN_021BAD20: ; 0x021BAD20
	movs r2, #0xe
	muls r2, r1, r2
	adds r1, r0, r2
	ldr r0, _021BAD30 ; =0x0000010F
	ldrb r0, [r1, r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	bx lr
	.align 2, 0
_021BAD30: .word 0x0000010F
	thumb_func_end FUN_021BAD20

	thumb_func_start FUN_021BAD34
FUN_021BAD34: ; 0x021BAD34
	push {r4, r5, r6, r7}
	movs r4, #0x41
	movs r2, #0
	lsls r4, r4, #2
_021BAD3C:
	movs r3, #0xe
	muls r3, r2, r3
	adds r5, r1, r3
	adds r3, r0, r3
	adds r6, r5, r4
	adds r7, r3, r4
	movs r5, #7
_021BAD4A:
	ldrh r3, [r7]
	adds r7, r7, #2
	strh r3, [r6]
	adds r6, r6, #2
	subs r5, r5, #1
	bne _021BAD4A
	adds r2, r2, #1
	cmp r2, #4
	blo _021BAD3C
	movs r2, #5
	lsls r2, r2, #6
	ldrb r0, [r0, r2]
	strb r0, [r1, r2]
	pop {r4, r5, r6, r7}
	bx lr
	thumb_func_end FUN_021BAD34

	thumb_func_start FUN_021BAD68
FUN_021BAD68: ; 0x021BAD68
	push {r4, r5}
	movs r4, #0xe
	adds r5, r1, #0
	muls r5, r4, r5
	adds r1, r0, r5
	movs r0, #0xe
	adds r0, #0xfe
	ldrb r0, [r1, r0]
	adds r4, #0xfc
	strb r0, [r2]
	movs r0, #0xe
	adds r0, #0xff
	ldrb r0, [r1, r0]
	strb r0, [r3]
	ldrh r0, [r1, r4]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAD68

	thumb_func_start FUN_021BAD8C
FUN_021BAD8C: ; 0x021BAD8C
	movs r2, #0xe
	adds r3, r1, #0
	muls r3, r2, r3
	adds r3, r0, r3
	movs r0, #0xe
	adds r0, #0xff
	adds r2, #0xfe
	ldrb r1, [r3, r0]
	ldrb r0, [r3, r2]
	subs r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAD8C

	thumb_func_start FUN_021BADA8
FUN_021BADA8: ; 0x021BADA8
	movs r2, #0xe
	adds r3, r1, #0
	muls r3, r2, r3
	adds r3, r0, r3
	movs r0, #0xe
	adds r0, #0xf9
	adds r2, #0xf8
	ldrb r1, [r3, r0]
	ldrb r0, [r3, r2]
	subs r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BADA8

	thumb_func_start FUN_021BADC4
FUN_021BADC4: ; 0x021BADC4
	movs r2, #5
	lsls r2, r2, #6
	ldrb r2, [r0, r2]
	cmp r1, r2
	bhs _021BADDC
	movs r2, #0xe
	adds r3, r1, #0
	muls r3, r2, r3
	adds r0, r0, r3
	adds r2, #0xfe
	ldrb r0, [r0, r2]
	bx lr
_021BADDC:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BADC4

	thumb_func_start FUN_021BADE0
FUN_021BADE0: ; 0x021BADE0
	push {r4, r5, r6, r7}
	movs r6, #5
	lsls r6, r6, #6
	ldrb r2, [r0, r6]
	movs r3, #0
	cmp r2, #0
	bls _021BAE12
	adds r4, r0, r6
	movs r5, #0xe
	subs r6, #0x36
_021BADF4:
	adds r2, r3, #0
	muls r2, r5, r2
	adds r2, r0, r2
	ldrh r7, [r2, r6]
	cmp r1, r7
	bne _021BAE0A
	movs r0, #0x43
	lsls r0, r0, #2
	ldrb r0, [r2, r0]
	pop {r4, r5, r6, r7}
	bx lr
_021BAE0A:
	ldrb r2, [r4]
	adds r3, r3, #1
	cmp r3, r2
	blo _021BADF4
_021BAE12:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	thumb_func_end FUN_021BADE0

	thumb_func_start FUN_021BAE18
FUN_021BAE18: ; 0x021BAE18
	cmp r2, #0
	beq _021BAE22
	movs r2, #0x41
	lsls r2, r2, #2
	b _021BAE24
_021BAE22:
	ldr r2, _021BAE44 ; =0x0000010A
_021BAE24:
	adds r2, r0, r2
	movs r0, #0xe
	muls r0, r1, r0
	adds r2, r2, r0
	ldrh r0, [r2]
	cmp r0, #0
	beq _021BAE3E
	ldrb r1, [r2, #2]
	ldrb r0, [r2, #3]
	cmp r1, r0
	bne _021BAE3E
	movs r0, #1
	bx lr
_021BAE3E:
	movs r0, #0
	bx lr
	nop
_021BAE44: .word 0x0000010A
	thumb_func_end FUN_021BAE18

	thumb_func_start FUN_021BAE48
FUN_021BAE48: ; 0x021BAE48
	push {r3, r4, r5, lr}
	movs r3, #0xe
	adds r4, r1, #0
	muls r4, r3, r4
	adds r3, #0xfe
	adds r3, r0, r3
	ldrb r5, [r3, r4]
	cmp r5, r2
	blo _021BAE5E
	subs r2, r5, r2
	b _021BAE60
_021BAE5E:
	movs r2, #0
_021BAE60:
	strb r2, [r3, r4]
	movs r2, #0x11
	adds r5, r0, r4
	lsls r2, r2, #4
	ldrb r5, [r5, r2]
	cmp r5, #0
	beq _021BAE7E
	subs r2, #0xa
	adds r5, r0, r2
	ldrb r2, [r3, r4]
	adds r1, #0x3a
	strb r2, [r5, r4]
	ldr r0, [r0]
	bl FUN_0201CD48
_021BAE7E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BAE48

	thumb_func_start FUN_021BAE80
FUN_021BAE80: ; 0x021BAE80
	push {r4, r5, r6, lr}
	movs r3, #0xe
	muls r3, r1, r3
	movs r4, #0x11
	adds r6, r0, r3
	lsls r4, r4, #4
	ldrb r5, [r6, r4]
	cmp r5, #0
	bne _021BAEAC
	subs r4, #0xa
	ldrb r4, [r6, r4]
	subs r4, r4, r2
	bpl _021BAE9C
	movs r4, #0
_021BAE9C:
	ldr r2, _021BAEB0 ; =0x00000106
	adds r1, #0x3a
	adds r2, r0, r2
	strb r4, [r2, r3]
	ldrb r2, [r2, r3]
	ldr r0, [r0]
	bl FUN_0201CD48
_021BAEAC:
	pop {r4, r5, r6, pc}
	nop
_021BAEB0: .word 0x00000106
	thumb_func_end FUN_021BAE80

	thumb_func_start FUN_021BAEB4
FUN_021BAEB4: ; 0x021BAEB4
	movs r3, #0x41
	lsls r3, r3, #2
	adds r3, r0, r3
	movs r0, #0xe
	muls r0, r1, r0
	adds r3, r3, r0
	ldrb r0, [r3, #8]
	adds r0, r0, r2
	strb r0, [r3, #8]
	ldrb r1, [r3, #9]
	ldrb r0, [r3, #8]
	cmp r0, r1
	bls _021BAED0
	strb r1, [r3, #8]
_021BAED0:
	ldrb r0, [r3, #0xc]
	cmp r0, #0
	beq _021BAEDA
	ldrb r0, [r3, #8]
	strb r0, [r3, #2]
_021BAEDA:
	ldrh r0, [r3, #6]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAEB4

	thumb_func_start FUN_021BAEE0
FUN_021BAEE0: ; 0x021BAEE0
	movs r3, #0x41
	lsls r3, r3, #2
	adds r3, r0, r3
	movs r0, #0xe
	muls r0, r1, r0
	adds r3, r3, r0
	ldrb r0, [r3, #2]
	adds r0, r0, r2
	strb r0, [r3, #2]
	ldrb r1, [r3, #3]
	ldrb r0, [r3, #2]
	cmp r0, r1
	bls _021BAEFC
	strb r1, [r3, #2]
_021BAEFC:
	ldrb r0, [r3, #0xc]
	cmp r0, #0
	beq _021BAF06
	ldrb r0, [r3, #2]
	strb r0, [r3, #8]
_021BAF06:
	ldrh r0, [r3]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAEE0

	thumb_func_start FUN_021BAF0C
FUN_021BAF0C: ; 0x021BAF0C
	push {r3, r4}
	movs r3, #0x41
	lsls r3, r3, #2
	movs r2, #0xe
	adds r4, r0, r3
	muls r2, r1, r2
	adds r1, r4, r2
	ldrb r4, [r1, #0xb]
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x1c
	bne _021BAF38
	movs r2, #0xf0
	bics r4, r2
	movs r2, #0x10
	orrs r2, r4
	strb r2, [r1, #0xb]
	adds r2, r3, #0
	adds r2, #0x3f
	ldrb r2, [r0, r2]
	adds r3, #0x3f
	adds r2, r2, #1
	strb r2, [r0, r3]
_021BAF38:
	ldrb r3, [r1, #0xb]
	movs r0, #0xf
	movs r2, #1
	bics r3, r0
	orrs r2, r3
	strb r2, [r1, #0xb]
	ldrb r2, [r1, #0xc]
	cmp r2, #0
	beq _021BAF70
	ldrb r3, [r1, #5]
	bics r3, r0
	ldrb r0, [r1, #0xb]
	lsls r0, r0, #0x1c
	lsrs r2, r0, #0x1c
	movs r0, #0xf
	ands r0, r2
	orrs r0, r3
	strb r0, [r1, #5]
	ldrb r2, [r1, #5]
	movs r0, #0xf0
	bics r2, r0
	ldrb r0, [r1, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	orrs r0, r2
	strb r0, [r1, #5]
_021BAF70:
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021BAF0C

	thumb_func_start FUN_021BAF74
FUN_021BAF74: ; 0x021BAF74
	push {r4, lr}
	movs r4, #0x41
	lsls r4, r4, #2
	adds r4, r0, r4
	movs r0, #0xe
	muls r0, r1, r0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, [sp, #8]
	adds r0, r4, r0
	bl FUN_021BAA1C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BAF74

	thumb_func_start FUN_021BAF90
FUN_021BAF90: ; 0x021BAF90
	push {r4, r5}
	movs r3, #0xe
	movs r5, #0
	movs r2, #0xe
	adds r3, #0xfc
_021BAF9A:
	adds r4, r5, #0
	muls r4, r2, r4
	adds r4, r0, r4
	ldrh r4, [r4, r3]
	cmp r1, r4
	bne _021BAFAC
	movs r0, #1
	pop {r4, r5}
	bx lr
_021BAFAC:
	adds r5, r5, #1
	cmp r5, #4
	blo _021BAF9A
	movs r0, #0
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021BAF90

	thumb_func_start FUN_021BAFB8
FUN_021BAFB8: ; 0x021BAFB8
	push {r4, r5}
	cmp r1, #0
	beq _021BAFE0
	movs r3, #0xe
	movs r5, #0
	movs r2, #0xe
	adds r3, #0xfc
_021BAFC6:
	adds r4, r5, #0
	muls r4, r2, r4
	adds r4, r0, r4
	ldrh r4, [r4, r3]
	cmp r1, r4
	bne _021BAFDA
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5}
	bx lr
_021BAFDA:
	adds r5, r5, #1
	cmp r5, #4
	blo _021BAFC6
_021BAFE0:
	movs r0, #4
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BAFB8

	thumb_func_start FUN_021BAFE8
FUN_021BAFE8: ; 0x021BAFE8
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	movs r1, #0x18
	adds r4, r2, #0
	bl FUN_021BBB04
	adds r1, r6, #0
	adds r1, #0xf8
	ldrb r1, [r1]
	cmp r1, #2
	bne _021BB008
	cmp r0, #0
	beq _021BB008
	movs r1, #0x11
	b _021BB008
_021BB008:
	strb r1, [r5]
	adds r6, #0xf9
	ldrb r1, [r6]
	cmp r1, #2
	bne _021BB01C
	cmp r0, #0
	beq _021BB01C
	movs r0, #0x11
	strb r0, [r4]
	b _021BB01E
_021BB01C:
	strb r1, [r4]
_021BB01E:
	ldrb r1, [r5]
	ldrb r0, [r4]
	cmp r1, #0x11
	bne _021BB034
	cmp r0, #0x11
	bne _021BB02E
	movs r0, #0
	strb r0, [r4]
_021BB02E:
	ldrb r0, [r4]
	strb r0, [r5]
	pop {r4, r5, r6, pc}
_021BB034:
	cmp r0, #0x11
	bne _021BB03A
	strb r1, [r4]
_021BB03A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BAFE8

	thumb_func_start FUN_021BB03C
FUN_021BB03C: ; 0x021BB03C
	push {r3, lr}
	add r1, sp, #0
	adds r1, #1
	add r2, sp, #0
	bl FUN_021BAFE8
	add r1, sp, #0
	ldrb r0, [r1, #1]
	ldrb r1, [r1]
	bl FUN_021CE560
	pop {r3, pc}
	thumb_func_end FUN_021BB03C

	thumb_func_start FUN_021BB054
FUN_021BB054: ; 0x021BB054
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r1, #0
	cmp r4, #0x11
	beq _021BB07C
	add r1, sp, #0
	adds r1, #1
	add r2, sp, #0
	bl FUN_021BAFE8
	add r0, sp, #0
	ldrb r1, [r0, #1]
	cmp r1, r4
	beq _021BB076
	ldrb r0, [r0]
	cmp r0, r4
	bne _021BB07C
_021BB076:
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021BB07C:
	movs r0, #0
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BB054

	thumb_func_start FUN_021BB084
FUN_021BB084: ; 0x021BB084
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_021BB084

	thumb_func_start FUN_021BB088
FUN_021BB088: ; 0x021BB088
	ldrb r2, [r0, #0x1b]
	str r1, [r0, #4]
	movs r1, #0x40
	orrs r1, r2
	strb r1, [r0, #0x1b]
	bx lr
	thumb_func_end FUN_021BB088

	thumb_func_start FUN_021BB094
FUN_021BB094: ; 0x021BB094
	ldrb r2, [r0, #0x1b]
	movs r1, #0
	str r1, [r0, #4]
	movs r1, #0x40
	bics r2, r1
	strb r2, [r0, #0x1b]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BB094

	thumb_func_start FUN_021BB0A4
FUN_021BB0A4: ; 0x021BB0A4
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _021BB0B6
	ldrb r1, [r0, #0x1b]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1f
	beq _021BB0B6
	adds r0, r2, #0
	bx lr
_021BB0B6:
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BB0A4

	thumb_func_start FUN_021BB0BC
FUN_021BB0BC: ; 0x021BB0BC
	push {r4, lr}
	adds r4, r1, #0
	cmp r4, #9
	beq _021BB0CA
	cmp r4, #0xb
	beq _021BB0D8
	b _021BB0E4
_021BB0CA:
	movs r0, #6
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021BB0E4
	movs r4, #0xb
	b _021BB0E4
_021BB0D8:
	movs r0, #6
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021BB0E4
	movs r4, #9
_021BB0E4:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_021BB0BC

	thumb_func_start FUN_021BB0E8
FUN_021BB0E8: ; 0x021BB0E8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BB0BC
	adds r1, r0, #0
	cmp r1, #0xc
	bhi _021BB142
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BB102: ; jump table
	.short _021BB142 - _021BB102 - 2 ; case 0
	.short _021BB142 - _021BB102 - 2 ; case 1
	.short _021BB142 - _021BB102 - 2 ; case 2
	.short _021BB142 - _021BB102 - 2 ; case 3
	.short _021BB142 - _021BB102 - 2 ; case 4
	.short _021BB142 - _021BB102 - 2 ; case 5
	.short _021BB13A - _021BB102 - 2 ; case 6
	.short _021BB13E - _021BB102 - 2 ; case 7
	.short _021BB11C - _021BB102 - 2 ; case 8
	.short _021BB122 - _021BB102 - 2 ; case 9
	.short _021BB128 - _021BB102 - 2 ; case 10
	.short _021BB12E - _021BB102 - 2 ; case 11
	.short _021BB134 - _021BB102 - 2 ; case 12
_021BB11C:
	adds r4, #0xee
	ldrh r0, [r4]
	pop {r4, pc}
_021BB122:
	adds r4, #0xf0
	ldrh r0, [r4]
	pop {r4, pc}
_021BB128:
	adds r4, #0xf2
	ldrh r0, [r4]
	pop {r4, pc}
_021BB12E:
	adds r4, #0xf4
	ldrh r0, [r4]
	pop {r4, pc}
_021BB134:
	adds r4, #0xf6
	ldrh r0, [r4]
	pop {r4, pc}
_021BB13A:
	movs r0, #6
	pop {r4, pc}
_021BB13E:
	movs r0, #6
	pop {r4, pc}
_021BB142:
	adds r0, r4, #0
	bl FUN_021BB1F4
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BB0E8

	thumb_func_start FUN_021BB14C
FUN_021BB14C: ; 0x021BB14C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0201CC38
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r5]
	movs r1, #0xa1
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #2]
	ldr r0, [r5]
	movs r1, #0xa2
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #4]
	ldr r0, [r5]
	movs r1, #0xa3
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #6]
	ldr r0, [r5]
	movs r1, #0xa5
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #8]
	ldr r0, [r5]
	movs r1, #0xa6
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xa]
	ldr r0, [r5]
	movs r1, #0xa4
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xc]
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0201CC78
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BB14C

	thumb_func_start FUN_021BB1B0
FUN_021BB1B0: ; 0x021BB1B0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	bl FUN_021BB0BC
	subs r0, #8
	cmp r0, #4
	bhi _021BB1F2
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BB1CC: ; jump table
	.short _021BB1D6 - _021BB1CC - 2 ; case 0
	.short _021BB1DC - _021BB1CC - 2 ; case 1
	.short _021BB1E2 - _021BB1CC - 2 ; case 2
	.short _021BB1E8 - _021BB1CC - 2 ; case 3
	.short _021BB1EE - _021BB1CC - 2 ; case 4
_021BB1D6:
	adds r4, #0xee
	strh r5, [r4]
	pop {r3, r4, r5, pc}
_021BB1DC:
	adds r4, #0xf0
	strh r5, [r4]
	pop {r3, r4, r5, pc}
_021BB1E2:
	adds r4, #0xf2
	strh r5, [r4]
	pop {r3, r4, r5, pc}
_021BB1E8:
	adds r4, #0xf4
	strh r5, [r4]
	pop {r3, r4, r5, pc}
_021BB1EE:
	adds r4, #0xf6
	strh r5, [r4]
_021BB1F2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BB1B0

	thumb_func_start FUN_021BB1F4
FUN_021BB1F4: ; 0x021BB1F4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BB0BC
	adds r1, r0, #0
	cmp r1, #0x15
	bls _021BB204
	b _021BB306
_021BB204:
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BB210: ; jump table
	.short _021BB306 - _021BB210 - 2 ; case 0
	.short _021BB2A2 - _021BB210 - 2 ; case 1
	.short _021BB2A8 - _021BB210 - 2 ; case 2
	.short _021BB2AE - _021BB210 - 2 ; case 3
	.short _021BB2B4 - _021BB210 - 2 ; case 4
	.short _021BB2BA - _021BB210 - 2 ; case 5
	.short _021BB2C2 - _021BB210 - 2 ; case 6
	.short _021BB2C8 - _021BB210 - 2 ; case 7
	.short _021BB23C - _021BB210 - 2 ; case 8
	.short _021BB250 - _021BB210 - 2 ; case 9
	.short _021BB264 - _021BB210 - 2 ; case 10
	.short _021BB278 - _021BB210 - 2 ; case 11
	.short _021BB28C - _021BB210 - 2 ; case 12
	.short _021BB2D8 - _021BB210 - 2 ; case 13
	.short _021BB2DC - _021BB210 - 2 ; case 14
	.short _021BB2CE - _021BB210 - 2 ; case 15
	.short _021BB2F4 - _021BB210 - 2 ; case 16
	.short _021BB2E4 - _021BB210 - 2 ; case 17
	.short _021BB2D2 - _021BB210 - 2 ; case 18
	.short _021BB2FC - _021BB210 - 2 ; case 19
	.short _021BB302 - _021BB210 - 2 ; case 20
	.short _021BB2E0 - _021BB210 - 2 ; case 21
_021BB23C:
	adds r0, r4, #0
	bl FUN_021BB0E8
	adds r4, #0xfc
	lsls r0, r0, #0x10
	ldrb r1, [r4]
	lsrs r0, r0, #0x10
	bl FUN_021BD138
	pop {r4, pc}
_021BB250:
	adds r0, r4, #0
	bl FUN_021BB0E8
	adds r4, #0xfd
	lsls r0, r0, #0x10
	ldrb r1, [r4]
	lsrs r0, r0, #0x10
	bl FUN_021BD138
	pop {r4, pc}
_021BB264:
	adds r0, r4, #0
	bl FUN_021BB0E8
	adds r4, #0xfe
	lsls r0, r0, #0x10
	ldrb r1, [r4]
	lsrs r0, r0, #0x10
	bl FUN_021BD138
	pop {r4, pc}
_021BB278:
	adds r0, r4, #0
	bl FUN_021BB0E8
	adds r4, #0xff
	lsls r0, r0, #0x10
	ldrb r1, [r4]
	lsrs r0, r0, #0x10
	bl FUN_021BD138
	pop {r4, pc}
_021BB28C:
	adds r0, r4, #0
	bl FUN_021BB0E8
	movs r1, #1
	lsls r1, r1, #8
	lsls r0, r0, #0x10
	ldrb r1, [r4, r1]
	lsrs r0, r0, #0x10
	bl FUN_021BD138
	pop {r4, pc}
_021BB2A2:
	movs r0, #0xfc
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2A8:
	movs r0, #0xfd
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2AE:
	movs r0, #0xfe
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2B4:
	movs r0, #0xff
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2BA:
	movs r0, #1
	lsls r0, r0, #8
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2C2:
	ldr r0, _021BB30C ; =0x00000101
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2C8:
	ldr r0, _021BB310 ; =0x00000102
	ldrsb r0, [r4, r0]
	pop {r4, pc}
_021BB2CE:
	ldrb r0, [r4, #0x18]
	pop {r4, pc}
_021BB2D2:
	adds r4, #0xfa
	ldrb r0, [r4]
	pop {r4, pc}
_021BB2D8:
	ldrh r0, [r4, #0x10]
	pop {r4, pc}
_021BB2DC:
	ldrh r0, [r4, #0xe]
	pop {r4, pc}
_021BB2E0:
	ldrb r0, [r4, #0x1a]
	pop {r4, pc}
_021BB2E4:
	adds r0, r4, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BB2F4
	movs r0, #0
	pop {r4, pc}
_021BB2F4:
	movs r0, #0x4f
	lsls r0, r0, #2
	ldrh r0, [r4, r0]
	pop {r4, pc}
_021BB2FC:
	ldr r0, _021BB314 ; =0x00000141
	ldrb r0, [r4, r0]
	pop {r4, pc}
_021BB302:
	ldr r0, [r4, #8]
	pop {r4, pc}
_021BB306:
	movs r0, #0
	pop {r4, pc}
	nop
_021BB30C: .word 0x00000101
_021BB310: .word 0x00000102
_021BB314: .word 0x00000141
	thumb_func_end FUN_021BB1F4

	thumb_func_start FUN_021BB318
FUN_021BB318: ; 0x021BB318
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	movs r5, #0
	bl FUN_021BB0BC
	subs r0, #8
	cmp r0, #3
	bhi _021BB366
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BB336: ; jump table
	.short _021BB33E - _021BB336 - 2 ; case 0
	.short _021BB352 - _021BB336 - 2 ; case 1
	.short _021BB348 - _021BB336 - 2 ; case 2
	.short _021BB35C - _021BB336 - 2 ; case 3
_021BB33E:
	movs r0, #0xfc
	ldrsb r0, [r4, r0]
	cmp r0, #6
	bge _021BB366
	b _021BB364
_021BB348:
	movs r0, #0xfe
	ldrsb r0, [r4, r0]
	cmp r0, #6
	bge _021BB366
	b _021BB364
_021BB352:
	movs r0, #0xfd
	ldrsb r0, [r4, r0]
	cmp r0, #6
	ble _021BB366
	b _021BB364
_021BB35C:
	movs r0, #0xff
	ldrsb r0, [r4, r0]
	cmp r0, #6
	ble _021BB366
_021BB364:
	movs r5, #1
_021BB366:
	cmp r5, #0
	beq _021BB374
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB0E8
	pop {r4, r5, r6, pc}
_021BB374:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BB1F4
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BB318

	thumb_func_start FUN_021BB380
FUN_021BB380: ; 0x021BB380
	ldrh r0, [r0, #0x12]
	bx lr
	thumb_func_end FUN_021BB380

	thumb_func_start FUN_021BB384
FUN_021BB384: ; 0x021BB384
	strh r1, [r0, #0x12]
	bx lr
	thumb_func_end FUN_021BB384

	thumb_func_start FUN_021BB388
FUN_021BB388: ; 0x021BB388
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	cmp r4, r0
	bne _021BB3A4
	movs r0, #1
	pop {r3, r4, r5, pc}
_021BB3A4:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BB388

	thumb_func_start FUN_021BB3A8
FUN_021BB3A8: ; 0x021BB3A8
	push {r3, lr}
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, #0
	bne _021BB3B8
	movs r0, #1
	pop {r3, pc}
_021BB3B8:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021BB3A8

	thumb_func_start FUN_021BB3BC
FUN_021BB3BC: ; 0x021BB3BC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	movs r1, #0x4c
	movs r2, #0
	movs r4, #0
	bl FUN_0201CD24
	cmp r0, #0
	beq _021BB3D4
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_021BB3D4:
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021BB3E0
	movs r4, #1
_021BB3E0:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BB3BC
_021BB3E4:
	.byte 0x01, 0x49, 0x40, 0x5A, 0x70, 0x47, 0xC0, 0x46, 0x46, 0x01, 0x00, 0x00

	thumb_func_start FUN_021BB3F0
FUN_021BB3F0: ; 0x021BB3F0
	push {r3, r4}
	movs r2, #7
	ands r2, r1
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x18
	movs r4, #1
	adds r1, r0, r1
	ldr r0, _021BB418 ; =0x00000153
	lsls r4, r2
	lsls r2, r4, #0x18
	ldrb r0, [r1, r0]
	lsrs r2, r2, #0x18
	movs r3, #1
	tst r0, r2
	bne _021BB410
	movs r3, #0
_021BB410:
	adds r0, r3, #0
	pop {r3, r4}
	bx lr
	nop
_021BB418: .word 0x00000153
	thumb_func_end FUN_021BB3F0

	thumb_func_start FUN_021BB41C
FUN_021BB41C: ; 0x021BB41C
	push {r3, r4}
	movs r2, #7
	ands r2, r1
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x18
	movs r4, #1
	adds r1, r0, r1
	ldr r0, _021BB444 ; =0x00000155
	lsls r4, r2
	lsls r2, r4, #0x18
	ldrb r0, [r1, r0]
	lsrs r2, r2, #0x18
	movs r3, #1
	tst r0, r2
	bne _021BB43C
	movs r3, #0
_021BB43C:
	adds r0, r3, #0
	pop {r3, r4}
	bx lr
	nop
_021BB444: .word 0x00000155
	thumb_func_end FUN_021BB41C

	thumb_func_start FUN_021BB448
FUN_021BB448: ; 0x021BB448
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021BB46C ; =0x021D74D0
	adds r5, r0, #0
	movs r4, #0
_021BB450:
	lsls r6, r4, #2
	ldr r1, [r7, r6]
	adds r0, r5, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021BB462
	ldr r0, [r7, r6]
	pop {r3, r4, r5, r6, r7, pc}
_021BB462:
	adds r4, r4, #1
	cmp r4, #4
	blo _021BB450
	movs r0, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BB46C: .word 0x021D74D0
	thumb_func_end FUN_021BB448

	thumb_func_start FUN_021BB470
FUN_021BB470: ; 0x021BB470
	push {r3, lr}
	bl FUN_021BB448
	cmp r0, #0x10
	beq _021BB47E
	movs r0, #1
	pop {r3, pc}
_021BB47E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BB470

	thumb_func_start FUN_021BB484
FUN_021BB484: ; 0x021BB484
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #0x10]
	movs r0, #0x64
	muls r0, r1, r0
	blx FUN_0208CD9C
	adds r6, r0, #0
	ldrh r0, [r5, #0xe]
	adds r4, r1, #0
	blx FUN_0208CDDC
	adds r2, r0, #0
	adds r3, r1, #0
	adds r0, r6, #0
	adds r1, r4, #0
	blx FUN_0208E7C4
	movs r2, #0
	movs r3, #0
	adds r4, r0, #0
	adds r5, r1, #0
	movs r6, #0
	blx FUN_0208CEB0
	ldr r1, _021BB4EC ; =0x40B00000
	bls _021BB4D2
	adds r0, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	blx FUN_0208C934
	adds r3, r1, #0
	adds r2, r0, #0
	ldr r1, _021BB4F0 ; =0x3FE00000
	adds r0, r6, #0
	blx FUN_0208C250
	b _021BB4E4
_021BB4D2:
	adds r0, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	blx FUN_0208C934
	ldr r3, _021BB4F0 ; =0x3FE00000
	adds r2, r6, #0
	blx FUN_0208C580
_021BB4E4:
	blx FUN_0208DAEC
	pop {r4, r5, r6, pc}
	nop
_021BB4EC: .word 0x40B00000
_021BB4F0: .word 0x3FE00000
	thumb_func_end FUN_021BB484

	thumb_func_start FUN_021BB4F4
FUN_021BB4F4: ; 0x021BB4F4
	push {r3, r4}
	movs r4, #0
	strb r4, [r2]
	movs r2, #0xc
	strb r2, [r3]
	cmp r1, #7
	bhi _021BB54E
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BB50E: ; jump table
	.short _021BB54E - _021BB50E - 2 ; case 0
	.short _021BB51E - _021BB50E - 2 ; case 1
	.short _021BB524 - _021BB50E - 2 ; case 2
	.short _021BB52A - _021BB50E - 2 ; case 3
	.short _021BB530 - _021BB50E - 2 ; case 4
	.short _021BB536 - _021BB50E - 2 ; case 5
	.short _021BB53E - _021BB50E - 2 ; case 6
	.short _021BB546 - _021BB50E - 2 ; case 7
_021BB51E:
	adds r0, #0xfc
	pop {r3, r4}
	bx lr
_021BB524:
	adds r0, #0xfd
	pop {r3, r4}
	bx lr
_021BB52A:
	adds r0, #0xfe
	pop {r3, r4}
	bx lr
_021BB530:
	adds r0, #0xff
	pop {r3, r4}
	bx lr
_021BB536:
	adds r2, #0xf4
	adds r0, r0, r2
	pop {r3, r4}
	bx lr
_021BB53E:
	adds r2, #0xf5
	adds r0, r0, r2
	pop {r3, r4}
	bx lr
_021BB546:
	adds r2, #0xf6
	adds r0, r0, r2
	pop {r3, r4}
	bx lr
_021BB54E:
	movs r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021BB4F4

	thumb_func_start FUN_021BB554
FUN_021BB554: ; 0x021BB554
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r2, #0
	add r2, sp, #0
	adds r2, #1
	add r3, sp, #0
	bl FUN_021BB4F4
	cmp r4, #0
	ble _021BB578
	movs r1, #0
	ldrsb r2, [r0, r1]
	add r0, sp, #0
	ldrsb r0, [r0, r1]
	cmp r2, r0
	bge _021BB588
	movs r1, #1
	b _021BB588
_021BB578:
	movs r2, #0
	ldrsb r3, [r0, r2]
	add r0, sp, #0
	movs r1, #1
	ldrsb r0, [r0, r1]
	cmp r3, r0
	bgt _021BB588
	adds r1, r2, #0
_021BB588:
	adds r0, r1, #0
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BB554

	thumb_func_start FUN_021BB590
FUN_021BB590: ; 0x021BB590
	push {r3, lr}
	add r2, sp, #0
	adds r2, #1
	add r3, sp, #0
	bl FUN_021BB4F4
	movs r1, #0
	add r2, sp, #0
	ldrsb r2, [r2, r1]
	ldrsb r0, [r0, r1]
	subs r0, r2, r0
	pop {r3, pc}
	thumb_func_end FUN_021BB590

	thumb_func_start FUN_021BB5A8
FUN_021BB5A8: ; 0x021BB5A8
	movs r1, #0xfc
	ldrsb r1, [r0, r1]
	cmp r1, #6
	bge _021BB5B4
	movs r0, #1
	bx lr
_021BB5B4:
	movs r1, #0xfd
	ldrsb r1, [r0, r1]
	cmp r1, #6
	bge _021BB5C0
	movs r0, #1
	bx lr
_021BB5C0:
	movs r1, #0xfe
	ldrsb r1, [r0, r1]
	cmp r1, #6
	bge _021BB5CC
	movs r0, #1
	bx lr
_021BB5CC:
	movs r2, #0xff
	ldrsb r1, [r0, r2]
	cmp r1, #6
	bge _021BB5D8
	movs r0, #1
	bx lr
_021BB5D8:
	adds r1, r2, #1
	ldrsb r1, [r0, r1]
	cmp r1, #6
	bge _021BB5E4
	movs r0, #1
	bx lr
_021BB5E4:
	adds r1, r2, #2
	ldrsb r1, [r0, r1]
	cmp r1, #6
	bge _021BB5F0
	movs r0, #1
	bx lr
_021BB5F0:
	adds r1, r2, #3
	ldrsb r0, [r0, r1]
	cmp r0, #6
	bge _021BB5FC
	movs r0, #1
	bx lr
_021BB5FC:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BB5A8

	thumb_func_start FUN_021BB600
FUN_021BB600: ; 0x021BB600
	cmp r1, #7
	bhi _021BB640
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BB610: ; jump table
	.short _021BB640 - _021BB610 - 2 ; case 0
	.short _021BB620 - _021BB610 - 2 ; case 1
	.short _021BB624 - _021BB610 - 2 ; case 2
	.short _021BB628 - _021BB610 - 2 ; case 3
	.short _021BB62C - _021BB610 - 2 ; case 4
	.short _021BB630 - _021BB610 - 2 ; case 5
	.short _021BB638 - _021BB610 - 2 ; case 6
	.short _021BB63C - _021BB610 - 2 ; case 7
_021BB620:
	adds r0, #0xfc
	b _021BB644
_021BB624:
	adds r0, #0xfd
	b _021BB644
_021BB628:
	adds r0, #0xfe
	b _021BB644
_021BB62C:
	adds r0, #0xff
	b _021BB644
_021BB630:
	movs r1, #1
	lsls r1, r1, #8
_021BB634:
	adds r0, r0, r1
	b _021BB644
_021BB638:
	ldr r1, _021BB670 ; =0x00000101
	b _021BB634
_021BB63C:
	ldr r1, _021BB674 ; =0x00000102
	b _021BB634
_021BB640:
	movs r0, #0
	bx lr
_021BB644:
	movs r1, #0
	ldrsb r3, [r0, r1]
	cmp r3, #0xc
	bge _021BB66A
	adds r1, r3, r2
	cmp r1, #0xc
	ble _021BB65A
	movs r1, #0xc
	subs r1, r1, r3
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
_021BB65A:
	movs r1, #0
	ldrsb r3, [r0, r1]
	lsls r1, r2, #0x18
	asrs r1, r1, #0x18
	adds r1, r3, r1
	strb r1, [r0]
	adds r0, r2, #0
	bx lr
_021BB66A:
	adds r0, r1, #0
	bx lr
	nop
_021BB670: .word 0x00000101
_021BB674: .word 0x00000102
	thumb_func_end FUN_021BB600

	thumb_func_start FUN_021BB678
FUN_021BB678: ; 0x021BB678
	cmp r1, #7
	bhi _021BB6B8
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BB688: ; jump table
	.short _021BB6B8 - _021BB688 - 2 ; case 0
	.short _021BB698 - _021BB688 - 2 ; case 1
	.short _021BB69C - _021BB688 - 2 ; case 2
	.short _021BB6A0 - _021BB688 - 2 ; case 3
	.short _021BB6A4 - _021BB688 - 2 ; case 4
	.short _021BB6A8 - _021BB688 - 2 ; case 5
	.short _021BB6B0 - _021BB688 - 2 ; case 6
	.short _021BB6B4 - _021BB688 - 2 ; case 7
_021BB698:
	adds r0, #0xfc
	b _021BB6BC
_021BB69C:
	adds r0, #0xfd
	b _021BB6BC
_021BB6A0:
	adds r0, #0xfe
	b _021BB6BC
_021BB6A4:
	adds r0, #0xff
	b _021BB6BC
_021BB6A8:
	movs r1, #1
	lsls r1, r1, #8
_021BB6AC:
	adds r0, r0, r1
	b _021BB6BC
_021BB6B0:
	ldr r1, _021BB6E0 ; =0x00000101
	b _021BB6AC
_021BB6B4:
	ldr r1, _021BB6E4 ; =0x00000102
	b _021BB6AC
_021BB6B8:
	movs r0, #0
	bx lr
_021BB6BC:
	movs r1, #0
	ldrsb r3, [r0, r1]
	cmp r3, #0
	ble _021BB6DC
	subs r1, r3, r2
	bpl _021BB6CC
	lsls r1, r3, #0x18
	lsrs r2, r1, #0x18
_021BB6CC:
	movs r1, #0
	ldrsb r3, [r0, r1]
	lsls r1, r2, #0x18
	asrs r1, r1, #0x18
	subs r1, r3, r1
	strb r1, [r0]
	adds r0, r2, #0
	bx lr
_021BB6DC:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_021BB6E0: .word 0x00000101
_021BB6E4: .word 0x00000102
	thumb_func_end FUN_021BB678

	thumb_func_start FUN_021BB6E8
FUN_021BB6E8: ; 0x021BB6E8
	cmp r1, #7
	bhi _021BB730
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BB6F8: ; jump table
	.short _021BB728 - _021BB6F8 - 2 ; case 0
	.short _021BB708 - _021BB6F8 - 2 ; case 1
	.short _021BB70C - _021BB6F8 - 2 ; case 2
	.short _021BB710 - _021BB6F8 - 2 ; case 3
	.short _021BB714 - _021BB6F8 - 2 ; case 4
	.short _021BB718 - _021BB6F8 - 2 ; case 5
	.short _021BB720 - _021BB6F8 - 2 ; case 6
	.short _021BB724 - _021BB6F8 - 2 ; case 7
_021BB708:
	adds r0, #0xfc
	b _021BB72A
_021BB70C:
	adds r0, #0xfd
	b _021BB72A
_021BB710:
	adds r0, #0xfe
	b _021BB72A
_021BB714:
	adds r0, #0xff
	b _021BB72A
_021BB718:
	movs r1, #1
	lsls r1, r1, #8
_021BB71C:
	adds r0, r0, r1
	b _021BB72A
_021BB720:
	ldr r1, _021BB734 ; =0x00000101
	b _021BB71C
_021BB724:
	ldr r1, _021BB738 ; =0x00000102
	b _021BB71C
_021BB728:
	bx lr
_021BB72A:
	cmp r2, #0xc
	bhi _021BB730
	strb r2, [r0]
_021BB730:
	bx lr
	nop
_021BB734: .word 0x00000101
_021BB738: .word 0x00000102
	thumb_func_end FUN_021BB6E8

	thumb_func_start FUN_021BB73C
FUN_021BB73C: ; 0x021BB73C
	ldr r3, _021BB744 ; =FUN_021BAC1C
	adds r0, #0xfc
	bx r3
	nop
_021BB744: .word FUN_021BAC1C
	thumb_func_end FUN_021BB73C

	thumb_func_start FUN_021BB748
FUN_021BB748: ; 0x021BB748
	ldr r3, _021BB750 ; =FUN_021BAC08
	adds r0, #0xfc
	bx r3
	nop
_021BB750: .word FUN_021BAC08
	thumb_func_end FUN_021BB748

	thumb_func_start FUN_021BB754
FUN_021BB754: ; 0x021BB754
	push {r4, lr}
	ldr r1, _021BB774 ; =0x00000142
	ldrb r4, [r0, r1]
	movs r1, #9
	bl FUN_021BB41C
	cmp r0, #0
	beq _021BB770
	adds r0, r4, #2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _021BB770
	movs r4, #4
_021BB770:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_021BB774: .word 0x00000142
	thumb_func_end FUN_021BB754

	thumb_func_start FUN_021BB778
FUN_021BB778: ; 0x021BB778
	push {r3, r4}
	cmp r1, #0
	ble _021BB79E
	ldr r2, _021BB7CC ; =0x00000142
	ldrb r3, [r0, r2]
	cmp r3, #4
	bhs _021BB7C4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r1, r3, r1
	strb r1, [r0, r2]
	ldrb r1, [r0, r2]
	cmp r1, #4
	bls _021BB798
	movs r1, #4
	strb r1, [r0, r2]
_021BB798:
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BB79E:
	movs r2, #0
	mvns r2, r2
	adds r4, r1, #0
	muls r4, r2, r4
	ldr r2, _021BB7CC ; =0x00000142
	ldrb r3, [r0, r2]
	cmp r3, #0
	beq _021BB7C4
	cmp r3, r4
	ble _021BB7BA
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	subs r1, r3, r1
	b _021BB7BC
_021BB7BA:
	movs r1, #0
_021BB7BC:
	strb r1, [r0, r2]
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BB7C4:
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_021BB7CC: .word 0x00000142
	thumb_func_end FUN_021BB778

	thumb_func_start FUN_021BB7D0
FUN_021BB7D0: ; 0x021BB7D0
	ldrh r2, [r0, #0x10]
	cmp r2, r1
	bls _021BB7DC
	subs r1, r2, r1
	strh r1, [r0, #0x10]
	bx lr
_021BB7DC:
	movs r1, #0
	strh r1, [r0, #0x10]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BB7D0

	thumb_func_start FUN_021BB7E4
FUN_021BB7E4: ; 0x021BB7E4
	ldrh r2, [r0, #0x10]
	adds r1, r2, r1
	strh r1, [r0, #0x10]
	ldrh r2, [r0, #0xe]
	ldrh r1, [r0, #0x10]
	cmp r1, r2
	bls _021BB7F4
	strh r2, [r0, #0x10]
_021BB7F4:
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BB7E4

	thumb_func_start FUN_021BB7F8
FUN_021BB7F8: ; 0x021BB7F8
	movs r1, #0
	strh r1, [r0, #0x10]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BB7F8

	thumb_func_start FUN_021BB800
FUN_021BB800: ; 0x021BB800
	push {r3, r4}
	ldr r2, _021BB820 ; =0x00000153
	movs r4, #7
	adds r3, r0, r2
	lsls r0, r1, #0x15
	ands r1, r4
	movs r4, #1
	lsrs r2, r0, #0x18
	lsls r4, r1
	lsls r1, r4, #0x18
	ldrb r0, [r3, r2]
	lsrs r1, r1, #0x18
	orrs r0, r1
	strb r0, [r3, r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BB820: .word 0x00000153
	thumb_func_end FUN_021BB800

	thumb_func_start FUN_021BB824
FUN_021BB824: ; 0x021BB824
	push {r3, r4}
	ldr r2, _021BB844 ; =0x00000155
	movs r4, #7
	adds r3, r0, r2
	lsls r0, r1, #0x15
	ands r1, r4
	movs r4, #1
	lsrs r2, r0, #0x18
	lsls r4, r1
	lsls r1, r4, #0x18
	ldrb r0, [r3, r2]
	lsrs r1, r1, #0x18
	orrs r0, r1
	strb r0, [r3, r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BB844: .word 0x00000155
	thumb_func_end FUN_021BB824

	thumb_func_start FUN_021BB848
FUN_021BB848: ; 0x021BB848
	push {r3, r4}
	ldr r2, _021BB870 ; =0x00000155
	movs r4, #7
	adds r3, r0, r2
	lsls r0, r1, #0x15
	ands r1, r4
	movs r4, #1
	lsls r4, r1
	lsls r1, r4, #0x18
	lsrs r2, r0, #0x18
	lsrs r1, r1, #0x18
	mvns r1, r1
	lsls r1, r1, #0x18
	ldrb r0, [r3, r2]
	lsrs r1, r1, #0x18
	ands r0, r1
	strb r0, [r3, r2]
	pop {r3, r4}
	bx lr
	nop
_021BB870: .word 0x00000155
	thumb_func_end FUN_021BB848

	thumb_func_start FUN_021BB874
FUN_021BB874: ; 0x021BB874
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021BB874

	non_word_aligned_thumb_func_start FUN_021BB876
FUN_021BB876: ; 0x021BB876
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BD5C0
	cmp r0, #0
	beq _021BB88C
	adds r0, r5, #0
	bl FUN_021BBA30
_021BB88C:
	lsls r0, r4, #2
	adds r1, r5, r0
	ldr r0, [sp, #0x18]
	str r0, [r1, #0x1c]
	adds r0, r5, r4
	movs r1, #0
	adds r0, #0xac
	strb r1, [r0]
	pop {r3, r4, r5}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_021BB876

	thumb_func_start FUN_021BB8A4
FUN_021BB8A4: ; 0x021BB8A4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r3, #0
	str r2, [sp]
	cmp r4, #2
	beq _021BB8B8
	cmp r4, #6
	bne _021BB8BE
_021BB8B8:
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021BB8BE:
	str r0, [sp, #8]
	adds r0, #0x1c
	lsls r7, r4, #2
	str r0, [sp, #8]
	ldr r0, [r0, r7]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	beq _021BB968
	ldr r0, [sp, #8]
	ldr r0, [r0, r7]
	bl FUN_021CE37C
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	ldr r1, [sp]
	ldr r0, [r0, r7]
	cmp r1, #0
	beq _021BB8E4
	str r0, [r1]
_021BB8E4:
	cmp r6, #0
	beq _021BB8EC
	movs r1, #0
	str r1, [r6]
_021BB8EC:
	cmp r4, #0x1b
	bne _021BB918
	bl FUN_021CE400
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021BAF90
	cmp r0, #0
	bne _021BB918
	bl FUN_021CE198
	ldr r1, [sp, #8]
	str r0, [r1, r7]
	adds r0, r5, r4
	movs r1, #0
	adds r0, #0xac
	strb r1, [r0]
	cmp r6, #0
	beq _021BB918
	movs r0, #1
	str r0, [r6]
_021BB918:
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _021BB944
	adds r5, #0xac
	ldrb r0, [r5, r4]
	adds r0, r0, #1
	strb r0, [r5, r4]
	ldrb r1, [r5, r4]
	ldr r0, [sp, #4]
	cmp r1, r0
	blo _021BB962
	bl FUN_021CE198
	ldr r1, [sp, #8]
	str r0, [r1, r7]
	movs r0, #0
	strb r0, [r5, r4]
	cmp r6, #0
	beq _021BB962
	movs r0, #1
	str r0, [r6]
	b _021BB962
_021BB944:
	ldr r0, [sp, #8]
	ldr r0, [r0, r7]
	lsls r1, r0, #0x1d
	lsrs r1, r1, #0x1d
	cmp r1, #1
	bne _021BB962
	lsls r0, r0, #0x17
	lsrs r1, r0, #0x1a
	beq _021BB962
	adds r5, #0xac
	ldrb r0, [r5, r4]
	cmp r0, r1
	bhs _021BB962
	adds r0, r0, #1
	strb r0, [r5, r4]
_021BB962:
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BB968:
	movs r0, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BB8A4

	thumb_func_start FUN_021BB970
FUN_021BB970: ; 0x021BB970
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, [r5, #0x24]
	adds r4, r5, #0
	lsls r0, r0, #0x1d
	adds r4, #0x24
	lsrs r0, r0, #0x1d
	beq _021BB9E2
	ldr r0, [r4]
	bl FUN_021CE37C
	adds r6, r0, #0
	beq _021BB9E2
	adds r0, r5, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BB99A
	b _021BB9A8
_021BB99A:
	movs r0, #0x4f
	lsls r0, r0, #2
	ldrh r0, [r5, r0]
	cmp r0, #0x30
	bne _021BB9A8
	movs r0, #1
	b _021BB9AA
_021BB9A8:
	movs r0, #0
_021BB9AA:
	movs r2, #2
	cmp r0, #0
	bne _021BB9B2
	movs r2, #1
_021BB9B2:
	adds r0, r5, #0
	adds r0, #0xae
	ldrb r1, [r0]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	adds r1, r1, r0
	adds r0, r5, #0
	adds r0, #0xae
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0xae
	ldrb r0, [r0]
	cmp r0, r6
	blo _021BB9E2
	bl FUN_021CE198
	str r0, [r4]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BBA78
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021BB9E2:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BB970

	thumb_func_start FUN_021BB9E8
FUN_021BB9E8: ; 0x021BB9E8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x34]
	adds r4, r5, #0
	lsls r0, r0, #0x1d
	adds r4, #0x34
	lsrs r0, r0, #0x1d
	beq _021BBA2C
	ldr r0, [r4]
	bl FUN_021CE37C
	cmp r0, #0
	beq _021BBA2C
	adds r1, r5, #0
	adds r1, #0xb2
	ldrb r1, [r1]
	adds r2, r1, #1
	adds r1, r5, #0
	adds r1, #0xb2
	strb r2, [r1]
	adds r1, r5, #0
	adds r1, #0xb2
	ldrb r1, [r1]
	cmp r1, r0
	blo _021BBA2C
	bl FUN_021CE198
	str r0, [r4]
	adds r0, r5, #0
	movs r1, #6
	bl FUN_021BBA78
	movs r0, #1
	pop {r3, r4, r5, pc}
_021BBA2C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BB9E8

	thumb_func_start FUN_021BBA30
FUN_021BBA30: ; 0x021BBA30
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r4, #1
	movs r6, #0
_021BBA3A:
	bl FUN_021CE198
	lsls r1, r4, #2
	adds r1, r5, r1
	str r0, [r1, #0x1c]
	adds r0, r5, r4
	adds r0, #0xac
	strb r6, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BBA5C
	adds r4, r4, #1
	cmp r4, #6
	blo _021BBA3A
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BBA30

	thumb_func_start FUN_021BBA5C
FUN_021BBA5C: ; 0x021BBA5C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	cmp r1, #2
	bne _021BBA72
	bl FUN_021CE198
	str r0, [r4, #0x40]
	movs r0, #0
	adds r4, #0xb5
	strb r0, [r4]
_021BBA72:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BBA5C

	thumb_func_start FUN_021BBA78
FUN_021BBA78: ; 0x021BBA78
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BD5C0
	cmp r0, #0
	beq _021BBA90
	adds r0, r5, #0
	bl FUN_021BBA30
	pop {r3, r4, r5, pc}
_021BBA90:
	bl FUN_021CE198
	lsls r1, r4, #2
	adds r1, r5, r1
	str r0, [r1, #0x1c]
	adds r0, r5, r4
	movs r1, #0
	adds r0, #0xac
	strb r1, [r0]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BBA78

	thumb_func_start FUN_021BBAA4
FUN_021BBAA4: ; 0x021BBAA4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r6, r0, #0
	cmp r7, #0x1f
	beq _021BBAE4
	movs r4, #0
_021BBAB0:
	lsls r0, r4, #2
	adds r5, r6, r0
	adds r0, r5, #0
	adds r0, #0x1c
	ldr r0, [r0]
	bl FUN_021CE1A8
	cmp r0, #0
	bne _021BBADE
	adds r0, r5, #0
	adds r0, #0x1c
	ldr r0, [r0]
	bl FUN_021CE318
	cmp r7, r0
	bne _021BBADE
	bl FUN_021CE198
	str r0, [r5, #0x1c]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBA5C
_021BBADE:
	adds r4, r4, #1
	cmp r4, #0x24
	blo _021BBAB0
_021BBAE4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BBAA4

	thumb_func_start FUN_021BBAE8
FUN_021BBAE8: ; 0x021BBAE8
	movs r2, #1
_021BBAEA:
	lsls r1, r2, #2
	adds r1, r0, r1
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1d
	beq _021BBAFA
	adds r0, r2, #0
	bx lr
_021BBAFA:
	adds r2, r2, #1
	cmp r2, #6
	blo _021BBAEA
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BBAE8

	thumb_func_start FUN_021BBB04
FUN_021BBB04: ; 0x021BBB04
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x1c]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	beq _021BBB14
	movs r0, #1
	bx lr
_021BBB14:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BBB04

	thumb_func_start FUN_021BBB18
FUN_021BBB18: ; 0x021BBB18
	adds r0, #0x1c
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	lsls r1, r0, #0x1d
	lsrs r1, r1, #0x1d
	cmp r1, #2
	beq _021BBB30
	cmp r1, #3
	beq _021BBB3A
	cmp r1, #4
	beq _021BBB44
	b _021BBB4E
_021BBB30:
	lsls r0, r0, #7
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
_021BBB3A:
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
_021BBB44:
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
_021BBB4E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BBB18

	thumb_func_start FUN_021BBB54
FUN_021BBB54: ; 0x021BBB54
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x1c]
	bx lr
	thumb_func_end FUN_021BBB54

	thumb_func_start FUN_021BBB5C
FUN_021BBB5C: ; 0x021BBB5C
	adds r0, r0, r1
	adds r0, #0xac
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_021BBB5C

	thumb_func_start FUN_021BBB64
FUN_021BBB64: ; 0x021BBB64
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BBBF2
	cmp r5, #0xa
	bhi _021BBBEE
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BBB82: ; jump table
	.short _021BBBEE - _021BBB82 - 2 ; case 0
	.short _021BBBEE - _021BBB82 - 2 ; case 1
	.short _021BBBEE - _021BBB82 - 2 ; case 2
	.short _021BBBEE - _021BBB82 - 2 ; case 3
	.short _021BBBC4 - _021BBB82 - 2 ; case 4
	.short _021BBB98 - _021BBB82 - 2 ; case 5
	.short _021BBBEE - _021BBB82 - 2 ; case 6
	.short _021BBBEE - _021BBB82 - 2 ; case 7
	.short _021BBBEE - _021BBB82 - 2 ; case 8
	.short _021BBBCE - _021BBB82 - 2 ; case 9
	.short _021BBBE4 - _021BBB82 - 2 ; case 10
_021BBB98:
	lsls r0, r5, #2
	adds r0, r4, r0
	adds r0, #0x1c
	ldr r0, [r0]
	bl FUN_021CE2F8
	cmp r0, #0
	beq _021BBBBA
	adds r0, r4, #0
	movs r1, #0x10
	bl FUN_021BD3C8
	adds r1, r4, r5
	adds r1, #0xac
	ldrb r1, [r1]
	muls r0, r1, r0
	pop {r3, r4, r5, pc}
_021BBBBA:
	adds r0, r4, #0
	movs r1, #8
	bl FUN_021BD3C8
	pop {r3, r4, r5, pc}
_021BBBC4:
	adds r0, r4, #0
	movs r1, #8
	bl FUN_021BD3C8
	pop {r3, r4, r5, pc}
_021BBBCE:
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BBBF2
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BD3C8
	pop {r3, r4, r5, pc}
_021BBBE4:
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BD3C8
	pop {r3, r4, r5, pc}
_021BBBEE:
	movs r0, #0
	pop {r3, r4, r5, pc}
_021BBBF2:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BBB64

	thumb_func_start FUN_021BBBF8
FUN_021BBBF8: ; 0x021BBBF8
	push {r4, r5, r6, lr}
	movs r3, #0
	cmp r1, #0
	bne _021BBC02
	movs r3, #6
_021BBC02:
	cmp r3, #0x24
	bhs _021BBC20
	adds r6, r0, #0
	movs r1, #0
	adds r6, #0x1c
	movs r4, #7
_021BBC0E:
	lsls r2, r3, #2
	adds r5, r0, r2
	str r1, [r5, #0x1c]
	ldr r5, [r6, r2]
	adds r3, r3, #1
	bics r5, r4
	str r5, [r6, r2]
	cmp r3, #0x24
	blo _021BBC0E
_021BBC20:
	adds r0, #0xac
	movs r1, #0
	movs r2, #0x24
	blx FUN_020787D4
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BBBF8

	thumb_func_start FUN_021BBC2C
FUN_021BBC2C: ; 0x021BBC2C
	movs r2, #0x52
	lsls r2, r2, #2
	strh r1, [r0, r2]
	movs r3, #0
	subs r1, r2, #2
	strh r3, [r0, r1]
	ldrb r2, [r0, #0x1b]
	movs r1, #0x80
	ldr r3, _021BBC44 ; =FUN_021BC034
	orrs r1, r2
	strb r1, [r0, #0x1b]
	bx r3
	.align 2, 0
_021BBC44: .word FUN_021BC034
	thumb_func_end FUN_021BBC2C

	thumb_func_start FUN_021BBC48
FUN_021BBC48: ; 0x021BBC48
	push {r3, r4, r5, lr}
	ldr r4, _021BBC78 ; =0x00000153
	adds r5, r0, #0
	adds r0, r5, r4
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r4, #0
	subs r0, #0xd
	ldrh r1, [r5, r0]
	ldr r0, _021BBC7C ; =0x0000270F
	cmp r1, r0
	bhs _021BBC70
	adds r0, r4, #0
	subs r0, #0xd
	ldrh r0, [r5, r0]
	subs r4, #0xd
	adds r0, r0, #1
	strh r0, [r5, r4]
_021BBC70:
	adds r0, r5, #0
	bl FUN_021BC064
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BBC78: .word 0x00000153
_021BBC7C: .word 0x0000270F
	thumb_func_end FUN_021BBC48

	thumb_func_start FUN_021BBC80
FUN_021BBC80: ; 0x021BBC80
	push {r3, r4}
	ldr r2, _021BBCA8 ; =0x00000153
	movs r4, #7
	adds r3, r0, r2
	lsls r0, r1, #0x15
	ands r1, r4
	movs r4, #1
	lsls r4, r1
	lsls r1, r4, #0x18
	lsrs r2, r0, #0x18
	lsrs r1, r1, #0x18
	mvns r1, r1
	lsls r1, r1, #0x18
	ldrb r0, [r3, r2]
	lsrs r1, r1, #0x18
	ands r0, r1
	strb r0, [r3, r2]
	pop {r3, r4}
	bx lr
	nop
_021BBCA8: .word 0x00000153
	thumb_func_end FUN_021BBC80

	thumb_func_start FUN_021BBCAC
FUN_021BBCAC: ; 0x021BBCAC
	push {r3, r4, r5, lr}
	ldr r4, _021BBD2C ; =0x00000153
	adds r5, r0, #0
	adds r0, r5, r4
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r4, #2
	adds r0, r5, r0
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r5, #0
	bl FUN_021BAB7C
	adds r0, r5, #0
	bl FUN_021BA990
	adds r0, r5, #0
	bl FUN_021BABA4
	adds r0, r5, #0
	bl FUN_021BABDC
	adds r0, r5, #0
	bl FUN_021BC6C8
	adds r0, r5, #0
	bl FUN_021BC46C
	adds r0, r5, #0
	bl FUN_021BC5B0
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021BBBF8
	adds r0, r5, #0
	adds r0, #0xfc
	bl FUN_021BAC00
	ldrb r0, [r5, #0x1b]
	movs r2, #0x6f
	adds r2, #0xd2
	lsls r0, r0, #0x1b
	lsrs r1, r0, #0x1b
	adds r0, r4, #0
	subs r0, #0x12
	strb r1, [r5, r0]
	ldrh r0, [r5, #0x16]
	subs r4, #0x17
	movs r1, #0x6f
	strh r0, [r5, r4]
	ldrb r2, [r5, r2]
	ldr r0, [r5]
	bl FUN_0201CD48
	ldr r0, [r5]
	bl FUN_0201D620
	pop {r3, r4, r5, pc}
	nop
_021BBD2C: .word 0x00000153
	thumb_func_end FUN_021BBCAC

	thumb_func_start FUN_021BBD30
FUN_021BBD30: ; 0x021BBD30
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021BBDB8 ; =0x00000153
	adds r5, r0, #0
	adds r0, r5, r4
	movs r1, #0
	movs r2, #2
	movs r6, #0
	movs r7, #2
	blx FUN_020787D4
	adds r0, r5, #0
	bl FUN_021BAB7C
	adds r0, r5, #0
	bl FUN_021BA990
	adds r0, r5, #0
	bl FUN_021BABA4
	adds r0, r5, #0
	bl FUN_021BABDC
	adds r0, r5, #0
	bl FUN_021BC6C8
	adds r0, r5, #0
	bl FUN_021BC46C
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB41C
	cmp r0, #0
	bne _021BBD96
	adds r0, r5, #0
	bl FUN_021BC5B0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021BBBF8
	adds r0, r5, #0
	adds r0, #0xfc
	bl FUN_021BAC00
	adds r0, r4, #2
	adds r0, r5, r0
	adds r1, r6, #0
	adds r2, r7, #0
	blx FUN_020787D4
_021BBD96:
	ldrb r0, [r5, #0x1b]
	ldr r2, _021BBDBC ; =0x00000141
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	strb r0, [r5, r2]
	ldrh r1, [r5, #0x16]
	subs r0, r2, #5
	strh r1, [r5, r0]
	ldrb r2, [r5, r2]
	ldr r0, [r5]
	movs r1, #0x6f
	bl FUN_0201CD48
	ldr r0, [r5]
	bl FUN_0201D620
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BBDB8: .word 0x00000153
_021BBDBC: .word 0x00000141
	thumb_func_end FUN_021BBD30

	thumb_func_start FUN_021BBDC0
FUN_021BBDC0: ; 0x021BBDC0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r1, [r4]
	movs r2, #0
	movs r3, #1
	bl FUN_021BA73C
	ldr r5, _021BBE04 ; =0x00000155
	movs r1, #0
	adds r0, r4, r5
	movs r2, #2
	blx FUN_020787D4
	subs r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r4, #0
	bl FUN_021BC5B0
	adds r0, r4, #0
	bl FUN_021BABA4
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021BBBF8
	adds r4, #0xfc
	adds r0, r4, #0
	bl FUN_021BAC00
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BBE04: .word 0x00000155
	thumb_func_end FUN_021BBDC0

	thumb_func_start FUN_021BBE08
FUN_021BBE08: ; 0x021BBE08
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r3, r5, #0
	adds r2, r6, #0
	adds r3, #0xfc
	adds r2, #0xfc
	movs r1, #7
_021BBE18:
	ldrb r0, [r3]
	adds r3, r3, #1
	strb r0, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _021BBE18
	ldr r0, _021BBED8 ; =0x000001F2
	movs r4, #0
	ldrh r1, [r5, r0]
	strh r1, [r6, r0]
_021BBE2C:
	lsls r7, r4, #2
	adds r0, r5, r7
	ldr r0, [r0, #0x1c]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	beq _021BBE56
	adds r0, r4, #0
	bl FUN_021BBEE0
	cmp r0, #0
	beq _021BBE56
	adds r0, r5, r7
	ldr r0, [r0, #0x1c]
	adds r1, r6, r7
	str r0, [r1, #0x1c]
	adds r0, r5, r4
	adds r0, #0xac
	ldrb r1, [r0]
	adds r0, r6, r4
	adds r0, #0xac
	strb r1, [r0]
_021BBE56:
	adds r4, r4, #1
	cmp r4, #0x24
	blo _021BBE2C
	adds r0, r5, #0
	movs r1, #0xa
	movs r4, #0xa
	bl FUN_021BB41C
	cmp r0, #0
	beq _021BBE9C
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BB824
	adds r0, r6, #0
	movs r1, #8
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r6, #0
	movs r1, #9
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r0, r6, #0
	movs r1, #8
	bl FUN_021BB1B0
	adds r0, r6, #0
	movs r1, #9
	adds r2, r4, #0
	bl FUN_021BB1B0
_021BBE9C:
	adds r0, r5, #0
	movs r1, #9
	movs r4, #9
	bl FUN_021BB41C
	cmp r0, #0
	beq _021BBEB2
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BB824
_021BBEB2:
	adds r0, r5, #0
	bl FUN_021BC5B0
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021BBBF8
	adds r0, r5, #0
	adds r0, #0xfc
	bl FUN_021BAC00
	ldr r0, _021BBEDC ; =0x00000155
	movs r1, #0
	adds r0, r5, r0
	movs r2, #2
	blx FUN_020787D4
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BBED8: .word 0x000001F2
_021BBEDC: .word 0x00000155
	thumb_func_end FUN_021BBE08

	thumb_func_start FUN_021BBEE0
FUN_021BBEE0: ; 0x021BBEE0
	bx pc
	nop
	thumb_func_end FUN_021BBEE0
_021BBEE4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF1, 0xC9, 0x89, 0x06

	thumb_func_start FUN_021BBEF0
FUN_021BBEF0: ; 0x021BBEF0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021CE57C
	adds r1, r5, #0
	adds r1, #0xf8
	strb r0, [r1]
	adds r0, r4, #0
	bl FUN_021CE584
	adds r5, #0xf9
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BBEF0

	thumb_func_start FUN_021BBF10
FUN_021BBF10: ; 0x021BBF10
	movs r2, #0x4f
	lsls r2, r2, #2
	strh r1, [r0, r2]
	bx lr
	thumb_func_end FUN_021BBF10

	thumb_func_start FUN_021BBF18
FUN_021BBF18: ; 0x021BBF18
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021BBF6C ; =0x00000141
	adds r5, r0, #0
	adds r4, r1, #0
	strb r4, [r5, r7]
	ldr r0, [r5]
	bl FUN_0201CC38
	adds r6, r0, #0
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_0201C890
	ldr r1, [r5]
	adds r0, r5, #0
	movs r2, #1
	bl FUN_021BAAF4
	adds r0, r7, #0
	ldrh r1, [r5, #0xc]
	adds r0, #0xab
	cmp r1, r0
	bne _021BBF60
	cmp r4, #0
	bne _021BBF60
	ldrb r1, [r5, #0x1b]
	movs r0, #0x1f
	movs r2, #0
	bics r1, r0
	strb r1, [r5, #0x1b]
	ldr r0, [r5]
	movs r1, #0xa
	bl FUN_0201CD24
	subs r1, r7, #5
	strh r0, [r5, r1]
_021BBF60:
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0201CC78
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BBF6C: .word 0x00000141
	thumb_func_end FUN_021BBF18

	thumb_func_start FUN_021BBF70
FUN_021BBF70: ; 0x021BBF70
	strh r1, [r0, #0x14]
	movs r1, #0
	strh r1, [r0, #0x12]
	bx lr
	thumb_func_end FUN_021BBF70

	thumb_func_start FUN_021BBF78
FUN_021BBF78: ; 0x021BBF78
	movs r1, #0
	strh r1, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BBF78

	thumb_func_start FUN_021BBF80
FUN_021BBF80: ; 0x021BBF80
	ldrh r0, [r0, #0x14]
	bx lr
	thumb_func_end FUN_021BBF80

	thumb_func_start FUN_021BBF84
FUN_021BBF84: ; 0x021BBF84
	push {r4, r5, r6, r7}
	movs r4, #0x53
	lsls r4, r4, #2
	add r5, sp, #0x10
	ldrh r7, [r5, #4]
	ldrh r6, [r0, r4]
	subs r5, r4, #2
	strh r7, [r0, r5]
	add r5, sp, #0x10
	ldrh r5, [r5]
	adds r7, r4, #6
	strh r5, [r0, r4]
	strb r1, [r0, r7]
	adds r1, r4, #0
	subs r1, #8
	strb r3, [r0, r1]
	cmp r6, r5
	bne _021BBFC4
	cmp r2, #0
	beq _021BBFBA
	adds r1, r4, #2
	ldrh r1, [r0, r1]
	adds r2, r1, #1
	adds r1, r4, #2
	strh r2, [r0, r1]
	pop {r4, r5, r6, r7}
	bx lr
_021BBFBA:
	movs r2, #0
	adds r1, r4, #2
	strh r2, [r0, r1]
	pop {r4, r5, r6, r7}
	bx lr
_021BBFC4:
	cmp r2, #0
	beq _021BBFCC
	movs r2, #1
	b _021BBFCE
_021BBFCC:
	movs r2, #0
_021BBFCE:
	ldr r1, _021BBFD8 ; =0x0000014E
	strh r2, [r0, r1]
	pop {r4, r5, r6, r7}
	bx lr
	nop
_021BBFD8: .word 0x0000014E
	thumb_func_end FUN_021BBF84

	thumb_func_start FUN_021BBFDC
FUN_021BBFDC: ; 0x021BBFDC
	ldr r1, _021BBFE4 ; =0x0000014E
	ldrh r0, [r0, r1]
	bx lr
	nop
_021BBFE4: .word 0x0000014E
	thumb_func_end FUN_021BBFDC

	thumb_func_start FUN_021BBFE8
FUN_021BBFE8: ; 0x021BBFE8
	movs r1, #0x53
	lsls r1, r1, #2
	ldrh r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021BBFE8

	thumb_func_start FUN_021BBFF0
FUN_021BBFF0: ; 0x021BBFF0
	movs r1, #0x51
	lsls r1, r1, #2
	ldrb r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021BBFF0

	thumb_func_start FUN_021BBFF8
FUN_021BBFF8: ; 0x021BBFF8
	ldr r1, _021BC000 ; =0x0000014A
	ldrh r0, [r0, r1]
	bx lr
	nop
_021BC000: .word 0x0000014A
	thumb_func_end FUN_021BBFF8

	thumb_func_start FUN_021BC004
FUN_021BC004: ; 0x021BC004
	ldr r1, _021BC00C ; =0x00000152
	ldrb r0, [r0, r1]
	bx lr
	nop
_021BC00C: .word 0x00000152
	thumb_func_end FUN_021BC004

	thumb_func_start FUN_021BC010
FUN_021BC010: ; 0x021BC010
	ldrb r0, [r0, #0x1b]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021BC010

	thumb_func_start FUN_021BC018
FUN_021BC018: ; 0x021BC018
	cmp r1, #1
	bhs _021BC01E
	movs r1, #1
_021BC01E:
	ldr r2, _021BC024 ; =0x0000013E
	strh r1, [r0, r2]
	bx lr
	.align 2, 0
_021BC024: .word 0x0000013E
	thumb_func_end FUN_021BC018

	thumb_func_start FUN_021BC028
FUN_021BC028: ; 0x021BC028
	ldr r1, _021BC030 ; =0x0000013E
	ldrh r0, [r0, r1]
	bx lr
	nop
_021BC030: .word 0x0000013E
	thumb_func_end FUN_021BC028

	thumb_func_start FUN_021BC034
FUN_021BC034: ; 0x021BC034
	push {r4, r5, r6, lr}
	movs r4, #0x57
	adds r5, r0, #0
	lsls r4, r4, #2
	adds r0, r5, r4
	movs r1, #0
	movs r2, #0x90
	movs r6, #0
	blx FUN_020787D4
	adds r0, r4, #0
	adds r0, #0x90
	adds r0, r5, r0
	movs r1, #0
	movs r2, #3
	blx FUN_020787D4
	adds r0, r4, #0
	adds r0, #0x93
	strb r6, [r5, r0]
	adds r4, #0x94
	strb r6, [r5, r4]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BC034

	thumb_func_start FUN_021BC064
FUN_021BC064: ; 0x021BC064
	ldr r1, _021BC084 ; =0x000001EF
	ldrb r2, [r0, r1]
	adds r2, r2, #1
	strb r2, [r0, r1]
	ldrb r2, [r0, r1]
	cmp r2, #3
	blo _021BC076
	movs r2, #0
	strb r2, [r0, r1]
_021BC076:
	ldr r1, _021BC084 ; =0x000001EF
	movs r3, #0
	ldrb r2, [r0, r1]
	adds r2, r0, r2
	subs r0, r1, #3
	strb r3, [r2, r0]
	bx lr
	.align 2, 0
_021BC084: .word 0x000001EF
	thumb_func_end FUN_021BC064

	thumb_func_start FUN_021BC088
FUN_021BC088: ; 0x021BC088
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp]
	str r1, [sp, #4]
	ldr r0, _021BC15C ; =0x000001EF
	ldr r1, [sp]
	str r0, [sp, #0x14]
	ldrb r0, [r1, r0]
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	subs r1, r0, #3
	ldr r0, [sp]
	adds r1, r0, r1
	ldr r0, [sp, #8]
	str r1, [sp, #0x10]
	ldrb r0, [r1, r0]
	str r0, [sp, #0xc]
	cmp r0, #6
	bne _021BC114
	ldr r0, [sp, #8]
	movs r2, #0x30
	muls r2, r0, r2
	ldr r0, [sp]
	ldr r7, [sp, #0x14]
	adds r0, r0, r2
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x14]
	ldr r6, [sp, #0x14]
	subs r0, #0x8b
	mov ip, r0
	ldr r0, [sp, #0x14]
	ldr r5, [sp, #0x14]
	subs r0, #0x93
	mov lr, r0
	ldr r0, [sp, #0x14]
	ldr r3, [sp, #0x14]
	str r0, [sp, #0x18]
	subs r0, #0x89
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	movs r1, #0
	subs r0, #0x8d
	subs r7, #0x91
	subs r6, #0x87
	subs r5, #0x8f
	subs r3, #0x85
	str r0, [sp, #0x14]
_021BC0E6:
	ldr r0, [sp, #0x1c]
	lsls r2, r1, #3
	adds r0, r0, r2
	mov r2, ip
	ldrh r4, [r0, r2]
	mov r2, lr
	adds r1, r1, #1
	strh r4, [r0, r2]
	ldr r2, [sp, #0x18]
	cmp r1, #5
	ldrh r2, [r0, r2]
	strh r2, [r0, r7]
	ldrh r2, [r0, r6]
	strh r2, [r0, r5]
	ldrh r4, [r0, r3]
	ldr r2, [sp, #0x14]
	strh r4, [r0, r2]
	blo _021BC0E6
	ldr r0, [sp, #0xc]
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
_021BC114:
	ldr r0, [sp, #8]
	movs r1, #0x30
	muls r1, r0, r1
	ldr r0, [sp]
	movs r2, #0x57
	adds r1, r0, r1
	ldr r0, [sp, #0xc]
	lsls r2, r2, #2
	lsls r0, r0, #3
	adds r0, r1, r0
	ldr r1, [sp, #4]
	ldrh r1, [r1]
	strh r1, [r0, r2]
	ldr r1, [sp, #4]
	ldrh r3, [r1, #2]
	adds r1, r2, #2
	strh r3, [r0, r1]
	ldr r1, [sp, #4]
	ldrh r3, [r1, #4]
	adds r1, r2, #4
	strh r3, [r0, r1]
	ldr r1, [sp, #4]
	ldrh r3, [r1, #6]
	adds r1, r2, #6
	strh r3, [r0, r1]
	ldr r1, [sp, #0x10]
	ldr r0, [sp, #8]
	ldrb r0, [r1, r0]
	cmp r0, #6
	bhs _021BC156
	adds r2, r0, #1
	ldr r0, [sp, #8]
	strb r2, [r1, r0]
_021BC156:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BC15C: .word 0x000001EF
	thumb_func_end FUN_021BC088

	thumb_func_start FUN_021BC160
FUN_021BC160: ; 0x021BC160
	cmp r1, #3
	bhs _021BC178
	ldr r2, _021BC17C ; =0x000001EF
	ldrb r2, [r0, r2]
	subs r1, r2, r1
	bpl _021BC16E
	adds r1, r1, #3
_021BC16E:
	adds r1, r0, r1
	movs r0, #0x7b
	lsls r0, r0, #2
	ldrb r0, [r1, r0]
	bx lr
_021BC178:
	movs r0, #0
	bx lr
	.align 2, 0
_021BC17C: .word 0x000001EF
	thumb_func_end FUN_021BC160

	thumb_func_start FUN_021BC180
FUN_021BC180: ; 0x021BC180
	push {r3, r4, r5, r6}
	adds r4, r0, #0
	adds r0, r3, #0
	cmp r1, #3
	bhs _021BC1D4
	ldr r3, _021BC1DC ; =0x000001EF
	ldrb r3, [r4, r3]
	subs r3, r3, r1
	bpl _021BC194
	adds r3, r3, #3
_021BC194:
	movs r1, #0x7b
	adds r5, r4, r3
	lsls r1, r1, #2
	ldrb r5, [r5, r1]
	cmp r2, r5
	bhs _021BC1D4
	subs r2, r5, r2
	movs r6, #0x30
	subs r2, r2, #1
	muls r6, r3, r6
	lsls r2, r2, #0x18
	adds r3, r4, r6
	lsrs r2, r2, #0x15
	adds r2, r3, r2
	adds r3, r1, #0
	subs r3, #0x90
	ldrh r3, [r2, r3]
	strh r3, [r0]
	adds r3, r1, #0
	subs r3, #0x8e
	ldrh r3, [r2, r3]
	strh r3, [r0, #2]
	adds r3, r1, #0
	subs r1, #0x8a
	subs r3, #0x8c
	ldrh r1, [r2, r1]
	ldrh r3, [r2, r3]
	strh r1, [r0, #6]
	strh r3, [r0, #4]
	movs r0, #1
	pop {r3, r4, r5, r6}
	bx lr
_021BC1D4:
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	nop
_021BC1DC: .word 0x000001EF
	thumb_func_end FUN_021BC180

	thumb_func_start FUN_021BC1E0
FUN_021BC1E0: ; 0x021BC1E0
	adds r1, r0, r1
	ldr r0, _021BC1E8 ; =0x00000157
	strb r2, [r1, r0]
	bx lr
	.align 2, 0
_021BC1E8: .word 0x00000157
	thumb_func_end FUN_021BC1E0

	thumb_func_start FUN_021BC1EC
FUN_021BC1EC: ; 0x021BC1EC
	adds r1, r0, r1
	ldr r0, _021BC1F4 ; =0x00000157
	ldrb r0, [r1, r0]
	bx lr
	.align 2, 0
_021BC1F4: .word 0x00000157
	thumb_func_end FUN_021BC1EC

	thumb_func_start FUN_021BC1F8
FUN_021BC1F8: ; 0x021BC1F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r4, r2, #0
	ldrb r2, [r5, #0x18]
	adds r6, r1, #0
	cmp r2, #0x64
	blo _021BC20A
	b _021BC394
_021BC20A:
	ldr r0, [r5, #8]
	ldr r1, [r6]
	adds r2, r2, #1
	adds r7, r0, r1
	ldr r1, _021BC3A8 ; =0x00000141
	str r0, [sp, #0x1c]
	lsls r2, r2, #0x10
	ldrh r0, [r5, #0xc]
	ldrb r1, [r5, r1]
	lsrs r2, r2, #0x10
	bl FUN_0201D5E0
	cmp r7, r0
	bhs _021BC228
	b _021BC388
_021BC228:
	ldr r1, [sp, #0x1c]
	ldrh r7, [r5, #0xe]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	ldr r0, [r5]
	bl FUN_0201CC38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [r5]
	movs r1, #0xa2
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	ldr r0, [r5]
	movs r1, #0xa3
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	ldr r0, [r5]
	movs r1, #0xa4
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [r5]
	movs r1, #0xa5
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5]
	movs r1, #0xa6
	movs r2, #0
	bl FUN_0201CD24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	adds r2, r1, r0
	ldr r0, [r5]
	movs r1, #8
	str r2, [r5, #8]
	bl FUN_0201CD48
	ldr r0, [r5]
	bl FUN_0201D620
	ldr r0, [r5]
	movs r1, #0xa1
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r5, #0xe]
	ldr r0, [r5]
	movs r1, #0x9e
	movs r2, #0
	bl FUN_0201CD24
	strb r0, [r5, #0x18]
	ldrh r0, [r5, #0xe]
	movs r1, #0xa2
	movs r2, #0
	subs r0, r0, r7
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [r5]
	bl FUN_0201CD24
	strh r0, [r4, #4]
	ldr r0, [r5]
	movs r1, #0xa3
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #6]
	ldr r0, [r5]
	movs r1, #0xa5
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #8]
	ldr r0, [r5]
	movs r1, #0xa6
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xa]
	ldr r0, [r5]
	movs r1, #0xa4
	movs r2, #0
	bl FUN_0201CD24
	strh r0, [r4, #0xc]
	ldrb r0, [r5, #0x1b]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bne _021BC32E
	ldrh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0xee
	strh r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r4, #6]
	adds r0, #0xf0
	strh r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r4, #8]
	adds r0, #0xf2
	strh r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r4, #0xa]
	adds r0, #0xf4
	strh r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r4, #0xc]
	adds r0, #0xf6
	strh r1, [r0]
_021BC32E:
	ldrb r0, [r5, #0x18]
	ldrh r1, [r4, #4]
	strh r7, [r4, #2]
	strb r0, [r4]
	ldr r0, [sp, #0x14]
	subs r0, r1, r0
	strh r0, [r4, #4]
	ldrh r1, [r4, #6]
	ldr r0, [sp, #0x10]
	subs r0, r1, r0
	strh r0, [r4, #6]
	ldrh r1, [r4, #8]
	ldr r0, [sp, #0xc]
	subs r0, r1, r0
	strh r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	ldr r0, [sp, #8]
	subs r0, r1, r0
	strh r0, [r4, #0xa]
	ldrh r1, [r4, #0xc]
	ldr r0, [sp, #4]
	subs r0, r1, r0
	strh r0, [r4, #0xc]
	ldrh r0, [r5, #0x10]
	movs r1, #0xa0
	adds r0, r0, r7
	strh r0, [r5, #0x10]
	ldrh r2, [r5, #0x10]
	ldr r0, [r5]
	bl FUN_0201CD48
	adds r0, r5, #0
	bl FUN_021BA89C
	ldr r0, [r5]
	ldr r1, [sp]
	bl FUN_0201CC78
	ldr r0, [sp, #0x18]
	ldr r1, [r6]
	add sp, #0x20
	subs r0, r1, r0
	str r0, [r6]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BC388:
	ldr r0, [r5]
	movs r1, #8
	adds r2, r7, #0
	str r7, [r5, #8]
	bl FUN_0201CD48
_021BC394:
	cmp r4, #0
	beq _021BC3A2
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xe
	blx FUN_020787D4
_021BC3A2:
	movs r0, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BC3A8: .word 0x00000141
	thumb_func_end FUN_021BC1F8

	thumb_func_start FUN_021BC3AC
FUN_021BC3AC: ; 0x021BC3AC
	ldr r1, _021BC3BC ; =0x00000141
	adds r2, r0, #0
	ldrh r0, [r2, #0xc]
	ldrb r1, [r2, r1]
	ldr r3, _021BC3C0 ; =FUN_0201D5E0
	movs r2, #0x64
	bx r3
	nop
_021BC3BC: .word 0x00000141
_021BC3C0: .word FUN_0201D5E0
	thumb_func_end FUN_021BC3AC

	thumb_func_start FUN_021BC3C4
FUN_021BC3C4: ; 0x021BC3C4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r4, [r5]
	ldr r2, [r5, #8]
	adds r6, r1, #0
	adds r0, r4, #0
	movs r1, #8
	bl FUN_0201CD48
	ldrh r2, [r5, #0x10]
	adds r0, r4, #0
	movs r1, #0xa0
	bl FUN_0201CD48
	ldrh r0, [r5, #0x10]
	cmp r0, #0
	beq _021BC3F2
	adds r0, r5, #0
	bl FUN_021BBAE8
	adds r1, r0, #0
	adds r0, r4, #0
	b _021BC3F6
_021BC3F2:
	adds r0, r4, #0
	movs r1, #0
_021BC3F6:
	bl FUN_0201CFF8
	adds r0, r5, #0
	bl FUN_021BA89C
	ldrb r0, [r5, #0x1b]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bne _021BC40C
	cmp r6, #0
	beq _021BC414
_021BC40C:
	ldrb r0, [r5, #0x1b]
	lsls r0, r0, #0x1b
	lsrs r2, r0, #0x1b
	b _021BC418
_021BC414:
	ldr r0, _021BC438 ; =0x00000141
	ldrb r2, [r5, r0]
_021BC418:
	lsls r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #0x6f
	lsrs r2, r2, #0x18
	bl FUN_0201CD48
	adds r0, r4, #0
	bl FUN_0201D620
	ldrh r2, [r5, #0x12]
	adds r0, r4, #0
	movs r1, #6
	bl FUN_0201CD48
	pop {r4, r5, r6, pc}
	nop
_021BC438: .word 0x00000141
	thumb_func_end FUN_021BC3C4

	thumb_func_start FUN_021BC43C
FUN_021BC43C: ; 0x021BC43C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #0x1b]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	ldr r1, [r4]
	bne _021BC45A
	movs r2, #1
	movs r3, #0
	bl FUN_021BA73C
	adds r0, r4, #0
	bl FUN_021BA8F4
	pop {r4, pc}
_021BC45A:
	movs r2, #0
	bl FUN_021BA7C4
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BC43C

	thumb_func_start FUN_021BC464
FUN_021BC464: ; 0x021BC464
	ldrb r0, [r0, #0x1b]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021BC464

	thumb_func_start FUN_021BC46C
FUN_021BC46C: ; 0x021BC46C
	ldrb r2, [r0, #0x1b]
	movs r1, #0x40
	bics r2, r1
	movs r1, #0
	strb r2, [r0, #0x1b]
	str r1, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC46C

	thumb_func_start FUN_021BC47C
FUN_021BC47C: ; 0x021BC47C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #5
	movs r2, #0
	bl FUN_0201CD24
	str r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BC47C

	thumb_func_start FUN_021BC490
FUN_021BC490: ; 0x021BC490
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x1b]
	adds r7, r1, #0
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bne _021BC57A
	ldrb r0, [r7, #0x1b]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bne _021BC57A
	ldr r0, _021BC580 ; =0x000001F2
	ldrh r1, [r7, r0]
	cmp r1, #0
	bne _021BC57A
	subs r0, #0xee
	ldr r1, _021BC584 ; =0x021DB0B0
	adds r0, r4, r0
	movs r2, #0x38
	blx FUN_0207894C
	ldr r3, _021BC588 ; =0x021DB0E8
	adds r5, r4, #0
	movs r2, #0x1d
_021BC4C0:
	ldm r5!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _021BC4C0
	ldr r0, [r5]
	adds r5, r4, #0
	str r0, [r3]
	ldr r0, _021BC580 ; =0x000001F2
	adds r3, r7, #0
	ldrh r0, [r4, r0]
	movs r2, #0x3f
	mov ip, r0
_021BC4D8:
	ldm r3!, {r0, r1}
	stm r5!, {r0, r1}
	subs r2, r2, #1
	bne _021BC4D8
	ldr r3, _021BC588 ; =0x021DB0E8
	adds r2, r4, #0
	movs r5, #0x1d
_021BC4E6:
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	subs r5, r5, #1
	bne _021BC4E6
	ldr r0, [r3]
	ldr r6, _021BC580 ; =0x000001F2
	str r0, [r2]
	mov r0, ip
	adds r1, r6, #0
	strh r0, [r4, r6]
	subs r1, #0xee
	ldr r0, _021BC584 ; =0x021DB0B0
	adds r1, r4, r1
	movs r2, #0x38
	blx FUN_0207894C
	adds r0, r6, #0
	subs r0, #0xee
	adds r0, r4, r0
	movs r5, #0
	str r0, [sp]
	subs r6, #0xe8
_021BC512:
	movs r0, #0xe
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, [sp]
	movs r2, #5
	adds r0, r0, r1
	adds r1, r7, r1
	ldrh r1, [r1, r6]
	movs r3, #0
	bl FUN_021BAA1C
	adds r5, r5, #1
	cmp r5, #4
	blt _021BC512
	ldr r5, _021BC58C ; =0x00000153
	movs r1, #0
	adds r0, r4, r5
	movs r2, #2
	blx FUN_020787D4
	adds r0, r5, #2
	adds r0, r4, r0
	movs r1, #0
	movs r2, #2
	blx FUN_020787D4
	adds r0, r5, #0
	ldr r1, _021BC590 ; =0x00002710
	subs r0, #0xb
	strh r1, [r4, r0]
	adds r1, r5, #0
	subs r1, #0xd
	movs r0, #0
	strh r0, [r4, r1]
	adds r1, r5, #0
	subs r1, #9
	strh r0, [r4, r1]
	subs r1, r5, #7
	strh r0, [r4, r1]
	adds r0, r5, #0
	movs r1, #0x11
	subs r0, #0xf
	strb r1, [r4, r0]
	subs r1, r5, #5
	movs r0, #0
	strh r0, [r4, r1]
	ldrb r1, [r4, #0x1b]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r4, #0x1b]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BC57A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BC580: .word 0x000001F2
_021BC584: .word 0x021DB0B0
_021BC588: .word 0x021DB0E8
_021BC58C: .word 0x00000153
_021BC590: .word 0x00002710
	thumb_func_end FUN_021BC490

	thumb_func_start FUN_021BC594
FUN_021BC594: ; 0x021BC594
	ldrb r0, [r0, #0x1b]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bx lr
	thumb_func_end FUN_021BC594

	thumb_func_start FUN_021BC59C
FUN_021BC59C: ; 0x021BC59C
	ldr r2, _021BC5A8 ; =0x000001F2
	ldr r3, _021BC5AC ; =FUN_021BBA78
	strh r1, [r0, r2]
	movs r1, #8
	bx r3
	nop
_021BC5A8: .word 0x000001F2
_021BC5AC: .word FUN_021BBA78
	thumb_func_end FUN_021BC59C

	thumb_func_start FUN_021BC5B0
FUN_021BC5B0: ; 0x021BC5B0
	ldr r1, _021BC5B8 ; =0x000001F2
	movs r2, #0
	strh r2, [r0, r1]
	bx lr
	.align 2, 0
_021BC5B8: .word 0x000001F2
	thumb_func_end FUN_021BC5B0

	thumb_func_start FUN_021BC5BC
FUN_021BC5BC: ; 0x021BC5BC
	ldr r1, _021BC5CC ; =0x000001F2
	ldrh r0, [r0, r1]
	cmp r0, #0
	beq _021BC5C8
	movs r0, #1
	bx lr
_021BC5C8:
	movs r0, #0
	bx lr
	.align 2, 0
_021BC5CC: .word 0x000001F2
	thumb_func_end FUN_021BC5BC

	thumb_func_start FUN_021BC5D0
FUN_021BC5D0: ; 0x021BC5D0
	ldr r1, _021BC5D8 ; =0x000001F2
	ldrh r0, [r0, r1]
	bx lr
	nop
_021BC5D8: .word 0x000001F2
	thumb_func_end FUN_021BC5D0

	thumb_func_start FUN_021BC5DC
FUN_021BC5DC: ; 0x021BC5DC
	push {r3, r4}
	ldr r2, _021BC600 ; =0x000001F2
	ldrh r4, [r1]
	ldrh r3, [r0, r2]
	cmp r3, r4
	bhi _021BC5F4
	strh r3, [r1]
	movs r1, #0
	strh r1, [r0, r2]
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BC5F4:
	subs r1, r3, r4
	strh r1, [r0, r2]
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_021BC600: .word 0x000001F2
	thumb_func_end FUN_021BC5DC

	thumb_func_start FUN_021BC604
FUN_021BC604: ; 0x021BC604
	movs r1, #0
	adds r0, #0xd0
	strb r1, [r0]
	bx lr
	thumb_func_end FUN_021BC604

	thumb_func_start FUN_021BC60C
FUN_021BC60C: ; 0x021BC60C
	push {r3, r4}
	adds r2, r0, #0
	adds r2, #0xd0
	ldrb r4, [r2]
	movs r3, #0
	cmp r4, #0
	bls _021BC62A
_021BC61A:
	adds r2, r0, r3
	adds r2, #0xd1
	ldrb r2, [r2]
	cmp r1, r2
	beq _021BC640
	adds r3, r3, #1
	cmp r3, r4
	blo _021BC61A
_021BC62A:
	cmp r3, #0x18
	bhs _021BC640
	adds r2, r0, r3
	adds r2, #0xd1
	strb r1, [r2]
	adds r1, r0, #0
	adds r1, #0xd0
	ldrb r1, [r1]
	adds r0, #0xd0
	adds r1, r1, #1
	strb r1, [r0]
_021BC640:
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021BC60C

	thumb_func_start FUN_021BC644
FUN_021BC644: ; 0x021BC644
	adds r0, #0xd0
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC644

	thumb_func_start FUN_021BC64C
FUN_021BC64C: ; 0x021BC64C
	adds r2, r0, #0
	adds r2, #0xd0
	ldrb r2, [r2]
	cmp r1, r2
	bhs _021BC65E
	adds r0, r0, r1
	adds r0, #0xd1
	ldrb r0, [r0]
	bx lr
_021BC65E:
	movs r0, #0x1f
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC64C

	thumb_func_start FUN_021BC664
FUN_021BC664: ; 0x021BC664
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_02026C8C
	adds r2, r0, #0
	bne _021BC674
	movs r2, #4
_021BC674:
	ldr r0, [r4]
	movs r1, #0x98
	bl FUN_0201CD48
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BC664

	thumb_func_start FUN_021BC680
FUN_021BC680: ; 0x021BC680
	ldr r3, _021BC68C ; =0x000001F6
	strb r1, [r0, r3]
	subs r1, r3, #2
	strh r2, [r0, r1]
	bx lr
	nop
_021BC68C: .word 0x000001F6
	thumb_func_end FUN_021BC680

	thumb_func_start FUN_021BC690
FUN_021BC690: ; 0x021BC690
	push {r3, r4}
	ldr r3, _021BC6B0 ; =0x000001F6
	ldrb r4, [r0, r3]
	cmp r4, #0x1f
	beq _021BC6A8
	strb r4, [r1]
	subs r1, r3, #2
	ldrh r0, [r0, r1]
	strh r0, [r2]
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BC6A8:
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_021BC6B0: .word 0x000001F6
	thumb_func_end FUN_021BC690

	thumb_func_start FUN_021BC6B4
FUN_021BC6B4: ; 0x021BC6B4
	ldr r1, _021BC6C4 ; =0x000001F6
	ldrb r0, [r0, r1]
	cmp r0, #0x1f
	beq _021BC6C0
	movs r0, #1
	bx lr
_021BC6C0:
	movs r0, #0
	bx lr
	.align 2, 0
_021BC6C4: .word 0x000001F6
	thumb_func_end FUN_021BC6B4

	thumb_func_start FUN_021BC6C8
FUN_021BC6C8: ; 0x021BC6C8
	ldr r1, _021BC6DC ; =0x000001F6
	ldrb r2, [r0, r1]
	cmp r2, #0x1f
	beq _021BC6DA
	movs r2, #0x1f
	strb r2, [r0, r1]
	movs r2, #0
	subs r1, r1, #2
	strh r2, [r0, r1]
_021BC6DA:
	bx lr
	.align 2, 0
_021BC6DC: .word 0x000001F6
	thumb_func_end FUN_021BC6C8

	thumb_func_start FUN_021BC6E0
FUN_021BC6E0: ; 0x021BC6E0
	ldr r0, [r0]
	ldr r3, _021BC6E8 ; =FUN_0201D620
	bx r3
	nop
_021BC6E8: .word FUN_0201D620
	thumb_func_end FUN_021BC6E0

	thumb_func_start FUN_021BC6EC
FUN_021BC6EC: ; 0x021BC6EC
	ldrh r0, [r0, #0x10]
	cmp r0, #0x29
	bne _021BC6F6
	movs r0, #1
	bx lr
_021BC6F6:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC6EC

	thumb_func_start FUN_021BC6FC
FUN_021BC6FC: ; 0x021BC6FC
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _021BC72C ; =0x021DB994
	ldr r7, _021BC730 ; =0x021DB1E0
	movs r4, #0
_021BC704:
	movs r0, #0x3c
	muls r0, r4, r0
	adds r5, r6, r0
	adds r0, r5, #0
	bl FUN_021BCD0C
	lsls r0, r4, #2
	adds r4, r4, #1
	str r5, [r7, r0]
	cmp r4, #0x84
	blo _021BC704
	ldr r0, _021BC734 ; =0x021DB1D4
	movs r1, #0
	str r1, [r0, #4]
	str r1, [r0, #8]
	str r1, [r0]
	bl FUN_021BCD18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BC72C: .word 0x021DB994
_021BC730: .word 0x021DB1E0
_021BC734: .word 0x021DB1D4
	thumb_func_end FUN_021BC6FC

	thumb_func_start FUN_021BC738
FUN_021BC738: ; 0x021BC738
	ldr r0, _021BC750 ; =0x021DB1D4
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _021BC74E
	ldr r0, _021BC754 ; =0xFDFFFFFF
_021BC742:
	ldr r1, [r2, #0x18]
	ands r1, r0
	str r1, [r2, #0x18]
	ldr r2, [r2, #4]
	cmp r2, #0
	bne _021BC742
_021BC74E:
	bx lr
	.align 2, 0
_021BC750: .word 0x021DB1D4
_021BC754: .word 0xFDFFFFFF
	thumb_func_end FUN_021BC738

	thumb_func_start FUN_021BC758
FUN_021BC758: ; 0x021BC758
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC758

	thumb_func_start FUN_021BC75C
FUN_021BC75C: ; 0x021BC75C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_021BCCC4
	adds r4, r0, #0
	beq _021BC854
	movs r0, #7
	subs r0, r0, r7
	lsls r1, r0, #0x18
	ldr r0, [sp]
	movs r2, #0
	orrs r0, r1
	str r0, [r4, #0x14]
	str r5, [r4, #0x10]
	str r2, [r4]
	ldr r0, [sp, #0x1c]
	str r2, [r4, #4]
	str r0, [r4, #8]
	ldr r1, [r4, #0x18]
	ldr r0, _021BC858 ; =0xFF00FFFF
	ands r1, r0
	add r0, sp, #0x18
	ldrh r3, [r0, #8]
	lsls r3, r3, #0x18
	lsrs r3, r3, #8
	orrs r3, r1
	ldr r1, _021BC85C ; =0xFEFFFFFF
	strh r6, [r4, #0x38]
	ands r3, r1
	ldr r1, _021BC860 ; =0xFDFFFFFF
	ands r3, r1
	ldr r1, _021BC864 ; =0xBFFFFFFF
	adds r6, r3, #0
	ands r6, r1
	asrs r3, r1, #4
	ands r3, r6
	str r3, [r4, #0x18]
	str r2, [r4, #0xc]
	ldrb r3, [r0]
	adds r0, r4, #0
	adds r0, #0x3a
	strb r3, [r0]
	ldr r3, [r4, #0x18]
	asrs r0, r1, #3
	ands r3, r0
	asrs r0, r1, #2
	ands r3, r0
	lsls r0, r1, #0x10
	ldr r1, _021BC868 ; =0x021DB1D4
	str r3, [r4, #0x18]
	ldr r1, [r1]
	ands r0, r3
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	orrs r1, r0
	movs r0, #2
	lsls r0, r0, #0x1c
	orrs r0, r1
	str r0, [r4, #0x18]
	cmp r5, #0
	beq _021BC7E2
	subs r0, r5, #4
	cmp r0, #1
	bhi _021BC7E4
_021BC7E2:
	movs r2, #1
_021BC7E4:
	cmp r2, #0
	beq _021BC7EE
	add r0, sp, #0x18
	ldrb r1, [r0]
	b _021BC7F0
_021BC7EE:
	movs r1, #0x1f
_021BC7F0:
	adds r0, r4, #0
	adds r0, #0x3b
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x1c
	movs r1, #0
	movs r2, #0x1c
	movs r5, #0
	blx FUN_020787D4
	ldr r2, _021BC868 ; =0x021DB1D4
	ldr r0, [r2, #4]
	cmp r0, #0
	bne _021BC810
_021BC80C:
	str r4, [r2, #4]
	b _021BC84C
_021BC810:
	ldr r1, [r4, #0x14]
	ldr r3, [r0, #0x14]
	cmp r1, r3
	bls _021BC822
	str r4, [r0]
	ldr r0, [r2, #4]
	str r0, [r4, #4]
	str r5, [r4]
	b _021BC80C
_021BC822:
	ldr r3, [r0, #4]
	cmp r3, #0
	beq _021BC844
_021BC828:
	ldr r2, [r3, #0x14]
	cmp r1, r2
	bls _021BC83C
	str r3, [r4, #4]
	ldr r1, [r3]
	str r1, [r4]
	ldr r1, [r3]
	str r4, [r1, #4]
	str r4, [r3]
	b _021BC844
_021BC83C:
	adds r0, r3, #0
	ldr r3, [r3, #4]
	cmp r3, #0
	bne _021BC828
_021BC844:
	cmp r3, #0
	bne _021BC84C
	str r4, [r0, #4]
	str r0, [r4]
_021BC84C:
	bl FUN_021BC758
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021BC854:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BC858: .word 0xFF00FFFF
_021BC85C: .word 0xFEFFFFFF
_021BC860: .word 0xFDFFFFFF
_021BC864: .word 0xBFFFFFFF
_021BC868: .word 0x021DB1D4
	thumb_func_end FUN_021BC75C

	thumb_func_start FUN_021BC86C
FUN_021BC86C: ; 0x021BC86C
	push {r4, lr}
	ldr r0, _021BC88C ; =0x021DB1D4
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _021BC888
_021BC876:
	ldr r1, [r0, #0x10]
	ldr r4, [r0, #4]
	cmp r1, #6
	bne _021BC882
	bl FUN_021BC890
_021BC882:
	adds r0, r4, #0
	cmp r4, #0
	bne _021BC876
_021BC888:
	pop {r4, pc}
	nop
_021BC88C: .word 0x021DB1D4
	thumb_func_end FUN_021BC86C

	thumb_func_start FUN_021BC890
FUN_021BC890: ; 0x021BC890
	push {r4, lr}
	adds r4, r0, #0
	beq _021BC8D8
	ldr r1, [r4, #0x18]
	lsls r0, r1, #2
	lsrs r0, r0, #0x1f
	beq _021BC8D8
	lsls r0, r1, #7
	lsrs r0, r0, #0x1f
	beq _021BC8AE
	movs r0, #2
	lsls r0, r0, #0x1a
	orrs r0, r1
	str r0, [r4, #0x18]
	pop {r4, pc}
_021BC8AE:
	ldr r0, _021BC8DC ; =0x021DB1D4
	ldr r1, [r0, #4]
	cmp r4, r1
	bne _021BC8BA
	ldr r1, [r4, #4]
	str r1, [r0, #4]
_021BC8BA:
	ldr r1, [r4]
	cmp r1, #0
	beq _021BC8C4
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_021BC8C4:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _021BC8CE
	ldr r0, [r4]
	str r0, [r1]
_021BC8CE:
	bl FUN_021BC758
	adds r0, r4, #0
	bl FUN_021BCCE4
_021BC8D8:
	pop {r4, pc}
	nop
_021BC8DC: .word 0x021DB1D4
	thumb_func_end FUN_021BC890

	thumb_func_start FUN_021BC8E0
FUN_021BC8E0: ; 0x021BC8E0
	movs r1, #6
	str r1, [r0, #0x10]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC8E0

	thumb_func_start FUN_021BC8E8
FUN_021BC8E8: ; 0x021BC8E8
	ldr r0, [r0, #0x10]
	cmp r0, #6
	bne _021BC8F2
	movs r0, #1
	bx lr
_021BC8F2:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC8E8

	thumb_func_start FUN_021BC8F8
FUN_021BC8F8: ; 0x021BC8F8
	ldrh r0, [r0, #0x38]
	bx lr
	thumb_func_end FUN_021BC8F8

	thumb_func_start FUN_021BC8FC
FUN_021BC8FC: ; 0x021BC8FC
	adds r0, #0x3b
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC8FC

	thumb_func_start FUN_021BC904
FUN_021BC904: ; 0x021BC904
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0, #0x1c]
	bx lr
	thumb_func_end FUN_021BC904

	thumb_func_start FUN_021BC90C
FUN_021BC90C: ; 0x021BC90C
	movs r1, #1
	ldr r2, [r0, #0x18]
	lsls r1, r1, #0x1a
	orrs r1, r2
	str r1, [r0, #0x18]
	bx lr
	thumb_func_end FUN_021BC90C

	thumb_func_start FUN_021BC918
FUN_021BC918: ; 0x021BC918
	ldr r2, [r0, #0x18]
	lsls r1, r2, #7
	lsrs r1, r1, #0x1f
	beq _021BC928
	movs r1, #1
	lsls r1, r1, #0x1c
	orrs r1, r2
	str r1, [r0, #0x18]
_021BC928:
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BC918

	thumb_func_start FUN_021BC92C
FUN_021BC92C: ; 0x021BC92C
	lsls r1, r1, #2
	adds r0, r0, r1
	str r2, [r0, #0x1c]
	bx lr
	thumb_func_end FUN_021BC92C

	thumb_func_start FUN_021BC934
FUN_021BC934: ; 0x021BC934
	push {r3, lr}
	movs r2, #7
	movs r3, #0
	bl FUN_021BC958
	pop {r3, pc}
	thumb_func_end FUN_021BC934

	thumb_func_start FUN_021BC940
FUN_021BC940: ; 0x021BC940
	push {r3, lr}
	movs r2, #7
	movs r3, #1
	bl FUN_021BC958
	pop {r3, pc}
	thumb_func_end FUN_021BC940

	thumb_func_start FUN_021BC94C
FUN_021BC94C: ; 0x021BC94C
	push {r3, lr}
	movs r3, #1
	bl FUN_021BC958
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BC94C

	thumb_func_start FUN_021BC958
FUN_021BC958: ; 0x021BC958
	push {r3, r4, r5, lr}
	ldr r4, _021BC984 ; =0x021DB1D4
	ldr r5, [r4]
	adds r5, r5, #1
	str r5, [r4]
	bl FUN_021BC98C
	ldr r0, [r4]
	subs r0, r0, #1
	str r0, [r4]
	bne _021BC982
	ldr r2, [r4, #4]
	cmp r2, #0
	beq _021BC982
	ldr r0, _021BC988 ; =0xFFFF0000
_021BC976:
	ldr r1, [r2, #0x18]
	ands r1, r0
	str r1, [r2, #0x18]
	ldr r2, [r2, #4]
	cmp r2, #0
	bne _021BC976
_021BC982:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BC984: .word 0x021DB1D4
_021BC988: .word 0xFFFF0000
	thumb_func_end FUN_021BC958

	thumb_func_start FUN_021BC98C
FUN_021BC98C: ; 0x021BC98C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	ldr r0, _021BCA84 ; =0x021DB1D4
	adds r5, r1, #0
	ldr r4, [r0, #4]
	str r2, [sp, #4]
	str r3, [sp, #8]
	cmp r4, #0
	beq _021BCA7E
_021BC9A0:
	ldr r0, [r4, #0x18]
	ldr r7, [r4, #4]
	lsls r1, r0, #7
	lsrs r1, r1, #0x1f
	beq _021BC9B0
	lsls r0, r0, #3
	lsrs r0, r0, #0x1f
	beq _021BCA68
_021BC9B0:
	ldr r0, [r4, #0x18]
	lsls r1, r0, #6
	lsrs r1, r1, #0x1f
	bne _021BCA68
	lsls r0, r0, #1
	lsrs r0, r0, #0x1f
	bne _021BCA68
	ldr r0, [sp, #4]
	cmp r0, #7
	beq _021BC9CA
	ldr r1, [r4, #0x10]
	cmp r1, r0
	bne _021BCA68
_021BC9CA:
	ldr r0, [r4, #0x18]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	beq _021BC9DA
	ldr r0, _021BCA84 ; =0x021DB1D4
	ldr r0, [r0]
	cmp r1, r0
	bhs _021BCA68
_021BC9DA:
	ldr r0, [r4, #0x18]
	lsls r1, r0, #2
	lsrs r1, r1, #0x1f
	beq _021BCA68
	cmp r5, #0x73
	bne _021BC9EC
	lsls r0, r0, #5
	lsrs r0, r0, #0x1f
	beq _021BCA68
_021BC9EC:
	ldr r2, [r4, #0x18]
	ldr r0, [r4, #8]
	lsls r2, r2, #8
	movs r1, #0
	lsrs r2, r2, #0x18
	beq _021BCA68
_021BC9F8:
	lsls r3, r1, #3
	adds r6, r0, r3
	ldr r3, [r0, r3]
	cmp r5, r3
	bne _021BCA62
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021BCA16
	ldr r0, [sp]
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_021BCA90
	cmp r0, #0
	bne _021BCA68
_021BCA16:
	movs r0, #1
	ldr r1, [r4, #0x18]
	lsls r0, r0, #0x18
	orrs r0, r1
	str r0, [r4, #0x18]
	adds r2, r4, #0
	adds r2, #0x3a
	adds r3, r4, #0
	ldrb r2, [r2]
	ldr r1, [sp]
	ldr r6, [r6, #4]
	adds r0, r4, #0
	adds r3, #0x1c
	blx r6
	ldr r1, [r4, #0x18]
	lsls r0, r1, #3
	lsrs r0, r0, #0x1f
	beq _021BCA3E
	ldr r0, _021BCA88 ; =0xEFFFFFFF
	b _021BCA40
_021BCA3E:
	ldr r0, _021BCA8C ; =0xFEFFFFFF
_021BCA40:
	ands r0, r1
	str r0, [r4, #0x18]
	ldr r0, [r4, #0x18]
	lsls r0, r0, #4
	lsrs r0, r0, #0x1f
	beq _021BCA68
	cmp r7, #0
	beq _021BCA5A
	ldr r0, [r7, #0x18]
	lsls r0, r0, #2
	lsrs r0, r0, #0x1f
	bne _021BCA5A
	ldr r7, [r4, #4]
_021BCA5A:
	adds r0, r4, #0
	bl FUN_021BC890
	b _021BCA68
_021BCA62:
	adds r1, r1, #1
	cmp r1, r2
	blo _021BC9F8
_021BCA68:
	cmp r7, #0
	beq _021BCA7E
	ldr r0, [r7, #0x18]
	lsls r0, r0, #2
	lsrs r0, r0, #0x1f
	beq _021BCA78
	adds r4, r7, #0
	b _021BCA7A
_021BCA78:
	ldr r4, [r4, #4]
_021BCA7A:
	cmp r4, #0
	bne _021BC9A0
_021BCA7E:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021BCA84: .word 0x021DB1D4
_021BCA88: .word 0xEFFFFFFF
_021BCA8C: .word 0xFEFFFFFF
	thumb_func_end FUN_021BC98C

	thumb_func_start FUN_021BCA90
FUN_021BCA90: ; 0x021BCA90
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r1, #0
	adds r1, #0x3b
	ldrb r1, [r1]
	adds r7, r0, #0
	movs r4, #0
	str r2, [sp, #8]
	cmp r1, #0x1f
	beq _021BCAAA
	bl FUN_021AB874
	adds r4, r0, #0
_021BCAAA:
	ldr r0, [r5, #0x10]
	cmp r0, #4
	bne _021BCAC6
	cmp r4, #0
	beq _021BCAC6
	adds r0, r4, #0
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BCAC6
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021BCAC6:
	ldr r0, [r5, #0x10]
	cmp r0, #5
	bne _021BCB08
	movs r0, #7
	bl FUN_021D5AB4
	cmp r0, #0
	beq _021BCADC
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021BCADC:
	cmp r4, #0
	beq _021BCAF2
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BCAF2
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021BCAF2:
	cmp r4, #0
	beq _021BCB08
	adds r0, r4, #0
	movs r1, #9
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021BCB08
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021BCB08:
	ldr r0, _021BCB6C ; =0x021DB1D4
	ldr r4, [r0, #4]
	cmp r4, #0
	beq _021BCB66
_021BCB10:
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021BCB60
	ldr r0, [r4, #0x10]
	cmp r0, #4
	bne _021BCB36
	adds r1, r4, #0
	adds r1, #0x3b
	ldrb r1, [r1]
	adds r0, r7, #0
	bl FUN_021AB874
	cmp r0, #0
	beq _021BCB36
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	bne _021BCB60
_021BCB36:
	ldr r0, [r4, #0x18]
	lsls r0, r0, #1
	lsrs r0, r0, #0x1f
	bne _021BCB60
	ldrh r0, [r5, #0x38]
	ldr r3, [sp, #8]
	adds r1, r7, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x3a
	ldrb r0, [r0]
	str r0, [sp, #4]
	ldr r2, [r5, #0x10]
	ldr r6, [r4, #0xc]
	adds r0, r4, #0
	blx r6
	cmp r0, #0
	beq _021BCB60
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021BCB60:
	ldr r4, [r4, #4]
	cmp r4, #0
	bne _021BCB10
_021BCB66:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021BCB6C: .word 0x021DB1D4
	thumb_func_end FUN_021BCA90

	thumb_func_start FUN_021BCB70
FUN_021BCB70: ; 0x021BCB70
	str r1, [r0, #0xc]
	bx lr
	thumb_func_end FUN_021BCB70

	thumb_func_start FUN_021BCB74
FUN_021BCB74: ; 0x021BCB74
	movs r1, #0
	str r1, [r0, #0xc]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BCB74

	thumb_func_start FUN_021BCB7C
FUN_021BCB7C: ; 0x021BCB7C
	ldr r2, _021BCBAC ; =0x021DB1D4
	ldr r2, [r2, #4]
	cmp r2, #0
	beq _021BCBA6
_021BCB84:
	ldr r3, [r2, #0x10]
	cmp r3, r0
	bne _021BCBA0
	adds r3, r2, #0
	adds r3, #0x3a
	ldrb r3, [r3]
	cmp r3, r1
	bne _021BCBA0
	ldr r3, [r2, #0x18]
	lsls r3, r3, #4
	lsrs r3, r3, #0x1f
	bne _021BCBA0
	adds r0, r2, #0
	bx lr
_021BCBA0:
	ldr r2, [r2, #4]
	cmp r2, #0
	bne _021BCB84
_021BCBA6:
	movs r0, #0
	bx lr
	nop
_021BCBAC: .word 0x021DB1D4
	thumb_func_end FUN_021BCB7C

	thumb_func_start FUN_021BCBB0
FUN_021BCBB0: ; 0x021BCBB0
	cmp r0, #0
	beq _021BCBE0
	adds r2, r0, #0
	ldr r1, [r0, #0x10]
	adds r2, #0x3a
	ldr r0, [r0, #4]
	ldrb r2, [r2]
	cmp r0, #0
	beq _021BCBE0
_021BCBC2:
	ldr r3, [r0, #0x10]
	cmp r3, r1
	bne _021BCBDA
	adds r3, r0, #0
	adds r3, #0x3a
	ldrb r3, [r3]
	cmp r3, r2
	bne _021BCBDA
	ldr r3, [r0, #0x18]
	lsls r3, r3, #4
	lsrs r3, r3, #0x1f
	beq _021BCBE2
_021BCBDA:
	ldr r0, [r0, #4]
	cmp r0, #0
	bne _021BCBC2
_021BCBE0:
	movs r0, #0
_021BCBE2:
	bx lr
	thumb_func_end FUN_021BCBB0

	thumb_func_start FUN_021BCBE4
FUN_021BCBE4: ; 0x021BCBE4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _021BCC20 ; =0x021DB1D4
	ldr r4, [r0, #4]
	cmp r4, #0
	beq _021BCC1E
	movs r6, #2
	lsls r6, r6, #0x18
_021BCBF4:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _021BCC18
	adds r0, r4, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	cmp r0, r5
	bne _021BCC18
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0x1c
	bl FUN_021C5C50
	cmp r0, #0
	beq _021BCC18
	ldr r0, [r4, #0x18]
	orrs r0, r6
	str r0, [r4, #0x18]
_021BCC18:
	ldr r4, [r4, #4]
	cmp r4, #0
	bne _021BCBF4
_021BCC1E:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021BCC20: .word 0x021DB1D4
	thumb_func_end FUN_021BCBE4

	thumb_func_start FUN_021BCC24
FUN_021BCC24: ; 0x021BCC24
	ldr r1, _021BCC4C ; =0x021DB1D4
	ldr r3, [r1, #4]
	cmp r3, #0
	beq _021BCC4A
	ldr r1, _021BCC50 ; =0xFDFFFFFF
_021BCC2E:
	ldr r2, [r3, #0x10]
	cmp r2, #0
	bne _021BCC44
	adds r2, r3, #0
	adds r2, #0x3b
	ldrb r2, [r2]
	cmp r2, r0
	bne _021BCC44
	ldr r2, [r3, #0x18]
	ands r2, r1
	str r2, [r3, #0x18]
_021BCC44:
	ldr r3, [r3, #4]
	cmp r3, #0
	bne _021BCC2E
_021BCC4A:
	bx lr
	.align 2, 0
_021BCC4C: .word 0x021DB1D4
_021BCC50: .word 0xFDFFFFFF
	thumb_func_end FUN_021BCC24

	thumb_func_start FUN_021BCC54
FUN_021BCC54: ; 0x021BCC54
	push {r3, r4}
	ldr r2, _021BCC84 ; =0x021DB1D4
	ldr r2, [r2, #4]
	cmp r2, #0
	beq _021BCC7E
	movs r3, #1
	lsls r3, r3, #0x1e
_021BCC62:
	adds r4, r2, #0
	adds r4, #0x3b
	ldrb r4, [r4]
	cmp r4, r0
	bne _021BCC78
	ldr r4, [r2, #0x10]
	cmp r4, r1
	bne _021BCC78
	ldr r4, [r2, #0x18]
	orrs r4, r3
	str r4, [r2, #0x18]
_021BCC78:
	ldr r2, [r2, #4]
	cmp r2, #0
	bne _021BCC62
_021BCC7E:
	pop {r3, r4}
	bx lr
	nop
_021BCC84: .word 0x021DB1D4
	thumb_func_end FUN_021BCC54

	thumb_func_start FUN_021BCC88
FUN_021BCC88: ; 0x021BCC88
	push {r3, r4, r5, r6}
	ldr r2, _021BCCBC ; =0x021DB1D4
	movs r3, #0
	ldr r2, [r2, #4]
	cmp r2, #0
	beq _021BCCB6
	ldr r4, _021BCCC0 ; =0xBFFFFFFF
	movs r6, #1
_021BCC98:
	adds r5, r2, #0
	adds r5, #0x3b
	ldrb r5, [r5]
	cmp r5, r0
	bne _021BCCB0
	ldr r5, [r2, #0x10]
	cmp r5, r1
	bne _021BCCB0
	ldr r3, [r2, #0x18]
	ands r3, r4
	str r3, [r2, #0x18]
	adds r3, r6, #0
_021BCCB0:
	ldr r2, [r2, #4]
	cmp r2, #0
	bne _021BCC98
_021BCCB6:
	adds r0, r3, #0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_021BCCBC: .word 0x021DB1D4
_021BCCC0: .word 0xBFFFFFFF
	thumb_func_end FUN_021BCC88

	thumb_func_start FUN_021BCCC4
FUN_021BCCC4: ; 0x021BCCC4
	ldr r0, _021BCCDC ; =0x021DB1D4
	ldr r2, [r0, #8]
	cmp r2, #0x84
	bne _021BCCD0
	movs r0, #0
	bx lr
_021BCCD0:
	adds r1, r2, #1
	str r1, [r0, #8]
	ldr r0, _021BCCE0 ; =0x021DB1E0
	lsls r1, r2, #2
	ldr r0, [r0, r1]
	bx lr
	.align 2, 0
_021BCCDC: .word 0x021DB1D4
_021BCCE0: .word 0x021DB1E0
	thumb_func_end FUN_021BCCC4

	thumb_func_start FUN_021BCCE4
FUN_021BCCE4: ; 0x021BCCE4
	push {r3, r4, r5, lr}
	ldr r5, _021BCD04 ; =0x021DB1D4
	adds r4, r0, #0
	ldr r1, [r5, #8]
	cmp r1, #0
	beq _021BCD00
	bl FUN_021BCD0C
	ldr r0, [r5, #8]
	subs r0, r0, #1
	str r0, [r5, #8]
	lsls r1, r0, #2
	ldr r0, _021BCD08 ; =0x021DB1E0
	str r4, [r0, r1]
_021BCD00:
	pop {r3, r4, r5, pc}
	nop
_021BCD04: .word 0x021DB1D4
_021BCD08: .word 0x021DB1E0
	thumb_func_end FUN_021BCCE4

	thumb_func_start FUN_021BCD0C
FUN_021BCD0C: ; 0x021BCD0C
	ldr r3, _021BCD14 ; =FUN_020787D4
	movs r1, #0
	movs r2, #0x3c
	bx r3
	.align 2, 0
_021BCD14: .word FUN_020787D4
	thumb_func_end FUN_021BCD0C

	thumb_func_start FUN_021BCD18
FUN_021BCD18: ; 0x021BCD18
	ldr r2, _021BCD30 ; =0x021DB3F0
	movs r3, #0
	str r3, [r2]
	adds r1, r3, #0
_021BCD20:
	lsls r0, r3, #1
	adds r0, r2, r0
	adds r3, r3, #1
	strh r1, [r0, #4]
	cmp r3, #0x60
	blo _021BCD20
	bx lr
	nop
_021BCD30: .word 0x021DB3F0
	thumb_func_end FUN_021BCD18

	thumb_func_start FUN_021BCD34
FUN_021BCD34: ; 0x021BCD34
	push {r3, lr}
	ldr r0, _021BCD44 ; =0x021DB3F0
	ldr r0, [r0]
	cmp r0, #0
	beq _021BCD42
	bl FUN_021BCD18
_021BCD42:
	pop {r3, pc}
	.align 2, 0
_021BCD44: .word 0x021DB3F0
	thumb_func_end FUN_021BCD34

	thumb_func_start FUN_021BCD48
FUN_021BCD48: ; 0x021BCD48
	push {r3, lr}
	ldr r0, _021BCD88 ; =0x021DB3F0
	ldr r1, [r0]
	cmp r1, #0x60
	bhs _021BCD66
_021BCD52:
	lsls r2, r1, #1
	adds r2, r0, r2
	ldrh r2, [r2, #4]
	cmp r2, #0
	beq _021BCD66
	ldr r1, [r0]
	adds r1, r1, #1
	str r1, [r0]
	cmp r1, #0x60
	blo _021BCD52
_021BCD66:
	cmp r1, #0x5f
	bhs _021BCD7A
	ldr r2, [r0]
	lsls r1, r1, #1
	adds r2, r2, #1
	str r2, [r0]
	movs r2, #1
	adds r0, r0, r1
	strh r2, [r0, #4]
	pop {r3, pc}
_021BCD7A:
	ldr r0, _021BCD8C ; =0x021DAFCC
	ldr r2, _021BCD90 ; =0x021DAFD0
	movs r1, #0
	bl FUN_0203CBAC
	pop {r3, pc}
	nop
_021BCD88: .word 0x021DB3F0
_021BCD8C: .word 0x021DAFCC
_021BCD90: .word 0x021DAFD0
	thumb_func_end FUN_021BCD48

	thumb_func_start FUN_021BCD94
FUN_021BCD94: ; 0x021BCD94
	push {r3, r4}
	ldr r0, _021BCDF8 ; =0x021DB3F0
	ldr r1, [r0]
	cmp r1, #0
	beq _021BCDF4
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	movs r2, #0
	b _021BCDB4
_021BCDA6:
	adds r1, r3, #1
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	lsls r1, r4, #1
	adds r1, r0, r1
	strh r2, [r1, #4]
_021BCDB4:
	cmp r3, #0x60
	bhs _021BCDC2
	lsls r1, r3, #1
	adds r1, r0, r1
	ldrh r1, [r1, #4]
	cmp r1, #0
	bne _021BCDA6
_021BCDC2:
	ldr r1, [r0]
	movs r2, #0
	subs r1, r1, #1
	str r1, [r0]
	lsls r1, r1, #1
	adds r1, r0, r1
	strh r2, [r1, #4]
	ldr r1, [r0]
	cmp r1, #0
	beq _021BCDF4
	beq _021BCDF4
_021BCDD8:
	ldr r1, [r0]
	subs r2, r1, #1
	lsls r1, r2, #1
	str r2, [r0]
	adds r1, r0, r1
	ldrh r1, [r1, #4]
	cmp r1, #1
	bne _021BCDF0
	adds r1, r2, #1
	str r1, [r0]
	pop {r3, r4}
	bx lr
_021BCDF0:
	cmp r2, #0
	bne _021BCDD8
_021BCDF4:
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BCDF8: .word 0x021DB3F0
	thumb_func_end FUN_021BCD94

	thumb_func_start FUN_021BCDFC
FUN_021BCDFC: ; 0x021BCDFC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, _021BCE28 ; =0x021DB3F0
	adds r1, r5, #0
	bl FUN_021BD018
	ldr r1, _021BCE2C ; =0x021DB3F4
	lsls r2, r0, #1
	strh r5, [r1, r2]
	ldr r1, _021BCE30 ; =0x021DB4B4
	lsls r3, r0, #2
	str r4, [r1, r3]
	ldr r1, _021BCE34 ; =0x021DB7B4
	movs r2, #0
	str r2, [r1, r3]
	ldr r1, _021BCE38 ; =0x021DB634
	str r2, [r1, r3]
	ldr r1, _021BCE3C ; =0x021DB934
	strb r2, [r1, r0]
	pop {r3, r4, r5, pc}
	nop
_021BCE28: .word 0x021DB3F0
_021BCE2C: .word 0x021DB3F4
_021BCE30: .word 0x021DB4B4
_021BCE34: .word 0x021DB7B4
_021BCE38: .word 0x021DB634
_021BCE3C: .word 0x021DB934
	thumb_func_end FUN_021BCDFC

	thumb_func_start FUN_021BCE40
FUN_021BCE40: ; 0x021BCE40
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, _021BCE6C ; =0x021DB3F0
	adds r1, r5, #0
	bl FUN_021BD018
	ldr r1, _021BCE70 ; =0x021DB3F4
	lsls r2, r0, #1
	strh r5, [r1, r2]
	ldr r1, _021BCE74 ; =0x021DB4B4
	lsls r3, r0, #2
	str r4, [r1, r3]
	ldr r1, _021BCE78 ; =0x021DB7B4
	movs r2, #0
	str r2, [r1, r3]
	ldr r1, _021BCE7C ; =0x021DB634
	str r2, [r1, r3]
	ldr r1, _021BCE80 ; =0x021DB934
	movs r2, #4
	strb r2, [r1, r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BCE6C: .word 0x021DB3F0
_021BCE70: .word 0x021DB3F4
_021BCE74: .word 0x021DB4B4
_021BCE78: .word 0x021DB7B4
_021BCE7C: .word 0x021DB634
_021BCE80: .word 0x021DB934
	thumb_func_end FUN_021BCE40

	thumb_func_start FUN_021BCE84
FUN_021BCE84: ; 0x021BCE84
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, _021BCEB0 ; =0x021DB3F0
	adds r1, r5, #0
	bl FUN_021BD018
	ldr r1, _021BCEB4 ; =0x021DB3F4
	lsls r2, r0, #1
	strh r5, [r1, r2]
	ldr r1, _021BCEB8 ; =0x021DB4B4
	lsls r3, r0, #2
	str r4, [r1, r3]
	ldr r1, _021BCEBC ; =0x021DB7B4
	movs r2, #0
	str r2, [r1, r3]
	ldr r1, _021BCEC0 ; =0x021DB634
	str r2, [r1, r3]
	ldr r1, _021BCEC4 ; =0x021DB934
	movs r2, #1
	strb r2, [r1, r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BCEB0: .word 0x021DB3F0
_021BCEB4: .word 0x021DB3F4
_021BCEB8: .word 0x021DB4B4
_021BCEBC: .word 0x021DB7B4
_021BCEC0: .word 0x021DB634
_021BCEC4: .word 0x021DB934
	thumb_func_end FUN_021BCE84

	thumb_func_start FUN_021BCEC8
FUN_021BCEC8: ; 0x021BCEC8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, _021BCEF8 ; =0x021DB3F0
	adds r1, r5, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BD018
	ldr r1, _021BCEFC ; =0x021DB3F4
	lsls r2, r0, #1
	strh r5, [r1, r2]
	ldr r1, _021BCF00 ; =0x021DB4B4
	lsls r2, r0, #2
	str r4, [r1, r2]
	ldr r1, _021BCF04 ; =0x021DB7B4
	str r6, [r1, r2]
	ldr r1, _021BCF08 ; =0x021DB634
	str r7, [r1, r2]
	ldr r1, _021BCF0C ; =0x021DB934
	movs r2, #3
	strb r2, [r1, r0]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BCEF8: .word 0x021DB3F0
_021BCEFC: .word 0x021DB3F4
_021BCF00: .word 0x021DB4B4
_021BCF04: .word 0x021DB7B4
_021BCF08: .word 0x021DB634
_021BCF0C: .word 0x021DB934
	thumb_func_end FUN_021BCEC8

	thumb_func_start FUN_021BCF10
FUN_021BCF10: ; 0x021BCF10
	push {r4, r5, r6, lr}
	ldr r6, _021BCF50 ; =0x021DB3F0
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021BD03C
	cmp r0, #0
	blt _021BCF4A
	ldr r1, _021BCF54 ; =0x00000544
	adds r1, r6, r1
	ldrb r2, [r1, r0]
	cmp r2, #1
	bhi _021BCF4A
	lsls r2, r0, #1
	adds r2, r6, r2
	strh r5, [r2, #4]
	lsls r2, r0, #2
	adds r2, r6, r2
	adds r2, #0xc4
	str r4, [r2]
	ldrb r2, [r1, r0]
	cmp r2, #1
	bne _021BCF46
	movs r2, #2
	strb r2, [r1, r0]
_021BCF46:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021BCF4A:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_021BCF50: .word 0x021DB3F0
_021BCF54: .word 0x00000544
	thumb_func_end FUN_021BCF10

	thumb_func_start FUN_021BCF58
FUN_021BCF58: ; 0x021BCF58
	push {r3, r4, r5, r6, r7, lr}
	adds r2, r0, #0
	adds r7, r1, #0
	ldr r0, _021BCFA8 ; =0x021DB3F0
	adds r1, r2, #0
	bl FUN_021BD03C
	adds r5, r0, #0
	bmi _021BCFA6
	ldr r0, _021BCFA8 ; =0x021DB3F0
	adds r1, r0, r5
	ldr r0, _021BCFAC ; =0x00000544
	ldrb r0, [r1, r0]
	cmp r0, #3
	bne _021BCFA6
	ldr r4, _021BCFA8 ; =0x021DB3F0
	lsls r6, r5, #2
	adds r4, #0xc4
	ldr r0, [r4, r6]
	asrs r3, r7, #0x1f
	asrs r1, r0, #0x1f
	adds r2, r7, #0
	blx FUN_0208D638
	adds r3, r1, #0
	adds r1, r5, #0
	movs r5, #2
	adds r2, r0, #0
	movs r7, #0
	lsls r5, r5, #0xa
	adds r2, r2, r5
	adcs r3, r7
	ldr r0, _021BCFA8 ; =0x021DB3F0
	lsls r3, r3, #0x14
	lsrs r2, r2, #0xc
	orrs r2, r3
	bl FUN_021BD060
	str r0, [r4, r6]
_021BCFA6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BCFA8: .word 0x021DB3F0
_021BCFAC: .word 0x00000544
	thumb_func_end FUN_021BCF58

	thumb_func_start FUN_021BCFB0
FUN_021BCFB0: ; 0x021BCFB0
	ldr r2, _021BCFDC ; =0x021DB3F0
	ldr r3, [r2]
	cmp r3, #0x60
	bhs _021BCFD6
_021BCFB8:
	lsls r1, r3, #1
	adds r1, r2, r1
	ldrh r1, [r1, #4]
	cmp r0, r1
	bne _021BCFCC
	lsls r0, r3, #2
	adds r0, r2, r0
	adds r0, #0xc4
	ldr r0, [r0]
	bx lr
_021BCFCC:
	cmp r1, #0
	beq _021BCFD6
	adds r3, r3, #1
	cmp r3, #0x60
	blo _021BCFB8
_021BCFD6:
	movs r0, #0
	bx lr
	nop
_021BCFDC: .word 0x021DB3F0
	thumb_func_end FUN_021BCFB0

	thumb_func_start FUN_021BCFE0
FUN_021BCFE0: ; 0x021BCFE0
	push {r3, r4}
	ldr r3, _021BD014 ; =0x021DB3F0
	ldr r4, [r3]
	cmp r4, #0x60
	bhs _021BD00E
_021BCFEA:
	lsls r2, r4, #1
	adds r2, r3, r2
	ldrh r2, [r2, #4]
	cmp r0, r2
	bne _021BD004
	lsls r0, r4, #2
	adds r0, r3, r0
	adds r0, #0xc4
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BD004:
	cmp r2, #0
	beq _021BD00E
	adds r4, r4, #1
	cmp r4, #0x60
	blo _021BCFEA
_021BD00E:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BD014: .word 0x021DB3F0
	thumb_func_end FUN_021BCFE0

	thumb_func_start FUN_021BD018
FUN_021BD018: ; 0x021BD018
	ldr r3, [r0]
	cmp r3, #0x60
	bhs _021BD032
_021BD01E:
	lsls r2, r3, #1
	adds r2, r0, r2
	ldrh r2, [r2, #4]
	cmp r2, #0
	beq _021BD032
	cmp r1, r2
	beq _021BD032
	adds r3, r3, #1
	cmp r3, #0x60
	blo _021BD01E
_021BD032:
	cmp r3, #0x60
	blo _021BD038
	movs r3, #0
_021BD038:
	adds r0, r3, #0
	bx lr
	thumb_func_end FUN_021BD018

	thumb_func_start FUN_021BD03C
FUN_021BD03C: ; 0x021BD03C
	ldr r3, [r0]
	b _021BD04A
_021BD040:
	cmp r1, r2
	bne _021BD048
	adds r0, r3, #0
	bx lr
_021BD048:
	adds r3, r3, #1
_021BD04A:
	cmp r3, #0x60
	bhs _021BD058
	lsls r2, r3, #1
	adds r2, r0, r2
	ldrh r2, [r2, #4]
	cmp r2, #0
	bne _021BD040
_021BD058:
	movs r0, #0
	mvns r0, r0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD03C

	thumb_func_start FUN_021BD060
FUN_021BD060: ; 0x021BD060
	push {r4, r5}
	lsls r5, r1, #2
	movs r1, #0x91
	adds r4, r0, r5
	lsls r1, r1, #2
	ldr r1, [r4, r1]
	cmp r1, #0
	bne _021BD07A
	movs r3, #0xf1
	lsls r3, r3, #2
	ldr r3, [r4, r3]
	cmp r3, #0
	beq _021BD08E
_021BD07A:
	adds r3, r0, r5
	movs r0, #0xf1
	lsls r0, r0, #2
	ldr r0, [r3, r0]
	cmp r0, r2
	ble _021BD088
	adds r2, r0, #0
_021BD088:
	cmp r1, r2
	bge _021BD08E
	adds r2, r1, #0
_021BD08E:
	adds r0, r2, #0
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021BD060

	thumb_func_start FUN_021BD094
FUN_021BD094: ; 0x021BD094
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0x50
	str r0, [sp]
	adds r0, r1, #0
	movs r1, #0x46
	ldr r3, _021BD0C4 ; =0x021DAFD4
	lsls r1, r1, #4
	movs r2, #1
	bl FUN_0203A228
	ldr r1, _021BD0C8 ; =0x021DD884
	ldr r2, _021BD0CC ; =0x021DD88C
	str r0, [r1, #4]
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	add sp, #4
	pop {r3, r4, pc}
	nop
_021BD0C4: .word 0x021DAFD4
_021BD0C8: .word 0x021DD884
_021BD0CC: .word 0x021DD88C
	thumb_func_end FUN_021BD094

	thumb_func_start FUN_021BD0D0
FUN_021BD0D0: ; 0x021BD0D0
	ldr r2, _021BD0E4 ; =0x021DD88C
	adds r3, r0, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	bx lr
	nop
_021BD0E4: .word 0x021DD88C
	thumb_func_end FUN_021BD0D0

	thumb_func_start FUN_021BD0E8
FUN_021BD0E8: ; 0x021BD0E8
	push {r4, lr}
	ldr r4, _021BD0FC ; =0x021DD884
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _021BD0FA
	bl FUN_0203A278
	movs r0, #0
	str r0, [r4, #4]
_021BD0FA:
	pop {r4, pc}
	.align 2, 0
_021BD0FC: .word 0x021DD884
	thumb_func_end FUN_021BD0E8

	thumb_func_start FUN_021BD100
FUN_021BD100: ; 0x021BD100
	push {r3, r4, r5, lr}
	ldr r5, _021BD134 ; =0x021DD884
	adds r4, r0, #0
	ldr r0, [r5, #0x10]
	ldr r1, [r5, #0x14]
	ldr r2, [r5, #8]
	ldr r3, [r5, #0xc]
	blx FUN_0208D638
	ldr r2, [r5, #0x18]
	ldr r3, [r5, #0x1c]
	adds r0, r2, r0
	adcs r3, r1
	str r0, [r5, #8]
	str r3, [r5, #0xc]
	cmp r4, #0
	beq _021BD130
	adds r0, r3, #0
	movs r1, #0
	movs r3, #0
	adds r2, r4, #0
	blx FUN_0208D638
	adds r3, r1, #0
_021BD130:
	adds r0, r3, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BD134: .word 0x021DD884
	thumb_func_end FUN_021BD100

	thumb_func_start FUN_021BD138
FUN_021BD138: ; 0x021BD138
	push {r3, lr}
	lsls r2, r1, #1
	ldr r1, _021BD154 ; =0x021D750C
	ldrb r1, [r1, r2]
	muls r1, r0, r1
	lsls r0, r1, #0x10
	ldr r1, _021BD158 ; =0x021D750D
	lsrs r0, r0, #0x10
	ldrb r1, [r1, r2]
	blx FUN_0208D894
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r3, pc}
	.align 2, 0
_021BD154: .word 0x021D750C
_021BD158: .word 0x021D750D
	thumb_func_end FUN_021BD138

	thumb_func_start FUN_021BD15C
FUN_021BD15C: ; 0x021BD15C
	push {r3, lr}
	lsls r2, r1, #1
	ldr r1, _021BD17C ; =0x021D7526
	ldrb r1, [r1, r2]
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r1, _021BD180 ; =0x021D7527
	ldrb r1, [r1, r2]
	blx FUN_0208D688
	cmp r0, #0x64
	bls _021BD176
	movs r0, #0x64
_021BD176:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	.align 2, 0
_021BD17C: .word 0x021D7526
_021BD180: .word 0x021D7527
	thumb_func_end FUN_021BD15C

	thumb_func_start FUN_021BD184
FUN_021BD184: ; 0x021BD184
	push {r3, lr}
	ldr r1, _021BD19C ; =0x021D74E0
	ldrb r0, [r1, r0]
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bne _021BD198
	movs r0, #1
	pop {r3, pc}
_021BD198:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
_021BD19C: .word 0x021D74E0
	thumb_func_end FUN_021BD184

	thumb_func_start FUN_021BD1A0
FUN_021BD1A0: ; 0x021BD1A0
	cmp r0, #0x11
	beq _021BD1A8
	cmp r1, #0x11
	bne _021BD1AC
_021BD1A8:
	movs r0, #3
	bx lr
_021BD1AC:
	lsls r2, r0, #4
	adds r2, r0, r2
	ldr r0, _021BD1EC ; =0x021D7540
	adds r0, r0, r2
	ldrb r0, [r1, r0]
	cmp r0, #8
	bhi _021BD1E8
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD1C6: ; jump table
	.short _021BD1D8 - _021BD1C6 - 2 ; case 0
	.short _021BD1E8 - _021BD1C6 - 2 ; case 1
	.short _021BD1DC - _021BD1C6 - 2 ; case 2
	.short _021BD1E8 - _021BD1C6 - 2 ; case 3
	.short _021BD1E0 - _021BD1C6 - 2 ; case 4
	.short _021BD1E8 - _021BD1C6 - 2 ; case 5
	.short _021BD1E8 - _021BD1C6 - 2 ; case 6
	.short _021BD1E8 - _021BD1C6 - 2 ; case 7
	.short _021BD1E4 - _021BD1C6 - 2 ; case 8
_021BD1D8:
	movs r0, #0
	bx lr
_021BD1DC:
	movs r0, #2
	bx lr
_021BD1E0:
	movs r0, #3
	bx lr
_021BD1E4:
	movs r0, #4
	bx lr
_021BD1E8:
	movs r0, #0
	bx lr
	.align 2, 0
_021BD1EC: .word 0x021D7540
	thumb_func_end FUN_021BD1A0

	thumb_func_start FUN_021BD1F0
FUN_021BD1F0: ; 0x021BD1F0
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	add r1, sp, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, #1
	add r2, sp, #0
	bl FUN_021CE58C
	adds r0, r4, #0
	bl FUN_021CE628
	cmp r0, #0
	beq _021BD21C
	add r1, sp, #0
	ldrb r1, [r1, #1]
	adds r0, r5, #0
	bl FUN_021BD1A0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021BD21C:
	add r6, sp, #0
	ldrb r1, [r6, #1]
	adds r0, r5, #0
	bl FUN_021BD1A0
	adds r4, r0, #0
	ldrb r1, [r6]
	adds r0, r5, #0
	bl FUN_021BD1A0
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021BD23C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BD1F0

	thumb_func_start FUN_021BD23C
FUN_021BD23C: ; 0x021BD23C
	ldr r3, _021BD294 ; =0x021D74EB
	ldrb r2, [r3, r0]
	ldrb r0, [r3, r1]
	adds r1, r2, #0
	muls r1, r0, r1
	asrs r0, r1, #1
	lsrs r0, r0, #0x1e
	adds r0, r1, r0
	asrs r1, r0, #2
	cmp r1, #8
	bhi _021BD270
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD25E: ; jump table
	.short _021BD276 - _021BD25E - 2 ; case 0
	.short _021BD27A - _021BD25E - 2 ; case 1
	.short _021BD27E - _021BD25E - 2 ; case 2
	.short _021BD28E - _021BD25E - 2 ; case 3
	.short _021BD282 - _021BD25E - 2 ; case 4
	.short _021BD28E - _021BD25E - 2 ; case 5
	.short _021BD28E - _021BD25E - 2 ; case 6
	.short _021BD28E - _021BD25E - 2 ; case 7
	.short _021BD286 - _021BD25E - 2 ; case 8
_021BD270:
	cmp r1, #0x10
	beq _021BD28A
	b _021BD28E
_021BD276:
	movs r0, #0
	bx lr
_021BD27A:
	movs r0, #1
	bx lr
_021BD27E:
	movs r0, #2
	bx lr
_021BD282:
	movs r0, #3
	bx lr
_021BD286:
	movs r0, #4
	bx lr
_021BD28A:
	movs r0, #5
	bx lr
_021BD28E:
	movs r0, #0
	bx lr
	nop
_021BD294: .word 0x021D74EB
	thumb_func_end FUN_021BD23C

	thumb_func_start FUN_021BD298
FUN_021BD298: ; 0x021BD298
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r0, r2, #1
	movs r1, #5
	adds r6, r3, #0
	blx FUN_0208D894
	adds r1, r0, #2
	adds r0, r5, #0
	muls r0, r4, r0
	muls r0, r1, r0
	adds r1, r6, #0
	blx FUN_0208D894
	movs r1, #0x32
	blx FUN_0208D894
	adds r0, r0, #2
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BD298

	thumb_func_start FUN_021BD2C0
FUN_021BD2C0: ; 0x021BD2C0
	cmp r1, #5
	bhi _021BD2EE
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BD2D0: ; jump table
	.short _021BD2DC - _021BD2D0 - 2 ; case 0
	.short _021BD2E0 - _021BD2D0 - 2 ; case 1
	.short _021BD2E4 - _021BD2D0 - 2 ; case 2
	.short _021BD2E6 - _021BD2D0 - 2 ; case 3
	.short _021BD2E8 - _021BD2D0 - 2 ; case 4
	.short _021BD2EC - _021BD2D0 - 2 ; case 5
_021BD2DC:
	movs r0, #0
	bx lr
_021BD2E0:
	lsrs r0, r0, #2
	bx lr
_021BD2E4:
	lsrs r0, r0, #1
_021BD2E6:
	bx lr
_021BD2E8:
	lsls r0, r0, #1
	bx lr
_021BD2EC:
	lsls r0, r0, #2
_021BD2EE:
	bx lr
	thumb_func_end FUN_021BD2C0

	thumb_func_start FUN_021BD2F0
FUN_021BD2F0: ; 0x021BD2F0
	push {r4, r5}
	lsls r4, r0, #4
	ldr r5, _021BD324 ; =0x021D7540
	adds r0, r0, r4
	movs r3, #0
	movs r2, #0
	adds r0, r5, r0
_021BD2FE:
	ldrb r4, [r0, r3]
	cmp r4, #0
	beq _021BD308
	cmp r4, #2
	bne _021BD312
_021BD308:
	adds r4, r2, #0
	adds r2, r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	strb r3, [r1, r4]
_021BD312:
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	cmp r3, #0x11
	blo _021BD2FE
	adds r0, r2, #0
	pop {r4, r5}
	bx lr
	nop
_021BD324: .word 0x021D7540
	thumb_func_end FUN_021BD2F0

	thumb_func_start FUN_021BD328
FUN_021BD328: ; 0x021BD328
	cmp r0, #3
	ble _021BD330
	movs r0, #2
	bx lr
_021BD330:
	bne _021BD336
	movs r0, #1
	bx lr
_021BD336:
	cmp r0, #0
	beq _021BD33E
	movs r0, #3
	bx lr
_021BD33E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD328

	thumb_func_start FUN_021BD344
FUN_021BD344: ; 0x021BD344
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x64
	bl FUN_021BD100
	cmp r0, r4
	bhs _021BD356
	movs r0, #1
	pop {r4, pc}
_021BD356:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BD344

	thumb_func_start FUN_021BD35C
FUN_021BD35C: ; 0x021BD35C
	cmp r0, r1
	bge _021BD362
	adds r0, r1, #0
_021BD362:
	bx lr
	thumb_func_end FUN_021BD35C

	thumb_func_start FUN_021BD364
FUN_021BD364: ; 0x021BD364
	muls r1, r0, r1
	ldr r0, _021BD37C ; =0x00000FFF
	adds r2, r1, #0
	ands r2, r0
	lsrs r0, r1, #0xc
	movs r1, #2
	lsls r1, r1, #0xa
	cmp r2, r1
	bls _021BD378
	adds r0, r0, #1
_021BD378:
	bx lr
	nop
_021BD37C: .word 0x00000FFF
	thumb_func_end FUN_021BD364

	thumb_func_start FUN_021BD380
FUN_021BD380: ; 0x021BD380
	push {r3, lr}
	bl FUN_021BD364
	cmp r0, #0
	bne _021BD38C
	movs r0, #1
_021BD38C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BD380

	thumb_func_start FUN_021BD390
FUN_021BD390: ; 0x021BD390
	push {r3, r4, r5, lr}
	muls r0, r1, r0
	adds r5, r0, #0
	movs r1, #0x64
	blx FUN_0208D894
	adds r4, r1, #0
	adds r0, r5, #0
	movs r1, #0x64
	blx FUN_0208D894
	adds r5, r0, #0
	cmp r4, #0x32
	blo _021BD3AE
	adds r5, r5, #1
_021BD3AE:
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BD390

	thumb_func_start FUN_021BD3B4
FUN_021BD3B4: ; 0x021BD3B4
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r1, r4, #0
	blx FUN_0208D894
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BD3B4

	thumb_func_start FUN_021BD3C8
FUN_021BD3C8: ; 0x021BD3C8
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r1, r4, #0
	blx FUN_0208D894
	cmp r0, #0
	bne _021BD3DE
	movs r0, #1
_021BD3DE:
	pop {r4, pc}
	thumb_func_end FUN_021BD3C8

	thumb_func_start FUN_021BD3E0
FUN_021BD3E0: ; 0x021BD3E0
	push {r4, lr}
	adds r4, r0, #0
	cmp r4, r1
	bls _021BD3EC
	adds r4, r1, #0
	adds r1, r0, #0
_021BD3EC:
	subs r0, r1, r4
	adds r0, r0, #1
	bl FUN_021BD100
	adds r0, r4, r0
	pop {r4, pc}
	thumb_func_end FUN_021BD3E0

	thumb_func_start FUN_021BD3F8
FUN_021BD3F8: ; 0x021BD3F8
	push {r4, lr}
	adds r4, r0, #0
	cmp r4, #5
	bne _021BD420
	movs r0, #0x64
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r2, _021BD424 ; =0x021D74E5
	movs r0, #0
_021BD40E:
	ldrb r1, [r2, r0]
	cmp r3, r1
	blo _021BD420
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	blo _021BD40E
	adds r0, r4, #0
_021BD420:
	pop {r4, pc}
	nop
_021BD424: .word 0x021D74E5
	thumb_func_end FUN_021BD3F8

	thumb_func_start FUN_021BD428
FUN_021BD428: ; 0x021BD428
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #3
	beq _021BD462
	cmp r1, #4
	bne _021BD470
	movs r1, #5
	bl FUN_021BB054
	cmp r0, #0
	beq _021BD442
	movs r0, #0
	pop {r4, pc}
_021BD442:
	adds r0, r4, #0
	movs r1, #8
	bl FUN_021BB054
	cmp r0, #0
	beq _021BD452
	movs r0, #0
	pop {r4, pc}
_021BD452:
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021BB054
	cmp r0, #0
	beq _021BD474
	movs r0, #0
	pop {r4, pc}
_021BD462:
	movs r1, #0xe
	bl FUN_021BB054
	cmp r0, #0
	beq _021BD474
	movs r0, #0
	pop {r4, pc}
_021BD470:
	movs r0, #0
	pop {r4, pc}
_021BD474:
	adds r0, r4, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	asrs r1, r0, #3
	lsrs r1, r1, #0x1c
	adds r1, r0, r1
	lsls r0, r1, #0xc
	lsrs r0, r0, #0x10
	bne _021BD48A
	movs r0, #1
_021BD48A:
	pop {r4, pc}
	thumb_func_end FUN_021BD428

	thumb_func_start FUN_021BD48C
FUN_021BD48C: ; 0x021BD48C
	cmp r0, #1
	beq _021BD496
	cmp r0, #2
	beq _021BD4AA
	b _021BD4BE
_021BD496:
	cmp r1, #9
	bne _021BD4A0
	movs r0, #6
	lsls r0, r0, #0xa
	bx lr
_021BD4A0:
	cmp r1, #0xa
	bne _021BD4BE
	movs r0, #2
	lsls r0, r0, #0xa
	bx lr
_021BD4AA:
	cmp r1, #9
	bne _021BD4B4
	movs r0, #2
	lsls r0, r0, #0xa
	bx lr
_021BD4B4:
	cmp r1, #0xa
	bne _021BD4BE
	movs r0, #6
	lsls r0, r0, #0xa
	bx lr
_021BD4BE:
	movs r0, #1
	lsls r0, r0, #0xc
	bx lr
	thumb_func_end FUN_021BD48C

	thumb_func_start FUN_021BD4C4
FUN_021BD4C4: ; 0x021BD4C4
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021BD4C4

	non_word_aligned_thumb_func_start FUN_021BD4C6
FUN_021BD4C6: ; 0x021BD4C6
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r6, sp, #0x20
	adds r4, r2, #0
	ldrh r2, [r6]
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #4
	bhi _021BD562
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD4E4: ; jump table
	.short _021BD562 - _021BD4E4 - 2 ; case 0
	.short _021BD524 - _021BD4E4 - 2 ; case 1
	.short _021BD504 - _021BD4E4 - 2 ; case 2
	.short _021BD4EE - _021BD4E4 - 2 ; case 3
	.short _021BD540 - _021BD4E4 - 2 ; case 4
_021BD4EE:
	adds r0, r1, #0
	bl FUN_021BAC80
	bl FUN_021CE21C
	str r0, [r4]
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r3}
	add sp, #0x10
	bx r3
_021BD504:
	lsls r0, r2, #0x16
	lsls r1, r2, #0x10
	lsrs r0, r0, #0x1a
	lsrs r1, r1, #0x1a
	bl FUN_021BD3E0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021CE1C0
	str r0, [r4]
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r3}
	add sp, #0x10
	bx r3
_021BD524:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsls r1, r2, #0x16
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x1a
	bl FUN_021CE278
	str r0, [r4]
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r3}
	add sp, #0x10
	bx r3
_021BD540:
	adds r0, r1, #0
	bl FUN_021BAC80
	ldrh r1, [r6]
	adds r5, r0, #0
	lsls r0, r1, #0x16
	lsls r1, r1, #0x10
	lsrs r0, r0, #0x1a
	lsrs r1, r1, #0x1a
	bl FUN_021BD3E0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	bl FUN_021CE2A8
	str r0, [r4]
_021BD562:
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_021BD4C6

	thumb_func_start FUN_021BD56C
FUN_021BD56C: ; 0x021BD56C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0
	cmp r0, #5
	bhi _021BD5B2
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD582: ; jump table
	.short _021BD5B2 - _021BD582 - 2 ; case 0
	.short _021BD58E - _021BD582 - 2 ; case 1
	.short _021BD598 - _021BD582 - 2 ; case 2
	.short _021BD58E - _021BD582 - 2 ; case 3
	.short _021BD58E - _021BD582 - 2 ; case 4
	.short _021BD58E - _021BD582 - 2 ; case 5
_021BD58E:
	movs r0, #7
	bics r4, r0
	movs r0, #1
_021BD594:
	orrs r4, r0
	b _021BD5B6
_021BD598:
	movs r0, #7
	bics r4, r0
	movs r0, #2
	movs r1, #4
	orrs r4, r0
	bl FUN_021BD3E0
	ldr r1, _021BD5BC ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r1, r4
	lsrs r0, r0, #0x17
	adds r4, r1, #0
	b _021BD594
_021BD5B2:
	movs r0, #7
	bics r4, r0
_021BD5B6:
	adds r0, r4, #0
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021BD5BC: .word 0xFFFFFE07
	thumb_func_end FUN_021BD56C

	thumb_func_start FUN_021BD5C0
FUN_021BD5C0: ; 0x021BD5C0
	cmp r0, #6
	bge _021BD5C8
	movs r0, #1
	bx lr
_021BD5C8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BD5C0

	thumb_func_start FUN_021BD5CC
FUN_021BD5CC: ; 0x021BD5CC
	push {r3}
	sub sp, #4
	movs r2, #0
	movs r1, #7
	bics r2, r1
	movs r1, #2
	orrs r2, r1
	ldr r1, _021BD5EC ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r1, r2
	lsrs r0, r0, #0x17
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	nop
_021BD5EC: .word 0xFFFFFE07
	thumb_func_end FUN_021BD5CC

	thumb_func_start FUN_021BD5F0
FUN_021BD5F0: ; 0x021BD5F0
	push {r3}
	sub sp, #4
	movs r2, #0
	movs r1, #7
	bics r2, r1
	movs r1, #3
	orrs r2, r1
	ldr r1, _021BD610 ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r1, r2
	lsrs r0, r0, #0x17
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	nop
_021BD610: .word 0xFFFFFE07
	thumb_func_end FUN_021BD5F0

	thumb_func_start FUN_021BD614
FUN_021BD614: ; 0x021BD614
	push {r4, lr}
	sub sp, #0x10
	adds r4, r2, #0
	cmp r0, #6
	bge _021BD628
	bl FUN_021BD56C
	add sp, #0x10
	str r0, [r4]
	pop {r4, pc}
_021BD628:
	movs r2, #0
	str r2, [r4]
	cmp r0, #6
	beq _021BD644
	cmp r0, #7
	bne _021BD65A
	adds r0, r1, #0
	bl FUN_021BAC80
	bl FUN_021CE21C
	add sp, #0x10
	str r0, [r4]
	pop {r4, pc}
_021BD644:
	movs r0, #2
	movs r1, #5
	bl FUN_021BD3E0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021CE1C0
	add sp, #0x10
	str r0, [r4]
	pop {r4, pc}
_021BD65A:
	bl FUN_021CE240
	str r0, [r4]
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_021BD614

	thumb_func_start FUN_021BD664
FUN_021BD664: ; 0x021BD664
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r5, #0
_021BD66A:
	adds r0, r5, #0
	bl FUN_021BD688
	adds r5, r5, #1
	adds r4, r0, #0
	beq _021BD684
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BD66A
	adds r0, r4, #0
_021BD684:
	pop {r4, r5, r6, pc}
	nop
	thumb_func_end FUN_021BD664

	thumb_func_start FUN_021BD688
FUN_021BD688: ; 0x021BD688
	bx pc
	nop
	thumb_func_end FUN_021BD688
_021BD68C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x6D, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021BD698
FUN_021BD698: ; 0x021BD698
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r5, #0
	movs r4, #1
_021BD6A2:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021BD6E4
	cmp r0, #0
	bne _021BD6C0
	adds r1, r5, #1
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r5, r1, #0x10
	ldr r1, _021BD6E0 ; =0x021DD884
	lsls r0, r0, #1
	ldr r1, [r1, #4]
	strh r4, [r1, r0]
_021BD6C0:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r0, #0x23
	lsls r0, r0, #4
	cmp r4, r0
	blo _021BD6A2
	adds r0, r5, #0
	bl FUN_021BD100
	ldr r1, _021BD6E0 ; =0x021DD884
	lsls r0, r0, #0x10
	ldr r1, [r1, #4]
	lsrs r0, r0, #0xf
	ldrh r0, [r1, r0]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BD6E0: .word 0x021DD884
	thumb_func_end FUN_021BD698

	thumb_func_start FUN_021BD6E4
FUN_021BD6E4: ; 0x021BD6E4
	push {r3, r4}
	movs r4, #0
	cmp r1, #0
	bls _021BD700
_021BD6EC:
	lsls r3, r4, #1
	ldrh r3, [r0, r3]
	cmp r2, r3
	bne _021BD6FA
	movs r0, #1
	pop {r3, r4}
	bx lr
_021BD6FA:
	adds r4, r4, #1
	cmp r4, r1
	blo _021BD6EC
_021BD700:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD6E4

	thumb_func_start FUN_021BD708
FUN_021BD708: ; 0x021BD708
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_021BAC84
	adds r7, r0, #0
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r5, #0
	bge _021BD728
	rsbs r5, r5, #0
	b _021BD72A
_021BD728:
	movs r5, #0
_021BD72A:
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r1, r5, #0x10
	lsrs r1, r1, #0x10
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r0, r7, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	movs r2, #9
	bl FUN_0201EF48
	adds r1, r0, #0
	muls r1, r4, r1
	adds r0, r1, #0
	movs r1, #5
	blx FUN_0208D894
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BD708

	thumb_func_start FUN_021BD758
FUN_021BD758: ; 0x021BD758
	cmp r0, #0
	beq _021BD764
	cmp r0, #3
	beq _021BD764
	movs r0, #1
	bx lr
_021BD764:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BD758

	thumb_func_start FUN_021BD768
FUN_021BD768: ; 0x021BD768
	cmp r0, #3
	bhi _021BD790
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD778: ; jump table
	.short _021BD780 - _021BD778 - 2 ; case 0
	.short _021BD784 - _021BD778 - 2 ; case 1
	.short _021BD788 - _021BD778 - 2 ; case 2
	.short _021BD78C - _021BD778 - 2 ; case 3
_021BD780:
	movs r0, #1
	bx lr
_021BD784:
	movs r0, #2
	bx lr
_021BD788:
	movs r0, #3
	bx lr
_021BD78C:
	movs r0, #1
	bx lr
_021BD790:
	movs r0, #1
	bx lr
	thumb_func_end FUN_021BD768

	thumb_func_start FUN_021BD794
FUN_021BD794: ; 0x021BD794
	cmp r0, #3
	bne _021BD79A
	movs r1, #3
_021BD79A:
	adds r0, r1, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD794

	thumb_func_start FUN_021BD7A0
FUN_021BD7A0: ; 0x021BD7A0
	push {r3, lr}
	bl FUN_020307F0
	cmp r0, #0
	bne _021BD7AE
	movs r0, #1
	pop {r3, pc}
_021BD7AE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BD7A0

	thumb_func_start FUN_021BD7B4
FUN_021BD7B4: ; 0x021BD7B4
	push {r3, lr}
	bl FUN_020307F0
	cmp r0, #1
	bne _021BD7C2
	movs r0, #1
	pop {r3, pc}
_021BD7C2:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BD7B4

	thumb_func_start FUN_021BD7C8
FUN_021BD7C8: ; 0x021BD7C8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BD7A0
	cmp r0, #0
	beq _021BD7D8
	movs r0, #1
	pop {r4, pc}
_021BD7D8:
	adds r0, r4, #0
	bl FUN_021BD7B4
	cmp r0, #0
	beq _021BD7E6
	movs r0, #1
	pop {r4, pc}
_021BD7E6:
	movs r0, #1
	cmp r4, #0x59
	beq _021BD7EE
	movs r0, #0
_021BD7EE:
	pop {r4, pc}
	thumb_func_end FUN_021BD7C8

	thumb_func_start FUN_021BD7F0
FUN_021BD7F0: ; 0x021BD7F0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	movs r4, #0
	cmp r0, #1
	bne _021BD820
	ldr r0, [r5, #0x4c]
	cmp r0, #0
	beq _021BD80E
	ldr r1, [r5, #0x28]
	cmp r1, #0
	beq _021BD80E
	bl FUN_021BD824
	adds r4, r4, r0
_021BD80E:
	ldr r0, [r5, #0x54]
	cmp r0, #0
	beq _021BD820
	ldr r1, [r5, #0x30]
	cmp r1, #0
	beq _021BD820
	bl FUN_021BD824
	adds r4, r4, r0
_021BD820:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BD7F0

	thumb_func_start FUN_021BD824
FUN_021BD824: ; 0x021BD824
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	beq _021BD85C
	adds r0, r4, #0
	bl FUN_0201FE24
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	beq _021BD85C
	adds r0, r4, #0
	subs r1, r1, #1
	bl FUN_0201FF34
	adds r4, r0, #0
	ldr r0, [r5]
	movs r1, #0xa
	bl FUN_0203050C
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x9e
	movs r2, #0
	bl FUN_0201CD24
	muls r0, r5, r0
	lsls r0, r0, #2
	pop {r3, r4, r5, pc}
_021BD85C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BD824

	thumb_func_start FUN_021BD860
FUN_021BD860: ; 0x021BD860
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	str r0, [sp]
	adds r0, r7, #0
	bl FUN_0219D4C8
	adds r6, r0, #0
	ldr r4, _021BD8A8 ; =0x00000001
	ldr r5, _021BD8AC ; =0x00000000
	beq _021BD890
_021BD874:
	lsls r1, r5, #0x18
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	movs r1, #0xf
	bl FUN_021BB1F4
	cmp r0, r4
	bls _021BD88A
	adds r4, r0, #0
_021BD88A:
	adds r5, r5, #1
	cmp r5, r6
	blo _021BD874
_021BD890:
	ldr r0, [sp]
	cmp r0, #9
	blo _021BD89A
	movs r0, #8
	str r0, [sp]
_021BD89A:
	ldr r1, _021BD8B0 ; =0x021D74F1
	ldr r0, [sp]
	ldrb r1, [r1, r0]
	lsls r0, r4, #2
	muls r0, r1, r0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BD8A8: .word 0x00000001
_021BD8AC: .word 0x00000000
_021BD8B0: .word 0x021D74F1
	thumb_func_end FUN_021BD860

	thumb_func_start FUN_021BD8B4
FUN_021BD8B4: ; 0x021BD8B4
	ldr r1, _021BD8BC ; =0x021DD884
	strh r0, [r1]
	bx lr
	nop
_021BD8BC: .word 0x021DD884
	thumb_func_end FUN_021BD8B4

	thumb_func_start FUN_021BD8C0
FUN_021BD8C0: ; 0x021BD8C0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD8C0

	thumb_func_start FUN_021BD8C4
FUN_021BD8C4: ; 0x021BD8C4
	ldr r2, _021BD8CC ; =0x021DD884
	ldr r3, _021BD8D0 ; =FUN_0202681C
	ldrh r2, [r2]
	bx r3
	.align 2, 0
_021BD8CC: .word 0x021DD884
_021BD8D0: .word FUN_0202681C
	thumb_func_end FUN_021BD8C4

	thumb_func_start FUN_021BD8D4
FUN_021BD8D4: ; 0x021BD8D4
	push {r4, r5}
	movs r1, #0
	movs r2, #0
	movs r3, #0x1f
_021BD8DC:
	ldrb r4, [r0, r2]
	adds r5, r4, #0
	lsls r4, r2, #2
	adds r4, r2, r4
	ands r5, r3
	lsls r5, r4
	adds r2, r2, #1
	orrs r1, r5
	cmp r2, #6
	blo _021BD8DC
	adds r0, r1, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BD8D4

	thumb_func_start FUN_021BD8F8
FUN_021BD8F8: ; 0x021BD8F8
	push {r3, r4}
	movs r4, #0
	movs r2, #0x1f
_021BD8FE:
	adds r3, r0, #0
	ands r3, r2
	strb r3, [r1, r4]
	adds r4, r4, #1
	lsrs r0, r0, #5
	cmp r4, #6
	blo _021BD8FE
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021BD8F8

	thumb_func_start FUN_021BD910
FUN_021BD910: ; 0x021BD910
	push {r4, lr}
	movs r1, #7
	movs r4, #7
	bl FUN_021BB054
	cmp r0, #0
	beq _021BD920
	movs r4, #0
_021BD920:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_021BD910

	thumb_func_start FUN_021BD924
FUN_021BD924: ; 0x021BD924
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r2, [sp, #4]
	adds r6, r0, #0
	str r1, [sp]
	adds r7, r3, #0
	bl FUN_0219BDC0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	bl FUN_021BAC80
	adds r2, r0, #0
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_0219C638
	adds r4, r0, #0
	adds r0, r7, #0
	movs r1, #0x1b
	bl FUN_020212AC
	adds r5, r0, #0
	cmp r7, #0xae
	bne _021BD95E
	ldr r0, [sp, #4]
	bl FUN_021BD910
	adds r5, r0, #0
_021BD95E:
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _021BD9AA
	cmp r5, #0xd
	bhi _021BD9A4
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021BD974: ; jump table
	.short _021BD990 - _021BD974 - 2 ; case 0
	.short _021BD99E - _021BD974 - 2 ; case 1
	.short _021BD9A4 - _021BD974 - 2 ; case 2
	.short _021BD990 - _021BD974 - 2 ; case 3
	.short _021BD990 - _021BD974 - 2 ; case 4
	.short _021BD990 - _021BD974 - 2 ; case 5
	.short _021BD9A4 - _021BD974 - 2 ; case 6
	.short _021BD99E - _021BD974 - 2 ; case 7
	.short _021BD9A4 - _021BD974 - 2 ; case 8
	.short _021BD990 - _021BD974 - 2 ; case 9
	.short _021BD9A4 - _021BD974 - 2 ; case 10
	.short _021BD9A4 - _021BD974 - 2 ; case 11
	.short _021BD9A4 - _021BD974 - 2 ; case 12
	.short _021BD9A4 - _021BD974 - 2 ; case 13
_021BD990:
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0219C4FC
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_021BD99E:
	add sp, #0x14
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_021BD9A4:
	add sp, #0x14
	movs r0, #6
	pop {r4, r5, r6, r7, pc}
_021BD9AA:
	ldr r1, [sp, #8]
	movs r0, #0
	cmp r1, #2
	bne _021BD9BE
	adds r0, r7, #0
	movs r1, #0xb
	bl FUN_0202143C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_021BD9BE:
	cmp r5, #9
	bhi _021BDA0E
	adds r1, r5, r5
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021BD9CE: ; jump table
	.short _021BD9E2 - _021BD9CE - 2 ; case 0
	.short _021BD9F6 - _021BD9CE - 2 ; case 1
	.short _021BD9FA - _021BD9CE - 2 ; case 2
	.short _021BD9E2 - _021BD9CE - 2 ; case 3
	.short _021BDA0E - _021BD9CE - 2 ; case 4
	.short _021BDA0E - _021BD9CE - 2 ; case 5
	.short _021BDA0E - _021BD9CE - 2 ; case 6
	.short _021BDA08 - _021BD9CE - 2 ; case 7
	.short _021BDA0E - _021BD9CE - 2 ; case 8
	.short _021BD9E2 - _021BD9CE - 2 ; case 9
_021BD9E2:
	cmp r0, #0
	beq _021BD9F2
	movs r0, #6
_021BD9E8:
	lsls r0, r0, #8
_021BD9EA:
	orrs r0, r4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _021BDA14
_021BD9F2:
	movs r0, #1
	b _021BD9E8
_021BD9F6:
	movs r0, #3
	b _021BD9E8
_021BD9FA:
	cmp r0, #0
	beq _021BDA02
	movs r0, #7
	b _021BD9E8
_021BDA02:
	movs r0, #1
	lsls r0, r0, #0xa
	b _021BD9EA
_021BDA08:
	add sp, #0x14
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_021BDA0E:
	add sp, #0x14
	movs r0, #6
	pop {r4, r5, r6, r7, pc}
_021BDA14:
	add r5, sp, #0xc
	ldr r1, [sp]
	adds r0, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_0219C5E4
	cmp r0, #0
	beq _021BDA3C
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrb r2, [r5, r2]
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_0219C638
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_021BDA3C:
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_0219C024
	cmp r0, #0
	beq _021BDA58
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x14
	ldrb r0, [r5, r0]
	pop {r4, r5, r6, r7, pc}
_021BDA58:
	movs r0, #6
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BD924

	thumb_func_start FUN_021BDA60
FUN_021BDA60: ; 0x021BDA60
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x18]
	ldr r5, _021BDA94 ; =0x021DD88C
	adds r6, r4, #0
	adds r7, r0, #0
	mov ip, r1
	ldm r5!, {r0, r1}
	stm r6!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r6!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r6!, {r0, r1}
	adds r0, r7, #0
	mov r1, ip
	bl FUN_021BD924
	adds r3, r0, #0
	ldr r2, _021BDA94 ; =0x021DD88C
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	adds r0, r3, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BDA94: .word 0x021DD88C
	thumb_func_end FUN_021BDA60

	thumb_func_start FUN_021BDA98
FUN_021BDA98: ; 0x021BDA98
	movs r3, #0
	movs r2, #4
_021BDA9C:
	adds r1, r0, r3
	adds r3, r3, #1
	strb r2, [r1, #4]
	cmp r3, #4
	blo _021BDA9C
	movs r1, #0
	str r1, [r0]
	bx lr
	thumb_func_end FUN_021BDA98

	thumb_func_start FUN_021BDAAC
FUN_021BDAAC: ; 0x021BDAAC
	push {r3, r4}
	movs r4, #0
_021BDAB0:
	adds r3, r0, r4
	ldrb r2, [r3, #4]
	cmp r1, r2
	beq _021BDACE
	cmp r2, #4
	bne _021BDAC8
	strb r1, [r3, #4]
	ldr r1, [r0]
	adds r1, r1, #1
	str r1, [r0]
	pop {r3, r4}
	bx lr
_021BDAC8:
	adds r4, r4, #1
	cmp r4, #4
	blo _021BDAB0
_021BDACE:
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDAAC

	thumb_func_start FUN_021BDAD4
FUN_021BDAD4: ; 0x021BDAD4
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_021BDAD4

	thumb_func_start FUN_021BDAD8
FUN_021BDAD8: ; 0x021BDAD8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r6, r1, #0
	str r2, [sp]
	movs r7, #0
	movs r4, #0
	cmp r0, #0
	bls _021BDB0E
_021BDAF0:
	adds r0, r5, r4
	ldrb r0, [r0, #4]
	adds r1, r6, #0
	bl FUN_0219C8D8
	cmp r0, #0
	beq _021BDB02
	movs r7, #1
	b _021BDB06
_021BDB02:
	movs r0, #1
	str r0, [sp, #4]
_021BDB06:
	ldr r0, [r5]
	adds r4, r4, #1
	cmp r4, r0
	blo _021BDAF0
_021BDB0E:
	cmp r7, #0
	beq _021BDB2A
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _021BDB2A
	ldr r0, [sp]
	cmp r0, #1
	bhi _021BDB24
	add sp, #8
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021BDB24:
	add sp, #8
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_021BDB2A:
	movs r0, #3
	cmp r7, #0
	bne _021BDB32
	movs r0, #4
_021BDB32:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BDAD8

	thumb_func_start FUN_021BDB38
FUN_021BDB38: ; 0x021BDB38
	push {r3, r4}
	movs r4, #0
	movs r3, #0xf
	bics r4, r3
	movs r3, #1
	orrs r4, r3
	movs r3, #0x70
	bics r4, r3
	lsls r2, r2, #0x1d
	lsls r1, r1, #0x10
	lsrs r2, r2, #0x19
	adds r3, r4, #0
	orrs r3, r2
	ldr r2, _021BDB60 ; =0xFF80007F
	lsrs r1, r1, #9
	ands r2, r3
	orrs r1, r2
	str r1, [r0]
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BDB60: .word 0xFF80007F
	thumb_func_end FUN_021BDB38

	thumb_func_start FUN_021BDB64
FUN_021BDB64: ; 0x021BDB64
	ldr r3, [r0]
	lsls r2, r3, #0x1c
	lsrs r2, r2, #0x1c
	cmp r2, #1
	bne _021BDB7E
	cmp r1, #6
	beq _021BDB7E
	movs r2, #0x70
	lsls r1, r1, #0x1d
	bics r3, r2
	lsrs r1, r1, #0x19
	orrs r1, r3
	str r1, [r0]
_021BDB7E:
	bx lr
	thumb_func_end FUN_021BDB64
_021BDB80:
	.byte 0x02, 0x68, 0x11, 0x07, 0x09, 0x0F, 0x01, 0x29, 0x03, 0xD1, 0x01, 0x21, 0x89, 0x06, 0x11, 0x43
	.byte 0x01, 0x60, 0x70, 0x47

	thumb_func_start FUN_021BDB94
FUN_021BDB94: ; 0x021BDB94
	ldr r0, [r0]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _021BDBA4
	lsls r0, r0, #5
	lsrs r0, r0, #0x1f
	bx lr
_021BDBA4:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BDB94

	thumb_func_start FUN_021BDBA8
FUN_021BDBA8: ; 0x021BDBA8
	ldr r0, [r0]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _021BDBBC
	lsls r0, r0, #9
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
_021BDBBC:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021BDBA8

	thumb_func_start FUN_021BDBC0
FUN_021BDBC0: ; 0x021BDBC0
	push {r4, r5}
	movs r5, #0
	movs r4, #0xf
	bics r5, r4
	movs r4, #2
	orrs r5, r4
	ldr r4, _021BDBF4 ; =0xFF80007F
	lsls r1, r1, #0x10
	ands r4, r5
	lsrs r1, r1, #9
	orrs r4, r1
	movs r1, #0x70
	bics r4, r1
	lsls r1, r2, #0x1d
	lsrs r1, r1, #0x19
	adds r2, r4, #0
	orrs r2, r1
	ldr r1, _021BDBF8 ; =0x807FFFFF
	ands r2, r1
	lsls r1, r3, #0x18
	lsrs r1, r1, #1
	orrs r1, r2
	str r1, [r0]
	pop {r4, r5}
	bx lr
	nop
_021BDBF4: .word 0xFF80007F
_021BDBF8: .word 0x807FFFFF
	thumb_func_end FUN_021BDBC0

	thumb_func_start FUN_021BDBFC
FUN_021BDBFC: ; 0x021BDBFC
	push {r3, r4}
	movs r4, #0
	movs r3, #0xf
	bics r4, r3
	movs r3, #3
	orrs r4, r3
	movs r3, #0x70
	bics r4, r3
	lsls r1, r1, #0x1d
	lsls r2, r2, #0x1d
	lsrs r1, r1, #0x19
	adds r3, r4, #0
	orrs r3, r1
	ldr r1, _021BDC28 ; =0xFFFFFC7F
	lsrs r2, r2, #0x16
	ands r3, r1
	orrs r2, r3
	subs r1, #0x80
	ands r1, r2
	str r1, [r0]
	pop {r3, r4}
	bx lr
	.align 2, 0
_021BDC28: .word 0xFFFFFC7F
	thumb_func_end FUN_021BDBFC

	thumb_func_start FUN_021BDC2C
FUN_021BDC2C: ; 0x021BDC2C
	movs r2, #0
	movs r1, #0xf
	bics r2, r1
	movs r1, #3
	orrs r2, r1
	ldr r1, _021BDC44 ; =0xFFFFFC7F
	ands r2, r1
	movs r1, #1
	lsls r1, r1, #0xa
	orrs r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
_021BDC44: .word 0xFFFFFC7F
	thumb_func_end FUN_021BDC2C

	thumb_func_start FUN_021BDC48
FUN_021BDC48: ; 0x021BDC48
	ldr r0, [r0]
	lsls r1, r0, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #3
	bne _021BDC5E
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1f
	cmp r0, #1
	bne _021BDC5E
	movs r0, #1
	bx lr
_021BDC5E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDC48

	thumb_func_start FUN_021BDC64
FUN_021BDC64: ; 0x021BDC64
	movs r3, #0
	movs r2, #0xf
	bics r3, r2
	movs r2, #6
	orrs r3, r2
	movs r2, #0x70
	lsls r1, r1, #0x1d
	bics r3, r2
	lsrs r1, r1, #0x19
	orrs r1, r3
	str r1, [r0]
	bx lr
	thumb_func_end FUN_021BDC64

	thumb_func_start FUN_021BDC7C
FUN_021BDC7C: ; 0x021BDC7C
	ldr r2, [r0]
	movs r1, #0xf
	bics r2, r1
	movs r1, #4
	orrs r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDC7C
_021BDC8C:
	.byte 0x02, 0x68, 0x0F, 0x21
	.byte 0x8A, 0x43, 0x05, 0x21, 0x11, 0x43, 0x01, 0x60, 0x70, 0x47, 0x00, 0x00

	thumb_func_start FUN_021BDC9C
FUN_021BDC9C: ; 0x021BDC9C
	ldr r2, [r0]
	movs r1, #0xf
	bics r2, r1
	movs r1, #0xf
	ands r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDC9C

	thumb_func_start FUN_021BDCAC
FUN_021BDCAC: ; 0x021BDCAC
	ldr r2, [r0]
	movs r1, #0xf
	bics r2, r1
	movs r1, #7
	orrs r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDCAC

	thumb_func_start FUN_021BDCBC
FUN_021BDCBC: ; 0x021BDCBC
	ldr r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	bx lr
	thumb_func_end FUN_021BDCBC

	thumb_func_start FUN_021BDCC4
FUN_021BDCC4: ; 0x021BDCC4
	ldr r2, [r0]
	movs r1, #0xf
	bics r2, r1
	movs r1, #8
	orrs r2, r1
	movs r1, #0xf
	ands r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDCC4

	thumb_func_start FUN_021BDCD8
FUN_021BDCD8: ; 0x021BDCD8
	ldr r2, [r0]
	movs r1, #0xf
	bics r2, r1
	movs r1, #9
	orrs r2, r1
	movs r1, #0xf
	ands r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDCD8

	thumb_func_start FUN_021BDCEC
FUN_021BDCEC: ; 0x021BDCEC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r1, #0x10
	adds r6, r0, #0
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	ldr r1, _021BDD50 ; =0x021D7F38
	lsrs r4, r0, #0x10
	movs r2, #0
_021BDD00:
	lsls r5, r2, #3
	ldr r0, [r1, r5]
	cmp r4, r0
	bne _021BDD44
	adds r0, r6, #0
	bl FUN_021BDE18
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	ldr r1, _021BDD54 ; =0x021D7F3C
	adds r6, r0, #0
	ldr r1, [r1, r5]
	add r0, sp, #0xc
	blx r1
	adds r5, r0, #0
	add r0, sp, #0xc
	bl FUN_021BDD60
	str r6, [sp]
	str r5, [sp, #4]
	adds r2, r0, #0
	ldr r0, [sp, #0xc]
	adds r1, r4, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #4
	adds r3, r7, #0
	bl FUN_021BC75C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_021BDD44:
	adds r2, r2, #1
	cmp r2, #0x9e
	blo _021BDD00
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BDD50: .word 0x021D7F38
_021BDD54: .word 0x021D7F3C
	thumb_func_end FUN_021BDCEC

	thumb_func_start FUN_021BDD58
FUN_021BDD58: ; 0x021BDD58
	lsls r0, r0, #0x10
	orrs r0, r1
	bx lr
	.align 2, 0
	thumb_func_end FUN_021BDD58

	thumb_func_start FUN_021BDD60
FUN_021BDD60: ; 0x021BDD60
	ldr r1, [r0]
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	bne _021BDD6C
	movs r2, #5
_021BDD6C:
	ldr r1, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [r0]
	adds r0, r2, #0
	bx lr
	thumb_func_end FUN_021BDD60

	thumb_func_start FUN_021BDD78
FUN_021BDD78: ; 0x021BDD78
	push {r3, r4, r5, lr}
	bl FUN_021BAC80
	adds r5, r0, #0
	movs r0, #4
	adds r1, r5, #0
	bl FUN_021BCB7C
	cmp r0, #0
	beq _021BDD9E
	movs r4, #4
_021BDD8E:
	bl FUN_021BC890
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BCB7C
	cmp r0, #0
	bne _021BDD8E
_021BDD9E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BDD78

	thumb_func_start FUN_021BDDA0
FUN_021BDDA0: ; 0x021BDDA0
	push {r3, lr}
	bl FUN_021BAC80
	movs r1, #4
	bl FUN_021BCC54
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BDDA0

	thumb_func_start FUN_021BDDB0
FUN_021BDDB0: ; 0x021BDDB0
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BAC80
	movs r1, #4
	bl FUN_021BCC88
	cmp r0, #0
	bne _021BDDC8
	adds r0, r4, #0
	bl FUN_021BDCEC
_021BDDC8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BDDB0

	thumb_func_start FUN_021BDDCC
FUN_021BDDCC: ; 0x021BDDCC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r7, r0, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r5, r0, #0
	movs r0, #4
	adds r1, r4, #0
	bl FUN_021BCB7C
	adds r4, r0, #0
	movs r0, #4
	adds r1, r5, #0
	bl FUN_021BCB7C
	adds r5, r0, #0
	cmp r4, #0
	beq _021BDDFE
	adds r0, r4, #0
	bl FUN_021BC890
_021BDDFE:
	cmp r5, #0
	beq _021BDE08
	adds r0, r5, #0
	bl FUN_021BC890
_021BDE08:
	adds r0, r7, #0
	bl FUN_021BDCEC
	adds r0, r6, #0
	bl FUN_021BDCEC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BDDCC

	thumb_func_start FUN_021BDE18
FUN_021BDE18: ; 0x021BDE18
	push {r3, lr}
	movs r1, #0xc
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021BDE18

	thumb_func_start FUN_021BDE28
FUN_021BDE28: ; 0x021BDE28
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BD344
	cmp r0, #0
	beq _021BDE3A
	movs r0, #1
	pop {r4, pc}
_021BDE3A:
	adds r0, r4, #0
	movs r1, #1
	movs r4, #1
	bl FUN_021ABE38
	cmp r0, #0
	bne _021BDE4A
	movs r4, #0
_021BDE4A:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BDE28
_021BDE50:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x84, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BDE5C
FUN_021BDE5C: ; 0x021BDE5C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021BDEDC
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB880
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #6
	movs r5, #6
	bl FUN_021ABCA0
	adds r4, r0, #0
	ldr r1, [sp]
	adds r5, #0xfa
	orrs r1, r5
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	bl FUN_021ABAE8
	adds r5, r0, #0
	beq _021BDEDC
	adds r0, r6, #0
	movs r1, #2
	adds r2, r7, #0
	bl FUN_021AC434
	adds r0, r6, #0
	movs r1, #0xe
	adds r2, r7, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r2, #1
	str r2, [r1, #4]
	subs r0, r2, #2
	strb r0, [r1, #0xc]
	strb r2, [r1, #0xe]
	movs r3, #0
	strb r5, [r1, #0xf]
	cmp r5, #0
	bls _021BDECC
_021BDEC0:
	ldrb r2, [r4, r3]
	adds r0, r1, r3
	adds r3, r3, #1
	strb r2, [r0, #0x10]
	cmp r3, r5
	blo _021BDEC0
_021BDECC:
	adds r0, r6, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #3
	adds r2, r7, #0
	bl FUN_021AC434
_021BDEDC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BDE5C
_021BDEE0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD4, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BDEEC
FUN_021BDEEC: ; 0x021BDEEC
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BDF02
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BDF02:
	pop {r4, pc}
	thumb_func_end FUN_021BDEEC
_021BDF04:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x74, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BDF10
FUN_021BDF10: ; 0x021BDF10
	push {r4, r5, r6, lr}
	movs r0, #0x22
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r0, #6
	bne _021BDF56
	movs r0, #2
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BDF56
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r6, #0x16
	orrs r0, r2
	str r0, [r1]
	movs r0, #5
	str r0, [r1, #4]
	movs r2, #1
	strb r2, [r1, #0xc]
	movs r0, #0
	strb r0, [r1, #0xe]
	strb r2, [r1, #0xf]
	adds r0, r5, #0
	strb r4, [r1, #0x10]
	bl FUN_021AC448
_021BDF56:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BDF10
_021BDF58:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x7C, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021BDF64
FUN_021BDF64: ; 0x021BDF64
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BDF8E
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xe
	beq _021BDF84
	cmp r0, #9
	bne _021BDF8E
_021BDF84:
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BDF8E:
	pop {r4, pc}
	thumb_func_end FUN_021BDF64
_021BDF90:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BDF9C
FUN_021BDF9C: ; 0x021BDF9C
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BDFC6
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BDFC6
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021BDFC6:
	pop {r4, pc}
	thumb_func_end FUN_021BDF9C

	thumb_func_start FUN_021BDFC8
FUN_021BDFC8: ; 0x021BDFC8
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BDFEC
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #2
	bne _021BDFEC
	movs r0, #0x35
	lsls r1, r6, #0xc
	bl FUN_021BCF58
_021BDFEC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BDFC8
_021BDFF0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x04, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BDFFC
FUN_021BDFFC: ; 0x021BDFFC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE020
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BE020
	movs r0, #0x35
	lsls r1, r6, #0xc
	bl FUN_021BCF58
_021BE020:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BDFFC
_021BE024:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x9C, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021BE030
FUN_021BE030: ; 0x021BE030
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE062
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021BE062
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCF10
_021BE062:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BE030
_021BE064:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x0C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BE070
FUN_021BE070: ; 0x021BE070
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE09C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #6
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BE09C
	movs r0, #0x35
	lsls r1, r6, #9
	bl FUN_021BCF58
_021BE09C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BE070
_021BE0A0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x2C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE0AC
FUN_021BE0AC: ; 0x021BE0AC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE0D4
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BE0D4
	ldr r1, _021BE0D8 ; =0x00000CCD
	movs r0, #0x35
	bl FUN_021BCF58
_021BE0D4:
	pop {r4, pc}
	nop
_021BE0D8: .word 0x00000CCD
	thumb_func_end FUN_021BE0AC

	thumb_func_start FUN_021BE0DC
FUN_021BE0DC: ; 0x021BE0DC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE112
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BE112
	movs r0, #0x33
	bl FUN_021BCFB0
	lsls r1, r4, #0xb
	bl FUN_021BD364
	adds r1, r0, #0
	movs r0, #0x33
	bl FUN_021BCF10
_021BE112:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BE0DC
_021BE114:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x84, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BE120
FUN_021BE120: ; 0x021BE120
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE136
	movs r0, #0x11
	movs r1, #0
	bl FUN_021BCF10
_021BE136:
	pop {r4, pc}
	thumb_func_end FUN_021BE120

	thumb_func_start FUN_021BE138
FUN_021BE138: ; 0x021BE138
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #7
	movs r1, #1
	bl FUN_021BDD58
	str r0, [r4]
	ldr r0, _021BE14C ; =0x021D7664
	pop {r4, pc}
	nop
_021BE14C: .word 0x021D7664
	thumb_func_end FUN_021BE138

	thumb_func_start FUN_021BE150
FUN_021BE150: ; 0x021BE150
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE170
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021BE170
	movs r0, #0x35
	lsls r1, r6, #0xa
	bl FUN_021BCF58
_021BE170:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BE150

	thumb_func_start FUN_021BE174
FUN_021BE174: ; 0x021BE174
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE1A6
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021BE1A6
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BE1A6
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BE1A6:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BE174

	thumb_func_start FUN_021BE1A8
FUN_021BE1A8: ; 0x021BE1A8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE1C8
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021BE1DC
_021BE1C8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BE1A8

	thumb_func_start FUN_021BE1CC
FUN_021BE1CC: ; 0x021BE1CC
	push {r4, lr}
	ldr r4, [r3]
	cmp r4, #0
	bne _021BE1D8
	bl FUN_021BE1DC
_021BE1D8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BE1CC

	thumb_func_start FUN_021BE1DC
FUN_021BE1DC: ; 0x021BE1DC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #0
	adds r5, r1, #0
	movs r1, #1
	str r1, [r3]
	str r1, [r3, #0xc]
	str r0, [r3, #4]
	str r0, [r3, #8]
	adds r0, r5, #0
	movs r1, #4
	adds r6, r2, #0
	movs r7, #4
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0x1f
	ldr r1, [r4]
	lsls r0, r7, #0x15
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #4
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BE1DC

	thumb_func_start FUN_021BE220
FUN_021BE220: ; 0x021BE220
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE290
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _021BE290
	ldr r0, [r4, #4]
	cmp r0, #5
	bge _021BE25C
	adds r0, r6, #0
	adds r1, r5, #0
	add r2, sp, #0
	bl FUN_021ABBCC
	cmp r0, #0
	beq _021BE290
	ldr r0, [sp]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #3
	beq _021BE290
	ldr r0, [r4, #4]
	adds r0, r0, #1
	str r0, [r4, #4]
_021BE25C:
	ldr r0, [r4, #4]
	cmp r0, #5
	blt _021BE290
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r7, r0, #0
	ldr r2, _021BE294 ; =0x000001F3
	adds r0, r7, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r4, #0xc]
	movs r0, #1
	str r0, [r4, #8]
_021BE290:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BE294: .word 0x000001F3
	thumb_func_end FUN_021BE220
_021BE298:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x30, 0x7E, 0x1D, 0x02

	thumb_func_start FUN_021BE2A4
FUN_021BE2A4: ; 0x021BE2A4
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE2BA
	ldr r1, _021BE2BC ; =0x000014CD
	movs r0, #0x35
	bl FUN_021BCF58
_021BE2BA:
	pop {r4, pc}
	.align 2, 0
_021BE2BC: .word 0x000014CD
	thumb_func_end FUN_021BE2A4
_021BE2C0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x14, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE2CC
FUN_021BE2CC: ; 0x021BE2CC
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE2EE
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #4
	bne _021BE2EE
	ldr r1, _021BE2F0 ; =0x00000CCD
	movs r0, #0x35
	bl FUN_021BCF58
_021BE2EE:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BE2F0: .word 0x00000CCD
	thumb_func_end FUN_021BE2CC

	thumb_func_start FUN_021BE2F4
FUN_021BE2F4: ; 0x021BE2F4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021BE354
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021BE2F4
_021BE304:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA4, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BE310
FUN_021BE310: ; 0x021BE310
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE332
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #3
	bne _021BE332
	ldr r1, _021BE334 ; =0x00000CCD
	movs r0, #0x35
	bl FUN_021BCF58
_021BE332:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021BE334: .word 0x00000CCD
	thumb_func_end FUN_021BE310

	thumb_func_start FUN_021BE338
FUN_021BE338: ; 0x021BE338
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021BE354
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021BE338
_021BE348:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB4, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BE354
FUN_021BE354: ; 0x021BE354
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE382
	movs r0, #0x32
	bl FUN_021BCFB0
	cmp r0, #0
	ble _021BE382
	movs r0, #0x39
	bl FUN_021BCFB0
	add r1, sp, #8
	ldrb r1, [r1]
	cmp r1, r0
	bne _021BE382
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BE382:
	pop {r4, pc}
	thumb_func_end FUN_021BE354

	thumb_func_start FUN_021BE384
FUN_021BE384: ; 0x021BE384
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE3AA
	movs r0, #0x38
	bl FUN_021BCFB0
	bl FUN_021BD328
	cmp r0, #3
	bne _021BE3AA
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021BE3AA:
	pop {r4, pc}
	thumb_func_end FUN_021BE384
_021BE3AC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xFC, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE3B8
FUN_021BE3B8: ; 0x021BE3B8
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE3DE
	movs r0, #0x38
	bl FUN_021BCFB0
	bl FUN_021BD328
	cmp r0, #2
	bne _021BE3DE
	movs r1, #3
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BE3DE:
	pop {r4, pc}
	thumb_func_end FUN_021BE3B8
_021BE3E0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x84, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BE3EC
FUN_021BE3EC: ; 0x021BE3EC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE40E
	movs r0, #0x45
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021BE40E
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021BE40E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BE3EC
_021BE410:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x7C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BE41C
FUN_021BE41C: ; 0x021BE41C
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE466
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021BE466
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r6, #0x16
	orrs r0, r2
	str r0, [r1]
	movs r0, #5
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
_021BE466:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BE41C
_021BE468:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x5C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE474
FUN_021BE474: ; 0x021BE474
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE496
	movs r0, #0x44
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021BE496
	movs r0, #0x35
	lsls r1, r4, #0xc
	bl FUN_021BCF10
_021BE496:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BE474
_021BE498:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x9C, 0x78, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x09, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x15, 0xE5, 0x1B, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x74, 0x77, 0x1D, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x0A, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x15, 0xE5, 0x1B, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD4, 0x76, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C
	.byte 0x11, 0x1C, 0x0B, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x15, 0xE5, 0x1B, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x0C, 0x77, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x06, 0x22
	.byte 0x18, 0x47, 0xC0, 0x46, 0x15, 0xE5, 0x1B, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x04, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE514
FUN_021BE514: ; 0x021BE514
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE558
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r1, r7, #0
	bl FUN_021BD3B4
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, r5
	bhi _021BE558
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE558
	movs r0, #0x35
	lsls r1, r7, #0xb
	bl FUN_021BCF58
_021BE558:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BE514

	thumb_func_start FUN_021BE55C
FUN_021BE55C: ; 0x021BE55C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE598
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021BE598
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BE598
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021BE598:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BE55C
_021BE59C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xFC, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021BE5A8
FUN_021BE5A8: ; 0x021BE5A8
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE5F6
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x39
	bl FUN_021BE604
	cmp r0, #0
	bne _021BE5DA
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x3a
	bl FUN_021BE604
	cmp r0, #0
	beq _021BE5F6
_021BE5DA:
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #2
	bne _021BE5F6
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BE5F6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BE5A8
_021BE5F8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x64, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BE604
FUN_021BE604: ; 0x021BE604
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	str r3, [sp]
	bl FUN_021ABB90
	adds r2, r0, #0
	cmp r2, #6
	beq _021BE660
	movs r1, #7
	lsls r1, r1, #8
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	adds r2, r5, #0
	bl FUN_021ABAE8
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r4, #0
	cmp r0, #0
	bls _021BE660
_021BE636:
	ldrb r1, [r5, r4]
	cmp r7, r1
	beq _021BE654
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #0x11
	bl FUN_021BB1F4
	ldr r1, [sp]
	cmp r1, r0
	bne _021BE654
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BE654:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #4]
	cmp r4, r0
	blo _021BE636
_021BE660:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BE604

	thumb_func_start FUN_021BE668
FUN_021BE668: ; 0x021BE668
	push {r3, lr}
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021BE680 ; =0x000001A5
	cmp r0, r1
	bne _021BE67C
	movs r0, #1
	pop {r3, pc}
_021BE67C:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
_021BE680: .word 0x000001A5
	thumb_func_end FUN_021BE668

	thumb_func_start FUN_021BE684
FUN_021BE684: ; 0x021BE684
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r6, r3, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE6BE
	adds r0, r5, #0
	bl FUN_021ABE08
	movs r3, #1
	cmp r0, #1
	beq _021BE6A8
	movs r3, #0
_021BE6A8:
	movs r0, #1
	lsls r3, r3, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	lsrs r3, r3, #0x18
	bl FUN_021BE6E4
	movs r0, #1
	str r0, [r6]
_021BE6BE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BE684

	thumb_func_start FUN_021BE6C0
FUN_021BE6C0: ; 0x021BE6C0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE6E0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021BE684
_021BE6E0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BE6C0

	thumb_func_start FUN_021BE6E4
FUN_021BE6E4: ; 0x021BE6E4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r5, r2, #0
	adds r0, r7, #0
	adds r1, r5, #0
	adds r6, r3, #0
	bl FUN_021AB874
	movs r1, #0x13
	bl FUN_021BB1F4
	cmp r6, r0
	beq _021BE73E
	adds r0, r7, #0
	movs r1, #0x39
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #4]
	strb r6, [r4, #5]
	ldr r1, [r4]
	ldr r0, _021BE740 ; =0xFF7FFFFF
	movs r2, #0xde
	ands r0, r1
	add r1, sp, #0x18
	ldrb r1, [r1]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #8
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BE73E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BE740: .word 0xFF7FFFFF
	thumb_func_end FUN_021BE6E4

	thumb_func_start FUN_021BE744
FUN_021BE744: ; 0x021BE744
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021BE780
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE780
	adds r0, r5, #0
	bl FUN_021ABE08
	movs r3, #1
	cmp r0, #1
	beq _021BE76E
	movs r3, #0
_021BE76E:
	movs r0, #1
	lsls r3, r3, #0x18
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	lsrs r3, r3, #0x18
	bl FUN_021BE6E4
_021BE780:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BE744

	thumb_func_start FUN_021BE784
FUN_021BE784: ; 0x021BE784
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021BE7B8
	movs r0, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE7B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE7B8
	movs r3, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	str r3, [sp]
	bl FUN_021BE6E4
_021BE7B8:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BE784

	thumb_func_start FUN_021BE7BC
FUN_021BE7BC: ; 0x021BE7BC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021BE7E6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE7E6
	movs r3, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	str r3, [sp]
	bl FUN_021BE6E4
_021BE7E6:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BE7BC

	thumb_func_start FUN_021BE7EC
FUN_021BE7EC: ; 0x021BE7EC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldr r0, [r3]
	adds r7, r1, #0
	adds r5, r2, #0
	cmp r0, #0
	beq _021BE830
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE830
	movs r0, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BE830
	movs r0, #0x10
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r4, r0
	beq _021BE830
	movs r3, #0
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	str r3, [sp]
	bl FUN_021BE6E4
_021BE830:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BE7EC

	thumb_func_start FUN_021BE834
FUN_021BE834: ; 0x021BE834
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE880
	adds r0, r4, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BE880
	movs r0, #3
	movs r4, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021BE880
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021BE880
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021BE880:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BE834

	thumb_func_start FUN_021BE884
FUN_021BE884: ; 0x021BE884
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BE668
	cmp r0, #0
	beq _021BE8C8
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BE8C8
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021BE8C8
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021BE8C8
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BE8C8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BE884
_021BE8CC:
	.byte 0x0B, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE0, 0x7E, 0x1D, 0x02

	thumb_func_start FUN_021BE8D8
FUN_021BE8D8: ; 0x021BE8D8
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE940
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, #2
	beq _021BE940
	cmp r0, #2
	beq _021BE940
	cmp r4, r0
	bne _021BE938
	movs r1, #5
	movs r0, #0x31
	lsls r1, r1, #0xa
	bl FUN_021BCF58
	pop {r4, r5, r6, pc}
_021BE938:
	movs r0, #0x31
	lsls r1, r6, #0xa
	bl FUN_021BCF58
_021BE940:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BE8D8
_021BE944:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA4, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BE950
FUN_021BE950: ; 0x021BE950
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE972
	movs r0, #0x30
	movs r4, #0x30
	bl FUN_021BCFB0
	cmp r0, #0x3c
	bhi _021BE972
	movs r0, #0x31
	lsls r1, r4, #7
	bl FUN_021BCF58
_021BE972:
	pop {r4, pc}
	thumb_func_end FUN_021BE950
_021BE974:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xCC, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021BE980
FUN_021BE980: ; 0x021BE980
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE9AA
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #7
	bl FUN_0202143C
	cmp r0, #0
	beq _021BE9AA
	ldr r1, _021BE9AC ; =0x00001333
	movs r0, #0x31
	bl FUN_021BCF58
_021BE9AA:
	pop {r4, pc}
	.align 2, 0
_021BE9AC: .word 0x00001333
	thumb_func_end FUN_021BE980
_021BE9B0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x1C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BE9BC
FUN_021BE9BC: ; 0x021BE9BC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BE9F0
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	movs r1, #0x1e
	bl FUN_020212AC
	cmp r0, #0
	bne _021BE9E8
	cmp r4, #0x1a
	beq _021BE9E8
	cmp r4, #0x88
	bne _021BE9F0
_021BE9E8:
	ldr r1, _021BE9F4 ; =0x00001333
	movs r0, #0x31
	bl FUN_021BCF58
_021BE9F0:
	pop {r4, pc}
	nop
_021BE9F4: .word 0x00001333
	thumb_func_end FUN_021BE9BC
_021BE9F8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xE4, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BEA04
FUN_021BEA04: ; 0x021BEA04
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEA3E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021BEA3E
	movs r0, #0x12
	bl FUN_021BCFB0
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021BEA3E
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021BEA3E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BEA04
_021BEA40:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x6C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BEA4C
FUN_021BEA4C: ; 0x021BEA4C
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEA62
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021BEA62:
	pop {r4, pc}
	thumb_func_end FUN_021BEA4C
_021BEA64:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xDC, 0x76, 0x1D, 0x02
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x44, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BEA7C
FUN_021BEA7C: ; 0x021BEA7C
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #1
	bl FUN_021BEAF4
	pop {r3, pc}
	thumb_func_end FUN_021BEA7C

	thumb_func_start FUN_021BEA8C
FUN_021BEA8C: ; 0x021BEA8C
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0xc9
	bl FUN_021BEB34
	pop {r3, pc}
	thumb_func_end FUN_021BEA8C
_021BEA9C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x54, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BEAA8
FUN_021BEAA8: ; 0x021BEAA8
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #6
	bl FUN_021BEAF4
	pop {r3, pc}
	thumb_func_end FUN_021BEAA8

	thumb_func_start FUN_021BEAB8
FUN_021BEAB8: ; 0x021BEAB8
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0xcf
	bl FUN_021BEB34
	pop {r3, pc}
	thumb_func_end FUN_021BEAB8
_021BEAC8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x64, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BEAD4
FUN_021BEAD4: ; 0x021BEAD4
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #8
	bl FUN_021BEAF4
	pop {r3, pc}
	thumb_func_end FUN_021BEAD4

	thumb_func_start FUN_021BEAE4
FUN_021BEAE4: ; 0x021BEAE4
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0xc6
	bl FUN_021BEB34
	pop {r3, pc}
	thumb_func_end FUN_021BEAE4

	thumb_func_start FUN_021BEAF4
FUN_021BEAF4: ; 0x021BEAF4
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BEB32
	movs r0, #3
	bl FUN_021BCFB0
	cmp r5, r0
	beq _021BEB32
	cmp r4, #8
	beq _021BEB1E
	movs r0, #0x1f
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEB32
_021BEB1E:
	movs r0, #0x20
	bl FUN_021BCFB0
	cmp r0, #0
	bge _021BEB32
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	str r0, [r6]
_021BEB32:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BEAF4

	thumb_func_start FUN_021BEB34
FUN_021BEB34: ; 0x021BEB34
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	str r3, [sp]
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BEBA2
	ldr r0, [r4]
	cmp r0, #0
	beq _021BEBA2
	movs r0, #0x19
	bl FUN_021BCFB0
	adds r7, r0, #0
	beq _021BEB60
	ldr r0, [r4, #4]
	cmp r0, r7
	beq _021BEB9E
_021BEB60:
	adds r0, r6, #0
	movs r1, #2
	adds r2, r5, #0
	bl FUN_021AC434
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	str r0, [sp, #4]
	ldr r2, [sp]
	adds r0, r0, #4
	movs r1, #2
	bl FUN_021AC3B8
	ldr r0, [sp, #4]
	adds r1, r5, #0
	adds r0, r0, #4
	bl FUN_021AC3E0
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #3
	adds r2, r5, #0
	bl FUN_021AC434
	str r7, [r4, #4]
_021BEB9E:
	movs r0, #0
	str r0, [r4]
_021BEBA2:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BEB34

	thumb_func_start FUN_021BEBA8
FUN_021BEBA8: ; 0x021BEBA8
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEBC6
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r1, r0, #0
	movs r0, #0x20
	lsls r1, r1, #1
	bl FUN_021BCF10
_021BEBC6:
	pop {r4, pc}
	thumb_func_end FUN_021BEBA8
_021BEBC8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x7C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BEBD4
FUN_021BEBD4: ; 0x021BEBD4
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BEC0E
	adds r0, r6, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BEC0E
	movs r0, #0x1d
	bl FUN_021BCFB0
	adds r5, r0, #0
	bl FUN_021BD5C0
	cmp r0, #0
	bne _021BEC04
	cmp r5, #0xe
	bne _021BEC0E
_021BEC04:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	str r0, [r4]
_021BEC0E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BEBD4

	thumb_func_start FUN_021BEC10
FUN_021BEC10: ; 0x021BEC10
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEC32
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BEC32
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BEC32:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BEC10
_021BEC34:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x04, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021BEC40
FUN_021BEC40: ; 0x021BEC40
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #1
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BEC40
_021BEC54:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x01, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x45, 0xEF, 0x1B, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x01, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x65, 0xEF, 0x1B, 0x02, 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021BEC80
FUN_021BEC80: ; 0x021BEC80
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r2, #0
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	cmp r0, #0
	bne _021BECA4
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0xe
	bl FUN_021BEEB0
	str r0, [r4]
_021BECA4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BEC80
_021BECA8:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x02, 0x22
	.byte 0x18, 0x47, 0xC0, 0x46, 0x45, 0xEF, 0x1B, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x02, 0x22
	.byte 0x18, 0x47, 0xC0, 0x46, 0x65, 0xEF, 0x1B, 0x02

	thumb_func_start FUN_021BECC8
FUN_021BECC8: ; 0x021BECC8
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BECDE
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BECDE:
	pop {r4, pc}
	thumb_func_end FUN_021BECC8
_021BECE0:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x7E, 0x1D, 0x02

	thumb_func_start FUN_021BECEC
FUN_021BECEC: ; 0x021BECEC
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #3
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BECEC
_021BED00:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x03, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x45, 0xEF, 0x1B, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x03, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x65, 0xEF, 0x1B, 0x02
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021BED2C
FUN_021BED2C: ; 0x021BED2C
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #5
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BED2C
_021BED40:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x05, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x45, 0xEF, 0x1B, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x05, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x65, 0xEF, 0x1B, 0x02
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x38, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021BED6C
FUN_021BED6C: ; 0x021BED6C
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #4
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BED6C
_021BED80:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x04, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x45, 0xEF, 0x1B, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x04, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x65, 0xEF, 0x1B, 0x02
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021BEDAC
FUN_021BEDAC: ; 0x021BEDAC
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #6
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BEDAC

	thumb_func_start FUN_021BEDC0
FUN_021BEDC0: ; 0x021BEDC0
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, _021BEDD0 ; =0x00000165
	str r4, [sp]
	bl FUN_021BEED8
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_021BEDD0: .word 0x00000165
	thumb_func_end FUN_021BEDC0
_021BEDD4:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x06, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x45, 0xEF, 0x1B, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x06, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x65, 0xEF, 0x1B, 0x02, 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x78, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021BEE00
FUN_021BEE00: ; 0x021BEE00
	push {r4, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #7
	adds r4, r3, #0
	bl FUN_021BEEB0
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BEE00
_021BEE14:
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x07, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x45, 0xEF, 0x1B, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x07, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x65, 0xEF, 0x1B, 0x02

	thumb_func_start FUN_021BEE34
FUN_021BEE34: ; 0x021BEE34
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEE9C
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _021BEEA0 ; =0x000001BD
	cmp r1, r0
	bne _021BEE9C
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021BEE9C
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BEE9C:
	pop {r4, r5, r6, pc}
	nop
_021BEEA0: .word 0x000001BD
	thumb_func_end FUN_021BEE34
_021BEEA4:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021BEEB0
FUN_021BEEB0: ; 0x021BEEB0
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BEED4
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEED4
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, pc}
_021BEED4:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BEEB0

	thumb_func_start FUN_021BEED8
FUN_021BEED8: ; 0x021BEED8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	movs r7, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEF32
	ldr r0, [r6]
	cmp r0, #1
	bne _021BEF32
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AC424
	add r2, sp, #0x18
	adds r7, r0, #0
	ldrh r2, [r2]
	adds r0, r7, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
	movs r0, #0
	str r0, [r6]
_021BEF32:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BEED8

	thumb_func_start FUN_021BEF34
FUN_021BEF34: ; 0x021BEF34
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xd2
	str r4, [sp]
	bl FUN_021BEED8
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021BEF34

	thumb_func_start FUN_021BEF44
FUN_021BEF44: ; 0x021BEF44
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BEF60
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021BEF64
_021BEF60:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BEF44

	thumb_func_start FUN_021BEF64
FUN_021BEF64: ; 0x021BEF64
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021AB874
	adds r1, r6, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021BEFA8
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r6, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	strb r4, [r1, #8]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BEFA8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BEF64
_021BEFAC:
	.byte 0x02, 0x4B, 0x08, 0x1C
	.byte 0x11, 0x1C, 0x02, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x1D, 0xF0, 0x1B, 0x02, 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x94, 0x79, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x01, 0x22
	.byte 0x18, 0x47, 0xC0, 0x46, 0x1D, 0xF0, 0x1B, 0x02, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA4, 0x79, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x04, 0x22, 0x18, 0x47, 0xC0, 0x46
	.byte 0x1D, 0xF0, 0x1B, 0x02, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB4, 0x79, 0x1D, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x03, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x1D, 0xF0, 0x1B, 0x02
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC4, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF01C
FUN_021BF01C: ; 0x021BF01C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF050
	adds r0, r5, #0
	movs r1, #0x1d
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r7, #0x16
	orrs r0, r2
	str r0, [r1]
	strb r6, [r1, #4]
	movs r0, #0xff
	strb r0, [r1, #5]
	adds r0, r5, #0
	bl FUN_021AC448
_021BF050:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BF01C

	thumb_func_start FUN_021BF054
FUN_021BF054: ; 0x021BF054
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BF094
	adds r0, r4, #0
	movs r1, #0x1d
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r6, #0x16
	orrs r0, r1
	str r0, [r5]
	movs r0, #0
	strb r0, [r5, #4]
	adds r0, r5, #0
	movs r1, #1
	adds r0, #8
	movs r2, #0x5e
	strb r1, [r5, #6]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021BF094:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BF054
_021BF098:
	.byte 0x01, 0x4B, 0x41, 0x20, 0x01, 0x21, 0x18, 0x47
	.byte 0x11, 0xCF, 0x1B, 0x02, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD4, 0x79, 0x1D, 0x02
	.byte 0x02, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x03, 0x22, 0x18, 0x47, 0xC0, 0x46, 0xE9, 0xF0, 0x1B, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x84, 0x76, 0x1D, 0x02, 0x02, 0x4B, 0x08, 0x1C
	.byte 0x11, 0x1C, 0x02, 0x22, 0x18, 0x47, 0xC0, 0x46, 0xE9, 0xF0, 0x1B, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x34, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021BF0E8
FUN_021BF0E8: ; 0x021BF0E8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0x39
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BF140
	movs r0, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF140
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #5
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #2
	ldr r1, [r5]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r5]
	strb r4, [r5, #6]
	adds r0, r7, #0
	movs r1, #0x10
	bl FUN_021BD3C8
	strh r0, [r5, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF140:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BF0E8

	thumb_func_start FUN_021BF144
FUN_021BF144: ; 0x021BF144
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF19A
	movs r0, #0x39
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021BF19A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #8
	bl FUN_021BD3C8
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #6]
	adds r0, r5, #0
	strh r6, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BF19A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BF144

	thumb_func_start FUN_021BF19C
FUN_021BF19C: ; 0x021BF19C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF1D2
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021BF1D2
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #2
	bne _021BF1D2
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021BF1D2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BF19C
_021BF1D4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF4, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF1E0
FUN_021BF1E0: ; 0x021BF1E0
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF20A
	movs r0, #3
	bl FUN_021BCFB0
	cmp r4, r0
	beq _021BF20A
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #8
	beq _021BF20A
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF20A:
	pop {r4, pc}
	thumb_func_end FUN_021BF1E0

	thumb_func_start FUN_021BF20C
FUN_021BF20C: ; 0x021BF20C
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF22C
	movs r0, #3
	bl FUN_021BCFB0
	cmp r4, r0
	beq _021BF22C
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF22C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BF20C

	thumb_func_start FUN_021BF230
FUN_021BF230: ; 0x021BF230
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF246
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF246:
	pop {r4, pc}
	thumb_func_end FUN_021BF230

	thumb_func_start FUN_021BF248
FUN_021BF248: ; 0x021BF248
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF25E
	movs r0, #0x47
	movs r1, #1
	bl FUN_021BCF10
_021BF25E:
	pop {r4, pc}
	thumb_func_end FUN_021BF248

	thumb_func_start FUN_021BF260
FUN_021BF260: ; 0x021BF260
	push {r3, lr}
	adds r0, r2, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021BF27E
	movs r0, #5
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021BF27E
	movs r0, #0x47
	movs r1, #1
	bl FUN_021BCF10
_021BF27E:
	pop {r3, pc}
	thumb_func_end FUN_021BF260
_021BF280:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021BF28C
FUN_021BF28C: ; 0x021BF28C
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF2AA
	movs r0, #0x26
	bl FUN_021BCFB0
	lsls r0, r0, #0x11
	lsrs r1, r0, #0x10
	movs r0, #0x26
	bl FUN_021BCF10
_021BF2AA:
	pop {r4, pc}
	thumb_func_end FUN_021BF28C

	thumb_func_start FUN_021BF2AC
FUN_021BF2AC: ; 0x021BF2AC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF2C2
	movs r0, #0x45
	movs r1, #1
	bl FUN_021BCF10
_021BF2C2:
	pop {r4, pc}
	thumb_func_end FUN_021BF2AC
_021BF2C4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x4C, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021BF2D0
FUN_021BF2D0: ; 0x021BF2D0
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF334
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #2
	bne _021BF334
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021BF334
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x24
	str r0, [r1, #4]
	strb r4, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	ldr r2, [r1]
	lsls r0, r6, #0x18
	orrs r0, r2
	str r0, [r1]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BF334:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BF2D0
_021BF338:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x6C, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021BF344
FUN_021BF344: ; 0x021BF344
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF39A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021BF39A
	adds r0, r5, #0
	movs r1, #0x21
	bl FUN_021BDE28
	cmp r0, #0
	beq _021BF39A
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r6, #0x16
	orrs r2, r0
	lsls r0, r6, #0x18
	orrs r0, r2
	str r0, [r1]
	movs r0, #0x24
	str r0, [r1, #4]
	strb r4, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	bl FUN_021AC448
_021BF39A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021BF344
_021BF39C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x3C, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF3A8
FUN_021BF3A8: ; 0x021BF3A8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BF3FE
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #5
	bne _021BF3FE
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r0, #0x32
	movs r1, #0
	bl FUN_021BCF10
	adds r0, r6, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r7, #0
	movs r1, #8
	movs r7, #8
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	strb r5, [r4, #6]
	ldr r1, [r4]
	lsls r0, r7, #0x14
	orrs r0, r1
	str r0, [r4]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BF3FE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BF3A8
_021BF400:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x34, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF40C
FUN_021BF40C: ; 0x021BF40C
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF422
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF422:
	pop {r4, pc}
	thumb_func_end FUN_021BF40C
_021BF424:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x2C, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF430
FUN_021BF430: ; 0x021BF430
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF450
	movs r0, #0x2c
	bl FUN_021BCFB0
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x2c
	bl FUN_021BCF10
_021BF450:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021BF430
_021BF454:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x24, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF460
FUN_021BF460: ; 0x021BF460
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BF4E2
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021BF4E2
	movs r0, #0x45
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021BF4E2
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #1
	adds r7, r0, #0
	bl FUN_021BB590
	cmp r0, #0
	ble _021BF4E2
	adds r0, r6, #0
	movs r1, #0xe
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #1
	str r0, [r4, #4]
	adds r0, r7, #0
	movs r1, #1
	bl FUN_021BB590
	strb r0, [r4, #0xc]
	movs r0, #1
	strb r0, [r4, #0xe]
	strb r0, [r4, #0xf]
	strb r5, [r4, #0x10]
	strb r0, [r4, #0xd]
	ldr r1, [r4]
	lsls r0, r0, #0x17
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #0
	ldr r2, _021BF4E4 ; =0x000001E1
	adds r0, #0x18
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x18
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BF4E2:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BF4E4: .word 0x000001E1
	thumb_func_end FUN_021BF460
_021BF4E8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x1C, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF4F4
FUN_021BF4F4: ; 0x021BF4F4
	push {r4, r5, lr}
	sub sp, #0xc
	movs r0, #5
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BD56C
	adds r3, r0, #0
	movs r0, #0x1e
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #5
	bl FUN_021BF670
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BF4F4
_021BF518:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x14, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF524
FUN_021BF524: ; 0x021BF524
	push {r4, r5, lr}
	sub sp, #0xc
	movs r0, #1
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BD56C
	adds r3, r0, #0
	movs r0, #0x1e
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021BF670
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BF524
_021BF548:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x0C, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF554
FUN_021BF554: ; 0x021BF554
	push {r4, r5, lr}
	sub sp, #0xc
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BD56C
	adds r3, r0, #0
	movs r0, #0x1e
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #4
	bl FUN_021BF670
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021BF554
_021BF578:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x04, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021BF584
FUN_021BF584: ; 0x021BF584
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r0, #4
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021BF608
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021BF608
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021BF608
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r0, #3
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #4]
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, #2
	beq _021BF608
	cmp r0, #2
	beq _021BF608
	cmp r4, r0
	beq _021BF608
	add r4, sp, #8
	movs r0, #7
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021BD614
	movs r0, #0x1e
	str r0, [sp]
	ldr r3, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl FUN_021BF670
_021BF608:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BF584
_021BF60C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xFC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF618
FUN_021BF618: ; 0x021BF618
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	movs r0, #4
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021BF660
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021BF660
	movs r0, #0x1e
	bl FUN_021BD100
	cmp r0, #0x14
	bls _021BF642
	movs r4, #5
	b _021BF64A
_021BF642:
	movs r4, #1
	cmp r0, #0xa
	bhi _021BF64A
	movs r4, #2
_021BF64A:
	adds r0, r4, #0
	bl FUN_021BD56C
	adds r3, r0, #0
	movs r0, #0x1e
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021BF670
_021BF660:
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021BF618
_021BF664:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF4, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF670
FUN_021BF670: ; 0x021BF670
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021BF670

	non_word_aligned_thumb_func_start FUN_021BF672
FUN_021BF672: ; 0x021BF672
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r6, r2, #0
	movs r7, #4
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BF6E0
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021BF6E0
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021BF6E0
	add r1, sp, #0x28
	ldrb r1, [r1]
	adds r0, r4, #0
	bl FUN_021BDE28
	cmp r0, #0
	beq _021BF6E0
	adds r0, r4, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r7, #0x15
	orrs r0, r1
	str r0, [r5]
	ldr r0, [sp, #0x24]
	str r6, [r5, #4]
	str r0, [r5, #8]
	movs r0, #0
	strb r0, [r5, #0xc]
	movs r0, #3
	bl FUN_021BCFB0
	strb r0, [r5, #0xf]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021BF6E0:
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_021BF672

	thumb_func_start FUN_021BF6E8
FUN_021BF6E8: ; 0x021BF6E8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF772
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021BF772
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021BF772
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021BF772
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	strb r6, [r4, #6]
	adds r0, r7, #0
	movs r1, #8
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021BF774 ; =0x000001AE
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BF772:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BF774: .word 0x000001AE
	thumb_func_end FUN_021BF6E8
_021BF778:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xEC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF784
FUN_021BF784: ; 0x021BF784
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF818
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021BF818
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021BF818
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	strb r6, [r4, #6]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	ldrb r1, [r4, #7]
	movs r0, #1
	ldr r2, _021BF81C ; =0x00000192
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BF818:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BF81C: .word 0x00000192
	thumb_func_end FUN_021BF784
_021BF820:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE4, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF82C
FUN_021BF82C: ; 0x021BF82C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r0, r4, #0
	adds r5, r1, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021BF8A4
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021BF8A4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021BF8A4
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0x11
	beq _021BF8A4
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021BB054
	cmp r0, #0
	bne _021BF8A4
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #0x14
	adds r2, r4, #0
	bl FUN_021AC424
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021CE570
	strh r0, [r7, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	strb r4, [r7, #6]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BF8A4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BF82C
_021BF8A8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xDC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF8B4
FUN_021BF8B4: ; 0x021BF8B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r0, #4
	adds r7, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021BF954
	movs r0, #0x1d
	bl FUN_021BCFB0
	adds r5, r0, #0
	cmp r5, #5
	beq _021BF8DA
	cmp r5, #1
	beq _021BF8DA
	cmp r5, #4
	bne _021BF954
_021BF8DA:
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	cmp r0, #0x1f
	beq _021BF954
	ldr r0, [sp, #4]
	cmp r0, r6
	beq _021BF954
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp]
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #2
	adds r2, r6, #0
	bl FUN_021AC434
	adds r0, r7, #0
	movs r1, #0xc
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #4]
	cmp r5, #5
	strb r0, [r4, #0xf]
	str r5, [r4, #4]
	bne _021BF932
	ldr r0, [sp, #8]
	bl FUN_021CE2F8
	cmp r0, #0
	beq _021BF932
	ldr r0, [sp, #8]
	str r0, [r4, #8]
	b _021BF93E
_021BF932:
	adds r2, r4, #0
	ldr r1, [sp]
	adds r0, r5, #0
	adds r2, #8
	bl FUN_021BD614
_021BF93E:
	movs r0, #1
	strb r0, [r4, #0xc]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r7, #0
	movs r1, #3
	adds r2, r6, #0
	bl FUN_021AC434
_021BF954:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021BF8B4
_021BF958:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xD4, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF964
FUN_021BF964: ; 0x021BF964
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF97A
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021BF97A:
	pop {r4, pc}
	thumb_func_end FUN_021BF964
_021BF97C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xCC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF988
FUN_021BF988: ; 0x021BF988
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BF99E
	movs r0, #0x16
	movs r1, #0
	bl FUN_021BCF10
_021BF99E:
	pop {r4, pc}
	thumb_func_end FUN_021BF988
_021BF9A0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC4, 0x78, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xBC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BF9B8
FUN_021BF9B8: ; 0x021BF9B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	movs r0, #2
	adds r6, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x1f
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp]
	cmp r4, r0
	bne _021BFA7A
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021AB880
	ldr r1, [sp, #0xc]
	adds r2, r0, #0
	adds r1, #0xe1
	orrs r1, r2
	lsls r1, r1, #0x10
	add r2, sp, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	adds r2, #3
	bl FUN_021ABAE8
	ldr r4, [sp, #8]
	adds r7, r0, #0
	adds r5, r4, #0
	cmp r7, #0
	bls _021BFA3C
_021BFA02:
	add r1, sp, #0x10
	adds r1, #3
	ldrb r1, [r1, r5]
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021BFB38
	cmp r0, #0
	bne _021BFA32
	adds r1, r4, #1
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r4, r1, #0x18
	add r1, sp, #0x10
	adds r1, #3
	ldrb r2, [r1, r5]
	add r1, sp, #0x10
	strb r2, [r1, r0]
_021BFA32:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r7
	blo _021BFA02
_021BFA3C:
	cmp r4, #0
	beq _021BFA72
	cmp r4, #1
	bne _021BFA48
	movs r1, #0
	b _021BFA50
_021BFA48:
	adds r0, r4, #0
	bl FUN_021BD100
	adds r1, r0, #0
_021BFA50:
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	add r1, sp, #0x10
	ldrb r1, [r1, r2]
	adds r0, r6, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r1, #0x10
	bl FUN_021BB1F4
	str r0, [sp, #8]
	adds r0, r4, #0
	bl FUN_021BAC80
	str r0, [sp, #0xc]
	b _021BFADC
_021BFA72:
	ldr r0, [sp, #4]
	movs r1, #1
	str r1, [r0]
	b _021BFADC
_021BFA7A:
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021BFADC
	ldr r0, [sp, #4]
	ldr r0, [r0]
	cmp r0, #1
	bne _021BFADC
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021ABB90
	adds r5, r0, #0
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021AB880
	adds r7, r0, #0
	cmp r5, #6
	beq _021BFADC
	adds r0, r6, #0
	bl FUN_021ABCDC
	cmp r0, #2
	bne _021BFABC
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_0219D388
	cmp r0, #0
	beq _021BFADC
_021BFABC:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	adds r5, r0, #0
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021BFB48
	cmp r0, #0
	bne _021BFADC
	str r5, [sp, #8]
	str r4, [sp, #0xc]
_021BFADC:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021BFB30
	ldr r0, [sp]
	cmp r0, #0x1f
	beq _021BFB30
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0x1f
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	ldr r2, _021BFB34 ; =0x0000017D
	strb r0, [r4, #6]
	ldr r0, [sp, #8]
	strh r0, [r4, #4]
	movs r0, #1
	strb r0, [r4, #8]
	ldr r1, [r4]
	lsls r0, r0, #0x17
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #0xc]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrh r1, [r4, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021BFB30:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BFB34: .word 0x0000017D
	thumb_func_end FUN_021BF9B8

	thumb_func_start FUN_021BFB38
FUN_021BFB38: ; 0x021BFB38
	bx pc
	nop
	thumb_func_end FUN_021BFB38
_021BFB3C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xCD, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021BFB48
FUN_021BFB48: ; 0x021BFB48
	bx pc
	nop
	thumb_func_end FUN_021BFB48
_021BFB4C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xCD, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021BFB58
FUN_021BFB58: ; 0x021BFB58
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BFB86
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x24
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r4, [r1, #8]
	strb r0, [r1, #0x15]
	adds r0, r5, #0
	bl FUN_021AC448
_021BFB86:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021BFB58
_021BFB88:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB4, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021BFB94
FUN_021BFB94: ; 0x021BFB94
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021BFC2E
	ldr r0, [sp]
	add r2, sp, #0xc
	bl FUN_021AB8D4
	str r0, [sp, #8]
	cmp r0, #0
	beq _021BFC2E
	ldr r0, [sp, #8]
	movs r6, #0
	movs r4, #0
	movs r5, #0
	cmp r0, #0
	bls _021BFBFC
_021BFBC2:
	add r1, sp, #0xc
	ldrb r1, [r1, r5]
	ldr r0, [sp]
	bl FUN_021AB874
	movs r1, #9
	adds r7, r0, #0
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r7, #0
	movs r1, #0xb
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blo _021BFBC2
_021BFBFC:
	cmp r6, r4
	blo _021BFC04
	movs r4, #3
	b _021BFC06
_021BFC04:
	movs r4, #1
_021BFC06:
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0xe
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x16
	orrs r0, r2
	str r0, [r1]
	movs r2, #1
	strb r2, [r1, #0xf]
	ldr r0, [sp, #4]
	strb r0, [r1, #0x10]
	str r4, [r1, #4]
	ldr r0, [sp]
	strb r2, [r1, #0xc]
	bl FUN_021AC448
_021BFC2E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BFB94
_021BFC34:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x34, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BFC40
FUN_021BFC40: ; 0x021BFC40
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	beq _021BFC56
	b _021BFD7A
_021BFC56:
	ldr r0, [sp]
	add r2, sp, #0x24
	bl FUN_021AB8D4
	str r0, [sp, #0x14]
	ldr r0, [sp]
	movs r1, #0xc
	movs r7, #0
	movs r5, #0
	bl FUN_021ABCA0
	str r0, [sp, #0x18]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bls _021BFD24
_021BFC78:
	ldr r1, [sp, #0xc]
	add r2, sp, #0x24
	ldrb r1, [r2, r1]
	ldr r0, [sp]
	bl FUN_021AB874
	str r0, [sp, #0x1c]
	bl FUN_021BAC88
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x10]
	movs r6, #0
	cmp r0, #0
	bls _021BFD14
_021BFC94:
	ldr r0, [sp, #0x1c]
	adds r1, r6, #0
	bl FUN_021BAD00
	adds r4, r0, #0
	bl FUN_0202176C
	cmp r0, #0
	beq _021BFCDA
	adds r0, r4, #0
	bl FUN_0202175C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _021BFCDC
	adds r0, r4, #0
	bl FUN_02021740
	cmp r0, #9
	bne _021BFCC2
	movs r0, #0x96
	b _021BFCDC
_021BFCC2:
	cmp r4, #0x44
	beq _021BFCD2
	cmp r4, #0xf3
	beq _021BFCD2
	movs r0, #0x17
	lsls r0, r0, #4
	cmp r4, r0
	bne _021BFCD6
_021BFCD2:
	movs r0, #0x78
	b _021BFCDC
_021BFCD6:
	movs r0, #0x50
	b _021BFCDC
_021BFCDA:
	movs r0, #1
_021BFCDC:
	cmp r0, r7
	blo _021BFD08
	cmp r0, r7
	bls _021BFCE8
	adds r7, r0, #0
	movs r5, #0
_021BFCE8:
	ldr r1, [sp, #0x18]
	lsls r0, r5, #2
	str r0, [sp, #0x20]
	adds r0, r1, r0
	str r0, [sp, #8]
	ldr r0, [sp, #0x1c]
	bl FUN_021BAC80
	ldr r2, [sp, #0x18]
	ldr r1, [sp, #0x20]
	strb r0, [r2, r1]
	ldr r0, [sp, #8]
	strh r4, [r0, #2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021BFD08:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #0x10]
	cmp r6, r0
	blo _021BFC94
_021BFD14:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	blo _021BFC78
_021BFD24:
	cmp r5, #0
	beq _021BFD7A
	adds r0, r5, #0
	bl FUN_021BD100
	lsls r5, r0, #0x18
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #2
	bl FUN_021AC434
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #4
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021BFD80 ; =0x000001B1
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	ldr r1, [sp, #0x18]
	lsrs r5, r5, #0x16
	ldrb r1, [r1, r5]
	adds r0, r4, #4
	bl FUN_021AC3E0
	ldr r1, [sp, #0x18]
	adds r0, r4, #4
	adds r1, r1, r5
	ldrh r1, [r1, #2]
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #3
	bl FUN_021AC434
_021BFD7A:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021BFD80: .word 0x000001B1
	thumb_func_end FUN_021BFC40
_021BFD84:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x44, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BFD90
FUN_021BFD90: ; 0x021BFD90
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp]
	movs r0, #2
	adds r5, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021BFE1E
	adds r0, r5, #0
	add r2, sp, #4
	bl FUN_021AB8D4
	adds r6, r0, #0
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r4, #0
	cmp r6, #0
	bls _021BFDDE
_021BFDBE:
	add r1, sp, #4
	ldrb r1, [r1, r4]
	adds r0, r5, #0
	bl FUN_021AB874
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BFE24
	cmp r0, #0
	bne _021BFDDE
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021BFDBE
_021BFDDE:
	cmp r4, r6
	beq _021BFE1E
	ldr r2, [sp]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021AC434
	ldr r2, [sp]
	adds r0, r5, #0
	movs r1, #4
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0x6d
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	ldr r1, [sp]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r2, [sp]
	adds r0, r5, #0
	movs r1, #3
	bl FUN_021AC434
_021BFE1E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BFD90

	thumb_func_start FUN_021BFE24
FUN_021BFE24: ; 0x021BFE24
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	bl FUN_021BB03C
	str r0, [sp]
	adds r0, r6, #0
	bl FUN_021BAC88
	adds r7, r0, #0
	ldr r5, _021BFE7C ; =0x00000000
	beq _021BFE78
_021BFE3A:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021BAD00
	adds r4, r0, #0
	bl FUN_02021740
	cmp r0, #9
	bne _021BFE50
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BFE50:
	adds r0, r4, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021BFE6E
	adds r0, r4, #0
	bl FUN_0202174C
	ldr r1, [sp]
	bl FUN_021BD1F0
	cmp r0, #3
	ble _021BFE6E
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021BFE6E:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r7
	blo _021BFE3A
_021BFE78:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021BFE7C: .word 0x00000000
	thumb_func_end FUN_021BFE24
_021BFE80:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x64, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021BFE8C
FUN_021BFE8C: ; 0x021BFE8C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r2, [sp]
	movs r0, #2
	adds r7, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021BFF34
	adds r0, r7, #0
	add r2, sp, #8
	bl FUN_021AB8D4
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r4, #0
	movs r5, #0
	cmp r0, #0
	bls _021BFEE2
_021BFEB4:
	add r1, sp, #8
	ldrb r1, [r1, r5]
	adds r0, r7, #0
	bl FUN_021AB874
	lsls r6, r4, #1
	bl FUN_021BB380
	add r1, sp, #0xc
	strh r0, [r1, r6]
	adds r0, r1, #0
	ldrh r0, [r0, r6]
	cmp r0, #0
	beq _021BFED6
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021BFED6:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _021BFEB4
_021BFEE2:
	cmp r4, #0
	beq _021BFF34
	adds r0, r4, #0
	bl FUN_021BD100
	lsls r5, r0, #0x18
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021AC434
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021BFF38 ; =0x000001B7
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	ldr r1, [sp]
	adds r0, r4, #4
	bl FUN_021AC3E0
	lsrs r2, r5, #0x17
	add r1, sp, #0xc
	ldrh r1, [r1, r2]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #3
	bl FUN_021AC434
_021BFF34:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021BFF38: .word 0x000001B7
	thumb_func_end FUN_021BFE8C
_021BFF3C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x74, 0x7A, 0x1D, 0x02, 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xC4, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021BFF54
FUN_021BFF54: ; 0x021BFF54
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021BFFAC
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021BFFAC
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021BFFAC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021BFF54

	thumb_func_start FUN_021BFFB0
FUN_021BFFB0: ; 0x021BFFB0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	movs r7, #4
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021BFFE4
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB388
	cmp r0, #0
	beq _021BFFE0
	movs r0, #0x3a
	adds r1, r7, #0
	bl FUN_021BCF10
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021BFFE0:
	movs r0, #0
	str r0, [r4]
_021BFFE4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021BFFB0

	thumb_func_start FUN_021BFFE8
FUN_021BFFE8: ; 0x021BFFE8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C003E
	ldr r0, [r6]
	cmp r0, #0
	beq _021C003E
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r7, r0, #0
	ldr r2, _021C0040 ; =0x00000202
	adds r0, r7, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
	movs r0, #0
	str r0, [r6]
_021C003E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C0040: .word 0x00000202
	thumb_func_end FUN_021BFFE8

	thumb_func_start FUN_021C0044
FUN_021C0044: ; 0x021C0044
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C005C
	movs r0, #0x28
	movs r1, #6
	bl FUN_021BCF10
	pop {r4, pc}
_021C005C:
	movs r0, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C006E
	movs r0, #0x27
	movs r1, #6
	bl FUN_021BCF10
_021C006E:
	pop {r4, pc}
	thumb_func_end FUN_021C0044

	thumb_func_start FUN_021C0070
FUN_021C0070: ; 0x021C0070
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0086
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C0086:
	pop {r4, pc}
	thumb_func_end FUN_021C0070

	thumb_func_start FUN_021C0088
FUN_021C0088: ; 0x021C0088
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C009E
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C009E:
	pop {r4, pc}
	thumb_func_end FUN_021C0088
_021C00A0:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xDC, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C00AC
FUN_021C00AC: ; 0x021C00AC
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r2, #0
	movs r4, #4
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C00CE
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #9
	bne _021C00CE
	movs r0, #0x31
	lsls r1, r4, #9
	bl FUN_021BCF58
_021C00CE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C00AC

	thumb_func_start FUN_021C00D0
FUN_021C00D0: ; 0x021C00D0
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0102
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #4
	bne _021C0102
	movs r0, #0x32
	bl FUN_021BCFB0
	lsrs r1, r0, #0x1f
	adds r1, r0, r1
	asrs r0, r1, #1
	movs r1, #1
	bl FUN_021BD35C
	adds r1, r0, #0
	movs r0, #0x32
	bl FUN_021BCF10
_021C0102:
	pop {r4, pc}
	thumb_func_end FUN_021C00D0
_021C0104:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C0110
FUN_021C0110: ; 0x021C0110
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C013E
	movs r0, #3
	bl FUN_021BCFB0
	cmp r5, r0
	beq _021C013E
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C013E
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, pc}
_021C013E:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C0110

	thumb_func_start FUN_021C0144
FUN_021C0144: ; 0x021C0144
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	bl FUN_021AB874
	str r0, [sp]
	bl FUN_021BB388
	cmp r0, #0
	bne _021C0194
	adds r0, r6, #0
	movs r1, #5
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp]
	strb r4, [r5, #6]
	adds r1, r7, #0
	bl FUN_021BD3C8
	strh r0, [r5, #4]
	movs r0, #2
	ldr r1, [r5]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r5]
	adds r0, r5, #0
	ldr r2, _021C01D0 ; =0x00000183
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	b _021C01BC
_021C0194:
	adds r0, r6, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	adds r0, r5, #4
	movs r1, #2
	movs r2, #0xd2
	movs r7, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	ldr r1, [r5]
	lsls r0, r7, #0x16
	orrs r0, r1
	str r0, [r5]
_021C01BC:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C01D0: .word 0x00000183
	thumb_func_end FUN_021C0144

	thumb_func_start FUN_021C01D4
FUN_021C01D4: ; 0x021C01D4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r7, r3, #0
	adds r6, r0, #0
	adds r5, r1, #0
	bl FUN_021AB874
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021BB554
	cmp r0, #0
	beq _021C0216
	adds r0, r6, #0
	movs r1, #0xe
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r5, [r1, #0x10]
	strb r0, [r1, #0xe]
	str r4, [r1, #4]
	strb r7, [r1, #0xc]
	ldr r2, [r1]
	lsls r0, r0, #0x17
	orrs r0, r2
	str r0, [r1]
	adds r0, r6, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C0216:
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r4, #4
	movs r1, #2
	movs r2, #0xd2
	movs r7, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r1, [r4]
	lsls r0, r7, #0x16
	orrs r0, r1
	str r0, [r4]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C01D4

	thumb_func_start FUN_021C0248
FUN_021C0248: ; 0x021C0248
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C02D4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r0, #0x39
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _021C02A6
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r4, [r6, #6]
	adds r0, r7, #0
	movs r1, #8
	bl FUN_021BD3C8
	strh r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
	pop {r3, r4, r5, r6, r7, pc}
_021C02A6:
	cmp r0, #2
	bne _021C02D4
	adds r0, r5, #0
	movs r1, #5
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #2
	ldr r1, [r6]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r6]
	strb r4, [r6, #6]
	adds r0, r7, #0
	movs r1, #8
	bl FUN_021BD3C8
	strh r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C02D4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C0248

	thumb_func_start FUN_021C02D8
FUN_021C02D8: ; 0x021C02D8
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C02FA
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #9
	bne _021C02FA
	movs r1, #5
	movs r0, #0x31
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C02FA:
	pop {r4, pc}
	thumb_func_end FUN_021C02D8

	thumb_func_start FUN_021C02FC
FUN_021C02FC: ; 0x021C02FC
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xa
	bl FUN_021C0110
	cmp r0, #0
	beq _021C031A
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #4
	bl FUN_021C0144
_021C031A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C02FC
_021C031C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF4, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C0328
FUN_021C0328: ; 0x021C0328
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xa
	bl FUN_021C0110
	cmp r0, #0
	beq _021C0346
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #4
	bl FUN_021C0144
_021C0346:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0328
_021C0348:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xF4, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C0354
FUN_021C0354: ; 0x021C0354
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	bl FUN_021C0110
	cmp r0, #0
	beq _021C0372
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #4
	bl FUN_021C0144
_021C0372:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0354
_021C0374:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x64, 0x78, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x5C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C038C
FUN_021C038C: ; 0x021C038C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	bl FUN_021C0110
	cmp r0, #0
	beq _021C03AC
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #1
	bl FUN_021C01D4
_021C03AC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C038C

	thumb_func_start FUN_021C03B0
FUN_021C03B0: ; 0x021C03B0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C03D0
	movs r0, #0x15
	bl FUN_021BCFB0
	cmp r0, #7
	bne _021C03D0
	movs r0, #0x4b
	movs r1, #1
	bl FUN_021BCF10
_021C03D0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C03B0
_021C03D4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x54, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C03E0
FUN_021C03E0: ; 0x021C03E0
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C044C
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #8
	bl FUN_0202143C
	cmp r0, #0
	beq _021C044C
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C044C
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C044C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C03E0
_021C0450:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x4C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C045C
FUN_021C045C: ; 0x021C045C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r2, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0482
	movs r0, #0x51
	movs r4, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C0482
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021BCF10
	str r0, [r5]
_021C0482:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C045C

	thumb_func_start FUN_021C0484
FUN_021C0484: ; 0x021C0484
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C04D0
	ldr r0, [r6]
	cmp r0, #0
	beq _021C04D0
	adds r0, r7, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r6]
_021C04D0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C0484

	thumb_func_start FUN_021C04D4
FUN_021C04D4: ; 0x021C04D4
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C04E8
	movs r0, #0
	str r0, [r4]
_021C04E8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C04D4
_021C04EC:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xD4, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C04F8
FUN_021C04F8: ; 0x021C04F8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0584
	movs r0, #3
	movs r7, #3
	bl FUN_021BCFB0
	cmp r4, r0
	beq _021C0584
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	bl FUN_02021898
	cmp r0, #0
	beq _021C0584
	cmp r6, #0xa5
	beq _021C0584
	movs r0, #0x38
	bl FUN_021BCFB0
	cmp r0, #3
	bgt _021C0584
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C0584
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AC434
_021C0584:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C04F8
_021C0588:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x24, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C0594
FUN_021C0594: ; 0x021C0594
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C05BE
	ldr r0, [r4]
	cmp r0, #0
	beq _021C05BA
	movs r0, #0x22
	movs r1, #0x13
	bl FUN_021BCF10
	str r0, [r4, #4]
	movs r0, #0
	str r0, [r4]
	pop {r3, r4, r5, pc}
_021C05BA:
	movs r0, #1
	str r0, [r4]
_021C05BE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0594

	thumb_func_start FUN_021C05C0
FUN_021C05C0: ; 0x021C05C0
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C05E8
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C05E8
	movs r0, #1
	str r0, [r4]
_021C05E8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C05C0

	thumb_func_start FUN_021C05EC
FUN_021C05EC: ; 0x021C05EC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0638
	ldr r0, [r6, #4]
	cmp r0, #0
	beq _021C0638
	adds r0, r7, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	ldr r2, _021C063C ; =0x000001BD
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r6, #4]
_021C0638:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C063C: .word 0x000001BD
	thumb_func_end FUN_021C05EC

	thumb_func_start FUN_021C0640
FUN_021C0640: ; 0x021C0640
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C065E
	movs r0, #0xc
	bl FUN_021BCFB0
	cmp r0, #7
	bne _021C065E
	movs r0, #0
	str r0, [r4]
_021C065E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0640
_021C0660:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x58, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021C066C
FUN_021C066C: ; 0x021C066C
	push {r4, r5, r6, lr}
	movs r0, #0x12
	adds r5, r3, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r0, #0
	str r0, [r5]
	cmp r4, #0x99
	beq _021C0686
	cmp r4, #0x78
	bne _021C069E
_021C0686:
	movs r0, #0x22
	movs r6, #0x22
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C069E
	adds r0, r6, #0
	movs r1, #0x13
	bl FUN_021BCF10
	str r0, [r5]
	str r4, [r5, #4]
_021C069E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C066C

	thumb_func_start FUN_021C06A0
FUN_021C06A0: ; 0x021C06A0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r3, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021C06F4
	movs r0, #2
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	ldr r2, _021C06F8 ; =0x00000389
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	ldr r1, [r5, #4]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r5]
_021C06F4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C06F8: .word 0x00000389
	thumb_func_end FUN_021C06A0
_021C06FC:
	.byte 0x01, 0x49, 0x02, 0x4B
	.byte 0x18, 0x47, 0xC0, 0x46, 0x2D, 0x07, 0x1C, 0x02, 0x71, 0xCB, 0x1B, 0x02, 0x00, 0x4B, 0x18, 0x47
	.byte 0x75, 0xCB, 0x1B, 0x02

	thumb_func_start FUN_021C0714
FUN_021C0714: ; 0x021C0714
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C072A
	adds r0, r5, #0
	bl FUN_021BCB74
_021C072A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0714
_021C072C:
	.byte 0x04, 0x2A, 0x05, 0xD1
	.byte 0x00, 0xA8, 0x00, 0x88, 0x6A, 0x28, 0x01, 0xD1, 0x01, 0x20, 0x70, 0x47, 0x00, 0x20, 0x70, 0x47
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021C074C
FUN_021C074C: ; 0x021C074C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0782
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xd
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C0782
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #9
	bne _021C0782
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C0782:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C074C

	thumb_func_start FUN_021C0784
FUN_021C0784: ; 0x021C0784
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C07BE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xd
	movs r6, #0xd
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C07BE
	adds r0, r5, #0
	movs r1, #0x18
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
_021C07BE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C0784

	thumb_func_start FUN_021C07C0
FUN_021C07C0: ; 0x021C07C0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #9
	bl FUN_021C0110
	cmp r0, #0
	beq _021C0860
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xd
	movs r7, #0xd
	bl FUN_021BB41C
	cmp r0, #0
	bne _021C0830
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C0864 ; =0x000001AB
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
	b _021C0856
_021C0830:
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C0856:
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C0860:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C0864: .word 0x000001AB
	thumb_func_end FUN_021C07C0
_021C0868:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xEC, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C0874
FUN_021C0874: ; 0x021C0874
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r0, #2
	adds r6, r1, #0
	adds r7, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C0934
	movs r0, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB880
	adds r1, r0, #0
	adds r4, #0xfe
	orrs r1, r4
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	add r2, sp, #0xc
	bl FUN_021ABAE8
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r5, #0
	cmp r0, #0
	bls _021C0924
_021C08B0:
	add r1, sp, #0xc
	ldrb r1, [r1, r5]
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #2
	str r0, [sp, #8]
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C0918
	ldr r0, [sp]
	cmp r0, #0
	bne _021C08DA
	movs r0, #1
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #2
	adds r2, r7, #0
	bl FUN_021AC434
_021C08DA:
	adds r0, r6, #0
	movs r1, #7
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	add r0, sp, #0xc
	ldrb r0, [r0, r5]
	movs r1, #8
	strb r0, [r4, #6]
	ldr r0, [sp, #8]
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0x79
	adds r0, #0xc
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	add r1, sp, #0xc
	adds r0, r4, #0
	ldrb r1, [r1, r5]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C0918:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _021C08B0
_021C0924:
	ldr r0, [sp]
	cmp r0, #0
	beq _021C0934
	adds r0, r6, #0
	movs r1, #3
	adds r2, r7, #0
	bl FUN_021AC434
_021C0934:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C0874
_021C0938:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xAC, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C0944
FUN_021C0944: ; 0x021C0944
	push {r3, lr}
	bl FUN_021CE0F8
	pop {r3, pc}
	thumb_func_end FUN_021C0944

	thumb_func_start FUN_021C094C
FUN_021C094C: ; 0x021C094C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021CE11C
	cmp r0, #0
	beq _021C098A
	adds r0, r4, #0
	movs r1, #4
	adds r2, r5, #0
	movs r6, #4
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r6, #0x15
	orrs r0, r1
	str r0, [r5]
	adds r0, r5, #4
	movs r1, #1
	movs r2, #0x48
	bl FUN_021AC3B8
	ldr r1, _021C098C ; =0x0000056A
	adds r0, r5, #4
	bl FUN_021AC40C
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C098A:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C098C: .word 0x0000056A
	thumb_func_end FUN_021C094C
_021C0990:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x74, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021C099C
FUN_021C099C: ; 0x021C099C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0A02
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r0, #0xa3
	beq _021C09BE
	cmp r0, #0xa4
	beq _021C09C2
	b _021C09C6
_021C09BE:
	ldr r6, _021C0A04 ; =0x000001F9
	b _021C09C8
_021C09C2:
	ldr r6, _021C0A08 ; =0x000001F6
	b _021C09C8
_021C09C6:
	ldr r6, _021C0A0C ; =0x000001BA
_021C09C8:
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r7, r0, #0
	adds r0, r7, #4
	movs r1, #2
	adds r2, r6, #0
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C0A02:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C0A04: .word 0x000001F9
_021C0A08: .word 0x000001F6
_021C0A0C: .word 0x000001BA
	thumb_func_end FUN_021C099C

	thumb_func_start FUN_021C0A10
FUN_021C0A10: ; 0x021C0A10
	push {r3, lr}
	cmp r2, #4
	bne _021C0A26
	add r0, sp, #8
	ldrh r0, [r0]
	bl FUN_021C0A2C
	cmp r0, #0
	beq _021C0A26
	movs r0, #1
	pop {r3, pc}
_021C0A26:
	movs r0, #0
	pop {r3, pc}
	nop
	thumb_func_end FUN_021C0A10

	thumb_func_start FUN_021C0A2C
FUN_021C0A2C: ; 0x021C0A2C
	bx pc
	nop
	thumb_func_end FUN_021C0A2C
_021C0A30:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x39, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021C0A3C
FUN_021C0A3C: ; 0x021C0A3C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0A60
	ldr r0, [r4]
	cmp r0, #0
	bne _021C0A60
	ldr r1, _021C0A64 ; =FUN_021C0A10
	adds r0, r6, #0
	bl FUN_021BCB70
	movs r0, #1
	str r0, [r4]
_021C0A60:
	pop {r4, r5, r6, pc}
	nop
_021C0A64: .word FUN_021C0A10
	thumb_func_end FUN_021C0A3C

	thumb_func_start FUN_021C0A68
FUN_021C0A68: ; 0x021C0A68
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0A8A
	ldr r0, [r4]
	cmp r0, #1
	bne _021C0A8A
	adds r0, r6, #0
	bl FUN_021BCB74
	movs r0, #0
	str r0, [r4]
_021C0A8A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C0A68

	thumb_func_start FUN_021C0A8C
FUN_021C0A8C: ; 0x021C0A8C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0AAE
	ldr r0, [r4]
	cmp r0, #1
	bne _021C0AAE
	adds r0, r6, #0
	bl FUN_021BCB74
	movs r0, #0
	str r0, [r4]
_021C0AAE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C0A8C
_021C0AB0:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021C0ABC
FUN_021C0ABC: ; 0x021C0ABC
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r2, #0
	adds r0, r5, #0
	adds r4, r3, #0
	bl FUN_021ABE08
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021C0BDC
	movs r0, #1
	str r0, [r4]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C0ABC

	thumb_func_start FUN_021C0ADC
FUN_021C0ADC: ; 0x021C0ADC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0AFC
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C0ABC
_021C0AFC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C0ADC

	thumb_func_start FUN_021C0B00
FUN_021C0B00: ; 0x021C0B00
	push {r3, r4, r5, lr}
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021C0B1C
	adds r0, r5, #0
	bl FUN_021ABE08
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021C0BDC
_021C0B1C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C0B00

	thumb_func_start FUN_021C0B20
FUN_021C0B20: ; 0x021C0B20
	push {r3, lr}
	ldr r3, [r3]
	cmp r3, #0
	beq _021C0B2C
	bl FUN_021C0B80
_021C0B2C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C0B20

	thumb_func_start FUN_021C0B30
FUN_021C0B30: ; 0x021C0B30
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C0B5E
	movs r0, #0x10
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BC8F8
	cmp r4, r0
	beq _021C0B5E
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021C0B80
_021C0B5E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C0B30

	thumb_func_start FUN_021C0B60
FUN_021C0B60: ; 0x021C0B60
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C0B7C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C0B80
_021C0B7C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C0B60

	thumb_func_start FUN_021C0B80
FUN_021C0B80: ; 0x021C0B80
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r6, r0, #0
	bl FUN_021BAC84
	ldr r1, _021C0BD8 ; =0x0000015F
	cmp r0, r1
	bne _021C0BD6
	adds r0, r6, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	cmp r0, #0
	beq _021C0BD6
	adds r0, r5, #0
	movs r1, #0x39
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r4, [r6, #4]
	movs r0, #0
	strb r0, [r6, #5]
	adds r0, r6, #0
	adds r0, #8
	movs r1, #2
	movs r2, #0xde
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C0BD6:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C0BD8: .word 0x0000015F
	thumb_func_end FUN_021C0B80

	thumb_func_start FUN_021C0BDC
FUN_021C0BDC: ; 0x021C0BDC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021AB874
	adds r5, r0, #0
	bl FUN_021BAC84
	ldr r1, _021C0C68 ; =0x0000015F
	cmp r0, r1
	bne _021C0C64
	adds r0, r5, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, #3
	bhi _021C0C26
	adds r1, r4, r4
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021C0C10: ; jump table
	.short _021C0C18 - _021C0C10 - 2 ; case 0
	.short _021C0C1A - _021C0C10 - 2 ; case 1
	.short _021C0C1E - _021C0C10 - 2 ; case 2
	.short _021C0C22 - _021C0C10 - 2 ; case 3
_021C0C18:
	b _021C0C26
_021C0C1A:
	movs r5, #1
	b _021C0C28
_021C0C1E:
	movs r5, #2
	b _021C0C28
_021C0C22:
	movs r5, #3
	b _021C0C28
_021C0C26:
	movs r5, #0
_021C0C28:
	cmp r5, r0
	beq _021C0C64
	adds r0, r7, #0
	movs r1, #0x39
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #2
	ldr r1, [r4]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #0
	strb r6, [r4, #4]
	adds r0, #8
	movs r1, #2
	movs r2, #0xde
	strb r5, [r4, #5]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C0C64:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C0C68: .word 0x0000015F
	thumb_func_end FUN_021C0BDC
_021C0C6C:
	.byte 0x09, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x98, 0x7E, 0x1D, 0x02, 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x1C, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C0C84
FUN_021C0C84: ; 0x021C0C84
	push {r4, lr}
	adds r4, r3, #0
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r4, #0
	movs r3, #0xa
	bl FUN_021C0D50
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_021C0C84

	thumb_func_start FUN_021C0C98
FUN_021C0C98: ; 0x021C0C98
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xa
	bl FUN_021C0110
	cmp r0, #0
	beq _021C0CB8
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #3
	movs r3, #1
	bl FUN_021C01D4
_021C0CB8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C0C98
_021C0CBC:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x34, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C0CC8
FUN_021C0CC8: ; 0x021C0CC8
	push {r4, lr}
	adds r4, r3, #0
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r4, #0
	movs r3, #0xc
	bl FUN_021C0D50
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_021C0CC8

	thumb_func_start FUN_021C0CDC
FUN_021C0CDC: ; 0x021C0CDC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r3, #0
	ldr r0, [r7]
	adds r6, r1, #0
	adds r5, r2, #0
	cmp r0, #0
	beq _021C0D2A
	adds r0, r5, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C0D26
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	movs r2, #7
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #6
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C0D26:
	movs r0, #0
	str r0, [r7]
_021C0D2A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C0CDC

	thumb_func_start FUN_021C0D2C
FUN_021C0D2C: ; 0x021C0D2C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	bl FUN_021C0110
	cmp r0, #0
	beq _021C0D4C
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #3
	movs r3, #1
	bl FUN_021C01D4
_021C0D4C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C0D2C

	thumb_func_start FUN_021C0D50
FUN_021C0D50: ; 0x021C0D50
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, r4
	beq _021C0DB2
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0DB2
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_021ABE10
	cmp r0, #0
	bne _021C0DB2
	adds r0, r5, #0
	bl FUN_021C0DB8
	cmp r0, #0
	bne _021C0DB2
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #4
	adds r1, r4, #0
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C0DB2
	cmp r5, r4
	beq _021C0DB2
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C0DB2:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021C0D50

	thumb_func_start FUN_021C0DB8
FUN_021C0DB8: ; 0x021C0DB8
	bx pc
	nop
	thumb_func_end FUN_021C0DB8
_021C0DBC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x75, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021C0DC8
FUN_021C0DC8: ; 0x021C0DC8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r6, r2, #0
	movs r4, #4
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C0E16
	movs r0, #0x41
	movs r1, #1
	movs r7, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C0E16
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r1, [r4]
	lsls r0, r7, #0x17
	orrs r0, r1
	str r0, [r4]
	ldr r2, _021C0E18 ; =0x000001C6
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C0E16:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C0E18: .word 0x000001C6
	thumb_func_end FUN_021C0DC8
_021C0E1C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xB4, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C0E28
FUN_021C0E28: ; 0x021C0E28
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0E8C
	movs r0, #0x20
	movs r7, #0x20
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x20
	movs r1, #0
	bl FUN_021BCF10
	cmp r5, #0
	beq _021C0E8C
	adds r0, r6, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r1, [r4]
	lsls r0, r7, #0x12
	orrs r0, r1
	str r0, [r4]
	movs r0, #3
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	adds r0, r4, #0
	ldr r2, _021C0E90 ; =0x000001C9
	strh r5, [r4, #4]
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C0E8C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C0E90: .word 0x000001C9
	thumb_func_end FUN_021C0E28

	thumb_func_start FUN_021C0E94
FUN_021C0E94: ; 0x021C0E94
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0EAA
	adds r0, r5, #0
	bl FUN_021BC8E0
_021C0EAA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0E94
_021C0EAC:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE4, 0x79, 0x1D, 0x02

	thumb_func_start FUN_021C0EB8
FUN_021C0EB8: ; 0x021C0EB8
	push {r3, r4, r5, r6, r7, lr}
	add r7, sp, #0x18
	adds r6, r0, #0
	adds r0, r1, #0
	ldrb r1, [r7, #4]
	adds r5, r2, #0
	ldr r4, [sp, #0x18]
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C0ED8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C0ED8:
	cmp r5, #5
	bne _021C0F02
	adds r0, r6, #0
	bl FUN_021BC8FC
	ldrb r1, [r7, #4]
	cmp r1, r0
	bne _021C0F02
	ldr r1, _021C0F08 ; =0x021D7C3C
	movs r2, #0
_021C0EEC:
	lsls r0, r2, #1
	ldrh r0, [r1, r0]
	cmp r4, r0
	bne _021C0EF8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C0EF8:
	adds r2, r2, #1
	cmp r2, #0xd
	blo _021C0EEC
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C0F02:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C0F08: .word 0x021D7C3C
	thumb_func_end FUN_021C0EB8

	thumb_func_start FUN_021C0F0C
FUN_021C0F0C: ; 0x021C0F0C
	push {r4, lr}
	adds r4, r3, #0
	ldr r1, [r4]
	cmp r1, #0
	bne _021C0F20
	ldr r1, _021C0F24 ; =FUN_021C0EB8
	bl FUN_021BCB70
	movs r0, #1
	str r0, [r4]
_021C0F20:
	pop {r4, pc}
	nop
_021C0F24: .word FUN_021C0EB8
	thumb_func_end FUN_021C0F0C

	thumb_func_start FUN_021C0F28
FUN_021C0F28: ; 0x021C0F28
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0F48
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C0F0C
_021C0F48:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C0F28

	thumb_func_start FUN_021C0F4C
FUN_021C0F4C: ; 0x021C0F4C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0F62
	adds r0, r5, #0
	bl FUN_021BCB74
_021C0F62:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C0F4C

	thumb_func_start FUN_021C0F64
FUN_021C0F64: ; 0x021C0F64
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C0F98
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	beq _021C0F98
	adds r0, r5, #0
	movs r1, #0x21
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021C0F98:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C0F64

	thumb_func_start FUN_021C0F9C
FUN_021C0F9C: ; 0x021C0F9C
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0FD6
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	movs r0, #0
	str r0, [r4, #8]
	ldr r0, _021C0FD8 ; =0x0000016B
	cmp r1, r0
	bne _021C0FD6
	adds r0, r6, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C0FD6
	movs r0, #0x22
	movs r1, #0x13
	bl FUN_021BCF10
	str r0, [r4, #8]
_021C0FD6:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C0FD8: .word 0x0000016B
	thumb_func_end FUN_021C0F9C

	thumb_func_start FUN_021C0FDC
FUN_021C0FDC: ; 0x021C0FDC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C103C
	ldr r0, [r6, #8]
	cmp r0, #0
	beq _021C103C
	movs r0, #2
	bl FUN_021BCFB0
	adds r0, r7, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	ldr r2, _021C1040 ; =0x00000389
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r6, #8]
_021C103C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C1040: .word 0x00000389
	thumb_func_end FUN_021C0FDC
_021C1044:
	.byte 0x07, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x7E, 0x1D, 0x02

	thumb_func_start FUN_021C1050
FUN_021C1050: ; 0x021C1050
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C10B4
	movs r0, #0x12
	movs r5, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r5, #0xfd
	cmp r1, r5
	beq _021C1078
	ldr r0, _021C10B8 ; =0x0000019F
	cmp r1, r0
	bne _021C10B4
_021C1078:
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C10B4
	adds r0, r4, #0
	movs r1, #4
	adds r2, r6, #0
	movs r7, #4
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r7, #0x15
	orrs r0, r1
	str r0, [r5]
	adds r0, r5, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C10B4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C10B8: .word 0x0000019F
	thumb_func_end FUN_021C1050

	thumb_func_start FUN_021C10BC
FUN_021C10BC: ; 0x021C10BC
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C10E0
	movs r0, #0x2d
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C10E0
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	str r0, [r4]
_021C10E0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C10BC

	thumb_func_start FUN_021C10E4
FUN_021C10E4: ; 0x021C10E4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C1130
	ldr r0, [r6]
	cmp r0, #0
	beq _021C1130
	adds r0, r7, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	ldr r1, [r4]
	lsls r0, r0, #0x15
	orrs r0, r1
	str r0, [r4]
	ldr r2, _021C1134 ; =0x000001ED
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r6]
_021C1130:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C1134: .word 0x000001ED
	thumb_func_end FUN_021C10E4
_021C1138:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x64, 0x7B, 0x1D, 0x02, 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x7C, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C1150
FUN_021C1150: ; 0x021C1150
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C119C
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C11A0 ; =0x000001E7
	adds r0, r6, #4
	adds r1, r7, #0
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C119C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C11A0: .word 0x000001E7
	thumb_func_end FUN_021C1150

	thumb_func_start FUN_021C11A4
FUN_021C11A4: ; 0x021C11A4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r5, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C1202
	adds r0, r5, #0
	movs r4, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C11CA
	b _021C11EA
_021C11CA:
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r5, #0
	bl FUN_02021740
	cmp r0, #0xa
	bne _021C11E0
	b _021C11EA
_021C11E0:
	adds r0, r5, #0
	bl FUN_021C1204
	cmp r0, #0
	beq _021C11EC
_021C11EA:
	movs r4, #1
_021C11EC:
	cmp r4, #0
	beq _021C1202
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x20
	bl FUN_021BCF10
_021C1202:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C11A4

	thumb_func_start FUN_021C1204
FUN_021C1204: ; 0x021C1204
	bx pc
	nop
	thumb_func_end FUN_021C1204
_021C1208:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x65, 0xCA, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xBC, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1220
FUN_021C1220: ; 0x021C1220
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1236
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCF10
_021C1236:
	pop {r4, pc}
	thumb_func_end FUN_021C1220
_021C1238:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB4, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1244
FUN_021C1244: ; 0x021C1244
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1266
	movs r0, #0x25
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bne _021C1266
	movs r0, #0x26
	movs r1, #0xa
	bl FUN_021BCF10
_021C1266:
	pop {r4, pc}
	thumb_func_end FUN_021C1244
_021C1268:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xAC, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1274
FUN_021C1274: ; 0x021C1274
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C12D6
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB880
	adds r1, r0, #0
	adds r4, #0xfe
	orrs r1, r4
	lsls r1, r1, #0x10
	add r7, sp, #0
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	adds r2, r7, #0
	bl FUN_021ABAE8
	adds r6, r0, #0
	ldr r4, _021C12D8 ; =0x00000000
	beq _021C12CE
_021C12B2:
	ldrb r1, [r7, r4]
	adds r0, r5, #0
	bl FUN_021AB874
	movs r1, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x17
	beq _021C12D6
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021C12B2
_021C12CE:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C12D6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C12D8: .word 0x00000000
	thumb_func_end FUN_021C1274
_021C12DC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xA4, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C12E8
FUN_021C12E8: ; 0x021C12E8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C1346
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB880
	adds r1, r0, #0
	adds r4, #0xfe
	orrs r1, r4
	lsls r1, r1, #0x10
	add r7, sp, #0
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	adds r2, r7, #0
	bl FUN_021ABAE8
	adds r6, r0, #0
	ldr r4, _021C1348 ; =0x00000000
	beq _021C1346
_021C1326:
	ldrb r1, [r7, r4]
	adds r0, r5, #0
	bl FUN_021ABDB4
	cmp r0, #0
	bne _021C133C
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C133C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021C1326
_021C1346:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C1348: .word 0x00000000
	thumb_func_end FUN_021C12E8
_021C134C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x9C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1358
FUN_021C1358: ; 0x021C1358
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C13BA
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB880
	adds r1, r0, #0
	adds r4, #0xfe
	orrs r1, r4
	lsls r1, r1, #0x10
	add r7, sp, #0
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	adds r2, r7, #0
	bl FUN_021ABAE8
	adds r6, r0, #0
	ldr r4, _021C13BC ; =0x00000000
	beq _021C13BA
_021C1396:
	ldrb r1, [r7, r4]
	adds r0, r5, #0
	bl FUN_021AB874
	movs r1, #8
	bl FUN_021BB054
	cmp r0, #0
	beq _021C13B0
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C13B0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blo _021C1396
_021C13BA:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C13BC: .word 0x00000000
	thumb_func_end FUN_021C1358
_021C13C0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x24, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C13CC
FUN_021C13CC: ; 0x021C13CC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C13FC
	movs r0, #0x2d
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C13FC
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	beq _021C13FC
	movs r0, #1
	str r0, [r4]
_021C13FC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C13CC

	thumb_func_start FUN_021C1400
FUN_021C1400: ; 0x021C1400
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C1432
	ldr r0, [r4]
	cmp r0, #1
	bne _021C1432
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	bne _021C1432
	movs r0, #0x35
	lsls r1, r7, #0xc
	bl FUN_021BCF58
_021C1432:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C1400
_021C1434:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1440
FUN_021C1440: ; 0x021C1440
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	movs r6, #2
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021C153E
	ldr r0, [sp]
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	bne _021C153E
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl FUN_021AB880
	adds r5, r0, #0
	ldr r0, [sp]
	movs r1, #0xe
	bl FUN_021ABCA0
	adds r4, r0, #0
	lsls r1, r6, #8
	orrs r1, r5
	lsls r1, r1, #0x10
	ldr r0, [sp]
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	bl FUN_021ABAE8
	strb r0, [r4, #0xc]
	movs r7, #0
	strb r7, [r4, #0xd]
	ldrb r0, [r4, #0xc]
	movs r5, #0
	cmp r0, #0
	bls _021C14D2
_021C1496:
	ldrb r1, [r4, r5]
	ldr r0, [sp]
	bl FUN_021AB874
	movs r1, #8
	adds r6, r0, #0
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C14C6
	adds r0, r6, #0
	bl FUN_021BBF80
	cmp r0, #0
	beq _021C14C6
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r7, #1
	adds r2, r7, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	adds r1, r4, r2
	strb r0, [r1, #6]
_021C14C6:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrb r0, [r4, #0xc]
	cmp r5, r0
	blo _021C1496
_021C14D2:
	cmp r7, #0
	beq _021C153E
	adds r0, r7, #0
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r0, r4, r0
	ldrb r6, [r0, #6]
	ldr r0, [sp]
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BBF80
	adds r5, r0, #0
	beq _021C153E
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0x20
	movs r7, #0x20
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r1, [r4]
	lsls r0, r7, #0x12
	orrs r0, r1
	str r0, [r4]
	ldr r0, [sp, #4]
	ldr r2, _021C1544 ; =0x000001EA
	strb r0, [r4, #6]
	strh r5, [r4, #4]
	movs r0, #1
	strb r0, [r4, #8]
	adds r0, r4, #0
	strb r6, [r4, #9]
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021AC448
_021C153E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C1544: .word 0x000001EA
	thumb_func_end FUN_021C1440
_021C1548:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x84, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1554
FUN_021C1554: ; 0x021C1554
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r0, r4, #0
	adds r5, r1, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C1600
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021CDF68
	cmp r0, #0
	bne _021C1600
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021C1600
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	ldr r0, [sp]
	bl FUN_021BB380
	cmp r0, #0
	bne _021C1600
	adds r0, r7, #0
	bl FUN_021BB380
	cmp r0, #0
	beq _021C1600
	adds r0, r5, #0
	movs r1, #0x24
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #2
	movs r2, #0x73
	ldr r1, [r4]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r4]
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	strb r6, [r4, #4]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BB380
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C1600:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C1554

	thumb_func_start FUN_021C1604
FUN_021C1604: ; 0x021C1604
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C16B4
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C16B4
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021C16B4
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021AB874
	movs r1, #0xd
	str r0, [sp, #4]
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C16B4
	movs r0, #0x14
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	beq _021C16B4
	cmp r7, #0xa5
	beq _021C16B4
	adds r0, r7, #0
	bl FUN_021C16B8
	cmp r0, #0
	bne _021C16B4
	adds r0, r5, #0
	movs r1, #0x1e
	bl FUN_021BDE28
	cmp r0, #0
	beq _021C16B4
	ldr r0, [sp, #4]
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C1684
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_021C1684:
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0xd
	str r0, [r4, #4]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021CE1EC
	str r0, [r4, #8]
	ldr r0, [sp]
	strb r0, [r4, #0xf]
	movs r0, #2
	ldr r1, [r4]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C16B4:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C1604

	thumb_func_start FUN_021C16B8
FUN_021C16B8: ; 0x021C16B8
	bx pc
	nop
	thumb_func_end FUN_021C16B8
_021C16BC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x55, 0xCA, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xDC, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C16D4
FUN_021C16D4: ; 0x021C16D4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1782
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021C1782
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C1782
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #2
	subs r2, r1, #3
	adds r7, r0, #0
	movs r6, #0
	bl FUN_021BB554
	cmp r0, #0
	bne _021C171E
	adds r0, r7, #0
	movs r1, #5
	movs r2, #1
	bl FUN_021BB554
	cmp r0, #0
	beq _021C1720
_021C171E:
	movs r6, #1
_021C1720:
	cmp r6, #0
	beq _021C1782
	adds r0, r7, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C1782
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	movs r7, #2
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r6, #1
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	strb r6, [r1, #0xe]
	str r7, [r1, #4]
	subs r0, r6, #2
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	strb r6, [r1, #0xe]
	movs r0, #5
	str r0, [r1, #4]
	adds r0, r5, #0
	strb r6, [r1, #0xc]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C1782:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C16D4
_021C1784:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C1790
FUN_021C1790: ; 0x021C1790
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C17B8
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C183C
	cmp r0, #0
	beq _021C17B8
	ldr r1, _021C17BC ; =0x000014CD
	movs r0, #0x31
	bl FUN_021BCF58
_021C17B8:
	pop {r4, pc}
	nop
_021C17BC: .word 0x000014CD
	thumb_func_end FUN_021C1790

	thumb_func_start FUN_021C17C0
FUN_021C17C0: ; 0x021C17C0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C17E8
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C183C
	cmp r0, #0
	beq _021C17E8
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C17E8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C17C0

	thumb_func_start FUN_021C17EC
FUN_021C17EC: ; 0x021C17EC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1802
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C1802:
	pop {r4, pc}
	thumb_func_end FUN_021C17EC

	thumb_func_start FUN_021C1804
FUN_021C1804: ; 0x021C1804
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C182C
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C183C
	cmp r0, #0
	beq _021C182C
	movs r0, #0x48
	movs r1, #1
	bl FUN_021BCF10
_021C182C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C1804
_021C1830:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x7D, 0x1D, 0x02

	thumb_func_start FUN_021C183C
FUN_021C183C: ; 0x021C183C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bl FUN_02021740
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xa
	bl FUN_020212AC
	cmp r0, #0
	beq _021C1856
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C1856:
	cmp r4, #4
	beq _021C1864
	cmp r4, #6
	beq _021C1874
	cmp r4, #7
	beq _021C1878
	b _021C18A4
_021C1864:
	adds r0, r5, #0
	movs r1, #0xb
	bl FUN_020212AC
	cmp r0, #8
	bne _021C1874
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C1874:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C1878:
	adds r0, r5, #0
	bl FUN_020215A4
	adds r6, r0, #0
	ldr r4, _021C18B4 ; =0x00000000
	beq _021C18A0
	add r7, sp, #0
_021C1886:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_02021640
	ldr r0, [sp]
	cmp r0, #0
	bge _021C189A
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C189A:
	adds r4, r4, #1
	cmp r4, r6
	blo _021C1886
_021C18A0:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C18A4:
	ldr r0, _021C18B8 ; =0x00000122
	cmp r5, r0
	bne _021C18AE
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C18AE:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C18B4: .word 0x00000000
_021C18B8: .word 0x00000122
	thumb_func_end FUN_021C183C

	thumb_func_start FUN_021C18BC
FUN_021C18BC: ; 0x021C18BC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1914
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C1914
	movs r0, #0x20
	movs r7, #0x20
	bl FUN_021BCFB0
	cmp r0, #0
	bge _021C1914
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r7, #0x12
	orrs r0, r2
	str r0, [r1]
	movs r0, #1
	str r0, [r1, #4]
	strb r6, [r1, #0xc]
	strb r0, [r1, #0xe]
	strb r0, [r1, #0xf]
	adds r0, r5, #0
	strb r4, [r1, #0x10]
	bl FUN_021AC448
_021C1914:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C18BC
_021C1918:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x4C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1924
FUN_021C1924: ; 0x021C1924
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C195C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #2
	movs r4, #2
	bl FUN_021BD3B4
	cmp r5, r0
	bhi _021C195C
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C195C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C1924
_021C1960:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x6C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C196C
FUN_021C196C: ; 0x021C196C
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1996
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB388
	cmp r0, #0
	beq _021C1996
	movs r0, #0x35
	lsls r1, r6, #9
	bl FUN_021BCF58
_021C1996:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C196C
_021C1998:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x54, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C19A4
FUN_021C19A4: ; 0x021C19A4
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r4
	beq _021C19CA
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021C19CA
	movs r1, #3
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C19CA:
	pop {r4, pc}
	thumb_func_end FUN_021C19A4
_021C19CC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x44, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C19D8
FUN_021C19D8: ; 0x021C19D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C1A6E
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	adds r2, r0, #0
	lsls r1, r4, #9
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	add r2, sp, #4
	bl FUN_021ABAE8
	str r0, [sp]
	ldr r0, [sp]
	movs r4, #0
	cmp r0, #0
	bls _021C1A6E
	movs r0, #2
	lsls r7, r0, #0x18
_021C1A14:
	add r0, sp, #4
	ldrb r1, [r0, r4]
	cmp r1, r6
	beq _021C1A62
	adds r0, r5, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021C1A62
	adds r0, r5, #0
	movs r1, #0x1e
	bl FUN_021BDE28
	cmp r0, #0
	beq _021C1A62
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x16
	orrs r0, r2
	orrs r0, r7
	str r0, [r1]
	movs r0, #1
	strb r0, [r1, #0x14]
	add r0, sp, #4
	ldrb r0, [r0, r4]
	strb r0, [r1, #8]
	movs r0, #0x24
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021C1A62:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp]
	cmp r4, r0
	blo _021C1A14
_021C1A6E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C19D8
_021C1A74:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x3C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C1A80
FUN_021C1A80: ; 0x021C1A80
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1AB6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #5
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C1AB6
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021C1AB6
	movs r0, #0x31
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C1AB6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C1A80
_021C1AB8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x2C, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C1AC4
FUN_021C1AC4: ; 0x021C1AC4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1AFA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C1AFA
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C1AFA
	movs r0, #0x31
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C1AFA:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C1AC4
_021C1AFC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE4, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C1B08
FUN_021C1B08: ; 0x021C1B08
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1B80
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021C1B80
	cmp r4, r5
	beq _021C1B80
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_02021898
	cmp r0, #0
	beq _021C1B80
	movs r0, #0x40
	movs r1, #1
	movs r7, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C1B80
	adds r0, r6, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r7, #0x17
	orrs r0, r1
	str r0, [r5]
	ldr r2, _021C1B84 ; =0x000001D5
	adds r0, r5, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C1B80:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C1B84: .word 0x000001D5
	thumb_func_end FUN_021C1B08
_021C1B88:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xAC, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C1B94
FUN_021C1B94: ; 0x021C1B94
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	beq _021C1BAA
	b _021C1CFA
_021C1BAA:
	ldr r0, [sp]
	movs r1, #0xb6
	bl FUN_021ABCA0
	adds r4, r0, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl FUN_021AB874
	adds r6, r0, #0
	movs r0, #0
	movs r7, #0
	str r0, [sp, #8]
	movs r5, #0
_021C1BC6:
	adds r0, r6, #0
	adds r1, r5, #1
	movs r2, #1
	bl FUN_021BB554
	cmp r0, #0
	beq _021C1BE8
	ldr r0, [sp, #8]
	adds r1, r0, #0
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, r0
	str r1, [sp, #8]
	adds r1, r5, #1
	adds r0, #0xa8
	strb r1, [r0]
_021C1BE8:
	movs r2, #0
	adds r0, r6, #0
	adds r1, r5, #1
	mvns r2, r2
	bl FUN_021BB554
	cmp r0, #0
	beq _021C1C08
	adds r0, r7, #0
	adds r1, r7, #1
	lsls r1, r1, #0x18
	adds r0, r4, r0
	lsrs r7, r1, #0x18
	adds r1, r5, #1
	adds r0, #0xaf
	strb r1, [r0]
_021C1C08:
	adds r5, r5, #1
	cmp r5, #7
	blo _021C1BC6
	ldr r0, [sp, #8]
	movs r5, #0
	movs r6, #0
	cmp r0, #0
	bne _021C1C2A
	cmp r7, #0
	beq _021C1C2A
	adds r0, r7, #0
	bl FUN_021BD100
	adds r0, r4, r0
	adds r0, #0xaf
	ldrb r5, [r0]
	b _021C1C9E
_021C1C2A:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021C1C40
	cmp r7, #0
	bne _021C1C40
	bl FUN_021BD100
	adds r0, r4, r0
	adds r0, #0xa8
	ldrb r6, [r0]
	b _021C1C9E
_021C1C40:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _021C1C9E
	cmp r7, #0
	beq _021C1C9E
	movs r2, #0
	movs r6, #0
	cmp r0, #0
	bls _021C1C8A
_021C1C52:
	movs r3, #0
	cmp r7, #0
	bls _021C1C82
_021C1C58:
	adds r0, r4, r3
	adds r0, #0xaf
	ldrb r1, [r0]
	adds r0, r4, r6
	adds r0, #0xa8
	ldrb r0, [r0]
	cmp r0, r1
	beq _021C1C7C
	adds r5, r2, #0
	adds r2, r2, #1
	lsls r2, r2, #0x18
	lsls r0, r0, #8
	orrs r0, r1
	lsls r1, r5, #1
	lsrs r2, r2, #0x18
	strh r0, [r4, r1]
	cmp r2, #0x54
	bhs _021C1C82
_021C1C7C:
	adds r3, r3, #1
	cmp r3, r7
	blo _021C1C58
_021C1C82:
	ldr r0, [sp, #8]
	adds r6, r6, #1
	cmp r6, r0
	blo _021C1C52
_021C1C8A:
	adds r0, r2, #0
	bl FUN_021BD100
	lsls r0, r0, #1
	ldrh r1, [r4, r0]
	asrs r0, r1, #8
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r0, r1, #0x18
	lsrs r5, r0, #0x18
_021C1C9E:
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #2
	movs r4, #2
	bl FUN_021AC434
	cmp r6, #0
	beq _021C1CCC
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0xe
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	ldr r0, [sp, #4]
	strb r0, [r1, #0x10]
	str r6, [r1, #4]
	ldr r0, [sp]
	strb r4, [r1, #0xc]
	bl FUN_021AC448
_021C1CCC:
	cmp r5, #0
	beq _021C1CF0
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0xe
	bl FUN_021AC424
	adds r1, r0, #0
	movs r2, #1
	strb r2, [r1, #0xf]
	ldr r0, [sp, #4]
	strb r0, [r1, #0x10]
	str r5, [r1, #4]
	subs r0, r2, #2
	strb r0, [r1, #0xc]
	ldr r0, [sp]
	bl FUN_021AC448
_021C1CF0:
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #3
	bl FUN_021AC434
_021C1CFA:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C1B94
_021C1D00:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x1C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1D0C
FUN_021C1D0C: ; 0x021C1D0C
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1D2C
	movs r0, #0x32
	bl FUN_021BCFB0
	cmp r0, #0
	ble _021C1D2C
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C1D2C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C1D0C
_021C1D30:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xBC, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C1D3C
FUN_021C1D3C: ; 0x021C1D3C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C1DC8
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C1DC8
	movs r0, #0x47
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C1DC8
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021C1DC8
	adds r0, r4, #0
	movs r1, #0x1e
	bl FUN_021BDE28
	cmp r0, #0
	beq _021C1DC8
	adds r0, r4, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #2
	ldr r1, [r5]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r5]
	movs r0, #4
	bl FUN_021BCFB0
	strb r0, [r5, #0xf]
	movs r0, #5
	str r0, [r5, #4]
	bl FUN_021BD56C
	str r0, [r5, #8]
	adds r0, r5, #0
	movs r2, #0x76
	adds r0, #0x14
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldrb r1, [r5, #0xf]
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C1DC8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C1D3C

	thumb_func_start FUN_021C1DCC
FUN_021C1DCC: ; 0x021C1DCC
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #4
	movs r1, #1
	bl FUN_021BDD58
	str r0, [r4]
	ldr r0, _021C1DE0 ; =0x021D76C4
	pop {r4, pc}
	nop
_021C1DE0: .word 0x021D76C4
	thumb_func_end FUN_021C1DCC

	thumb_func_start FUN_021C1DE4
FUN_021C1DE4: ; 0x021C1DE4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C1E52
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C1E52
	adds r0, r6, #0
	bl FUN_021BB388
	cmp r0, #0
	bne _021C1E52
	adds r0, r6, #0
	movs r1, #3
	bl FUN_021BD3C8
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	ldr r1, [sp]
	subs r0, r1, r0
	cmp r4, r0
	bls _021C1E36
	adds r4, r0, #0
_021C1E36:
	adds r0, r7, #0
	movs r1, #8
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #7]
	str r4, [r1, #0x10]
	movs r0, #1
	strb r0, [r1, #4]
	strb r0, [r1, #5]
	adds r0, r7, #0
	bl FUN_021AC448
_021C1E52:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C1DE4
_021C1E54:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC4, 0x77, 0x1D, 0x02
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x04, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C1E6C
FUN_021C1E6C: ; 0x021C1E6C
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #2
	bl FUN_021BEAF4
	pop {r3, pc}
	thumb_func_end FUN_021C1E6C

	thumb_func_start FUN_021C1E7C
FUN_021C1E7C: ; 0x021C1E7C
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0xcc
	bl FUN_021BEB34
	pop {r3, pc}
	thumb_func_end FUN_021C1E7C
_021C1E8C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x14, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C1E98
FUN_021C1E98: ; 0x021C1E98
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1EBC
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #4
	bne _021C1EBC
	movs r0, #0x35
	lsls r1, r6, #0xc
	bl FUN_021BCF58
_021C1EBC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C1E98
_021C1EC0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C1ECC
FUN_021C1ECC: ; 0x021C1ECC
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1EF8
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C1EF8
	movs r0, #0x2b
	movs r4, #0x2b
	bl FUN_021BCFB0
	cmp r0, #0x32
	bls _021C1EF8
	adds r0, r4, #0
	movs r1, #0x32
	bl FUN_021BCF10
_021C1EF8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C1ECC
_021C1EFC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xEC, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C1F08
FUN_021C1F08: ; 0x021C1F08
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1F3E
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C1F44
	cmp r0, #0
	bne _021C1F3E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDEA4
	cmp r0, #0
	beq _021C1F3E
	ldr r1, _021C1F40 ; =0x000014CD
	movs r0, #0x31
	bl FUN_021BCF58
_021C1F3E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021C1F40: .word 0x000014CD
	thumb_func_end FUN_021C1F08

	thumb_func_start FUN_021C1F44
FUN_021C1F44: ; 0x021C1F44
	bx pc
	nop
	thumb_func_end FUN_021C1F44
_021C1F48:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x55, 0xCA, 0x89, 0x06, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x54, 0x7A, 0x1D, 0x02

	thumb_func_start FUN_021C1F60
FUN_021C1F60: ; 0x021C1F60
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C1F98
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #4
	bne _021C1F98
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	beq _021C1F90
	cmp r0, #5
	beq _021C1F90
	cmp r0, #8
	bne _021C1F98
_021C1F90:
	ldr r1, _021C1F9C ; =0x000014CD
	movs r0, #0x31
	bl FUN_021BCF58
_021C1F98:
	pop {r3, r4, r5, pc}
	nop
_021C1F9C: .word 0x000014CD
	thumb_func_end FUN_021C1F60

	thumb_func_start FUN_021C1FA0
FUN_021C1FA0: ; 0x021C1FA0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r7, r2, #0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC84
	ldr r1, _021C2020 ; =0x0000022B
	cmp r0, r1
	bne _021C201E
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021BD3B4
	cmp r5, r0
	bhi _021C1FD4
	movs r0, #1
	b _021C1FD6
_021C1FD4:
	movs r0, #0
_021C1FD6:
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	cmp r5, r0
	beq _021C201E
	adds r0, r6, #0
	movs r1, #0x39
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #2
	ldr r1, [r4]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r4]
	strb r7, [r4, #4]
	movs r2, #0xb9
	strb r5, [r4, #5]
	cmp r5, #1
	beq _021C2008
	movs r2, #0xba
_021C2008:
	adds r0, r4, #0
	lsls r2, r2, #0x10
	adds r0, #8
	movs r1, #1
	lsrs r2, r2, #0x10
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C201E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C2020: .word 0x0000022B
	thumb_func_end FUN_021C1FA0

	thumb_func_start FUN_021C2024
FUN_021C2024: ; 0x021C2024
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2076
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021C2078 ; =0x0000022B
	cmp r0, r1
	bne _021C2076
	adds r0, r5, #0
	movs r1, #0x39
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r4, [r6, #4]
	movs r0, #0
	strb r0, [r6, #5]
	adds r0, r6, #0
	adds r0, #8
	movs r1, #1
	movs r2, #0xba
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C2076:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C2078: .word 0x0000022B
	thumb_func_end FUN_021C2024
_021C207C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x0C, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021C2088
FUN_021C2088: ; 0x021C2088
	push {r3, lr}
	cmp r2, #2
	bne _021C20A8
	bl FUN_021BC8FC
	bl FUN_0219D35C
	add r1, sp, #8
	ldrb r2, [r1, #4]
	cmp r0, r2
	beq _021C20A8
	ldrh r0, [r1]
	cmp r0, #3
	bhi _021C20A8
	movs r0, #1
	pop {r3, pc}
_021C20A8:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021C2088

	thumb_func_start FUN_021C20AC
FUN_021C20AC: ; 0x021C20AC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C20C4
	ldr r1, _021C20C8 ; =FUN_021C2088
	adds r0, r5, #0
	bl FUN_021BCB70
_021C20C4:
	pop {r3, r4, r5, pc}
	nop
_021C20C8: .word FUN_021C2088
	thumb_func_end FUN_021C20AC

	thumb_func_start FUN_021C20CC
FUN_021C20CC: ; 0x021C20CC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C20E2
	adds r0, r5, #0
	bl FUN_021BCB74
_021C20E2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C20CC
_021C20E4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC4, 0x7A, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x34, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C20FC
FUN_021C20FC: ; 0x021C20FC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C215E
	movs r0, #5
	bl FUN_021BCFB0
	adds r7, r0, #0
	ldr r4, _021C2160 ; =0x00000000
	beq _021C215E
_021C2118:
	adds r0, r4, #6
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021C2158
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x16
	orrs r0, r2
	str r0, [r1]
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r6, [r1, #0x10]
	str r0, [r1, #4]
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
_021C2158:
	adds r4, r4, #1
	cmp r4, r7
	blo _021C2118
_021C215E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C2160: .word 0x00000000
	thumb_func_end FUN_021C20FC
_021C2164:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C2170
FUN_021C2170: ; 0x021C2170
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C21BA
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C21BA
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #0x10
	bne _021C21BA
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1]
	lsls r0, r6, #0x15
	orrs r0, r2
	str r0, [r1]
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	str r0, [r1, #4]
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
_021C21BA:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C2170
_021C21BC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x74, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C21C8
FUN_021C21C8: ; 0x021C21C8
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2222
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C2222
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x10
	beq _021C21FA
	adds r0, #0xfa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _021C2222
_021C21FA:
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x16
	orrs r0, r2
	str r0, [r1]
	movs r2, #1
	strb r2, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #5
	str r0, [r1, #4]
	adds r0, r5, #0
	strb r2, [r1, #0xc]
	bl FUN_021AC448
_021C2222:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C21C8
_021C2224:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x3C, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C2230
FUN_021C2230: ; 0x021C2230
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C22CA
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C22CA
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021C22CA
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021C22CA
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	cmp r0, #0x98
	beq _021C22CA
	adds r0, r5, #0
	movs r1, #0x1f
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0x98
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C22CC ; =0x000001CF
	strb r6, [r4, #6]
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C22C2
	movs r0, #2
	ldr r1, [r4]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r4]
_021C22C2:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C22CA:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C22CC: .word 0x000001CF
	thumb_func_end FUN_021C2230

	thumb_func_start FUN_021C22D0
FUN_021C22D0: ; 0x021C22D0
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xb
	bl FUN_021C0110
	cmp r0, #0
	beq _021C22F0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	movs r3, #1
	bl FUN_021C01D4
_021C22F0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C22D0
_021C22F4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C2300
FUN_021C2300: ; 0x021C2300
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2332
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #0
	bne _021C2332
	movs r0, #0x18
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x18
	adds r1, r1, #1
	bl FUN_021BCF10
_021C2332:
	pop {r4, pc}
	thumb_func_end FUN_021C2300
_021C2334:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF4, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C2340
FUN_021C2340: ; 0x021C2340
	push {r3, lr}
	bl FUN_021CDFC4
	pop {r3, pc}
	thumb_func_end FUN_021C2340

	thumb_func_start FUN_021C2348
FUN_021C2348: ; 0x021C2348
	push {r3, lr}
	bl FUN_021CE018
	pop {r3, pc}
	thumb_func_end FUN_021C2348

	thumb_func_start FUN_021C2350
FUN_021C2350: ; 0x021C2350
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2390
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C2390
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021CE084
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
_021C2390:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C2350
_021C2394:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C23A0
FUN_021C23A0: ; 0x021C23A0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C2430
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BBF80
	adds r7, r0, #0
	beq _021C2430
	bl FUN_02026C20
	cmp r0, #0
	beq _021C2430
	adds r0, r4, #0
	bl FUN_021BB380
	cmp r0, #0
	bne _021C2430
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	beq _021C23EA
	adds r0, r5, #0
	movs r1, #0x32
	bl FUN_021BDE28
	cmp r0, #0
	beq _021C2430
_021C23EA:
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0x20
	ldr r1, [r4]
	lsls r0, r0, #0x12
	orrs r0, r1
	str r0, [r4]
	strh r7, [r4, #4]
	strb r6, [r4, #6]
	movs r0, #1
	strb r0, [r4, #7]
	adds r0, r4, #0
	ldr r2, _021C2434 ; =0x000001DB
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C2430:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C2434: .word 0x000001DB
	thumb_func_end FUN_021C23A0
_021C2438:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xEC, 0x77, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x44, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C2450
FUN_021C2450: ; 0x021C2450
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C2468
	movs r0, #0x35
	lsls r1, r4, #0xc
	bl FUN_021BCF58
_021C2468:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C2450
_021C246C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xA4, 0x76, 0x1D, 0x02

	thumb_func_start FUN_021C2478
FUN_021C2478: ; 0x021C2478
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C2490
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C2490:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C2478

	thumb_func_start FUN_021C2494
FUN_021C2494: ; 0x021C2494
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C24B6
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r1, r0, #0
	movs r0, #0x20
	rsbs r1, r1, #0
	bl FUN_021BCF10
	str r0, [r4]
_021C24B6:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C2494
_021C24B8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xCC, 0x77, 0x1D, 0x02

	thumb_func_start FUN_021C24C4
FUN_021C24C4: ; 0x021C24C4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C24E4
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C24E8
_021C24E4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C24C4

	thumb_func_start FUN_021C24E8
FUN_021C24E8: ; 0x021C24E8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r3, #0
	str r0, [sp]
	ldr r0, [r7]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _021C254C
	adds r0, r4, #0
	bl FUN_0219D35C
	bl FUN_0219D378
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	bl FUN_021AC434
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #1
	movs r2, #0xb0
	bl FUN_021AC3B8
	ldr r1, [sp, #4]
	adds r0, r6, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #3
	adds r2, r4, #0
	bl FUN_021AC434
	ldr r0, [sp]
	ldr r1, _021C2550 ; =FUN_021C2554
	bl FUN_021BCB70
	movs r0, #1
	str r0, [r7]
_021C254C:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C2550: .word FUN_021C2554
	thumb_func_end FUN_021C24E8

	thumb_func_start FUN_021C2554
FUN_021C2554: ; 0x021C2554
	push {r4, lr}
	cmp r2, #5
	bne _021C2578
	bl FUN_021BC8FC
	add r4, sp, #8
	ldrb r1, [r4, #4]
	bl FUN_0219D340
	cmp r0, #0
	bne _021C2578
	ldrh r0, [r4]
	bl FUN_02026C20
	cmp r0, #0
	beq _021C2578
	movs r0, #1
	pop {r4, pc}
_021C2578:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021C2554
_021C257C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xAC, 0x7B, 0x1D, 0x02

	thumb_func_start FUN_021C2588
FUN_021C2588: ; 0x021C2588
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C261E
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021ABCDC
	adds r1, r5, #0
	bl FUN_0219C508
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021ABBA0
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021AB874
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C261E
	adds r0, r5, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C261E
	adds r0, r4, #0
	movs r1, #0x33
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #2
	movs r2, #0xa1
	ldr r1, [r5]
	lsls r0, r0, #0x16
	orrs r0, r1
	str r0, [r5]
	adds r0, r5, #0
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	strb r7, [r5, #4]
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	ldrb r1, [r5, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C261E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C2588
_021C2620:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x14, 0x78, 0x1D, 0x02, 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x24, 0x7C, 0x1D, 0x02

	thumb_func_start FUN_021C2638
FUN_021C2638: ; 0x021C2638
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #4
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C265E
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C265E
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C26B0
_021C265E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C2638

	thumb_func_start FUN_021C2660
FUN_021C2660: ; 0x021C2660
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C267C
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C26B0
_021C267C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2660

	thumb_func_start FUN_021C2680
FUN_021C2680: ; 0x021C2680
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #0x10
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r4, r0
	beq _021C26AE
	movs r0, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C26AE
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021C26B0
_021C26AE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C2680

	thumb_func_start FUN_021C26B0
FUN_021C26B0: ; 0x021C26B0
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BC464
	cmp r0, #0
	beq _021C26F0
	adds r0, r5, #0
	movs r1, #0x34
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C26F4 ; =0x000001DE
	adds r0, #8
	movs r1, #2
	strb r4, [r6, #4]
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C26F0:
	pop {r4, r5, r6, pc}
	nop
_021C26F4: .word 0x000001DE
	thumb_func_end FUN_021C26B0
_021C26F8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x24, 0x78, 0x1D, 0x02

	thumb_func_start FUN_021C2704
FUN_021C2704: ; 0x021C2704
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021C2724
	ldr r1, _021C2728 ; =0x0000119A
	movs r0, #0x35
	bl FUN_021BCF58
_021C2724:
	pop {r4, pc}
	nop
_021C2728: .word 0x0000119A
	thumb_func_end FUN_021C2704

	thumb_func_start FUN_021C272C
FUN_021C272C: ; 0x021C272C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r1, #0
	ldr r1, _021C2784 ; =0x021D8F68
	adds r6, r0, #0
	movs r2, #0
_021C2738:
	lsls r4, r2, #3
	ldr r0, [r1, r4]
	cmp r5, r0
	bne _021C2778
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021BB0E8
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r6, #0
	bl FUN_021BAC80
	ldr r1, _021C2788 ; =0x021D8F6C
	adds r6, r0, #0
	ldr r1, [r1, r4]
	add r0, sp, #0xc
	blx r1
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0xc]
	adds r1, r5, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #5
	movs r2, #6
	adds r3, r7, #0
	bl FUN_021BC75C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_021C2778:
	adds r2, r2, #1
	cmp r2, #0xac
	blo _021C2738
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C2784: .word 0x021D8F68
_021C2788: .word 0x021D8F6C
	thumb_func_end FUN_021C272C

	thumb_func_start FUN_021C278C
FUN_021C278C: ; 0x021C278C
	push {r4, r5, r6, lr}
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #5
	bl FUN_021BCB7C
	adds r4, r0, #0
	beq _021C27C0
	movs r6, #6
_021C27A0:
	adds r0, r4, #0
	bl FUN_021BCBB0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BC904
	cmp r0, #0
	bne _021C27BA
	adds r0, r4, #0
	bl FUN_021BC890
_021C27BA:
	adds r4, r5, #0
	cmp r5, #0
	bne _021C27A0
_021C27C0:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C278C

	thumb_func_start FUN_021C27C4
FUN_021C27C4: ; 0x021C27C4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BB380
	adds r1, r0, #0
	beq _021C27DC
	lsls r1, r1, #0x10
	adds r0, r4, #0
	lsrs r1, r1, #0x10
	bl FUN_021C272C
	pop {r4, pc}
_021C27DC:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021C27C4

	thumb_func_start FUN_021C27E0
FUN_021C27E0: ; 0x021C27E0
	push {r4, lr}
	cmp r1, #0
	beq _021C2800
	bl FUN_021C272C
	adds r4, r0, #0
	beq _021C2800
	bl FUN_021BC90C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #1
	bl FUN_021BC92C
	adds r0, r4, #0
	pop {r4, pc}
_021C2800:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021C27E0

	thumb_func_start FUN_021C2804
FUN_021C2804: ; 0x021C2804
	ldr r3, _021C2808 ; =FUN_021BC890
	bx r3
	.align 2, 0
_021C2808: .word FUN_021BC890
	thumb_func_end FUN_021C2804

	thumb_func_start FUN_021C280C
FUN_021C280C: ; 0x021C280C
	push {r3, lr}
	bl FUN_021BAC80
	movs r1, #5
	bl FUN_021BCC54
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C280C

	thumb_func_start FUN_021C281C
FUN_021C281C: ; 0x021C281C
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021BAC80
	movs r1, #5
	bl FUN_021BCC88
	cmp r0, #0
	bne _021C2834
	adds r0, r4, #0
	bl FUN_021C27C4
_021C2834:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C281C

	thumb_func_start FUN_021C2838
FUN_021C2838: ; 0x021C2838
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_021BD344
	cmp r0, #0
	beq _021C284A
	movs r0, #1
	pop {r4, pc}
_021C284A:
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021ABE38
	cmp r0, #0
	beq _021C285A
	movs r0, #1
	pop {r4, pc}
_021C285A:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2838

	thumb_func_start FUN_021C2860
FUN_021C2860: ; 0x021C2860
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_021BC8F8
	adds r1, r4, #0
	bl FUN_021BD8C4
	pop {r4, pc}
	thumb_func_end FUN_021C2860

	thumb_func_start FUN_021C2870
FUN_021C2870: ; 0x021C2870
	push {r3, lr}
	movs r1, #2
	bl FUN_021C2860
	adds r0, #0x64
	cmp r0, #0
	ble _021C2890
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021C289E
_021C2890:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021C289E:
	blx FUN_0208DA78
	movs r1, #0x64
	blx FUN_0208D688
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2870

	thumb_func_start FUN_021C28AC
FUN_021C28AC: ; 0x021C28AC
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BC918
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	bl FUN_021AC434
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C28AC

	thumb_func_start FUN_021C28C4
FUN_021C28C4: ; 0x021C28C4
	push {r3, lr}
	movs r3, #1
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C28C4

	thumb_func_start FUN_021C28D0
FUN_021C28D0: ; 0x021C28D0
	push {r3, lr}
	movs r3, #1
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C28D0
_021C28DC:
	.byte 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x88, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C28E8
FUN_021C28E8: ; 0x021C28E8
	push {r3, lr}
	movs r3, #2
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C28E8

	thumb_func_start FUN_021C28F4
FUN_021C28F4: ; 0x021C28F4
	push {r3, lr}
	movs r3, #2
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C28F4
_021C2900:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C290C
FUN_021C290C: ; 0x021C290C
	push {r3, lr}
	movs r3, #4
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C290C

	thumb_func_start FUN_021C2918
FUN_021C2918: ; 0x021C2918
	push {r3, lr}
	movs r3, #4
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2918
_021C2924:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA8, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C2930
FUN_021C2930: ; 0x021C2930
	push {r3, lr}
	movs r3, #3
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2930

	thumb_func_start FUN_021C293C
FUN_021C293C: ; 0x021C293C
	push {r3, lr}
	movs r3, #3
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C293C
_021C2948:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xD8, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C2954
FUN_021C2954: ; 0x021C2954
	push {r3, lr}
	movs r3, #6
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2954

	thumb_func_start FUN_021C2960
FUN_021C2960: ; 0x021C2960
	push {r3, lr}
	movs r3, #6
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2960
_021C296C:
	.byte 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C2978
FUN_021C2978: ; 0x021C2978
	push {r3, lr}
	movs r3, #5
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2978

	thumb_func_start FUN_021C2984
FUN_021C2984: ; 0x021C2984
	push {r3, lr}
	movs r3, #5
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C2984
_021C2990:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C299C
FUN_021C299C: ; 0x021C299C
	push {r3, lr}
	movs r3, #0x25
	bl FUN_021C29C0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C299C

	thumb_func_start FUN_021C29A8
FUN_021C29A8: ; 0x021C29A8
	push {r3, lr}
	movs r3, #0x25
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C29A8
_021C29B4:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C29C0
FUN_021C29C0: ; 0x021C29C0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2A02
	movs r0, #0x2e
	add r1, sp, #0
	bl FUN_021BCFE0
	cmp r0, #0
	beq _021C29EA
	ldr r0, [sp]
	cmp r0, #3
	beq _021C29EA
	cmp r0, #0
	bne _021C2A02
_021C29EA:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021C2A40
	cmp r0, #0
	beq _021C2A02
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C2A02:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C29C0

	thumb_func_start FUN_021C2A04
FUN_021C2A04: ; 0x021C2A04
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2A3E
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C2A40
	cmp r0, #0
	beq _021C2A3E
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r6, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	strb r4, [r1, #8]
	bl FUN_021AC448
_021C2A3E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C2A04

	thumb_func_start FUN_021C2A40
FUN_021C2A40: ; 0x021C2A40
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	bl FUN_021AB874
	adds r4, r0, #0
	cmp r5, #0x24
	beq _021C2A70
	cmp r5, #0x25
	beq _021C2A58
	cmp r5, #0x26
	beq _021C2A80
	b _021C2A90
_021C2A58:
	bl FUN_021BBAE8
	cmp r0, #0
	bne _021C2A6C
	adds r0, r4, #0
	movs r1, #6
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C2A98
_021C2A6C:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021C2A70:
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021C2A7C
	movs r0, #1
	pop {r3, r4, r5, pc}
_021C2A7C:
	movs r0, #0
	pop {r3, r4, r5, pc}
_021C2A80:
	bl FUN_021BD664
	cmp r0, #0
	beq _021C2A8C
	movs r0, #1
	pop {r3, r4, r5, pc}
_021C2A8C:
	movs r0, #0
	pop {r3, r4, r5, pc}
_021C2A90:
	adds r1, r5, #0
	bl FUN_021BBB04
	pop {r3, r4, r5, pc}
_021C2A98:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C2A40
_021C2A9C:
	.byte 0x07, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x30, 0x8F, 0x1D, 0x02

	thumb_func_start FUN_021C2AA8
FUN_021C2AA8: ; 0x021C2AA8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2AD0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021C2BA0
	cmp r0, #4
	beq _021C2AD0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C2AD0:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2AA8

	thumb_func_start FUN_021C2AD4
FUN_021C2AD4: ; 0x021C2AD4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2B0A
	movs r0, #0x2e
	bl FUN_021BCFB0
	cmp r0, #2
	beq _021C2AF4
	cmp r0, #0
	bne _021C2B0A
_021C2AF4:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021C2BD0
	cmp r0, #4
	beq _021C2B0A
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C2B0A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C2AD4

	thumb_func_start FUN_021C2B0C
FUN_021C2B0C: ; 0x021C2B0C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2B34
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021C2BD0
	cmp r0, #4
	beq _021C2B34
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C2B34:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2B0C

	thumb_func_start FUN_021C2B38
FUN_021C2B38: ; 0x021C2B38
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2B5C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021C2BA0
	cmp r0, #4
	beq _021C2B5C
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C2B5C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C2B38

	thumb_func_start FUN_021C2B60
FUN_021C2B60: ; 0x021C2B60
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C2B84
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C2C04
_021C2B84:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C2B60

	thumb_func_start FUN_021C2B88
FUN_021C2B88: ; 0x021C2B88
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2B9A
	movs r4, #1
	str r4, [sp]
	bl FUN_021C2C04
_021C2B9A:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2B88

	thumb_func_start FUN_021C2BA0
FUN_021C2BA0: ; 0x021C2BA0
	push {r3, r4, r5, lr}
	bl FUN_021AB874
	adds r5, r0, #0
	bl FUN_021BBFF8
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021BAFB8
	adds r4, r0, #0
	cmp r4, #4
	beq _021C2BCA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BADC4
	cmp r0, #0
	bne _021C2BCA
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_021C2BCA:
	movs r0, #4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C2BA0

	thumb_func_start FUN_021C2BD0
FUN_021C2BD0: ; 0x021C2BD0
	push {r4, r5, r6, lr}
	bl FUN_021AB874
	adds r6, r0, #0
	bl FUN_021BAC88
	adds r4, r0, #0
	ldr r5, _021C2C00 ; =0x00000000
	beq _021C2BFC
_021C2BE2:
	lsls r1, r5, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021BADC4
	cmp r0, #0
	bne _021C2BF6
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, pc}
_021C2BF6:
	adds r5, r5, #1
	cmp r5, r4
	blo _021C2BE2
_021C2BFC:
	movs r0, #4
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C2C00: .word 0x00000000
	thumb_func_end FUN_021C2BD0

	thumb_func_start FUN_021C2C04
FUN_021C2C04: ; 0x021C2C04
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #8]
	str r0, [sp]
	str r1, [sp, #4]
	adds r0, r1, #0
	ldr r1, [sp, #8]
	bl FUN_021AB874
	adds r4, r0, #0
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	bl FUN_021C2BA0
	adds r7, r0, #0
	cmp r7, #4
	bne _021C2C60
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	bl FUN_021C2BD0
	adds r7, r0, #0
	cmp r7, #4
	bne _021C2C60
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _021C2C60
	adds r0, r4, #0
	bl FUN_021BAC88
	adds r6, r0, #0
	ldr r5, _021C2CD4 ; =0x00000000
	beq _021C2C60
_021C2C46:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021BAD8C
	cmp r0, #0
	beq _021C2C5A
	lsls r0, r5, #0x18
	lsrs r7, r0, #0x18
	b _021C2C60
_021C2C5A:
	adds r5, r5, #1
	cmp r5, r6
	blo _021C2C46
_021C2C60:
	cmp r7, #4
	beq _021C2CCC
	ldr r0, [sp, #4]
	ldr r2, [sp, #8]
	movs r1, #9
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #0xa
	strb r0, [r5, #4]
	ldr r0, [sp, #8]
	ldr r2, _021C2CD8 ; =0x0000038F
	strb r0, [r5, #5]
	strb r7, [r5, #6]
	ldrb r1, [r5, #7]
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r5, #7]
	adds r0, r5, #0
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldr r1, [sp, #8]
	adds r0, #8
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r5, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BAD00
	adds r1, r0, #0
	adds r0, r5, #0
	adds r0, #8
	bl FUN_021AC3E0
	ldr r0, [sp, #4]
	adds r1, r5, #0
	bl FUN_021AC448
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021C2CCC:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021C2CD4: .word 0x00000000
_021C2CD8: .word 0x0000038F
	thumb_func_end FUN_021C2C04
_021C2CDC:
	.byte 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x78, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C2CE8
FUN_021C2CE8: ; 0x021C2CE8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C2D14
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #2
	bl FUN_021C3698
_021C2D14:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021C2CE8

	thumb_func_start FUN_021C2D18
FUN_021C2D18: ; 0x021C2D18
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C2D44
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #2
	bl FUN_021C3698
_021C2D44:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021C2D18

	thumb_func_start FUN_021C2D48
FUN_021C2D48: ; 0x021C2D48
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C2D7A
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #2
	bl FUN_021C370C
	cmp r0, #0
	beq _021C2D7A
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C2D7A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C2D48

	thumb_func_start FUN_021C2D7C
FUN_021C2D7C: ; 0x021C2D7C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C2DD6
	adds r0, r7, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #6]
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021C2860
	strh r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0xe3
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C2DD6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C2D7C
_021C2DD8:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x68, 0x8B, 0x1D, 0x02, 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C2DF0
FUN_021C2DF0: ; 0x021C2DF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C2E6C
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #0xe
	bl FUN_021BB1F4
	str r0, [sp, #4]
	ldr r0, [sp]
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r1, [sp, #4]
	strb r5, [r4, #6]
	adds r0, r1, #0
	muls r0, r7, r0
	movs r1, #0x64
	blx FUN_0208D894
	strh r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0xe3
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C2E6C:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C2DF0
_021C2E70:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC8, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C2E7C
FUN_021C2E7C: ; 0x021C2E7C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0
	str r4, [sp]
	bl FUN_021C3020
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C2E7C

	thumb_func_start FUN_021C2E8C
FUN_021C2E8C: ; 0x021C2E8C
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2E9E
	movs r4, #0
	str r4, [sp]
	bl FUN_021C3020
_021C2E9E:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2E8C
_021C2EA4:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF0, 0x8C, 0x1D, 0x02

	thumb_func_start FUN_021C2EB0
FUN_021C2EB0: ; 0x021C2EB0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021C3020
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C2EB0

	thumb_func_start FUN_021C2EC0
FUN_021C2EC0: ; 0x021C2EC0
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2ED2
	movs r4, #1
	str r4, [sp]
	bl FUN_021C3020
_021C2ED2:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2EC0
_021C2ED8:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x18, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C2EE4
FUN_021C2EE4: ; 0x021C2EE4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021C3020
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C2EE4

	thumb_func_start FUN_021C2EF4
FUN_021C2EF4: ; 0x021C2EF4
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2F06
	movs r4, #2
	str r4, [sp]
	bl FUN_021C3020
_021C2F06:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2EF4
_021C2F0C:
	.byte 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x40, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C2F18
FUN_021C2F18: ; 0x021C2F18
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021C3020
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C2F18

	thumb_func_start FUN_021C2F28
FUN_021C2F28: ; 0x021C2F28
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2F3A
	movs r4, #3
	str r4, [sp]
	bl FUN_021C3020
_021C2F3A:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2F28
_021C2F40:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C2F4C
FUN_021C2F4C: ; 0x021C2F4C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021C3020
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C2F4C

	thumb_func_start FUN_021C2F5C
FUN_021C2F5C: ; 0x021C2F5C
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C2F6E
	movs r4, #4
	str r4, [sp]
	bl FUN_021C3020
_021C2F6E:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C2F5C

	thumb_func_start FUN_021C2F74
FUN_021C2F74: ; 0x021C2F74
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _021C2FA6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C2FA6
	movs r0, #1
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #2
	bl FUN_021C3698
_021C2FA6:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2F74

	thumb_func_start FUN_021C2FAC
FUN_021C2FAC: ; 0x021C2FAC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _021C2FDE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C2FDE
	movs r0, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #2
	bl FUN_021C3698
_021C2FDE:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2FAC

	thumb_func_start FUN_021C2FE4
FUN_021C2FE4: ; 0x021C2FE4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _021C301C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C301C
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl FUN_021C370C
	cmp r0, #0
	beq _021C301C
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C301C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C2FE4

	thumb_func_start FUN_021C3020
FUN_021C3020: ; 0x021C3020
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r0, [r3]
	adds r6, r1, #0
	adds r5, r2, #0
	str r3, [sp, #4]
	cmp r0, #0
	bne _021C30D4
	movs r0, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C30D4
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	movs r1, #2
	strb r5, [r4, #6]
	bl FUN_021C2860
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0xe3
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r7, #0
	bl FUN_021BB084
	ldr r1, [sp, #0x20]
	bl FUN_0201DA90
	movs r1, #5
	subs r1, r1, #6
	cmp r0, r1
	bne _021C30CE
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r2, r4, #0
	strb r5, [r4, #0xf]
	movs r0, #6
	adds r1, r7, #0
	adds r2, #8
	str r0, [r4, #4]
	bl FUN_021BD614
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C30CE:
	ldr r0, [sp, #4]
	movs r1, #1
	str r1, [r0]
_021C30D4:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C3020
_021C30D8:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x90, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C30E4
FUN_021C30E4: ; 0x021C30E4
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #1
	movs r3, #1
	bl FUN_021C3250
	pop {r3, pc}
	thumb_func_end FUN_021C30E4
_021C30F4:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB8, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C3100
FUN_021C3100: ; 0x021C3100
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #2
	movs r3, #1
	bl FUN_021C3250
	pop {r3, pc}
	thumb_func_end FUN_021C3100
_021C3110:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x8D, 0x1D, 0x02

	thumb_func_start FUN_021C311C
FUN_021C311C: ; 0x021C311C
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #5
	movs r3, #1
	bl FUN_021C3250
	pop {r3, pc}
	thumb_func_end FUN_021C311C
_021C312C:
	.byte 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x08, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C3138
FUN_021C3138: ; 0x021C3138
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #3
	movs r3, #1
	bl FUN_021C3250
	pop {r3, pc}
	thumb_func_end FUN_021C3138
_021C3148:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x30, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C3154
FUN_021C3154: ; 0x021C3154
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #4
	movs r3, #1
	bl FUN_021C3250
	pop {r3, pc}
	thumb_func_end FUN_021C3154
_021C3164:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x58, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C3170
FUN_021C3170: ; 0x021C3170
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C31E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #9
	movs r6, #9
	bl FUN_021BB41C
	cmp r0, #0
	bne _021C31E0
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C31E4 ; =0x000003E9
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r6, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C31E0:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C31E4: .word 0x000003E9
	thumb_func_end FUN_021C3170
_021C31E8:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x80, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C31F4
FUN_021C31F4: ; 0x021C31F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	str r1, [sp]
	adds r0, r1, #0
	ldr r1, [sp, #4]
	bl FUN_021AB874
	str r0, [sp, #8]
	ldr r0, [sp]
	movs r1, #5
	bl FUN_021ABCA0
	adds r7, r0, #0
	movs r4, #0
	movs r5, #0
_021C3214:
	ldr r0, _021C324C ; =0x021D8428
	movs r2, #1
	ldrb r6, [r0, r4]
	ldr r0, [sp, #8]
	adds r1, r6, #0
	bl FUN_021BB554
	cmp r0, #0
	beq _021C322A
	strb r6, [r7, r5]
	adds r5, r5, #1
_021C322A:
	adds r4, r4, #1
	cmp r4, #5
	blo _021C3214
	cmp r5, #0
	beq _021C3248
	adds r0, r5, #0
	bl FUN_021BD100
	adds r2, r0, #0
	ldrb r2, [r7, r2]
	ldr r0, [sp]
	ldr r1, [sp, #4]
	movs r3, #2
	bl FUN_021C3250
_021C3248:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021C324C: .word 0x021D8428
	thumb_func_end FUN_021C31F4

	thumb_func_start FUN_021C3250
FUN_021C3250: ; 0x021C3250
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3280
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r6, [r1, #4]
	strb r7, [r1, #0xc]
	movs r0, #1
	strb r0, [r1, #0xf]
	adds r0, r5, #0
	strb r4, [r1, #0x10]
	bl FUN_021AC448
_021C3280:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3250
_021C3284:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x90, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C3290
FUN_021C3290: ; 0x021C3290
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C32D2
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C32D2
	movs r0, #0x38
	bl FUN_021BCFB0
	cmp r0, #3
	ble _021C32D2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C32D2
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C32D2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C3290

	thumb_func_start FUN_021C32D4
FUN_021C32D4: ; 0x021C32D4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C331E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	movs r1, #5
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r0, [sp]
	strb r4, [r6, #6]
	adds r1, r7, #0
	bl FUN_021BD3C8
	strh r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C331E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C32D4
_021C3320:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x20, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C332C
FUN_021C332C: ; 0x021C332C
	push {r4, lr}
	sub sp, #8
	movs r4, #9
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C332C
_021C3340:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C334C
FUN_021C334C: ; 0x021C334C
	push {r4, lr}
	sub sp, #8
	movs r4, #0xa
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C334C
_021C3360:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C336C
FUN_021C336C: ; 0x021C336C
	push {r4, lr}
	sub sp, #8
	movs r4, #0xc
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C336C
_021C3380:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C338C
FUN_021C338C: ; 0x021C338C
	push {r4, lr}
	sub sp, #8
	movs r4, #0xb
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C338C
_021C33A0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C33AC
FUN_021C33AC: ; 0x021C33AC
	push {r4, lr}
	sub sp, #8
	movs r4, #0xe
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C33AC
_021C33C0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C33CC
FUN_021C33CC: ; 0x021C33CC
	push {r4, lr}
	sub sp, #8
	movs r4, #1
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C33CC
_021C33E0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C33EC
FUN_021C33EC: ; 0x021C33EC
	push {r4, lr}
	sub sp, #8
	movs r4, #3
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C33EC
_021C3400:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x90, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C340C
FUN_021C340C: ; 0x021C340C
	push {r4, lr}
	sub sp, #8
	movs r4, #4
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C340C
_021C3420:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C342C
FUN_021C342C: ; 0x021C342C
	push {r4, lr}
	sub sp, #8
	movs r4, #2
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C342C
_021C3440:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C344C
FUN_021C344C: ; 0x021C344C
	push {r4, lr}
	sub sp, #8
	movs r4, #0xd
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C344C
_021C3460:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C346C
FUN_021C346C: ; 0x021C346C
	push {r4, lr}
	sub sp, #8
	movs r4, #6
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C346C
_021C3480:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C348C
FUN_021C348C: ; 0x021C348C
	push {r4, lr}
	sub sp, #8
	movs r4, #5
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C348C
_021C34A0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C34AC
FUN_021C34AC: ; 0x021C34AC
	push {r4, lr}
	sub sp, #8
	movs r4, #7
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C34AC
_021C34C0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C34CC
FUN_021C34CC: ; 0x021C34CC
	push {r4, lr}
	sub sp, #8
	movs r4, #0xf
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C34CC
_021C34E0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF0, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C34EC
FUN_021C34EC: ; 0x021C34EC
	push {r4, lr}
	sub sp, #8
	movs r4, #0x10
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C34EC
_021C3500:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C350C
FUN_021C350C: ; 0x021C350C
	push {r4, lr}
	sub sp, #8
	movs r4, #8
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C350C
_021C3520:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C352C
FUN_021C352C: ; 0x021C352C
	push {r4, lr}
	sub sp, #8
	movs r4, #0
	str r4, [sp]
	movs r4, #1
	str r4, [sp, #4]
	bl FUN_021C3540
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_021C352C

	thumb_func_start FUN_021C3540
FUN_021C3540: ; 0x021C3540
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C359C
	movs r0, #0x16
	bl FUN_021BCFB0
	add r1, sp, #0x10
	ldrb r1, [r1]
	cmp r1, r0
	bne _021C359C
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _021C3570
	movs r0, #0x38
	bl FUN_021BCFB0
	cmp r0, #3
	ble _021C359C
_021C3570:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021C359C
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
	adds r0, r5, #0
	bl FUN_021ABA44
	cmp r0, #0
	bne _021C3598
	movs r0, #1
	str r0, [r6]
_021C3598:
	movs r0, #1
	pop {r4, r5, r6, pc}
_021C359C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C3540

	thumb_func_start FUN_021C35A0
FUN_021C35A0: ; 0x021C35A0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _021C35F0
	adds r0, r4, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C35F0
	adds r0, r5, #0
	movs r1, #0x23
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, #8
	movs r1, #2
	movs r2, #0xdb
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r6, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C35F0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C35A0

	thumb_func_start FUN_021C35F4
FUN_021C35F4: ; 0x021C35F4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C3628
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021C2860
	adds r3, r0, #0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C3698
_021C3628:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C35F4

	thumb_func_start FUN_021C362C
FUN_021C362C: ; 0x021C362C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C3660
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021C2860
	adds r3, r0, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C3698
_021C3660:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C362C

	thumb_func_start FUN_021C3664
FUN_021C3664: ; 0x021C3664
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021C2860
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C370C
	cmp r0, #0
	beq _021C3694
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C3694:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C3664

	thumb_func_start FUN_021C3698
FUN_021C3698: ; 0x021C3698
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C36D8
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _021C36C0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C36DC
	b _021C36CA
_021C36C0:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021C370C
_021C36CA:
	cmp r0, #0
	beq _021C36D8
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C36D8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3698

	thumb_func_start FUN_021C36DC
FUN_021C36DC: ; 0x021C36DC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3708
	movs r0, #0x2e
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _021C3708
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C370C
	pop {r4, r5, r6, pc}
_021C3708:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C36DC

	thumb_func_start FUN_021C370C
FUN_021C370C: ; 0x021C370C
	push {r4, r5, r6, lr}
	adds r5, r2, #0
	bl FUN_021AB874
	movs r1, #0x11
	adds r4, r0, #0
	bl FUN_021BB1F4
	cmp r0, #0x52
	bne _021C3726
	cmp r5, #2
	bls _021C3726
	lsrs r5, r5, #1
_021C3726:
	cmp r5, #0
	bne _021C372C
	movs r5, #1
_021C372C:
	adds r0, r4, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	cmp r0, #1
	bls _021C3752
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BD3B4
	cmp r6, r0
	bhi _021C3752
	movs r0, #1
	pop {r4, r5, r6, pc}
_021C3752:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C370C
_021C3758:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3764
FUN_021C3764: ; 0x021C3764
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C379C
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #4
	bl FUN_021C370C
	cmp r0, #0
	beq _021C379C
	movs r0, #0x11
	adds r1, r7, #0
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C379C
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C379C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3764

	thumb_func_start FUN_021C37A0
FUN_021C37A0: ; 0x021C37A0
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C37EC
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C37F0 ; =0x00000401
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r7]
_021C37EC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C37F0: .word 0x00000401
	thumb_func_end FUN_021C37A0
_021C37F4:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x8E, 0x1D, 0x02

	thumb_func_start FUN_021C3800
FUN_021C3800: ; 0x021C3800
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C3840
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C36DC
	cmp r0, #0
	beq _021C3840
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C3840:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3800

	thumb_func_start FUN_021C3844
FUN_021C3844: ; 0x021C3844
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3864
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C388C
_021C3864:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3844

	thumb_func_start FUN_021C3868
FUN_021C3868: ; 0x021C3868
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0xc
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r0, #6
	beq _021C3888
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021C3844
_021C3888:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3868

	thumb_func_start FUN_021C388C
FUN_021C388C: ; 0x021C388C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021C370C
	cmp r0, #0
	beq _021C38BE
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C38BE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C388C

	thumb_func_start FUN_021C38C0
FUN_021C38C0: ; 0x021C38C0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3922
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #0x22
	str r0, [r4, #4]
	movs r0, #0x78
	bl FUN_021CE254
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021C3924 ; =0x00000404
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C3922:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C3924: .word 0x00000404
	thumb_func_end FUN_021C38C0

	thumb_func_start FUN_021C3928
FUN_021C3928: ; 0x021C3928
	push {r4, lr}
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C3934
	bl FUN_021C38C0
_021C3934:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C3928
_021C3938:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xD0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3944
FUN_021C3944: ; 0x021C3944
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021C3970
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C3944
_021C3954:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3960
FUN_021C3960: ; 0x021C3960
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021C3970
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C3960

	thumb_func_start FUN_021C3970
FUN_021C3970: ; 0x021C3970
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C39D6
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C39D6
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C39D8
	cmp r0, #0
	bne _021C39D6
	movs r0, #0x1a
	bl FUN_021BCFB0
	ldr r1, [sp, #0x18]
	cmp r1, r0
	bne _021C39D6
	adds r0, r7, #0
	bl FUN_021BC918
	movs r0, #3
	bl FUN_021BCFB0
	adds r0, r0, #1
	str r0, [r6]
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r2, [r1, #4]
	movs r0, #2
	orrs r0, r2
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021C39D6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C3970

	thumb_func_start FUN_021C39D8
FUN_021C39D8: ; 0x021C39D8
	bx pc
	nop
	thumb_func_end FUN_021C39D8
_021C39DC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x55, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021C39E8
FUN_021C39E8: ; 0x021C39E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3A7C
	ldr r0, [r4]
	cmp r0, #0
	beq _021C3A7C
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021AB874
	str r0, [sp, #8]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C3A7C
	ldr r0, [sp]
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #0
	movs r1, #7
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #4]
	adds r1, r7, #0
	strb r0, [r4, #6]
	ldr r0, [sp, #8]
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C3A80 ; =0x00000407
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C3A7C:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021C3A80: .word 0x00000407
	thumb_func_end FUN_021C39E8
_021C3A84:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x8F, 0x1D, 0x02

	thumb_func_start FUN_021C3A90
FUN_021C3A90: ; 0x021C3A90
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB5A8
	cmp r0, #0
	beq _021C3AB2
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C3AB2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C3A90

	thumb_func_start FUN_021C3AB4
FUN_021C3AB4: ; 0x021C3AB4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0xc
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r0, #6
	beq _021C3AD4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021C3A90
_021C3AD4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3AB4

	thumb_func_start FUN_021C3AD8
FUN_021C3AD8: ; 0x021C3AD8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3B04
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB5A8
	cmp r0, #0
	beq _021C3B04
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C3B04:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C3AD8

	thumb_func_start FUN_021C3B08
FUN_021C3B08: ; 0x021C3B08
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3B62
	adds r0, r6, #0
	movs r1, #0x12
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r6, #0
	strb r5, [r1, #4]
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C3B64 ; =0x000003F2
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C3B62:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C3B64: .word 0x000003F2
	thumb_func_end FUN_021C3B08

	thumb_func_start FUN_021C3B68
FUN_021C3B68: ; 0x021C3B68
	push {r4, lr}
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C3B74
	bl FUN_021C3B08
_021C3B74:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C3B68
_021C3B78:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x48, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C3B84
FUN_021C3B84: ; 0x021C3B84
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3BB0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BD664
	cmp r0, #0
	beq _021C3BB0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C3BB0:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C3B84

	thumb_func_start FUN_021C3BB4
FUN_021C3BB4: ; 0x021C3BB4
	push {r3, lr}
	movs r3, #0x26
	bl FUN_021C2A04
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C3BB4

	thumb_func_start FUN_021C3BC0
FUN_021C3BC0: ; 0x021C3BC0
	push {r4, lr}
	ldr r4, [r3, #0x18]
	cmp r4, #0
	beq _021C3BCC
	bl FUN_021C3BB4
_021C3BCC:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C3BC0
_021C3BD0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3BDC
FUN_021C3BDC: ; 0x021C3BDC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3C2C
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021C2860
	movs r1, #0x64
	subs r0, r1, r0
	beq _021C3C0C
	lsls r0, r0, #0xc
	blx FUN_0208D3E8
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021C3C1A
_021C3C0C:
	lsls r0, r0, #0xc
	blx FUN_0208D3E8
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021C3C1A:
	blx FUN_0208DA78
	movs r1, #0x64
	blx FUN_0208D688
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C3C2C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3BDC
_021C3C30:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3C3C
FUN_021C3C3C: ; 0x021C3C3C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3C54
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C3C54:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3C3C
_021C3C58:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x00, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C3C64
FUN_021C3C64: ; 0x021C3C64
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C3CA4
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021C2838
	cmp r0, #0
	beq _021C3CA4
	movs r0, #0x11
	adds r1, r7, #0
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C3CA4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C28AC
_021C3CA4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C3C64

	thumb_func_start FUN_021C3CA8
FUN_021C3CA8: ; 0x021C3CA8
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3CF4
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C3CF8 ; =0x00000401
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r7]
_021C3CF4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C3CF8: .word 0x00000401
	thumb_func_end FUN_021C3CA8
_021C3CFC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x58, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C3D08
FUN_021C3D08: ; 0x021C3D08
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3D1E
	movs r0, #0x11
	movs r1, #0
	bl FUN_021BCF10
_021C3D1E:
	pop {r4, pc}
	thumb_func_end FUN_021C3D08
_021C3D20:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C3D2C
FUN_021C3D2C: ; 0x021C3D2C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3D58
	movs r0, #0x25
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C3D58
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x26
	bl FUN_021BCF10
_021C3D58:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3D2C

	thumb_func_start FUN_021C3D5C
FUN_021C3D5C: ; 0x021C3D5C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3D84
	adds r0, r4, #0
	movs r1, #0x2b
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #4]
	movs r0, #0x64
	strb r0, [r1, #5]
	adds r0, r4, #0
	bl FUN_021AC448
_021C3D84:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3D5C
_021C3D88:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x20, 0x87, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x48, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3DA0
FUN_021C3DA0: ; 0x021C3DA0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3DBE
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C3DBE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C3DA0
_021C3DC0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C3DCC
FUN_021C3DCC: ; 0x021C3DCC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3DF0
	movs r0, #0x2c
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r1, r1, #1
	lsls r1, r1, #0x18
	movs r0, #0x2c
	lsrs r1, r1, #0x18
	bl FUN_021BCF10
_021C3DF0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C3DCC
_021C3DF4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C3E00
FUN_021C3E00: ; 0x021C3E00
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3E36
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	cmp r0, #0x71
	bne _021C3E36
	movs r0, #0x2c
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r1, r1, #2
	lsls r1, r1, #0x18
	movs r0, #0x2c
	lsrs r1, r1, #0x18
	bl FUN_021BCF10
_021C3E36:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C3E00
_021C3E38:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C3E44
FUN_021C3E44: ; 0x021C3E44
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3E7A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	cmp r0, #0x53
	bne _021C3E7A
	movs r0, #0x2c
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r1, r1, #2
	lsls r1, r1, #0x18
	movs r0, #0x2c
	lsrs r1, r1, #0x18
	bl FUN_021BCF10
_021C3E7A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C3E44
_021C3E7C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x98, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C3E88
FUN_021C3E88: ; 0x021C3E88
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3EC2
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C3EC2
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C3EC2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C3E88
_021C3EC4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x38, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C3ED0
FUN_021C3ED0: ; 0x021C3ED0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3F24
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021C2860
	movs r1, #0x64
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	beq _021C3F04
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021C3F12
_021C3F04:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021C3F12:
	blx FUN_0208DA78
	movs r1, #0x64
	blx FUN_0208D688
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C3F24:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3ED0
_021C3F28:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA8, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C3F34
FUN_021C3F34: ; 0x021C3F34
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #3
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3F64
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021C3F64
	adds r0, r4, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x31
	bl FUN_021BCF58
_021C3F64:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3F34
_021C3F68:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x50, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C3F74
FUN_021C3F74: ; 0x021C3F74
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #3
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C3FA4
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #2
	bne _021C3FA4
	adds r0, r4, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x31
	bl FUN_021BCF58
_021C3FA4:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C3F74
_021C3FA8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C3FB4
FUN_021C3FB4: ; 0x021C3FB4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C3FF2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021C3FF4 ; =0x0000016E
	cmp r0, r1
	bne _021C3FF2
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #2
	bne _021C3FF2
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021C3FF2:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021C3FF4: .word 0x0000016E
	thumb_func_end FUN_021C3FB4
_021C3FF8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x60, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4004
FUN_021C4004: ; 0x021C4004
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C403A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021C403C ; =0x0000016E
	cmp r0, r1
	bne _021C403A
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C403A
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C403A:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C403C: .word 0x0000016E
	thumb_func_end FUN_021C4004
_021C4040:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x18, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C404C
FUN_021C404C: ; 0x021C404C
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C408C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC84
	cmp r0, #0x84
	bne _021C408C
	adds r0, r4, #0
	bl FUN_021BC594
	cmp r0, #0
	bne _021C408C
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #1
	bne _021C408C
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C408C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C404C
_021C4090:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C409C
FUN_021C409C: ; 0x021C409C
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C40D2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC84
	cmp r0, #0x84
	bne _021C40D2
	adds r0, r4, #0
	bl FUN_021BC594
	cmp r0, #0
	bne _021C40D2
	movs r0, #0x35
	lsls r1, r6, #0xc
	bl FUN_021BCF58
_021C40D2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C409C
_021C40D4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C40E0
FUN_021C40E0: ; 0x021C40E0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C411A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	movs r1, #0x5f
	lsls r1, r1, #2
	subs r0, r0, r1
	cmp r0, #1
	bhi _021C411A
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C411A
	movs r0, #0x35
	lsls r1, r6, #0xb
	bl FUN_021BCF58
_021C411A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C40E0

	thumb_func_start FUN_021C411C
FUN_021C411C: ; 0x021C411C
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4156
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	movs r1, #0x5f
	lsls r1, r1, #2
	subs r0, r0, r1
	cmp r0, #1
	bhi _021C4156
	movs r0, #0x1a
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C4156
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C4156:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C411C
_021C4158:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x68, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4164
FUN_021C4164: ; 0x021C4164
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C41A2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	subs r0, #0x68
	cmp r0, #1
	bhi _021C41A2
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021C41A2
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021C41A2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C4164
_021C41A4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C41B0
FUN_021C41B0: ; 0x021C41B0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C41DA
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #1
	bne _021C41DA
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C41DA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C41B0
_021C41DC:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xB0, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C41E8
FUN_021C41E8: ; 0x021C41E8
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4212
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0202176C
	cmp r0, #2
	bne _021C4212
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C4212:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C41E8
_021C4214:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC8, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C4220
FUN_021C4220: ; 0x021C4220
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4238
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C4238:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C4220

	thumb_func_start FUN_021C423C
FUN_021C423C: ; 0x021C423C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4280
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #0xa5
	beq _021C4280
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #0x1b
	str r0, [r4, #4]
	adds r0, r7, #0
	bl FUN_021CE254
	str r0, [r4, #8]
	movs r0, #2
	strb r0, [r4, #0x10]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4280:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C423C

	thumb_func_start FUN_021C4284
FUN_021C4284: ; 0x021C4284
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C42B2
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x1b
	str r0, [r1, #4]
	strb r4, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	adds r0, r5, #0
	bl FUN_021AC448
_021C42B2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C4284
_021C42B4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C42C0
FUN_021C42C0: ; 0x021C42C0
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C42F2
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB388
	cmp r0, #0
	beq _021C42EE
	movs r0, #0x3a
	movs r1, #3
	bl FUN_021BCF10
	str r0, [r4]
	pop {r4, r5, r6, pc}
_021C42EE:
	movs r0, #0
	str r0, [r4]
_021C42F2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C42C0

	thumb_func_start FUN_021C42F4
FUN_021C42F4: ; 0x021C42F4
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C434A
	ldr r0, [r4]
	cmp r0, #0
	beq _021C434A
	adds r0, r6, #0
	movs r1, #0x23
	adds r2, r5, #0
	bl FUN_021AC424
	adds r7, r0, #0
	ldr r2, _021C434C ; =0x000003EF
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r7, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r4]
_021C434A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C434C: .word 0x000003EF
	thumb_func_end FUN_021C42F4
_021C4350:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C435C
FUN_021C435C: ; 0x021C435C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #4
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4396
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r7, #0
	bl FUN_021C2838
	cmp r0, #0
	beq _021C4392
	movs r0, #0x3a
	movs r1, #3
	bl FUN_021BCF10
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021C4392:
	movs r0, #0
	str r0, [r4]
_021C4396:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C435C

	thumb_func_start FUN_021C4398
FUN_021C4398: ; 0x021C4398
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C43C0
	ldr r0, [r4]
	cmp r0, #0
	beq _021C43C0
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021C28AC
	movs r0, #0
	str r0, [r4]
_021C43C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C4398

	thumb_func_start FUN_021C43C4
FUN_021C43C4: ; 0x021C43C4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C440A
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C440C ; =0x000003EF
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C440A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C440C: .word 0x000003EF
	thumb_func_end FUN_021C43C4
_021C4410:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C441C
FUN_021C441C: ; 0x021C441C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4444
	movs r0, #0x38
	bl FUN_021BCFB0
	cmp r0, #3
	ble _021C4444
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C4444:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C441C
_021C4448:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C4454
FUN_021C4454: ; 0x021C4454
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C44A4
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #7
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #6]
	adds r0, r7, #0
	movs r1, #0xa
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C44A8 ; =0x000003F5
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C44A4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C44A8: .word 0x000003F5
	thumb_func_end FUN_021C4454

	thumb_func_start FUN_021C44AC
FUN_021C44AC: ; 0x021C44AC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C44CA
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C44CA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C44AC
_021C44CC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x80, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C44D8
FUN_021C44D8: ; 0x021C44D8
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4572
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021C4574
	cmp r0, #0
	bne _021C4572
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r6, r0, #0
	bl FUN_021BBFDC
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #1
	blo _021C4572
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r6, #0
	bl FUN_021BBFE8
	cmp r5, r0
	bne _021C4572
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021C2860
	muls r0, r4, r0
	adds r0, #0x64
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc8
	bls _021C453C
	movs r0, #0xc8
_021C453C:
	cmp r0, #0
	beq _021C4552
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021C4560
_021C4552:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021C4560:
	blx FUN_0208DA78
	movs r1, #0x64
	blx FUN_0208D688
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C4572:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C44D8

	thumb_func_start FUN_021C4574
FUN_021C4574: ; 0x021C4574
	bx pc
	nop
	thumb_func_end FUN_021C4574
_021C4578:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x55, 0xCA, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x48, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4590
FUN_021C4590: ; 0x021C4590
	push {r3, r4, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C45C2
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #8
	bne _021C45C2
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	add r0, sp, #0
	movs r1, #8
	bl FUN_021CE51C
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021C45C2:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C4590
_021C45C8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xF0, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C45D4
FUN_021C45D4: ; 0x021C45D4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #3
	str r1, [sp]
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C464C
	movs r0, #0x4d
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C464C
	movs r0, #0x32
	bl FUN_021BCFB0
	adds r4, r0, #0
	beq _021C464C
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021C2860
	adds r1, r0, #0
	adds r0, r4, #0
	blx FUN_0208D894
	adds r6, r0, #0
	bne _021C4610
	movs r6, #1
_021C4610:
	ldr r0, [sp]
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #6]
	ldr r2, _021C4650 ; =0x00000392
	adds r0, #8
	movs r1, #2
	strh r6, [r4, #4]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021AC448
_021C464C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C4650: .word 0x00000392
	thumb_func_end FUN_021C45D4
_021C4654:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4660
FUN_021C4660: ; 0x021C4660
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C46A0
	movs r0, #0x53
	bl FUN_021BCFB0
	cmp r0, #1
	bhi _021C46A0
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	add r0, sp, #0
	bl FUN_021CE4D0
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021C46A0:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021C4660
_021C46A4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C46B0
FUN_021C46B0: ; 0x021C46B0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C46DC
	movs r0, #0x12
	bl FUN_021BCFB0
	ldr r1, _021C46E0 ; =0x000001FB
	cmp r0, r1
	beq _021C46DC
	movs r0, #0x51
	movs r1, #1
	movs r5, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C46DC
	str r5, [r4]
_021C46DC:
	pop {r3, r4, r5, pc}
	nop
_021C46E0: .word 0x000001FB
	thumb_func_end FUN_021C46B0

	thumb_func_start FUN_021C46E4
FUN_021C46E4: ; 0x021C46E4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4708
	ldr r0, [r4]
	cmp r0, #0
	beq _021C4708
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021C28AC
_021C4708:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C46E4

	thumb_func_start FUN_021C470C
FUN_021C470C: ; 0x021C470C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C4752
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C4754 ; =0x000003FE
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4752:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C4754: .word 0x000003FE
	thumb_func_end FUN_021C470C
_021C4758:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C4764
FUN_021C4764: ; 0x021C4764
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C47AC
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB388
	cmp r0, #0
	bne _021C47AC
	adds r0, r4, #0
	movs r1, #0
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5, #4]
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	str r0, [r5, #4]
	adds r0, r6, #0
	bl FUN_021BC918
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C47AC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C4764

	thumb_func_start FUN_021C47B0
FUN_021C47B0: ; 0x021C47B0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C481A
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	str r0, [sp]
	bl FUN_021BB388
	cmp r0, #0
	bne _021C481A
	adds r0, r6, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	strb r5, [r4, #6]
	movs r1, #0x10
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C481C ; =0x00000392
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C481A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C481C: .word 0x00000392
	thumb_func_end FUN_021C47B0
_021C4820:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x78, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C482C
FUN_021C482C: ; 0x021C482C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4910
	adds r0, r6, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021C4910
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	str r0, [sp]
	bl FUN_021BB03C
	movs r1, #3
	bl FUN_021CE5A4
	cmp r0, #0
	beq _021C48B0
	adds r0, r6, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r7, #0
	movs r1, #2
	strb r5, [r4, #6]
	bl FUN_021C2860
	adds r1, r0, #0
	ldr r0, [sp]
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C4914 ; =0x00000392
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C48B0:
	adds r0, r6, #0
	movs r1, #7
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	strb r5, [r4, #6]
	movs r1, #8
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	ldrb r1, [r4, #7]
	movs r0, #2
	orrs r0, r1
	strb r0, [r4, #7]
	ldr r0, _021C4918 ; =0x0000025F
	adds r1, r5, #0
	strh r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021ABB90
	strb r0, [r4, #0xa]
	movs r0, #6
	strb r0, [r4, #0xb]
	adds r0, r4, #0
	ldr r2, _021C491C ; =0x0000040E
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4910:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C4914: .word 0x00000392
_021C4918: .word 0x0000025F
_021C491C: .word 0x0000040E
	thumb_func_end FUN_021C482C
_021C4920:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C492C
FUN_021C492C: ; 0x021C492C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #4
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C49A4
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #7
	bne _021C49A4
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x1f
	beq _021C49A4
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #7
	str r0, [r4, #4]
	adds r0, r7, #0
	bl FUN_021CE21C
	str r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0xd]
	adds r0, r4, #0
	ldr r2, _021C49A8 ; =0x0000014A
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C49A4:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C49A8: .word 0x0000014A
	thumb_func_end FUN_021C492C
_021C49AC:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xC0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C49B8
FUN_021C49B8: ; 0x021C49B8
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C4A14
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C4A14
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021C4A14
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	bne _021C4A14
	adds r0, r5, #0
	movs r1, #0x24
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021C4A14:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C49B8

	thumb_func_start FUN_021C4A18
FUN_021C4A18: ; 0x021C4A18
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4A9C
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #7
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r7, #0
	movs r1, #2
	strb r5, [r4, #6]
	bl FUN_021C2860
	adds r1, r0, #0
	ldr r0, [sp]
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	ldrb r1, [r4, #7]
	movs r0, #2
	orrs r0, r1
	strb r0, [r4, #7]
	ldr r0, _021C4AA0 ; =0x0000025F
	adds r1, r5, #0
	strh r0, [r4, #8]
	adds r0, r6, #0
	bl FUN_021ABB90
	strb r0, [r4, #0xa]
	movs r0, #6
	strb r0, [r4, #0xb]
	adds r0, r4, #0
	ldr r2, _021C4AA4 ; =0x0000040E
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4A9C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C4AA0: .word 0x0000025F
_021C4AA4: .word 0x0000040E
	thumb_func_end FUN_021C4A18
_021C4AA8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x50, 0x84, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x84, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x18, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x78, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C4AF0
FUN_021C4AF0: ; 0x021C4AF0
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4B08
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C4B08:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C4AF0
_021C4B0C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x90, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x40, 0x85, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x84, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x90, 0x84, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x58, 0x85, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x85, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA8, 0x85, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x58, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB8, 0x84, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x85, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x38, 0x86, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x38, 0x84, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x98, 0x85, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x85, 0x1D, 0x02
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x84, 0x1D, 0x02, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C4BD8
FUN_021C4BD8: ; 0x021C4BD8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4BF6
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x35
	bl FUN_021BCF58
_021C4BF6:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C4BD8
_021C4BF8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xC0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C4C04
FUN_021C4C04: ; 0x021C4C04
	push {r3, lr}
	bl FUN_021CE0F8
	pop {r3, pc}
	thumb_func_end FUN_021C4C04

	thumb_func_start FUN_021C4C0C
FUN_021C4C0C: ; 0x021C4C0C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021CE11C
	cmp r0, #0
	beq _021C4C5A
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0xfb
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	ldr r1, _021C4C5C ; =0x0000056A
	adds r0, r4, #4
	bl FUN_021AC40C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4C5A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C4C5C: .word 0x0000056A
	thumb_func_end FUN_021C4C0C
_021C4C60:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C4C6C
FUN_021C4C6C: ; 0x021C4C6C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4C84
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABF88
_021C4C84:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C4C6C
_021C4C88:
	.byte 0x01, 0x4B, 0x08, 0x1C, 0x11, 0x1C, 0x18, 0x47
	.byte 0x89, 0xBF, 0x1A, 0x02, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4CA0
FUN_021C4CA0: ; 0x021C4CA0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4CDC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021C4CE0 ; =0x000001E7
	cmp r0, r1
	bne _021C4CDC
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf
	beq _021C4CD4
	cmp r0, #7
	bne _021C4CDC
_021C4CD4:
	ldr r1, _021C4CE4 ; =0x00001333
	movs r0, #0x31
	bl FUN_021BCF58
_021C4CDC:
	pop {r3, r4, r5, pc}
	nop
_021C4CE0: .word 0x000001E7
_021C4CE4: .word 0x00001333
	thumb_func_end FUN_021C4CA0
_021C4CE8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x20, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4CF4
FUN_021C4CF4: ; 0x021C4CF4
	push {r3, lr}
	movs r3, #3
	bl FUN_021C4D48
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4CF4
_021C4D00:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4D0C
FUN_021C4D0C: ; 0x021C4D0C
	push {r3, lr}
	movs r3, #4
	bl FUN_021C4D48
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4D0C
_021C4D18:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xE0, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4D24
FUN_021C4D24: ; 0x021C4D24
	push {r3, lr}
	movs r3, #1
	bl FUN_021C4D48
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4D24
_021C4D30:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4D3C
FUN_021C4D3C: ; 0x021C4D3C
	push {r3, lr}
	movs r3, #2
	bl FUN_021C4D48
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4D3C

	thumb_func_start FUN_021C4D48
FUN_021C4D48: ; 0x021C4D48
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4D74
	movs r0, #0x39
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4D74
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021C2860
	adds r1, r0, #0
	movs r0, #0x24
	bl FUN_021BCF10
_021C4D74:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C4D48
_021C4D78:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x40, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C4D84
FUN_021C4D84: ; 0x021C4D84
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C4DAE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	cmp r0, #0x19
	bne _021C4DAE
	movs r1, #2
	movs r0, #0x35
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021C4DAE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C4D84

	thumb_func_start FUN_021C4DB0
FUN_021C4DB0: ; 0x021C4DB0
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C4DEA
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #0xf]
	movs r0, #1
	str r0, [r4, #4]
	bl FUN_021BD56C
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4DEA:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C4DB0
_021C4DF0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C4DFC
FUN_021C4DFC: ; 0x021C4DFC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4E58
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #5
	str r0, [r4, #4]
	bl FUN_021CE2D8
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #2
	movs r2, #0xf0
	strb r5, [r4, #0xf]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4E58:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C4DFC

	thumb_func_start FUN_021C4E5C
FUN_021C4E5C: ; 0x021C4E5C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C4E96
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #0xf]
	movs r0, #5
	str r0, [r4, #4]
	bl FUN_021CE2D8
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4E96:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C4E5C
_021C4E9C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x60, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C4EA8
FUN_021C4EA8: ; 0x021C4EA8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C4F0C
	adds r0, r7, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	str r0, [r4, #4]
	bl FUN_021BD56C
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xc]
	strb r5, [r4, #0xf]
	adds r0, r6, #0
	bl FUN_021BC8F8
	str r0, [r4, #0x1c]
	adds r0, r4, #0
	ldr r2, _021C4F10 ; =0x00000102
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4F0C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C4F10: .word 0x00000102
	thumb_func_end FUN_021C4EA8

	thumb_func_start FUN_021C4F14
FUN_021C4F14: ; 0x021C4F14
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C4F4E
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #0xf]
	movs r0, #4
	str r0, [r4, #4]
	bl FUN_021BD56C
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C4F4E:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C4F14
_021C4F54:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB8, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4F60
FUN_021C4F60: ; 0x021C4F60
	push {r3, lr}
	movs r3, #6
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4F60
_021C4F6C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xC0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4F78
FUN_021C4F78: ; 0x021C4F78
	push {r3, lr}
	movs r3, #4
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4F78
_021C4F84:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4F90
FUN_021C4F90: ; 0x021C4F90
	push {r3, lr}
	movs r3, #5
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4F90
_021C4F9C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x40, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4FA8
FUN_021C4FA8: ; 0x021C4FA8
	push {r3, lr}
	movs r3, #0xb
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4FA8
_021C4FB4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x78, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4FC0
FUN_021C4FC0: ; 0x021C4FC0
	push {r3, lr}
	movs r3, #0x10
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4FC0
_021C4FCC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C4FD8
FUN_021C4FD8: ; 0x021C4FD8
	push {r3, lr}
	movs r3, #1
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4FD8
_021C4FE4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C4FF0
FUN_021C4FF0: ; 0x021C4FF0
	push {r3, lr}
	movs r3, #0xc
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C4FF0
_021C4FFC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x88, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C5008
FUN_021C5008: ; 0x021C5008
	push {r3, lr}
	movs r3, #8
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5008
_021C5014:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x08, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5020
FUN_021C5020: ; 0x021C5020
	push {r3, lr}
	movs r3, #0xa
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5020
_021C502C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x10, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5038
FUN_021C5038: ; 0x021C5038
	push {r3, lr}
	movs r3, #2
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5038
_021C5044:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C5050
FUN_021C5050: ; 0x021C5050
	push {r3, lr}
	movs r3, #3
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5050

	thumb_func_start FUN_021C505C
FUN_021C505C: ; 0x021C505C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5096
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #0xf]
	movs r0, #5
	str r0, [r4, #4]
	bl FUN_021BD56C
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C5096:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C505C
_021C509C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x70, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C50A8
FUN_021C50A8: ; 0x021C50A8
	push {r3, lr}
	movs r3, #0xe
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C50A8
_021C50B4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C50C0
FUN_021C50C0: ; 0x021C50C0
	push {r3, lr}
	movs r3, #7
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C50C0
_021C50CC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x48, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C50D8
FUN_021C50D8: ; 0x021C50D8
	push {r3, lr}
	movs r3, #0xd
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C50D8
_021C50E4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA8, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C50F0
FUN_021C50F0: ; 0x021C50F0
	push {r3, lr}
	movs r3, #9
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C50F0
_021C50FC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xA0, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C5108
FUN_021C5108: ; 0x021C5108
	push {r3, lr}
	movs r3, #0xf
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5108
_021C5114:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C5120
FUN_021C5120: ; 0x021C5120
	push {r3, lr}
	movs r3, #0
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5120
_021C512C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x20, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C5138
FUN_021C5138: ; 0x021C5138
	push {r3, lr}
	movs r3, #0xd
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5138
_021C5144:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC8, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C5150
FUN_021C5150: ; 0x021C5150
	push {r3, lr}
	movs r3, #5
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5150
_021C515C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x08, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C5168
FUN_021C5168: ; 0x021C5168
	push {r3, lr}
	movs r3, #0xa
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5168
_021C5174:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5180
FUN_021C5180: ; 0x021C5180
	push {r3, lr}
	movs r3, #0xa
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5180
_021C518C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xD8, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C5198
FUN_021C5198: ; 0x021C5198
	push {r3, lr}
	movs r3, #0xb
	bl FUN_021C51A4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C5198

	thumb_func_start FUN_021C51A4
FUN_021C51A4: ; 0x021C51A4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C51CE
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C51CE
	adds r0, r6, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x31
	bl FUN_021BCF58
_021C51CE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C51A4
_021C51D0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C51DC
FUN_021C51DC: ; 0x021C51DC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5222
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	movs r1, #0x79
	lsls r1, r1, #2
	cmp r0, r1
	bne _021C5222
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf
	beq _021C5214
	cmp r0, #0xa
	bne _021C5222
_021C5214:
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x31
	bl FUN_021BCF58
_021C5222:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C51DC
_021C5224:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x86, 0x1D, 0x02

	thumb_func_start FUN_021C5230
FUN_021C5230: ; 0x021C5230
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5274
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BAC84
	ldr r1, _021C5278 ; =0x000001E3
	cmp r0, r1
	bne _021C5274
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf
	beq _021C5266
	cmp r0, #8
	bne _021C5274
_021C5266:
	adds r0, r5, #0
	bl FUN_021C2870
	adds r1, r0, #0
	movs r0, #0x31
	bl FUN_021BCF58
_021C5274:
	pop {r4, r5, r6, pc}
	nop
_021C5278: .word 0x000001E3
	thumb_func_end FUN_021C5230
_021C527C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x30, 0x87, 0x1D, 0x02

	thumb_func_start FUN_021C5288
FUN_021C5288: ; 0x021C5288
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C52A0
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C52A0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C5288

	thumb_func_start FUN_021C52A4
FUN_021C52A4: ; 0x021C52A4
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C52BA
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C52BA:
	pop {r4, pc}
	thumb_func_end FUN_021C52A4
_021C52BC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xC8, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C52C8
FUN_021C52C8: ; 0x021C52C8
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C52E0
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C52E0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C52C8
_021C52E4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C52F0
FUN_021C52F0: ; 0x021C52F0
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5316
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABD0C
	cmp r0, #0
	beq _021C5316
	movs r1, #6
	movs r0, #0x35
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C5316:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C52F0
_021C5318:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xD0, 0x84, 0x1D, 0x02

	thumb_func_start FUN_021C5324
FUN_021C5324: ; 0x021C5324
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C53A6
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C53A6
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021C53A6
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #3
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	ldrb r1, [r4, #6]
	adds r0, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021C2860
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r6, #0
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0x6a
	adds r0, #0xc
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C53A6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C5324
_021C53A8:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xF8, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C53B4
FUN_021C53B4: ; 0x021C53B4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C53F8
	adds r0, r7, #0
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021C53F8
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0x66
	adds r0, r4, #4
	adds r1, r7, #0
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C53F8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C53B4

	thumb_func_start FUN_021C53FC
FUN_021C53FC: ; 0x021C53FC
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5412
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C5412:
	pop {r4, pc}
	thumb_func_end FUN_021C53FC

	thumb_func_start FUN_021C5414
FUN_021C5414: ; 0x021C5414
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C5454
	adds r0, r6, #0
	movs r1, #0x20
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #6]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C5458 ; =0x0000019B
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C5454:
	pop {r4, r5, r6, pc}
	nop
_021C5458: .word 0x0000019B
	thumb_func_end FUN_021C5414
_021C545C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x90, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5468
FUN_021C5468: ; 0x021C5468
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r0, r4, #0
	adds r5, r1, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C550E
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB880
	cmp r0, #6
	beq _021C550E
	movs r0, #0x4d
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C550E
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021C550E
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021C550E
	adds r0, r5, #0
	movs r1, #0x23
	adds r2, r4, #0
	bl FUN_021AC424
	ldr r6, _021C5510 ; =0x000001A1
	str r0, [sp]
	adds r0, #8
	movs r1, #2
	adds r2, r6, #0
	bl FUN_021AC3B8
	ldr r0, [sp]
	adds r1, r4, #0
	adds r0, #8
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r7, #0
	adds r0, #8
	bl FUN_021AC3E0
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x2e
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #3
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	ldrb r1, [r4, #7]
	movs r0, #0xf0
	adds r6, #0xeb
	bics r1, r0
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r4, #7]
	adds r0, r5, #0
	adds r1, r4, #0
	strh r6, [r4, #4]
	bl FUN_021AC448
_021C550E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C5510: .word 0x000001A1
	thumb_func_end FUN_021C5468
_021C5514:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5520
FUN_021C5520: ; 0x021C5520
	push {r4, lr}
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021ABA44
	cmp r0, #0
	bne _021C5540
	movs r0, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5540
	movs r0, #0x4b
	movs r1, #1
	bl FUN_021BCF10
_021C5540:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C5520
_021C5544:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x85, 0x1D, 0x02

	thumb_func_start FUN_021C5550
FUN_021C5550: ; 0x021C5550
	push {r3, r4, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5578
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	add r0, sp, #0
	movs r1, #1
	bl FUN_021CE450
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021C5578:
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5550
_021C557C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C5588
FUN_021C5588: ; 0x021C5588
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C55CC
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C55CC
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #0xa
	bne _021C55CC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #3
	movs r2, #1
	bl FUN_021BB554
	cmp r0, #0
	beq _021C55CC
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C55CC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5588

	thumb_func_start FUN_021C55D0
FUN_021C55D0: ; 0x021C55D0
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C55FE
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r2, #1
	strb r2, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #3
	str r0, [r1, #4]
	adds r0, r5, #0
	strb r2, [r1, #0xc]
	bl FUN_021AC448
_021C55FE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C55D0
_021C5600:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C560C
FUN_021C560C: ; 0x021C560C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5650
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C5650
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #0xc
	bne _021C5650
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #1
	movs r2, #1
	bl FUN_021BB554
	cmp r0, #0
	beq _021C5650
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C5650:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C560C

	thumb_func_start FUN_021C5654
FUN_021C5654: ; 0x021C5654
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C5680
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	str r0, [r1, #4]
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
_021C5680:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C5654
_021C5684:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x88, 0x1D, 0x02

	thumb_func_start FUN_021C5690
FUN_021C5690: ; 0x021C5690
	push {r4, r5, r6, lr}
	adds r4, r2, #0
	adds r6, r0, #0
	adds r0, r4, #0
	adds r5, r1, #0
	bl FUN_021CDE78
	cmp r0, #0
	beq _021C56EC
	movs r0, #0x4d
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C56EC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABEF4
	cmp r0, #0
	bne _021C56EC
	adds r0, r5, #0
	bl FUN_021ABF54
	cmp r0, #0
	bne _021C56EC
	adds r0, r5, #0
	bl FUN_021ABE8C
	cmp r0, #0
	bne _021C56EC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021C56EC
	adds r0, r5, #0
	bl FUN_021ABACC
	cmp r0, #0
	beq _021C56EC
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C28AC
_021C56EC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5690

	thumb_func_start FUN_021C56F0
FUN_021C56F0: ; 0x021C56F0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C574A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021C574A
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C574C ; =0x0000019E
	adds r0, r6, #4
	adds r1, r7, #0
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x29
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, #0x54
	strb r4, [r0]
	adds r0, r5, #0
	bl FUN_021AC448
_021C574A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C574C: .word 0x0000019E
	thumb_func_end FUN_021C56F0
_021C5750:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C575C
FUN_021C575C: ; 0x021C575C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #9
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C575C

	thumb_func_start FUN_021C576C
FUN_021C576C: ; 0x021C576C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #9
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C576C
_021C577C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x18, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C5788
FUN_021C5788: ; 0x021C5788
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xa
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5788

	thumb_func_start FUN_021C5798
FUN_021C5798: ; 0x021C5798
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xa
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5798
_021C57A8:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x38, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C57B4
FUN_021C57B4: ; 0x021C57B4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xc
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C57B4

	thumb_func_start FUN_021C57C4
FUN_021C57C4: ; 0x021C57C4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xc
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C57C4
_021C57D4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C57E0
FUN_021C57E0: ; 0x021C57E0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xb
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C57E0

	thumb_func_start FUN_021C57F0
FUN_021C57F0: ; 0x021C57F0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xb
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C57F0
_021C5800:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C580C
FUN_021C580C: ; 0x021C580C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xe
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C580C

	thumb_func_start FUN_021C581C
FUN_021C581C: ; 0x021C581C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xe
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C581C
_021C582C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x10, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5838
FUN_021C5838: ; 0x021C5838
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5838

	thumb_func_start FUN_021C5848
FUN_021C5848: ; 0x021C5848
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5848
_021C5858:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x58, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5864
FUN_021C5864: ; 0x021C5864
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5864

	thumb_func_start FUN_021C5874
FUN_021C5874: ; 0x021C5874
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #3
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5874
_021C5884:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5890
FUN_021C5890: ; 0x021C5890
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5890

	thumb_func_start FUN_021C58A0
FUN_021C58A0: ; 0x021C58A0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #4
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C58A0
_021C58B0:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C58BC
FUN_021C58BC: ; 0x021C58BC
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C58BC

	thumb_func_start FUN_021C58CC
FUN_021C58CC: ; 0x021C58CC
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #2
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C58CC
_021C58DC:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x30, 0x8B, 0x1D, 0x02

	thumb_func_start FUN_021C58E8
FUN_021C58E8: ; 0x021C58E8
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xd
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C58E8

	thumb_func_start FUN_021C58F8
FUN_021C58F8: ; 0x021C58F8
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xd
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C58F8
_021C5908:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x20, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C5914
FUN_021C5914: ; 0x021C5914
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #6
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5914

	thumb_func_start FUN_021C5924
FUN_021C5924: ; 0x021C5924
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #6
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5924
_021C5934:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5940
FUN_021C5940: ; 0x021C5940
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #5
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5940

	thumb_func_start FUN_021C5950
FUN_021C5950: ; 0x021C5950
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #5
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5950
_021C5960:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C596C
FUN_021C596C: ; 0x021C596C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #7
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C596C

	thumb_func_start FUN_021C597C
FUN_021C597C: ; 0x021C597C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #7
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C597C
_021C598C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xD0, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5998
FUN_021C5998: ; 0x021C5998
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xf
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5998

	thumb_func_start FUN_021C59A8
FUN_021C59A8: ; 0x021C59A8
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0xf
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C59A8
_021C59B8:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x50, 0x89, 0x1D, 0x02

	thumb_func_start FUN_021C59C4
FUN_021C59C4: ; 0x021C59C4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0x10
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C59C4

	thumb_func_start FUN_021C59D4
FUN_021C59D4: ; 0x021C59D4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0x10
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C59D4
_021C59E4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB8, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C59F0
FUN_021C59F0: ; 0x021C59F0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #8
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C59F0

	thumb_func_start FUN_021C5A00
FUN_021C5A00: ; 0x021C5A00
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #8
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5A00
_021C5A10:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x8A, 0x1D, 0x02

	thumb_func_start FUN_021C5A1C
FUN_021C5A1C: ; 0x021C5A1C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0
	str r4, [sp]
	bl FUN_021C5A3C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5A1C

	thumb_func_start FUN_021C5A2C
FUN_021C5A2C: ; 0x021C5A2C
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0
	str r4, [sp]
	bl FUN_021C5AEC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021C5A2C

	thumb_func_start FUN_021C5A3C
FUN_021C5A3C: ; 0x021C5A3C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5AD8
	movs r0, #0x16
	bl FUN_021BCFB0
	add r1, sp, #0x18
	ldrb r1, [r1]
	cmp r1, r0
	bne _021C5AD8
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	bl FUN_02021898
	cmp r0, #0
	beq _021C5AD8
	ldr r0, [sp]
	bl FUN_021C5ADC
	cmp r0, #0
	bne _021C5AD8
	adds r0, r5, #0
	bl FUN_021BC8E8
	cmp r0, #0
	bne _021C5AD8
	adds r0, r4, #0
	bl FUN_021ABA44
	cmp r0, #0
	bne _021C5AD8
	adds r0, r5, #0
	bl FUN_021BC8E0
	adds r0, r4, #0
	movs r1, #0x23
	adds r2, r6, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, #8
	movs r1, #1
	movs r2, #0xb6
	bl FUN_021AC3B8
	adds r0, r5, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r6, #0
	adds r0, #8
	bl FUN_021AC3E0
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r6, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7]
_021C5AD8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021C5A3C

	thumb_func_start FUN_021C5ADC
FUN_021C5ADC: ; 0x021C5ADC
	bx pc
	nop
	thumb_func_end FUN_021C5ADC
_021C5AE0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x75, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021C5AEC
FUN_021C5AEC: ; 0x021C5AEC
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C5B26
	movs r0, #0x16
	bl FUN_021BCFB0
	add r1, sp, #0x10
	ldrb r1, [r1]
	cmp r1, r0
	bne _021C5B26
	ldr r0, [r4]
	cmp r0, #1
	beq _021C5B1C
	adds r0, r6, #0
	bl FUN_021ABA44
	cmp r0, #0
	beq _021C5B26
_021C5B1C:
	movs r1, #6
	movs r0, #0x31
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021C5B26:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C5AEC

	thumb_func_start FUN_021C5B28
FUN_021C5B28: ; 0x021C5B28
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C5B42
	ldr r0, [r4]
	cmp r0, #1
	bne _021C5B42
	movs r0, #2
	str r0, [r4]
_021C5B42:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C5B28

	thumb_func_start FUN_021C5B44
FUN_021C5B44: ; 0x021C5B44
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r1, #0
	ldr r3, _021C5BB0 ; =0x021DA0F4
	ldr r1, _021C5BB4 ; =0x00000102
	adds r7, r2, #0
	movs r6, #0
_021C5B52:
	lsls r4, r6, #3
	ldrh r2, [r3, r4]
	cmp r5, r2
	bne _021C5BA2
	bl FUN_021BAC80
	add r2, sp, #0xc
	movs r1, #0
	strb r1, [r2]
	adds r1, r5, #0
	add r2, sp, #0xc
	adds r6, r0, #0
	bl FUN_021C5BBC
	cmp r0, #0
	beq _021C5B9C
	ldr r1, _021C5BB8 ; =0x021DA0F8
	add r0, sp, #0x10
	ldr r1, [r1, r4]
	blx r1
	cmp r0, #0
	beq _021C5B9C
	str r6, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	adds r1, r5, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #0
	movs r2, #0
	adds r3, r7, #0
	bl FUN_021BC75C
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021C5B9C:
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021C5BA2:
	adds r6, r6, #1
	cmp r6, r1
	blo _021C5B52
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021C5BB0: .word 0x021DA0F4
_021C5BB4: .word 0x00000102
_021C5BB8: .word 0x021DA0F8
	thumb_func_end FUN_021C5B44

	thumb_func_start FUN_021C5BBC
FUN_021C5BBC: ; 0x021C5BBC
	push {r3, r4, r5, r6, r7, lr}
	adds r3, r0, #0
	adds r6, r1, #0
	movs r0, #0
	adds r1, r3, #0
	adds r7, r2, #0
	movs r5, #0
	bl FUN_021BCB7C
	adds r4, r0, #0
	beq _021C5BF8
_021C5BD2:
	adds r0, r4, #0
	bl FUN_021BC8F8
	cmp r6, r0
	bne _021C5BE4
	movs r0, #1
	strb r0, [r7]
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C5BE4:
	adds r5, r5, #1
	cmp r5, #8
	bls _021C5BEE
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C5BEE:
	adds r0, r4, #0
	bl FUN_021BCBB0
	adds r4, r0, #0
	bne _021C5BD2
_021C5BF8:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C5BBC

	thumb_func_start FUN_021C5BFC
FUN_021C5BFC: ; 0x021C5BFC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	movs r0, #0
	bl FUN_021BCB7C
	adds r4, r0, #0
	beq _021C5C3C
	movs r7, #6
_021C5C12:
	adds r0, r4, #0
	bl FUN_021BCBB0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BC8F8
	cmp r6, r0
	bne _021C5C36
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BC904
	cmp r0, #0
	bne _021C5C36
	adds r0, r4, #0
	bl FUN_021BC890
_021C5C36:
	adds r4, r5, #0
	cmp r5, #0
	bne _021C5C12
_021C5C3C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C5BFC

	thumb_func_start FUN_021C5C40
FUN_021C5C40: ; 0x021C5C40
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_021BAC80
	adds r1, r4, #0
	bl FUN_021C5C60
	pop {r4, pc}
	thumb_func_end FUN_021C5C40

	thumb_func_start FUN_021C5C50
FUN_021C5C50: ; 0x021C5C50
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _021C5C5A
	movs r0, #1
	bx lr
_021C5C5A:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021C5C50

	thumb_func_start FUN_021C5C60
FUN_021C5C60: ; 0x021C5C60
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0
	adds r1, r5, #0
	bl FUN_021BCB7C
	adds r4, r0, #0
	beq _021C5C9A
	movs r7, #0
_021C5C74:
	adds r0, r4, #0
	bl FUN_021BC8F8
	cmp r6, r0
	bne _021C5C8E
	adds r0, r4, #0
	bl FUN_021BC890
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021BCB7C
	b _021C5C94
_021C5C8E:
	adds r0, r4, #0
	bl FUN_021BCBB0
_021C5C94:
	adds r4, r0, #0
	cmp r4, #0
	bne _021C5C74
_021C5C9A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C5C60

	thumb_func_start FUN_021C5C9C
FUN_021C5C9C: ; 0x021C5C9C
	push {r3, r4, r5, lr}
	bl FUN_021BAC80
	adds r5, r0, #0
	movs r0, #0
	adds r1, r5, #0
	bl FUN_021BCB7C
	cmp r0, #0
	beq _021C5CC2
	movs r4, #0
_021C5CB2:
	bl FUN_021BC890
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BCB7C
	cmp r0, #0
	bne _021C5CB2
_021C5CC2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C5C9C
_021C5CC4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C5CD0
FUN_021C5CD0: ; 0x021C5CD0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	str r2, [sp, #8]
	movs r0, #3
	str r1, [sp, #4]
	bl FUN_021BCFB0
	ldr r1, [sp, #8]
	cmp r1, r0
	bne _021C5D6E
	ldr r0, [sp, #4]
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC88
	str r0, [sp, #0xc]
	movs r5, #0
	movs r6, #0
	cmp r0, #0
	bls _021C5D3E
_021C5CFC:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021BAD00
	adds r7, r0, #0
	ldr r0, [sp]
	bl FUN_021BC8F8
	cmp r7, r0
	beq _021C5D32
	adds r0, r7, #0
	bl FUN_0202174C
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BB054
	cmp r0, #0
	bne _021C5D32
	adds r1, r6, #1
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r6, r1, #0x10
	add r1, sp, #0x10
	strb r7, [r1, r0]
_021C5D32:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [sp, #0xc]
	cmp r5, r0
	blo _021C5CFC
_021C5D3E:
	cmp r6, #0
	beq _021C5D6E
	ldr r0, [sp, #4]
	ldr r2, [sp, #8]
	movs r1, #0x14
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BD100
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	add r0, sp, #0x10
	ldrb r0, [r0, r1]
	bl FUN_021CE570
	strh r0, [r4, #4]
	ldr r0, [sp, #8]
	adds r1, r4, #0
	strb r0, [r4, #6]
	ldr r0, [sp, #4]
	bl FUN_021AC448
_021C5D6E:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C5CD0
_021C5D74:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021C5D80
FUN_021C5D80: ; 0x021C5D80
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5E10
	adds r0, r4, #0
	bl FUN_021ABCF4
	cmp r0, #0x13
	bhi _021C5DD2
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021C5DA6: ; jump table
	.short _021C5DDA - _021C5DA6 - 2 ; case 0
	.short _021C5DCE - _021C5DA6 - 2 ; case 1
	.short _021C5DCE - _021C5DA6 - 2 ; case 2
	.short _021C5DCE - _021C5DA6 - 2 ; case 3
	.short _021C5DD2 - _021C5DA6 - 2 ; case 4
	.short _021C5DDA - _021C5DA6 - 2 ; case 5
	.short _021C5DDE - _021C5DA6 - 2 ; case 6
	.short _021C5DE2 - _021C5DA6 - 2 ; case 7
	.short _021C5DCE - _021C5DA6 - 2 ; case 8
	.short _021C5DCE - _021C5DA6 - 2 ; case 9
	.short _021C5DD6 - _021C5DA6 - 2 ; case 10
	.short _021C5DDE - _021C5DA6 - 2 ; case 11
	.short _021C5DDE - _021C5DA6 - 2 ; case 12
	.short _021C5DE2 - _021C5DA6 - 2 ; case 13
	.short _021C5DD2 - _021C5DA6 - 2 ; case 14
	.short _021C5DCE - _021C5DA6 - 2 ; case 15
	.short _021C5DD2 - _021C5DA6 - 2 ; case 16
	.short _021C5DCE - _021C5DA6 - 2 ; case 17
	.short _021C5DD2 - _021C5DA6 - 2 ; case 18
	.short _021C5DD6 - _021C5DA6 - 2 ; case 19
_021C5DCE:
	movs r0, #4
	b _021C5DE4
_021C5DD2:
	movs r0, #0
	b _021C5DE4
_021C5DD6:
	movs r0, #5
	b _021C5DE4
_021C5DDA:
	movs r0, #0xb
	b _021C5DE4
_021C5DDE:
	movs r0, #0xa
	b _021C5DE4
_021C5DE2:
	movs r0, #0xe
_021C5DE4:
	bl FUN_021CE570
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB03C
	cmp r5, r0
	beq _021C5E10
	adds r0, r4, #0
	movs r1, #0x14
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strh r5, [r1, #4]
	adds r0, r4, #0
	strb r6, [r1, #6]
	bl FUN_021AC448
_021C5E10:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5D80
_021C5E14:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C5E20
FUN_021C5E20: ; 0x021C5E20
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5E86
	movs r0, #1
	movs r7, #1
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021C5E72
	adds r0, r5, #0
	movs r1, #0x1b
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r7, [r4, #4]
	movs r0, #5
	bl FUN_021CE1C0
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021C5E88 ; =0x00000359
	adds r0, #0x10
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C5E72:
	adds r0, r5, #0
	movs r1, #0x1c
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
_021C5E86:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C5E88: .word 0x00000359
	thumb_func_end FUN_021C5E20
_021C5E8C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE8, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021C5E98
FUN_021C5E98: ; 0x021C5E98
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5EEC
	movs r0, #2
	movs r7, #2
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021C5EEC
	adds r0, r5, #0
	movs r1, #0x1b
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r7, [r4, #4]
	movs r0, #5
	bl FUN_021CE1C0
	str r0, [r4, #8]
	ldrh r1, [r4, #0x12]
	movs r0, #0xff
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strh r0, [r4, #0x12]
	movs r0, #0x75
	strh r0, [r4, #0x10]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x35
	adds r2, r6, #0
	bl FUN_021AC434
_021C5EEC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C5E98
_021C5EF0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C5EFC
FUN_021C5EFC: ; 0x021C5EFC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5F3A
	adds r0, r5, #0
	movs r1, #0x1b
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021CE21C
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #1
	movs r2, #0x72
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C5F3A:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5EFC
_021C5F40:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C5F4C
FUN_021C5F4C: ; 0x021C5F4C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C5F8A
	adds r0, r5, #0
	movs r1, #0x1b
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #5
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_021CE21C
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #1
	movs r2, #0x73
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C5F8A:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5F4C
_021C5F90:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x7C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C5F9C
FUN_021C5F9C: ; 0x021C5F9C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6078
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021C5FE8
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #7
	str r0, [r1, #4]
	subs r0, #8
	strb r0, [r1, #0xc]
	movs r0, #1
	strb r0, [r1, #0xe]
	strb r0, [r1, #0xf]
	adds r0, r5, #0
	strb r6, [r1, #0x10]
	bl FUN_021AC448
_021C5FE8:
	adds r0, r5, #0
	movs r1, #0x1a
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0219D35C
	strb r0, [r4, #7]
	movs r0, #3
	strb r0, [r4, #4]
	movs r2, #1
	movs r1, #0
_021C6004:
	adds r0, r4, r2
	adds r2, r2, #1
	strb r1, [r0, #4]
	cmp r2, #3
	blo _021C6004
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C601C
	ldrb r1, [r4, #5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #5]
_021C601C:
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C602A
	ldrb r1, [r4, #5]
	movs r0, #2
	orrs r0, r1
	strb r0, [r4, #5]
_021C602A:
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C6038
	ldrb r1, [r4, #5]
	movs r0, #8
	orrs r0, r1
	strb r0, [r4, #5]
_021C6038:
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C6046
	ldrb r1, [r4, #5]
	movs r0, #4
	orrs r0, r1
	strb r0, [r4, #5]
_021C6046:
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C6054
	ldrb r1, [r4, #5]
	movs r0, #0x40
	orrs r0, r1
	strb r0, [r4, #5]
_021C6054:
	ldrb r0, [r4, #4]
	cmp r0, #1
	bls _021C6062
	ldrb r1, [r4, #5]
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r4, #5]
_021C6062:
	ldrb r0, [r4, #4]
	cmp r0, #2
	bls _021C6070
	ldrb r1, [r4, #6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #6]
_021C6070:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C6078:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C5F9C
_021C607C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x34, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C6088
FUN_021C6088: ; 0x021C6088
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C60A0
	ldr r1, _021C60A4 ; =0x021C6171
	adds r0, r5, #0
	bl FUN_021BCB70
_021C60A0:
	pop {r3, r4, r5, pc}
	nop
_021C60A4: .word 0x021C6171
	thumb_func_end FUN_021C6088

	thumb_func_start FUN_021C60A8
FUN_021C60A8: ; 0x021C60A8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C60BE
	adds r0, r5, #0
	bl FUN_021BCB74
_021C60BE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C60A8

	thumb_func_start FUN_021C60C0
FUN_021C60C0: ; 0x021C60C0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C614E
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_0219D35C
	movs r1, #0
	adds r4, r0, #0
	bl FUN_021C6150
	cmp r0, #0
	bne _021C60F6
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021C6160
	cmp r0, #0
	beq _021C614E
_021C60F6:
	adds r0, r5, #0
	movs r1, #0x1a
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #7]
	movs r0, #3
	strb r0, [r1, #4]
	movs r3, #1
	movs r2, #0
_021C610C:
	adds r0, r1, r3
	adds r3, r3, #1
	strb r2, [r0, #4]
	cmp r3, #3
	blo _021C610C
	ldrb r0, [r1, #4]
	cmp r0, #1
	bls _021C6124
	ldrb r2, [r1, #5]
	movs r0, #1
	orrs r0, r2
	strb r0, [r1, #5]
_021C6124:
	ldrb r0, [r1, #4]
	cmp r0, #1
	bls _021C6132
	ldrb r2, [r1, #5]
	movs r0, #2
	orrs r0, r2
	strb r0, [r1, #5]
_021C6132:
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x3a
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021C614E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C60C0

	thumb_func_start FUN_021C6150
FUN_021C6150: ; 0x021C6150
	bx pc
	nop
	thumb_func_end FUN_021C6150
_021C6154:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF5, 0x8C, 0x89, 0x06

	thumb_func_start FUN_021C6160
FUN_021C6160: ; 0x021C6160
	bx pc
	nop
	thumb_func_end FUN_021C6160
_021C6164:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF5, 0x8C, 0x89, 0x06
	.byte 0x02, 0x2A, 0x05, 0xD1, 0x00, 0xA8, 0x00, 0x88, 0x01, 0x28, 0x01, 0xD8, 0x01, 0x20, 0x70, 0x47
	.byte 0x00, 0x20, 0x70, 0x47, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C6190
FUN_021C6190: ; 0x021C6190
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C61B0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C61B4
_021C61B0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C6190

	thumb_func_start FUN_021C61B4
FUN_021C61B4: ; 0x021C61B4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #2
	bl FUN_021BD3C8
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #7
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r4, [r6, #6]
	ldr r2, _021C61F8 ; =0x00000386
	adds r0, #0xc
	movs r1, #2
	strh r7, [r6, #4]
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #0xc
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C61F8: .word 0x00000386
	thumb_func_end FUN_021C61B4
_021C61FC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xD0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C6208
FUN_021C6208: ; 0x021C6208
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C62D0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	bl FUN_021BC594
	cmp r0, #0
	bne _021C62D0
	movs r0, #6
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	str r0, [sp, #4]
	bl FUN_021BBFE8
	adds r4, r0, #0
	ldr r0, [sp, #4]
	bl FUN_021BBFF8
	cmp r0, r4
	beq _021C6254
	adds r4, r0, #0
_021C6254:
	cmp r4, #0
	beq _021C62D0
	adds r0, r4, #0
	bl FUN_021C62D4
	cmp r0, #0
	bne _021C62D0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021BAFB8
	cmp r0, #4
	bne _021C62D0
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BAFB8
	adds r7, r0, #0
	cmp r7, #4
	beq _021C62D0
	adds r0, r5, #0
	movs r1, #0x25
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #4]
	strb r7, [r1, #5]
	strh r4, [r1, #8]
	movs r0, #0
	strb r0, [r1, #6]
	strb r0, [r1, #7]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r7, r0, #0
	movs r2, #0x2b
	adds r0, r7, #4
	movs r1, #2
	lsls r2, r2, #4
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
_021C62D0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C6208

	thumb_func_start FUN_021C62D4
FUN_021C62D4: ; 0x021C62D4
	bx pc
	nop
	thumb_func_end FUN_021C62D4
_021C62D8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x05, 0xCC, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C62F0
FUN_021C62F0: ; 0x021C62F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C63C6
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	str r0, [sp, #4]
	bl FUN_021BBFE8
	adds r4, r0, #0
	ldr r0, [sp, #4]
	bl FUN_021BBFF8
	cmp r0, r4
	beq _021C6334
	adds r4, r0, #0
_021C6334:
	cmp r4, #0
	beq _021C63C6
	cmp r4, #0xa6
	beq _021C63C6
	cmp r4, #0xa5
	beq _021C63C6
	movs r0, #7
	lsls r0, r0, #6
	str r0, [sp, #8]
	cmp r4, r0
	beq _021C63C6
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021BAF90
	cmp r0, #0
	bne _021C63C6
	adds r0, r7, #0
	bl FUN_021BC594
	cmp r0, #0
	bne _021C63C6
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021BAFB8
	adds r7, r0, #0
	cmp r7, #4
	beq _021C63C6
	adds r0, r5, #0
	movs r1, #0x25
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #4]
	strb r7, [r1, #5]
	strh r4, [r1, #8]
	movs r0, #0
	strb r0, [r1, #6]
	movs r0, #1
	strb r0, [r1, #7]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	ldr r2, [sp, #8]
	adds r7, r0, #0
	adds r2, #0xf0
	adds r0, r7, #4
	movs r1, #2
	str r2, [sp, #8]
	bl FUN_021AC3B8
	adds r0, r7, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
_021C63C6:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C62F0
_021C63CC:
	.byte 0x04, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x3C, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C63D8
FUN_021C63D8: ; 0x021C63D8
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021ABCDC
	cmp r0, #0
	beq _021C63F2
	adds r0, r5, #0
	bl FUN_021ABCDC
	cmp r0, #3
	bne _021C6410
_021C63F2:
	movs r0, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6410
	movs r0, #0x22
	movs r4, #0x22
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C6410
	adds r0, r4, #0
	movs r1, #0x1a
	bl FUN_021BCF10
_021C6410:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C63D8

	thumb_func_start FUN_021C6414
FUN_021C6414: ; 0x021C6414
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6450
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C6454 ; =0x0000029E
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7, #0x18]
_021C6450:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C6454: .word 0x0000029E
	thumb_func_end FUN_021C6414

	thumb_func_start FUN_021C6458
FUN_021C6458: ; 0x021C6458
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021ABCDC
	cmp r0, #0
	beq _021C64D4
	adds r0, r5, #0
	bl FUN_021ABCDC
	cmp r0, #3
	beq _021C64D4
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C64D4
	movs r0, #0x12
	bl FUN_021BCFB0
	ldr r1, _021C64D8 ; =0x000001FB
	cmp r0, r1
	beq _021C64D4
	adds r0, r7, #0
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C64D4
	adds r0, r5, #0
	bl FUN_021ABE8C
	cmp r0, #0
	bne _021C64D4
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021ABE10
	cmp r0, #0
	bne _021C64D4
	movs r0, #4
	adds r1, r4, #0
	bl FUN_021BCF10
_021C64D4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C64D8: .word 0x000001FB
	thumb_func_end FUN_021C6458

	thumb_func_start FUN_021C64DC
FUN_021C64DC: ; 0x021C64DC
	push {r4, lr}
	adds r4, r2, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021C5C60
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C64DC
_021C64F0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021C64FC
FUN_021C64FC: ; 0x021C64FC
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6540
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	adds r4, r0, #0
	cmp r4, #5
	beq _021C6526
	cmp r4, #1
	beq _021C6526
	cmp r4, #4
	bne _021C6540
_021C6526:
	adds r0, r6, #0
	movs r1, #0xb
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r4, [r1, #4]
	strb r5, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r6, #0
	bl FUN_021AC448
_021C6540:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C64FC
_021C6544:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x08, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C6550
FUN_021C6550: ; 0x021C6550
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C65B6
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0x16
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C65B6
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #0xf]
	movs r0, #0x16
	str r0, [r4, #4]
	adds r0, r7, #0
	bl FUN_021BD5F0
	str r0, [r4, #8]
	adds r0, r4, #0
	movs r2, #0xda
	adds r0, #0x14
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C65B6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C6550
_021C65B8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x58, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C65C4
FUN_021C65C4: ; 0x021C65C4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C6624
	adds r0, r5, #0
	movs r1, #0x10
	adds r2, r6, #0
	movs r7, #0x10
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB880
	adds r2, r0, #0
	lsls r1, r7, #7
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	adds r2, r4, #5
	bl FUN_021ABAE8
	strb r0, [r4, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r4, #4
	movs r1, #1
	movs r2, #0x65
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C6624:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C65C4
_021C6628:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xC0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C6634
FUN_021C6634: ; 0x021C6634
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6662
	adds r0, r4, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	adds r0, r5, #4
	movs r1, #1
	movs r2, #0x66
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C6662:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C6634
_021C6664:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x9C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C6670
FUN_021C6670: ; 0x021C6670
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6694
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BD910
	adds r1, r0, #0
	movs r0, #0x1b
	bl FUN_021BCF10
_021C6694:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6670

	thumb_func_start FUN_021C6698
FUN_021C6698: ; 0x021C6698
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C67AA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #7
	str r0, [sp]
	movs r6, #0
	bl FUN_021BB054
	cmp r0, #0
	beq _021C674C
	ldr r0, [sp]
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, #0
	ble _021C6748
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0x1f
	beq _021C6748
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r7, [r6, #0xf]
	movs r0, #0xa
	str r0, [r6, #4]
	bl FUN_021CE240
	str r0, [r6, #8]
	adds r0, r6, #0
	ldr r2, _021C67B0 ; =0x00000428
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #0x14
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r0, #0x14
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #8
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r0, [sp]
	movs r1, #2
	strb r4, [r6, #7]
	bl FUN_021BD3C8
	rsbs r0, r0, #0
	str r0, [r6, #0x10]
	movs r0, #1
	strb r0, [r6, #4]
	ldr r1, [r6]
	lsls r0, r0, #0x18
	orrs r0, r1
	str r0, [r6]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C6748:
	movs r6, #1
	b _021C67A2
_021C674C:
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r7, #1
	strb r7, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #5
	str r0, [r1, #4]
	subs r0, r0, #6
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r7, [r1, #0xf]
	strb r4, [r1, #0x10]
	str r7, [r1, #4]
	adds r0, r5, #0
	strb r7, [r1, #0xc]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r7, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #2
	str r0, [r1, #4]
	adds r0, r5, #0
	strb r7, [r1, #0xc]
	bl FUN_021AC448
_021C67A2:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABF5C
_021C67AA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C67B0: .word 0x00000428
	thumb_func_end FUN_021C6698
_021C67B4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C67C0
FUN_021C67C0: ; 0x021C67C0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C67D6
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C67D6:
	pop {r4, pc}
	thumb_func_end FUN_021C67C0
_021C67D8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x0C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C67E4
FUN_021C67E4: ; 0x021C67E4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6826
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021AB874
	movs r1, #0x11
	adds r5, r0, #0
	movs r4, #0x11
	bl FUN_021BB1F4
	cmp r0, #0x36
	beq _021C681E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BB1F4
	cmp r0, #0xf
	bne _021C6826
_021C681E:
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C6826:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C67E4

	thumb_func_start FUN_021C6828
FUN_021C6828: ; 0x021C6828
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C687A
	movs r0, #6
	bl FUN_021BCFB0
	adds r6, r0, #0
	adds r0, r5, #0
	movs r1, #0x1f
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #6]
	movs r0, #0xf
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C687C ; =0x00000195
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrh r1, [r4, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C687A:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021C687C: .word 0x00000195
	thumb_func_end FUN_021C6828
_021C6880:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xAC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C688C
FUN_021C688C: ; 0x021C688C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C68BE
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021AB874
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C68BE
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C68BE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C688C

	thumb_func_start FUN_021C68C0
FUN_021C68C0: ; 0x021C68C0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C68D6
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C68D6:
	pop {r4, pc}
	thumb_func_end FUN_021C68C0
_021C68D8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x30, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C68E4
FUN_021C68E4: ; 0x021C68E4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6938
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, #2
	beq _021C6930
	cmp r0, #2
	beq _021C6930
	cmp r4, r0
	bne _021C6938
_021C6930:
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C6938:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C68E4
_021C693C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C6948
FUN_021C6948: ; 0x021C6948
	push {r3, r4, r5, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6988
	adds r0, r4, #0
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x16
	ldr r0, _021C698C ; =0x021D9930
	ldr r5, [r0, r1]
	adds r0, r5, #0
	bl FUN_021BD56C
	adds r4, r0, #0
	movs r0, #0x1d
	adds r1, r5, #0
	bl FUN_021BCF10
	movs r0, #0x1e
	adds r1, r4, #0
	bl FUN_021BCF10
	movs r0, #0x26
	movs r1, #0x14
	bl FUN_021BCF10
_021C6988:
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
_021C698C: .word 0x021D9930
	thumb_func_end FUN_021C6948
_021C6990:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xCC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C699C
FUN_021C699C: ; 0x021C699C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021ABCF4
	cmp r0, #0x13
	bhi _021C69E6
	adds r1, r0, r0
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021C69B6: ; jump table
	.short _021C69F6 - _021C69B6 - 2 ; case 0
	.short _021C69DE - _021C69B6 - 2 ; case 1
	.short _021C69DE - _021C69B6 - 2 ; case 2
	.short _021C69DE - _021C69B6 - 2 ; case 3
	.short _021C69E6 - _021C69B6 - 2 ; case 4
	.short _021C69F6 - _021C69B6 - 2 ; case 5
	.short _021C69FE - _021C69B6 - 2 ; case 6
	.short _021C6A0E - _021C69B6 - 2 ; case 7
	.short _021C69DE - _021C69B6 - 2 ; case 8
	.short _021C6A06 - _021C69B6 - 2 ; case 9
	.short _021C69EE - _021C69B6 - 2 ; case 10
	.short _021C69FE - _021C69B6 - 2 ; case 11
	.short _021C69FE - _021C69B6 - 2 ; case 12
	.short _021C6A0E - _021C69B6 - 2 ; case 13
	.short _021C69E6 - _021C69B6 - 2 ; case 14
	.short _021C69DE - _021C69B6 - 2 ; case 15
	.short _021C69E6 - _021C69B6 - 2 ; case 16
	.short _021C69DE - _021C69B6 - 2 ; case 17
	.short _021C69E6 - _021C69B6 - 2 ; case 18
	.short _021C69EE - _021C69B6 - 2 ; case 19
_021C69DE:
	movs r1, #1
	movs r2, #6
	movs r0, #1
	b _021C6A20
_021C69E6:
	movs r1, #0
	movs r2, #1
	movs r0, #0
	b _021C6A20
_021C69EE:
	movs r1, #2
	movs r2, #0
	movs r0, #6
	b _021C6A20
_021C69F6:
	movs r1, #0
	movs r2, #2
	movs r0, #7
	b _021C6A20
_021C69FE:
	movs r1, #1
	movs r2, #1
	movs r0, #5
	b _021C6A20
_021C6A06:
	movs r1, #1
	movs r2, #5
	movs r0, #2
	b _021C6A20
_021C6A0E:
	movs r1, #0
	movs r2, #3
	cmp r0, #7
	bne _021C6A1A
	adds r0, r2, #0
	b _021C6A1C
_021C6A1A:
	movs r0, #4
_021C6A1C:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_021C6A20:
	cmp r4, #0
	beq _021C6A26
	strb r1, [r4]
_021C6A26:
	cmp r5, #0
	beq _021C6A2C
	strb r2, [r5]
_021C6A2C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C699C

	thumb_func_start FUN_021C6A30
FUN_021C6A30: ; 0x021C6A30
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6A52
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl FUN_021C699C
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021ABF5C
_021C6A52:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C6A30

	thumb_func_start FUN_021C6A54
FUN_021C6A54: ; 0x021C6A54
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C6B0E
	movs r0, #0x47
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C6B0E
	movs r0, #0x64
	bl FUN_021BD100
	cmp r0, #0x1e
	bhs _021C6B0E
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	add r1, sp, #0
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, #1
	add r2, sp, #0
	bl FUN_021C699C
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0
	beq _021C6AAA
	cmp r0, #1
	beq _021C6AD2
	cmp r0, #2
	beq _021C6AF6
	pop {r3, r4, r5, r6, r7, pc}
_021C6AAA:
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r6, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r2, r6, #0
	strb r4, [r6, #0xf]
	add r0, sp, #0
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r2, #8
	str r0, [r6, #4]
	bl FUN_021BD614
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C6AD2:
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r2, #1
	strb r2, [r1, #0xf]
	strb r4, [r1, #0x10]
	add r0, sp, #0
	ldrb r0, [r0]
	str r0, [r1, #4]
	subs r0, r2, #2
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C6AF6:
	adds r0, r5, #0
	movs r1, #0x2b
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #0x64
	strb r0, [r1, #5]
	adds r0, r5, #0
	bl FUN_021AC448
_021C6B0E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C6A54
_021C6B10:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x00, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C6B1C
FUN_021C6B1C: ; 0x021C6B1C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6B82
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r6, r0, #0
	bl FUN_021BAC84
	ldr r1, _021C6B88 ; =0x000001B9
	cmp r0, r1
	bne _021C6B82
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABA58
	adds r4, r0, #0
	beq _021C6B82
	adds r0, r6, #0
	movs r5, #6
	bl FUN_021BB084
	cmp r4, #2
	bls _021C6B5E
	movs r4, #0x1e
	b _021C6B60
_021C6B5E:
	movs r4, #0xa
_021C6B60:
	adds r0, r5, #0
	adds r1, r6, #0
	add r2, sp, #0
	bl FUN_021BD614
	movs r0, #0x1d
	adds r1, r5, #0
	bl FUN_021BCF10
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
	movs r0, #0x26
	adds r1, r4, #0
	bl FUN_021BCF10
_021C6B82:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021C6B88: .word 0x000001B9
	thumb_func_end FUN_021C6B1C
_021C6B8C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xDC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C6B98
FUN_021C6B98: ; 0x021C6B98
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6BC8
	adds r0, r5, #0
	bl FUN_021BC8F8
	adds r4, r0, #0
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	add r0, sp, #0
	adds r1, r4, #0
	bl FUN_021CE3A8
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021C6BC8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6B98

	thumb_func_start FUN_021C6BCC
FUN_021C6BCC: ; 0x021C6BCC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C6C62
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #8
	bne _021C6C62
	movs r0, #0x3f
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r0, #0x80
	bgt _021C6C16
	bge _021C6C3A
	cmp r0, #0x23
	bgt _021C6C10
	bge _021C6C2E
	cmp r0, #0x14
	beq _021C6C32
	pop {r3, r4, r5, r6, r7, pc}
_021C6C10:
	cmp r0, #0x53
	beq _021C6C36
	pop {r3, r4, r5, r6, r7, pc}
_021C6C16:
	movs r1, #0x52
	lsls r1, r1, #2
	cmp r0, r1
	bgt _021C6C26
	bge _021C6C3E
	cmp r0, #0xfa
	beq _021C6C46
	pop {r3, r4, r5, r6, r7, pc}
_021C6C26:
	adds r1, #0x87
	cmp r0, r1
	beq _021C6C42
	pop {r3, r4, r5, r6, r7, pc}
_021C6C2E:
	ldr r2, _021C6C64 ; =0x0000032A
	b _021C6C4A
_021C6C32:
	ldr r2, _021C6C68 ; =0x00000323
	b _021C6C4A
_021C6C36:
	ldr r2, _021C6C6C ; =0x0000033B
	b _021C6C4A
_021C6C3A:
	ldr r2, _021C6C70 ; =0x00000331
	b _021C6C4A
_021C6C3E:
	ldr r2, _021C6C74 ; =0x00000341
	b _021C6C4A
_021C6C42:
	ldr r2, _021C6C78 ; =0x0000033E
	b _021C6C4A
_021C6C46:
	movs r2, #0xce
	lsls r2, r2, #2
_021C6C4A:
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021AC3E0
_021C6C62:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C6C64: .word 0x0000032A
_021C6C68: .word 0x00000323
_021C6C6C: .word 0x0000033B
_021C6C70: .word 0x00000331
_021C6C74: .word 0x00000341
_021C6C78: .word 0x0000033E
	thumb_func_end FUN_021C6BCC
_021C6C7C:
	.byte 0x04, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x5C, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C6C88
FUN_021C6C88: ; 0x021C6C88
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6CA8
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #4
	bne _021C6CA8
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C6CA8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C6C88

	thumb_func_start FUN_021C6CAC
FUN_021C6CAC: ; 0x021C6CAC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6CE2
	movs r0, #4
	movs r4, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C6CE2
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C6CE2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C6CAC
_021C6CE4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C6CF0
FUN_021C6CF0: ; 0x021C6CF0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C6D28
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021AB874
	movs r1, #0xd
	bl FUN_021BB1F4
	lsrs r1, r0, #0x1f
	adds r1, r0, r1
	lsls r0, r1, #0xf
	lsrs r1, r0, #0x10
	bne _021C6D22
	movs r1, #1
_021C6D22:
	movs r0, #0x37
	bl FUN_021BCF10
_021C6D28:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6CF0
_021C6D2C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xB0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C6D38
FUN_021C6D38: ; 0x021C6D38
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6D4E
	movs r0, #0x37
	movs r1, #0x28
	bl FUN_021BCF10
_021C6D4E:
	pop {r4, pc}
	thumb_func_end FUN_021C6D38
_021C6D50:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C6D5C
FUN_021C6D5C: ; 0x021C6D5C
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6D72
	movs r0, #0x37
	movs r1, #0x14
	bl FUN_021BCF10
_021C6D72:
	pop {r4, pc}
	thumb_func_end FUN_021C6D5C
_021C6D74:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xFC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C6D80
FUN_021C6D80: ; 0x021C6D80
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6DCC
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	subs r0, r5, r0
	cmp r0, #0
	bgt _021C6DCC
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C6DCC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C6D80

	thumb_func_start FUN_021C6DD0
FUN_021C6DD0: ; 0x021C6DD0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6E18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	subs r1, r5, r0
	bpl _021C6E12
	movs r1, #1
_021C6E12:
	movs r0, #0x37
	bl FUN_021BCF10
_021C6E18:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6DD0
_021C6E1C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x18, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C6E28
FUN_021C6E28: ; 0x021C6E28
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6E50
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x37
	bl FUN_021BCF10
_021C6E50:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6E28
_021C6E54:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x58, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C6E60
FUN_021C6E60: ; 0x021C6E60
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6EA4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x65
	bl FUN_021BD100
	adds r0, #0x32
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	muls r0, r4, r0
	movs r1, #0x64
	blx FUN_0208D688
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	bne _021C6E9E
	movs r1, #1
_021C6E9E:
	movs r0, #0x37
	bl FUN_021BCF10
_021C6EA4:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C6E60
_021C6EA8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x0C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C6EB4
FUN_021C6EB4: ; 0x021C6EB4
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6EDE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BC1EC
	cmp r0, #3
	blo _021C6EDE
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C6EDE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C6EB4

	thumb_func_start FUN_021C6EE0
FUN_021C6EE0: ; 0x021C6EE0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C6FE8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	str r0, [sp]
	movs r7, #0
	bl FUN_021BC1EC
	adds r6, r0, #0
	cmp r6, #3
	bhs _021C6FE8
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	strb r7, [r1, #5]
	adds r7, r6, #1
	adds r0, r5, #0
	strb r7, [r1, #6]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C6FEC ; =0x000002D1
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r6, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r7, #1
	strb r7, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #2
	str r0, [r1, #4]
	strb r7, [r1, #0xc]
	adds r0, r5, #0
	strb r7, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r1, [r6]
	lsls r0, r7, #0x18
	orrs r0, r1
	str r0, [r6]
	strb r4, [r6, #4]
	ldr r0, [sp]
	movs r1, #1
	strb r7, [r6, #5]
	bl FUN_021BC1EC
	adds r0, r0, #1
	strb r0, [r6, #6]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r7, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #4
	str r0, [r1, #4]
	strb r7, [r1, #0xc]
	adds r0, r5, #0
	strb r7, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r1, [r6]
	lsls r0, r7, #0x18
	orrs r0, r1
	str r0, [r6]
	strb r4, [r6, #4]
	movs r0, #2
	strb r0, [r6, #5]
	ldr r0, [sp]
	movs r1, #2
	bl FUN_021BC1EC
	adds r0, r0, #1
	strb r0, [r6, #6]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C6FE8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C6FEC: .word 0x000002D1
	thumb_func_end FUN_021C6EE0
_021C6FF0:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x94, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C6FFC
FUN_021C6FFC: ; 0x021C6FFC
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7026
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BC1EC
	cmp r0, #0
	bne _021C7026
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C7026:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C6FFC

	thumb_func_start FUN_021C7028
FUN_021C7028: ; 0x021C7028
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7050
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BC1EC
	movs r1, #0x64
	muls r1, r0, r1
	movs r0, #0x30
	bl FUN_021BCF10
_021C7050:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C7028

	thumb_func_start FUN_021C7054
FUN_021C7054: ; 0x021C7054
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7154
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	movs r1, #1
	bl FUN_021BC1EC
	adds r7, r0, #0
	ldr r0, [sp, #4]
	movs r1, #2
	bl FUN_021BC1EC
	adds r6, r0, #0
	ldr r0, [sp, #4]
	movs r1, #0
	bl FUN_021BC1EC
	str r0, [sp]
	cmp r7, #0
	beq _021C70CC
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #2
	str r0, [r1, #4]
	rsbs r0, r7, #0
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #1
	strb r0, [r1, #5]
	movs r0, #0
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
_021C70CC:
	cmp r6, #0
	beq _021C710C
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	movs r0, #4
	str r0, [r1, #4]
	rsbs r0, r6, #0
	strb r0, [r1, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #2
	strb r0, [r1, #5]
	movs r0, #0
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
_021C710C:
	ldr r0, [sp]
	cmp r0, #0
	beq _021C7154
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #0
	strb r0, [r1, #5]
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r2, #0xb5
	adds r0, r6, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C7154:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7054
_021C7158:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xAC, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C7164
FUN_021C7164: ; 0x021C7164
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C71A2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BC1EC
	cmp r0, #1
	beq _021C7190
	cmp r0, #2
	beq _021C7196
	cmp r0, #3
	beq _021C719A
_021C7190:
	movs r1, #1
	lsls r1, r1, #0xa
	b _021C719C
_021C7196:
	lsls r1, r6, #0xa
	b _021C719C
_021C719A:
	lsls r1, r6, #0xb
_021C719C:
	movs r0, #0x35
	bl FUN_021BCF10
_021C71A2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C7164
_021C71A4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC4, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C71B0
FUN_021C71B0: ; 0x021C71B0
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #1
	bl FUN_021C7270
	pop {r3, pc}
	thumb_func_end FUN_021C71B0

	thumb_func_start FUN_021C71C0
FUN_021C71C0: ; 0x021C71C0
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #1
	bl FUN_021C72A4
	pop {r3, pc}
	thumb_func_end FUN_021C71C0

	thumb_func_start FUN_021C71D0
FUN_021C71D0: ; 0x021C71D0
	push {r3, lr}
	movs r0, #2
	lsls r0, r0, #0xc
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #1
	bl FUN_021C731C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C71D0
_021C71E8:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xDC, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C71F4
FUN_021C71F4: ; 0x021C71F4
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #2
	bl FUN_021C7270
	pop {r3, pc}
	thumb_func_end FUN_021C71F4

	thumb_func_start FUN_021C7204
FUN_021C7204: ; 0x021C7204
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #2
	bl FUN_021C72A4
	pop {r3, pc}
	thumb_func_end FUN_021C7204

	thumb_func_start FUN_021C7214
FUN_021C7214: ; 0x021C7214
	push {r3, lr}
	movs r0, #2
	lsls r0, r0, #0xc
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #2
	bl FUN_021C731C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C7214
_021C722C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF4, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021C7238
FUN_021C7238: ; 0x021C7238
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0
	bl FUN_021C7270
	pop {r3, pc}
	thumb_func_end FUN_021C7238

	thumb_func_start FUN_021C7248
FUN_021C7248: ; 0x021C7248
	push {r3, lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0
	bl FUN_021C72A4
	pop {r3, pc}
	thumb_func_end FUN_021C7248

	thumb_func_start FUN_021C7258
FUN_021C7258: ; 0x021C7258
	push {r3, lr}
	movs r0, #6
	lsls r0, r0, #0xa
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0
	bl FUN_021C731C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C7258

	thumb_func_start FUN_021C7270
FUN_021C7270: ; 0x021C7270
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #2
	adds r4, r1, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C72A0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r1, r6, #0
	add r2, sp, #0
	bl FUN_021C735C
	cmp r0, #0
	bne _021C72A0
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C72A0:
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C7270

	thumb_func_start FUN_021C72A4
FUN_021C72A4: ; 0x021C72A4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #3
	adds r6, r1, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C7318
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r1, r4, #0
	add r2, sp, #0
	bl FUN_021C735C
	cmp r0, #0
	beq _021C7318
	add r7, sp, #0
	ldrb r4, [r7, #5]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB880
	cmp r0, #6
	bne _021C7310
	ldrb r1, [r7, #6]
	movs r4, #0x1f
	cmp r1, #6
	beq _021C72EC
	adds r0, r5, #0
	bl FUN_021AB8C4
	adds r4, r0, #0
_021C72EC:
	cmp r4, #0x1f
	bne _021C7310
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #1
	bl FUN_021ABBB0
	adds r1, r0, #0
	cmp r1, #6
	beq _021C7308
	adds r0, r5, #0
	bl FUN_021AB8C4
	adds r4, r0, #0
_021C7308:
	cmp r4, #0x1f
	bne _021C7310
	add r0, sp, #0
	ldrb r4, [r0, #5]
_021C7310:
	movs r0, #4
	adds r1, r4, #0
	bl FUN_021BCF10
_021C7318:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C72A4

	thumb_func_start FUN_021C731C
FUN_021C731C: ; 0x021C731C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7356
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r1, r6, #0
	add r2, sp, #0
	bl FUN_021C735C
	cmp r0, #0
	beq _021C7356
	add r0, sp, #0
	ldrh r0, [r0, #2]
	ldr r1, [sp, #0x18]
	bl FUN_021BD364
	adds r1, r0, #0
	movs r0, #0x37
	bl FUN_021BCF10
_021C7356:
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C731C

	thumb_func_start FUN_021C735C
FUN_021C735C: ; 0x021C735C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	movs r1, #0
	str r0, [sp]
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r7, #0
	movs r2, #0
	adds r3, r4, #0
	bl FUN_021BC180
	cmp r0, #0
	beq _021C73B4
_021C7380:
	ldrb r1, [r4, #5]
	ldr r0, [sp]
	bl FUN_0219D340
	cmp r0, #0
	bne _021C739E
	cmp r5, #0
	beq _021C739A
	ldrh r0, [r4]
	bl FUN_0202176C
	cmp r5, r0
	bne _021C739E
_021C739A:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021C739E:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	adds r2, r6, #0
	lsrs r6, r0, #0x18
	adds r0, r7, #0
	movs r1, #0
	adds r3, r4, #0
	bl FUN_021BC180
	cmp r0, #0
	bne _021C7380
_021C73B4:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C735C
_021C73B8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x88, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C73C4
FUN_021C73C4: ; 0x021C73C4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7438
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC88
	adds r7, r0, #0
	movs r0, #0
	movs r6, #0
	movs r5, #0
	str r0, [sp]
	cmp r7, #0
	bls _021C7420
_021C73F0:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BAD00
	ldr r1, _021C743C ; =0x00000183
	cmp r0, r1
	bne _021C7404
	movs r0, #1
	str r0, [sp]
	b _021C7416
_021C7404:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021BAD20
	cmp r0, #0
	beq _021C7416
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_021C7416:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r7
	blo _021C73F0
_021C7420:
	ldr r0, [sp]
	cmp r0, #0
	beq _021C7430
	cmp r7, #2
	blo _021C7430
	subs r0, r7, #1
	cmp r6, r0
	bge _021C7438
_021C7430:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C7438:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C743C: .word 0x00000183
	thumb_func_end FUN_021C73C4
_021C7440:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x3C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C744C
FUN_021C744C: ; 0x021C744C
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C746C
	movs r0, #0x22
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C746C
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C746C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C744C

	thumb_func_start FUN_021C7470
FUN_021C7470: ; 0x021C7470
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C74B6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r0, #0x22
	movs r5, #0x22
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C74A2
	adds r0, r5, #0
	movs r1, #0
	bl FUN_021BCF10
	pop {r4, r5, r6, pc}
_021C74A2:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C74B6
	adds r0, r5, #0
	movs r1, #0x1a
	bl FUN_021BCF10
_021C74B6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C7470
_021C74B8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C74C4
FUN_021C74C4: ; 0x021C74C4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C74F6
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021AB874
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C74F6
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C74F6:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C74C4
_021C74F8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x78, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C7504
FUN_021C7504: ; 0x021C7504
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C758A
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r1, r7, #0
	movs r4, #0
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021C7558
	adds r0, r5, #0
	add r5, sp, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_021ABBCC
	cmp r0, #0
	beq _021C7558
	adds r0, r5, #0
	bl FUN_021BDBA8
	cmp r0, #0
	beq _021C7558
	bl FUN_02021898
	cmp r0, #0
	beq _021C7558
	movs r4, #1
_021C7558:
	cmp r4, #0
	bne _021C758A
	add r0, sp, #0
	bl FUN_021BDBA8
	cmp r0, #0
	beq _021C756E
	bl FUN_02021898
	cmp r0, #0
	bne _021C758A
_021C756E:
	movs r0, #0x40
	movs r1, #1
	movs r4, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C758A
	movs r0, #0x3f
	bl FUN_021BCFB0
	adds r1, r4, #0
	movs r2, #0x47
	bl FUN_021AC3B8
_021C758A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7504
_021C758C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x0C, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C7598
FUN_021C7598: ; 0x021C7598
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r1, #0
	adds r4, r2, #0
	adds r0, r5, #0
	adds r1, r4, #0
	add r2, sp, #0
	bl FUN_021ABBCC
	cmp r0, #0
	beq _021C75EC
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C75EC
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABB90
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0
	bl FUN_021ABE10
	cmp r0, #0
	bne _021C75EC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABE9C
_021C75EC:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021C7598

	thumb_func_start FUN_021C75F0
FUN_021C75F0: ; 0x021C75F0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7612
	adds r0, r5, #0
	bl FUN_021ABE8C
	cmp r0, #0
	beq _021C7612
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C7612:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C75F0

	thumb_func_start FUN_021C7614
FUN_021C7614: ; 0x021C7614
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7634
	adds r0, r5, #0
	bl FUN_021ABE8C
	cmp r0, #0
	beq _021C7634
	movs r0, #2
	bl FUN_021CE0E0
_021C7634:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C7614
_021C7638:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x24, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C7644
FUN_021C7644: ; 0x021C7644
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7668
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021C7668:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C7644

	thumb_func_start FUN_021C766C
FUN_021C766C: ; 0x021C766C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7686
	adds r0, r5, #0
	movs r1, #0x3b
	adds r2, r4, #0
	bl FUN_021AC434
_021C7686:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C766C

	thumb_func_start FUN_021C7688
FUN_021C7688: ; 0x021C7688
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C76AC
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021C76AC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C7688
_021C76B0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C76BC
FUN_021C76BC: ; 0x021C76BC
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C771C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #9
	movs r6, #9
	bl FUN_021BB41C
	cmp r0, #0
	bne _021C771C
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C7720 ; =0x00000411
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C771C:
	pop {r4, r5, r6, pc}
	nop
_021C7720: .word 0x00000411
	thumb_func_end FUN_021C76BC
_021C7724:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x9C, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C7730
FUN_021C7730: ; 0x021C7730
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C778C
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r5, r0, #0
	ldr r0, [sp]
	bl FUN_021BC8F8
	cmp r5, r0
	bne _021C778C
	adds r0, r6, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r2, #0xa6
	adds r0, r5, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	movs r0, #0x3e
	movs r1, #1
	movs r4, #1
	bl FUN_021BCF10
	str r4, [r7, #0x18]
	str r4, [r7]
_021C778C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C7730

	thumb_func_start FUN_021C7790
FUN_021C7790: ; 0x021C7790
	push {r4, lr}
	ldr r0, [r3]
	adds r4, r2, #0
	cmp r0, #2
	bne _021C77B8
	movs r0, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C77B8
	movs r0, #0x16
	bl FUN_021BCFB0
	cmp r0, #0xc
	bne _021C77B8
	movs r1, #2
	movs r0, #0x31
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021C77B8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C7790

	thumb_func_start FUN_021C77BC
FUN_021C77BC: ; 0x021C77BC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r4, r2, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C77E4
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r4, r0
	beq _021C77E4
	movs r0, #2
	str r0, [r5]
_021C77E4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C77BC

	thumb_func_start FUN_021C77E8
FUN_021C77E8: ; 0x021C77E8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7806
	ldr r0, [r4]
	cmp r0, #2
	bne _021C7806
	adds r0, r6, #0
	bl FUN_021BC890
_021C7806:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C77E8
_021C7808:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x4C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C7814
FUN_021C7814: ; 0x021C7814
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7842
	adds r0, r4, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	adds r0, r5, #4
	movs r1, #1
	movs r2, #0x77
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C7842:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C7814

	thumb_func_start FUN_021C7844
FUN_021C7844: ; 0x021C7844
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #3
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C786E
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BC8F8
	cmp r5, r0
	bne _021C786E
	movs r0, #0x40
	movs r1, #0
	bl FUN_021BCF10
_021C786E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C7844
_021C7870:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C787C
FUN_021C787C: ; 0x021C787C
	push {r3, r4, r5, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C78A2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB880
	bl FUN_021CE254
	adds r1, r0, #0
	movs r0, #0x1e
	bl FUN_021BCF10
_021C78A2:
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C787C
_021C78A8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x40, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C78B4
FUN_021C78B4: ; 0x021C78B4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7902
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xf
	bl FUN_021BB1F4
	adds r2, r0, #0
	lsls r1, r2, #2
	adds r1, r2, r1
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_021ABF68
	cmp r0, #0
	beq _021C7902
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r4, #4
	movs r1, #1
	movs r2, #0x7a
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C7902:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C78B4
_021C7904:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x3C, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C7910
FUN_021C7910: ; 0x021C7910
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	str r1, [sp]
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7954
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r4, r0
	bne _021C793C
	movs r0, #1
	str r0, [r7, #0x18]
	pop {r3, r4, r5, r6, r7, pc}
_021C793C:
	ldr r0, [sp]
	adds r1, r5, #0
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021C5C40
_021C7954:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C7910

	thumb_func_start FUN_021C7958
FUN_021C7958: ; 0x021C7958
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C79BE
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C79BE
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C79BE
	adds r0, r6, #0
	movs r1, #0xe
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r1, #1
	str r1, [r4, #4]
	movs r2, #0x85
	strb r1, [r4, #0xc]
	movs r0, #0
	strb r0, [r4, #0xe]
	strb r1, [r4, #0xf]
	strb r5, [r4, #0x10]
	adds r0, r4, #0
	strb r1, [r4, #0xd]
	adds r0, #0x18
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x18
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C79BE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C7958

	thumb_func_start FUN_021C79C0
FUN_021C79C0: ; 0x021C79C0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C79F2
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _021C79F2
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021C5C40
_021C79F2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C79C0
_021C79F4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C7A00
FUN_021C7A00: ; 0x021C7A00
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7A58
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #0x23
	movs r7, #0x23
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7A58
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r7, [r4, #4]
	bl FUN_021CE240
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021C7A5C ; =0x00000259
	adds r0, #0x14
	movs r1, #2
	strb r5, [r4, #0xf]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C7A58:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C7A5C: .word 0x00000259
	thumb_func_end FUN_021C7A00
_021C7A60:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x54, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C7A6C
FUN_021C7A6C: ; 0x021C7A6C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	movs r0, #2
	str r1, [sp, #4]
	adds r5, r2, #0
	adds r6, r3, #0
	movs r4, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7ADC
	ldr r0, [sp, #4]
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7ADC
	ldr r0, [r6, #0x18]
	cmp r0, #0
	bne _021C7ADC
	adds r0, r4, #0
	bl FUN_021BD100
	adds r0, r0, #2
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #4]
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0x19
	str r0, [r4, #4]
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021CE1EC
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xc]
	ldr r0, [sp, #4]
	adds r1, r4, #0
	strb r5, [r4, #0xf]
	bl FUN_021AC448
	movs r0, #1
	str r0, [r6, #0x18]
	str r7, [r6]
_021C7ADC:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7A6C

	thumb_func_start FUN_021C7AE0
FUN_021C7AE0: ; 0x021C7AE0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C7B90
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _021C7B90
	ldr r0, [r4]
	movs r7, #0
	cmp r0, #0
	beq _021C7B12
	subs r0, r0, #1
	str r0, [r4]
_021C7B12:
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C7B38
	adds r0, r6, #0
	movs r1, #0xb
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x19
	str r0, [r1, #4]
	movs r7, #1
	strb r7, [r1, #0x14]
	adds r0, r6, #0
	strb r5, [r1, #8]
	bl FUN_021AC448
_021C7B38:
	ldr r0, [r4]
	cmp r0, #0
	bne _021C7B7E
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r2, r4, #0
	movs r0, #6
	ldr r1, [sp, #4]
	adds r2, #8
	str r0, [r4, #4]
	bl FUN_021BD614
	movs r7, #1
	adds r0, r4, #0
	movs r2, #0x5a
	strb r7, [r4, #0xd]
	adds r0, #0x14
	movs r1, #2
	lsls r2, r2, #2
	strb r5, [r4, #0xf]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C7B7E:
	cmp r7, #0
	beq _021C7B90
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	ldr r0, [sp, #4]
	bl FUN_021C5C40
_021C7B90:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7AE0

	thumb_func_start FUN_021C7B94
FUN_021C7B94: ; 0x021C7B94
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7BE4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #2
	adds r7, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C7BE4
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x19
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	strb r4, [r1, #8]
	bl FUN_021AC448
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021C5C40
_021C7BE4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C7B94
_021C7BE8:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x3C, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021C7BF4
FUN_021C7BF4: ; 0x021C7BF4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	str r3, [sp, #4]
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021C7D0C
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #0x19
	movs r7, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7D0C
	ldr r0, [sp, #4]
	ldr r0, [r0, #0x18]
	cmp r0, #0
	bne _021C7D0C
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r5, #0
	str r7, [r4, #4]
	bl FUN_021BC8F8
	adds r1, r0, #0
	movs r0, #3
	bl FUN_021CE1EC
	str r0, [r4, #8]
	movs r5, #0
	strb r5, [r4, #0xc]
	ldr r0, [sp]
	adds r1, r4, #0
	strb r0, [r4, #0xf]
	adds r0, r6, #0
	bl FUN_021AC448
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #4
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021C7D10 ; =0x000002BF
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	ldr r1, [sp]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021AB880
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #7
	bl FUN_021ABCA0
	str r0, [sp, #8]
	movs r1, #2
	lsls r1, r1, #0xa
	orrs r1, r4
	ldr r2, [sp, #8]
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	adds r2, r2, #1
	bl FUN_021ABAE8
	ldr r1, [sp, #8]
	strb r0, [r1]
	adds r0, r1, #0
	ldrb r0, [r0]
	cmp r0, #0
	bls _021C7D06
_021C7CAE:
	ldr r0, [sp, #8]
	adds r7, r0, r5
	ldrb r1, [r7, #1]
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C7CFC
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0xb
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #2
	str r0, [r4, #4]
	movs r0, #1
	strb r0, [r4, #0x14]
	ldrb r0, [r7, #1]
	ldr r2, _021C7D10 ; =0x000002BF
	movs r1, #2
	strb r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x18
	adds r2, r2, #3
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r7, #1]
	adds r0, #0x18
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C7CFC:
	ldr r0, [sp, #8]
	adds r5, r5, #1
	ldrb r0, [r0]
	cmp r5, r0
	blo _021C7CAE
_021C7D06:
	ldr r0, [sp, #4]
	movs r1, #1
	str r1, [r0, #0x18]
_021C7D0C:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C7D10: .word 0x000002BF
	thumb_func_end FUN_021C7BF4

	thumb_func_start FUN_021C7D14
FUN_021C7D14: ; 0x021C7D14
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7D4A
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C7D4A
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x19
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	strb r4, [r1, #8]
	bl FUN_021AC448
_021C7D4A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C7D14

	thumb_func_start FUN_021C7D4C
FUN_021C7D4C: ; 0x021C7D4C
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7DE0
	ldr r0, [r6, #0x18]
	cmp r0, #0
	beq _021C7DE0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021C7DE0
	adds r0, r7, #0
	movs r1, #0x19
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7DBA
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C7DE4 ; =0x000002CE
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021C5C40
	pop {r3, r4, r5, r6, r7, pc}
_021C7DBA:
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C7DE8 ; =0x000002CB
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C7DE0:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C7DE4: .word 0x000002CE
_021C7DE8: .word 0x000002CB
	thumb_func_end FUN_021C7D4C

	thumb_func_start FUN_021C7DEC
FUN_021C7DEC: ; 0x021C7DEC
	push {r3, r4, r5, r6, r7, lr}
	ldr r0, [r3, #0x18]
	adds r6, r1, #0
	adds r5, r2, #0
	cmp r0, #0
	beq _021C7E4C
	movs r0, #0x1d
	bl FUN_021BCFB0
	cmp r0, #2
	bne _021C7E4C
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C7E4C
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, r5
	bne _021C7E2E
	movs r2, #0xb2
	lsls r2, r2, #2
	b _021C7E30
_021C7E2E:
	ldr r2, _021C7E50 ; =0x000002C5
_021C7E30:
	lsls r2, r2, #0x10
	adds r0, r4, #4
	movs r1, #2
	lsrs r2, r2, #0x10
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C7E4C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C7E50: .word 0x000002C5
	thumb_func_end FUN_021C7DEC

	thumb_func_start FUN_021C7E54
FUN_021C7E54: ; 0x021C7E54
	push {r3, lr}
	ldr r0, [r3, #0x18]
	cmp r0, #0
	beq _021C7E64
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021C7E64:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021C7E54
_021C7E68:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x64, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021C7E74
FUN_021C7E74: ; 0x021C7E74
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #2
	adds r7, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C7EEA
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0x19
	adds r4, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7EEA
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C7EEA
	ldr r0, [r5, #0x18]
	cmp r0, #0
	bne _021C7EEA
	adds r0, r7, #0
	movs r1, #0xc
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0x19
	str r0, [r4, #4]
	ldr r0, [sp]
	bl FUN_021BC8F8
	adds r1, r0, #0
	movs r0, #5
	bl FUN_021CE1EC
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xc]
	adds r0, r7, #0
	adds r1, r4, #0
	strb r6, [r4, #0xf]
	bl FUN_021AC448
	movs r0, #0
	str r0, [r5]
	movs r0, #5
	str r0, [r5, #4]
	movs r0, #1
	str r0, [r5, #0x18]
_021C7EEA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C7E74

	thumb_func_start FUN_021C7EF0
FUN_021C7EF0: ; 0x021C7EF0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7F10
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C7F40
_021C7F10:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C7EF0

	thumb_func_start FUN_021C7F14
FUN_021C7F14: ; 0x021C7F14
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C7F3E
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C7F3E
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021C7F40
_021C7F3E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7F14

	thumb_func_start FUN_021C7F40
FUN_021C7F40: ; 0x021C7F40
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #0xb
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	movs r0, #0x19
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r6, #0x18]
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021C5C60
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7F40

	thumb_func_start FUN_021C7F78
FUN_021C7F78: ; 0x021C7F78
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C7FD2
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	ldr r2, [r5]
	movs r4, #1
	movs r1, #0
	cmp r2, #0
	bls _021C7FA6
_021C7F9E:
	adds r1, r1, #1
	lsls r4, r4, #1
	cmp r1, r2
	blo _021C7F9E
_021C7FA6:
	movs r1, #7
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C7FB2
	lsls r4, r4, #1
_021C7FB2:
	adds r0, r4, #0
	bl FUN_021CE0E0
	ldr r0, [r5]
	adds r1, r0, #1
	ldr r0, [r5, #4]
	str r1, [r5]
	cmp r1, r0
	blt _021C7FD2
	adds r0, r7, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_021C5C60
_021C7FD2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C7F78
_021C7FD4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C7FE0
FUN_021C7FE0: ; 0x021C7FE0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8000
	ldr r0, [r4]
	movs r1, #0xa
	adds r2, r0, #1
	movs r0, #0x30
	muls r1, r2, r1
	str r2, [r4]
	bl FUN_021BCF10
_021C8000:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C7FE0

	thumb_func_start FUN_021C8004
FUN_021C8004: ; 0x021C8004
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C801A
	movs r0, #0x42
	movs r1, #1
	bl FUN_021BCF10
_021C801A:
	pop {r4, pc}
	thumb_func_end FUN_021C8004
_021C801C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x50, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8028
FUN_021C8028: ; 0x021C8028
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8086
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r5, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_021ABD48
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021ABD48
	movs r1, #0x19
	muls r1, r0, r1
	adds r0, r1, #0
	adds r1, r5, #0
	blx FUN_0208D688
	adds r1, r0, #1
	cmp r1, #0x96
	bls _021C8080
	movs r1, #0x96
_021C8080:
	movs r0, #0x30
	bl FUN_021BCF10
_021C8086:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C8028
_021C8088:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x38, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8094
FUN_021C8094: ; 0x021C8094
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C80FE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r6, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	movs r1, #0
	lsrs r4, r0, #0x18
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #0
	movs r2, #0
	add r3, sp, #0
	bl FUN_021BC180
	cmp r0, #0
	beq _021C80FE
	add r7, sp, #0
_021C80D2:
	ldrb r0, [r7, #5]
	cmp r0, r4
	bne _021C80E8
	ldrh r0, [r7, #2]
	cmp r0, #0
	beq _021C80E8
	movs r0, #2
	bl FUN_021CE0E0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021C80E8:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	adds r2, r5, #0
	lsrs r5, r0, #0x18
	adds r0, r6, #0
	movs r1, #0
	add r3, sp, #0
	bl FUN_021BC180
	cmp r0, #0
	bne _021C80D2
_021C80FE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C8094
_021C8104:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C8110
FUN_021C8110: ; 0x021C8110
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8168
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r5, r0, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r1, r0, #0
	movs r0, #0x30
	muls r0, r4, r0
	blx FUN_0208D688
	cmp r0, #0
	bne _021C814A
	movs r0, #1
_021C814A:
	ldr r2, _021C816C ; =0x021D9D6C
	movs r3, #0
_021C814E:
	lsls r1, r3, #2
	ldrh r1, [r2, r1]
	cmp r0, r1
	bls _021C815C
	adds r3, r3, #1
	cmp r3, #5
	blo _021C814E
_021C815C:
	ldr r1, _021C8170 ; =0x021D9D6E
	lsls r2, r3, #2
	ldrh r1, [r1, r2]
	movs r0, #0x30
	bl FUN_021BCF10
_021C8168:
	pop {r3, r4, r5, pc}
	nop
_021C816C: .word 0x021D9D6C
_021C8170: .word 0x021D9D6E
	thumb_func_end FUN_021C8110
_021C8174:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8180
FUN_021C8180: ; 0x021C8180
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C81B2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #5
	beq _021C81A8
	cmp r0, #1
	beq _021C81A8
	cmp r0, #4
	bne _021C81B2
_021C81A8:
	movs r1, #2
	movs r0, #0x31
	lsls r1, r1, #0xc
	bl FUN_021BCF58
_021C81B2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8180
_021C81B4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x08, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C81C0
FUN_021C81C0: ; 0x021C81C0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C81F2
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C81F2
	movs r0, #2
	bl FUN_021CE0E0
_021C81F2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C81C0
_021C81F4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8200
FUN_021C8200: ; 0x021C8200
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8250
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xe
	bl FUN_021BB1F4
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	bl FUN_0202175C
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r1, #0
	adds r1, r4, #0
	blx FUN_0208D894
	adds r1, r0, #0
	bne _021C824A
	movs r1, #1
_021C824A:
	movs r0, #0x30
	bl FUN_021BCF10
_021C8250:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C8200
_021C8254:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C8260
FUN_021C8260: ; 0x021C8260
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C82A0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BB484
	adds r1, r0, #0
	movs r0, #0x78
	bl FUN_021BD380
	movs r1, #0x64
	blx FUN_0208D894
	adds r1, r0, #0
	bne _021C829A
	movs r1, #1
_021C829A:
	movs r0, #0x30
	bl FUN_021BCF10
_021C82A0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8260
_021C82A4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x70, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C82B0
FUN_021C82B0: ; 0x021C82B0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C82E8
	movs r0, #4
	movs r4, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BB484
	movs r1, #0x32
	lsls r1, r1, #0xc
	cmp r0, r1
	bgt _021C82E8
	movs r0, #0x31
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C82E8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C82B0
_021C82EC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x10, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C82F8
FUN_021C82F8: ; 0x021C82F8
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8334
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB084
	movs r1, #9
	movs r2, #0
	bl FUN_0201CD24
	movs r1, #0xa
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0x19
	blx FUN_0208D894
	adds r1, r0, #0
	bne _021C832E
	movs r1, #1
_021C832E:
	movs r0, #0x30
	bl FUN_021BCF10
_021C8334:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C82F8
_021C8338:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xE0, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021C8344
FUN_021C8344: ; 0x021C8344
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8382
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB084
	movs r1, #9
	movs r2, #0
	bl FUN_0201CD24
	movs r1, #0xff
	subs r1, r1, r0
	movs r0, #0xa
	muls r0, r1, r0
	movs r1, #0x19
	blx FUN_0208D894
	adds r1, r0, #0
	bne _021C837C
	movs r1, #1
_021C837C:
	movs r0, #0x30
	bl FUN_021BCF10
_021C8382:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8344
_021C8384:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xBC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C8390
FUN_021C8390: ; 0x021C8390
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C83D0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021C83D0
	adds r0, r4, #0
	movs r1, #2
	movs r4, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C83D0
	adds r0, r4, #0
	bl FUN_021CE0E0
_021C83D0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8390

	thumb_func_start FUN_021C83D4
FUN_021C83D4: ; 0x021C83D4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C841C
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #2
	movs r7, #2
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C841C
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x14]
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
_021C841C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C83D4
_021C8420:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xCC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C842C
FUN_021C842C: ; 0x021C842C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C846A
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BC5BC
	cmp r0, #0
	bne _021C846A
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C846A
	movs r0, #2
	bl FUN_021CE0E0
_021C846A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C842C

	thumb_func_start FUN_021C846C
FUN_021C846C: ; 0x021C846C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C84B6
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	beq _021C84B6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #1
	movs r7, #1
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C84B6
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	strb r7, [r1, #0x14]
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
_021C84B6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C846C
_021C84B8:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x84, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C84C4
FUN_021C84C4: ; 0x021C84C4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C84FE
	movs r0, #0x14
	bl FUN_021BD344
	cmp r0, #0
	beq _021C84EA
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	str r0, [r4]
_021C84EA:
	ldr r0, [r4]
	movs r1, #1
	cmp r0, #0
	bne _021C84F4
	movs r1, #0
_021C84F4:
	lsls r1, r1, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021ABF5C
_021C84FE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C84C4

	thumb_func_start FUN_021C8500
FUN_021C8500: ; 0x021C8500
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8592
	ldr r0, [r6]
	cmp r0, #0
	beq _021C8592
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	bl FUN_021BB388
	cmp r0, #0
	bne _021C856C
	adds r0, r4, #0
	movs r1, #5
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	strb r6, [r5, #6]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021BD3C8
	strh r0, [r5, #4]
	adds r0, r5, #0
	ldr r2, _021C8594 ; =0x00000183
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
_021C856C:
	adds r0, r4, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	adds r0, r5, #4
	movs r1, #2
	movs r2, #0xd2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C8592:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C8594: .word 0x00000183
	thumb_func_end FUN_021C8500

	thumb_func_start FUN_021C8598
FUN_021C8598: ; 0x021C8598
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C85C4
	movs r0, #0x50
	movs r4, #0x50
	bl FUN_021BD100
	cmp r0, #0x28
	bhs _021C85B6
	movs r4, #0x28
	b _021C85BC
_021C85B6:
	cmp r0, #0x46
	blo _021C85BC
	movs r4, #0x78
_021C85BC:
	movs r0, #0x30
	adds r1, r4, #0
	bl FUN_021BCF10
_021C85C4:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C8598
_021C85C8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xF0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C85D4
FUN_021C85D4: ; 0x021C85D4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021C8624
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BC8F8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021BAFB8
	adds r1, r0, #0
	cmp r1, #4
	beq _021C861C
	adds r0, r4, #0
	bl FUN_021BADC4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	blo _021C8614
	movs r0, #4
_021C8614:
	lsls r1, r0, #1
	ldr r0, _021C8628 ; =0x021D9924
	ldrh r1, [r0, r1]
	b _021C861E
_021C861C:
	movs r1, #0x28
_021C861E:
	movs r0, #0x30
	bl FUN_021BCF10
_021C8624:
	pop {r4, r5, r6, pc}
	nop
_021C8628: .word 0x021D9924
	thumb_func_end FUN_021C85D4
_021C862C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x80, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8638
FUN_021C8638: ; 0x021C8638
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C868E
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	ldr r7, _021C8690 ; =0x021D9E00
	adds r6, r0, #0
	movs r5, #0
	movs r4, #0
_021C8662:
	lsls r1, r4, #2
	ldr r1, [r7, r1]
	adds r0, r6, #0
	bl FUN_021BB1F4
	cmp r0, #6
	ble _021C8674
	subs r0, r0, #6
	adds r5, r5, r0
_021C8674:
	adds r4, r4, #1
	cmp r4, #7
	blo _021C8662
	movs r0, #0x14
	adds r1, r5, #0
	muls r1, r0, r1
	adds r1, #0x3c
	cmp r1, #0xc8
	bls _021C8688
	movs r1, #0xc8
_021C8688:
	movs r0, #0x30
	bl FUN_021BCF10
_021C868E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C8690: .word 0x021D9E00
	thumb_func_end FUN_021C8638
_021C8694:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C86A0
FUN_021C86A0: ; 0x021C86A0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C86F8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r5, r0, #0
	bl FUN_021BBFE8
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	cmp r4, r0
	bne _021C86F8
	movs r0, #0x30
	bl FUN_021BCFB0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BBFDC
	movs r1, #0
	cmp r0, #0
	bls _021C86F0
_021C86E0:
	lsls r4, r4, #1
	cmp r4, #0xa0
	bls _021C86EA
	movs r4, #0xa0
	b _021C86F0
_021C86EA:
	adds r1, r1, #1
	cmp r1, r0
	blo _021C86E0
_021C86F0:
	movs r0, #0x30
	adds r1, r4, #0
	bl FUN_021BCF10
_021C86F8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C86A0
_021C86FC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x70, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C8708
FUN_021C8708: ; 0x021C8708
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C873C
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #2
	movs r4, #2
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C873C
	adds r0, r4, #0
	bl FUN_021CE0E0
_021C873C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8708
_021C8740:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x90, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C874C
FUN_021C874C: ; 0x021C874C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C87B0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021ABF20
	movs r2, #0x7d
	lsls r2, r2, #4
	cmp r0, r2
	blo _021C8786
	movs r1, #0x78
	b _021C87AA
_021C8786:
	lsrs r1, r2, #1
	cmp r0, r1
	blo _021C8790
	movs r1, #0x64
	b _021C87AA
_021C8790:
	lsrs r1, r2, #2
	cmp r0, r1
	blo _021C879A
	movs r1, #0x50
	b _021C87AA
_021C879A:
	cmp r0, #0xfa
	blo _021C87A2
	movs r1, #0x3c
	b _021C87AA
_021C87A2:
	movs r1, #0x28
	cmp r0, #0x64
	bhs _021C87AA
	movs r1, #0x14
_021C87AA:
	movs r0, #0x30
	bl FUN_021BCF10
_021C87B0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C874C
_021C87B4:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xDC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C87C0
FUN_021C87C0: ; 0x021C87C0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8824
	adds r0, r6, #0
	bl FUN_021ABE08
	adds r5, r0, #0
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r4, #0
	cmp r5, #4
	bhi _021C8816
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021C87F6: ; jump table
	.short _021C8816 - _021C87F6 - 2 ; case 0
	.short _021C8800 - _021C87F6 - 2 ; case 1
	.short _021C8806 - _021C87F6 - 2 ; case 2
	.short _021C8812 - _021C87F6 - 2 ; case 3
	.short _021C880C - _021C87F6 - 2 ; case 4
_021C8800:
	movs r1, #9
	movs r4, #1
	b _021C8816
_021C8806:
	movs r1, #0xa
	movs r4, #4
	b _021C8816
_021C880C:
	movs r1, #5
	movs r4, #3
	b _021C8816
_021C8812:
	movs r1, #0xe
	adds r4, r7, #0
_021C8816:
	movs r0, #0x16
	bl FUN_021BCF10
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021ABF5C
_021C8824:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C87C0

	thumb_func_start FUN_021C8828
FUN_021C8828: ; 0x021C8828
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8852
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #0
	beq _021C8852
	movs r0, #0x30
	bl FUN_021BCFB0
	adds r1, r0, #0
	movs r0, #0x30
	lsls r1, r1, #1
	bl FUN_021BCF10
_021C8852:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8828
_021C8854:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xEC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021C8860
FUN_021C8860: ; 0x021C8860
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8880
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #3
	bne _021C8880
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C8880:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C8860

	thumb_func_start FUN_021C8884
FUN_021C8884: ; 0x021C8884
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C88B8
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r1, r6, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C88B8
	movs r0, #2
	bl FUN_021CE0E0
_021C88B8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C8884
_021C88BC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x28, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C88C8
FUN_021C88C8: ; 0x021C88C8
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C88E8
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #3
	bne _021C88E8
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C88E8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C88C8
_021C88EC:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xCC, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021C88F8
FUN_021C88F8: ; 0x021C88F8
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8918
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #3
	bne _021C8918
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C8918:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C88F8

	thumb_func_start FUN_021C891C
FUN_021C891C: ; 0x021C891C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C893E
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #2
	bne _021C893E
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C893E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C891C

	thumb_func_start FUN_021C8940
FUN_021C8940: ; 0x021C8940
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8962
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021C8962
	movs r0, #0x2b
	movs r1, #0x32
	bl FUN_021BCF10
_021C8962:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8940
_021C8964:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021C8970
FUN_021C8970: ; 0x021C8970
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8992
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #3
	bne _021C8992
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C8992:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8970
_021C8994:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x1C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C89A0
FUN_021C89A0: ; 0x021C89A0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C89C0
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #5
	bne _021C89C0
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C89C0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C89A0

	thumb_func_start FUN_021C89C4
FUN_021C89C4: ; 0x021C89C4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C89FA
	movs r0, #4
	movs r4, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #5
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C89FA
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C89FA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C89C4
_021C89FC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xB8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C8A08
FUN_021C8A08: ; 0x021C8A08
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8AB0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ABDCC
	cmp r0, #0
	beq _021C8AB0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r0, _021C8AB4 ; =0x0000012A
	movs r1, #0
	subs r0, r2, r0
	cmp r0, #0xf
	bhi _021C8AAA
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021C8A4C: ; jump table
	.short _021C8A6C - _021C8A4C - 2 ; case 0
	.short _021C8A70 - _021C8A4C - 2 ; case 1
	.short _021C8A74 - _021C8A4C - 2 ; case 2
	.short _021C8A78 - _021C8A4C - 2 ; case 3
	.short _021C8A7C - _021C8A4C - 2 ; case 4
	.short _021C8A80 - _021C8A4C - 2 ; case 5
	.short _021C8A84 - _021C8A4C - 2 ; case 6
	.short _021C8A88 - _021C8A4C - 2 ; case 7
	.short _021C8A8C - _021C8A4C - 2 ; case 8
	.short _021C8A90 - _021C8A4C - 2 ; case 9
	.short _021C8A94 - _021C8A4C - 2 ; case 10
	.short _021C8A98 - _021C8A4C - 2 ; case 11
	.short _021C8A9C - _021C8A4C - 2 ; case 12
	.short _021C8AA0 - _021C8A4C - 2 ; case 13
	.short _021C8AA4 - _021C8A4C - 2 ; case 14
	.short _021C8AA8 - _021C8A4C - 2 ; case 15
_021C8A6C:
	movs r1, #9
	b _021C8AAA
_021C8A70:
	movs r1, #0xa
	b _021C8AAA
_021C8A74:
	movs r1, #0xc
	b _021C8AAA
_021C8A78:
	movs r1, #0xb
	b _021C8AAA
_021C8A7C:
	movs r1, #0xe
	b _021C8AAA
_021C8A80:
	movs r1, #1
	b _021C8AAA
_021C8A84:
	movs r1, #3
	b _021C8AAA
_021C8A88:
	movs r1, #4
	b _021C8AAA
_021C8A8C:
	adds r1, r6, #0
	b _021C8AAA
_021C8A90:
	movs r1, #0xd
	b _021C8AAA
_021C8A94:
	movs r1, #6
	b _021C8AAA
_021C8A98:
	movs r1, #5
	b _021C8AAA
_021C8A9C:
	movs r1, #7
	b _021C8AAA
_021C8AA0:
	movs r1, #0xf
	b _021C8AAA
_021C8AA4:
	movs r1, #0x10
	b _021C8AAA
_021C8AA8:
	movs r1, #8
_021C8AAA:
	movs r0, #0x16
	bl FUN_021BCF10
_021C8AB0:
	pop {r4, r5, r6, pc}
	nop
_021C8AB4: .word 0x0000012A
	thumb_func_end FUN_021C8A08
_021C8AB8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xE0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021C8AC4
FUN_021C8AC4: ; 0x021C8AC4
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8B34
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABDCC
	cmp r0, #0
	beq _021C8B34
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r0, #0x74
	movs r1, #0
	movs r4, #0
	cmp r0, #3
	bhi _021C8B26
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021C8B08: ; jump table
	.short _021C8B10 - _021C8B08 - 2 ; case 0
	.short _021C8B16 - _021C8B08 - 2 ; case 1
	.short _021C8B1C - _021C8B08 - 2 ; case 2
	.short _021C8B22 - _021C8B08 - 2 ; case 3
_021C8B10:
	movs r1, #0xa
	movs r4, #1
	b _021C8B26
_021C8B16:
	movs r1, #0xc
	adds r4, r6, #0
	b _021C8B26
_021C8B1C:
	movs r1, #9
	movs r4, #3
	b _021C8B26
_021C8B22:
	movs r1, #0xe
	movs r4, #4
_021C8B26:
	movs r0, #0x16
	bl FUN_021BCF10
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABF5C
_021C8B34:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C8AC4
_021C8B38:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x3C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C8B44
FUN_021C8B44: ; 0x021C8B44
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8B6C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB084
	bl FUN_0201D7EC
	adds r1, r0, #0
	movs r0, #0x16
	bl FUN_021BCF10
_021C8B6C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8B44

	thumb_func_start FUN_021C8B70
FUN_021C8B70: ; 0x021C8B70
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8B98
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB084
	bl FUN_0201D87C
	adds r1, r0, #0
	movs r0, #0x30
	bl FUN_021BCF10
_021C8B98:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8B70
_021C8B9C:
	.byte 0x04, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xDC, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C8BA8
FUN_021C8BA8: ; 0x021C8BA8
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8C00
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABDCC
	cmp r0, #0
	bne _021C8BCE
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
	pop {r3, r4, r5, pc}
_021C8BCE:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r5, #0
	movs r1, #0xb
	movs r4, #0xb
	bl FUN_021BD8C4
	cmp r5, #0
	beq _021C8BF8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021BD8C4
	cmp r0, #0
	bne _021C8C00
_021C8BF8:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C8C00:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C8BA8

	thumb_func_start FUN_021C8C04
FUN_021C8C04: ; 0x021C8C04
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8C32
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xc
	bl FUN_021BD8C4
	adds r1, r0, #0
	movs r0, #0x16
	bl FUN_021BCF10
_021C8C32:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8C04

	thumb_func_start FUN_021C8C34
FUN_021C8C34: ; 0x021C8C34
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8C62
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xb
	bl FUN_021BD8C4
	adds r1, r0, #0
	movs r0, #0x30
	bl FUN_021BCF10
_021C8C62:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8C34

	thumb_func_start FUN_021C8C64
FUN_021C8C64: ; 0x021C8C64
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8C8A
	adds r0, r4, #0
	movs r1, #0x23
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	str r0, [r1, #4]
	adds r0, r4, #0
	bl FUN_021AC448
_021C8C8A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8C64
_021C8C8C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x08, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C8C98
FUN_021C8C98: ; 0x021C8C98
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C8D18
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021CDF68
	cmp r0, #0
	bne _021C8D18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	beq _021C8D18
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #6]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021C8D1C ; =0x0000041A
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldr r1, [sp]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C8D18:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C8D1C: .word 0x0000041A
	thumb_func_end FUN_021C8C98
_021C8D20:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xDC, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021C8D2C
FUN_021C8D2C: ; 0x021C8D2C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r4
	bne _021C8D5A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDEA4
	cmp r0, #0
	beq _021C8D70
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C8D5A:
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021C8D70
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021CDFC4
_021C8D70:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C8D2C

	thumb_func_start FUN_021C8D74
FUN_021C8D74: ; 0x021C8D74
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8DB6
	ldr r0, [r4, #0x18]
	cmp r0, #0
	bne _021C8DB6
	adds r0, r7, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C8DB8 ; =0x000002F9
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r4, #0x18]
_021C8DB6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C8DB8: .word 0x000002F9
	thumb_func_end FUN_021C8D74

	thumb_func_start FUN_021C8DBC
FUN_021C8DBC: ; 0x021C8DBC
	push {r3, lr}
	bl FUN_021CE018
	pop {r3, pc}
	thumb_func_end FUN_021C8DBC

	thumb_func_start FUN_021C8DC4
FUN_021C8DC4: ; 0x021C8DC4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8DF0
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C8DF0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_021CE084
_021C8DF0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C8DC4

	thumb_func_start FUN_021C8DF4
FUN_021C8DF4: ; 0x021C8DF4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8E0A
	adds r0, r5, #0
	bl FUN_021BC890
_021C8E0A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8DF4
_021C8E0C:
	.byte 0x04, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xFC, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C8E18
FUN_021C8E18: ; 0x021C8E18
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8E60
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDEA4
	cmp r0, #0
	bne _021C8E60
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C8E64 ; =0x000002EF
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7, #0x18]
_021C8E60:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C8E64: .word 0x000002EF
	thumb_func_end FUN_021C8E18

	thumb_func_start FUN_021C8E68
FUN_021C8E68: ; 0x021C8E68
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	beq _021C8EBC
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #5
	bl FUN_0202143C
	cmp r0, #0
	beq _021C8EBC
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C8EBC
	movs r0, #2
	adds r1, r5, #0
	bl FUN_021BCF10
	cmp r0, #0
	beq _021C8EBC
	movs r0, #4
	adds r1, r5, #0
	bl FUN_021BCF10
	movs r0, #1
	str r0, [r4]
_021C8EBC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C8E68

	thumb_func_start FUN_021C8EC0
FUN_021C8EC0: ; 0x021C8EC0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #2
	adds r6, r1, #0
	adds r4, r2, #0
	adds r5, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8F14
	ldr r0, [r5]
	cmp r0, #0
	beq _021C8F14
	adds r0, r6, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r2, _021C8F18 ; =0x000002F2
	adds r0, r5, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	movs r0, #3
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r5, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r7, #0
	bl FUN_021BC890
_021C8F14:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C8F18: .word 0x000002F2
	thumb_func_end FUN_021C8EC0

	thumb_func_start FUN_021C8F1C
FUN_021C8F1C: ; 0x021C8F1C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C8F32
	adds r0, r5, #0
	bl FUN_021BC890
_021C8F32:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C8F1C
_021C8F34:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x5C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C8F40
FUN_021C8F40: ; 0x021C8F40
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C8F6A
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	beq _021C8F66
	movs r0, #1
	b _021C8F68
_021C8F66:
	movs r0, #0
_021C8F68:
	str r0, [r4]
_021C8F6A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C8F40

	thumb_func_start FUN_021C8F6C
FUN_021C8F6C: ; 0x021C8F6C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9026
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	bne _021C9026
	ldr r0, [r6]
	cmp r0, #0
	bne _021C9026
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0x1f
	beq _021C9026
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp]
	bl FUN_021BB380
	cmp r0, #0
	beq _021C9026
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021CDF68
	cmp r0, #0
	bne _021C9026
	adds r0, r5, #0
	movs r1, #0x24
	adds r2, r4, #0
	bl FUN_021AC424
	adds r7, r0, #0
	ldr r2, _021C9028 ; =0x00000421
	adds r0, #8
	movs r1, #2
	strb r6, [r7, #4]
	bl FUN_021AC3B8
	adds r0, r7, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	ldr r0, [sp]
	bl FUN_021BB380
	adds r1, r0, #0
	adds r0, r7, #0
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x3a
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x17
	orrs r0, r2
	str r0, [r1]
	movs r0, #1
	strb r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021C9026:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C9028: .word 0x00000421
	thumb_func_end FUN_021C8F6C
_021C902C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9038
FUN_021C9038: ; 0x021C9038
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r2, [sp]
	movs r0, #3
	adds r7, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	beq _021C904E
	b _021C9162
_021C904E:
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r1, [sp]
	adds r0, r7, #0
	bl FUN_021CDF48
	cmp r0, #0
	bne _021C9162
	ldr r1, [sp]
	adds r0, r7, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	ldr r1, [sp, #8]
	adds r0, r7, #0
	bl FUN_021AB874
	adds r5, r0, #0
	ldr r0, [sp, #4]
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r5, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r6, #0
	bne _021C9096
	cmp r4, #0
	beq _021C9162
_021C9096:
	ldr r0, [sp, #4]
	bl FUN_021BAC84
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_021BAC84
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_02026BCC
	cmp r0, #0
	bne _021C9162
	adds r0, r4, #0
	bl FUN_02026BCC
	cmp r0, #0
	bne _021C9162
	ldr r0, [sp, #0xc]
	adds r1, r4, #0
	bl FUN_021CDEB8
	cmp r0, #0
	bne _021C9162
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021CDEB8
	cmp r0, #0
	bne _021C9162
	ldr r0, [sp, #0xc]
	adds r1, r6, #0
	bl FUN_021CDEB8
	cmp r0, #0
	bne _021C9162
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDEB8
	cmp r0, #0
	bne _021C9162
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #0x24
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp, #8]
	ldr r2, _021C9168 ; =0x000002AA
	strb r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldr r1, [sp]
	adds r0, #8
	bl FUN_021AC3E0
	cmp r4, #0
	beq _021C9136
	ldr r2, _021C9168 ; =0x000002AA
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #2
	adds r2, r2, #3
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldr r1, [sp]
	adds r0, #0x58
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r0, #0x58
	adds r1, r4, #0
	bl FUN_021AC3E0
_021C9136:
	cmp r6, #0
	beq _021C915A
	adds r0, r5, #0
	ldr r2, _021C916C ; =0x000002AD
	adds r0, #0x30
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldr r1, [sp, #8]
	adds r0, #0x30
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r6, #0
	bl FUN_021AC3E0
_021C915A:
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C9162:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C9168: .word 0x000002AA
_021C916C: .word 0x000002AD
	thumb_func_end FUN_021C9038
_021C9170:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x1C, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021C917C
FUN_021C917C: ; 0x021C917C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C91D8
	movs r0, #0x64
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, _021C91DC ; =0x021D993C
	movs r4, #0
_021C919C:
	lsls r2, r4, #1
	ldrb r2, [r0, r2]
	cmp r1, r2
	blo _021C91AE
	adds r2, r4, #1
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	cmp r4, #7
	blo _021C919C
_021C91AE:
	ldr r0, _021C91E0 ; =0x021D993D
	lsls r1, r4, #1
	ldrb r0, [r0, r1]
	movs r1, #4
	adds r2, r5, #0
	str r0, [r7]
	adds r0, r6, #0
	bl FUN_021AC424
	adds r4, #0x68
	adds r5, r0, #0
	lsls r2, r4, #0x10
	adds r0, r5, #4
	movs r1, #1
	lsrs r2, r2, #0x10
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C91D8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C91DC: .word 0x021D993C
_021C91E0: .word 0x021D993D
	thumb_func_end FUN_021C917C

	thumb_func_start FUN_021C91E4
FUN_021C91E4: ; 0x021C91E4
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9206
	ldr r0, [r4]
	cmp r0, #0
	bne _021C91FE
	movs r0, #0xa
	str r0, [r4]
_021C91FE:
	ldr r1, [r4]
	movs r0, #0x30
	bl FUN_021BCF10
_021C9206:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C91E4
_021C9208:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x7C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C9214
FUN_021C9214: ; 0x021C9214
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9234
	movs r0, #0x21
	bl FUN_021BCFB0
	cmp r0, #4
	bne _021C9234
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021C9234:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C9214

	thumb_func_start FUN_021C9238
FUN_021C9238: ; 0x021C9238
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C926E
	movs r0, #4
	movs r4, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C926E
	movs r0, #0x35
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021C926E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C9238
_021C9270:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C927C
FUN_021C927C: ; 0x021C927C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C92B2
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #8
	movs r4, #8
	bl FUN_021BB41C
	cmp r0, #0
	beq _021C92B2
	movs r0, #0x35
	lsls r1, r4, #0xa
	bl FUN_021BCF58
_021C92B2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C927C
_021C92B4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C92C0
FUN_021C92C0: ; 0x021C92C0
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C92E0
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021C92E0
	movs r0, #0x3a
	movs r1, #2
	bl FUN_021BCF10
_021C92E0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021C92C0
_021C92E4:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0xA0, 0x1D, 0x02

	thumb_func_start FUN_021C92F0
FUN_021C92F0: ; 0x021C92F0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9336
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C9338 ; =0x000001FF
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7, #0x18]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021C94D4
_021C9336:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C9338: .word 0x000001FF
	thumb_func_end FUN_021C92F0

	thumb_func_start FUN_021C933C
FUN_021C933C: ; 0x021C933C
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9364
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _021C9364
	movs r0, #0x51
	bl FUN_021BCFB0
	cmp r0, #0
	beq _021C9364
	movs r0, #0x3a
	movs r1, #1
	bl FUN_021BCF10
_021C9364:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C933C

	thumb_func_start FUN_021C9368
FUN_021C9368: ; 0x021C9368
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C937E
	adds r0, r5, #0
	bl FUN_021BC890
_021C937E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C9368
_021C9380:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x1C, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021C938C
FUN_021C938C: ; 0x021C938C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C93D6
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BBFE8
	ldr r2, _021C93D8 ; =0x021D9910
	movs r3, #0
_021C93AC:
	lsls r1, r3, #1
	ldrh r1, [r2, r1]
	cmp r0, r1
	beq _021C93D6
	adds r3, r3, #1
	cmp r3, #5
	blo _021C93AC
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #3
	strb r0, [r1, #5]
	movs r0, #0
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
_021C93D6:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021C93D8: .word 0x021D9910
	thumb_func_end FUN_021C938C

	thumb_func_start FUN_021C93DC
FUN_021C93DC: ; 0x021C93DC
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C942E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #3
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021C941A
	cmp r0, #0xa
	blo _021C9404
	movs r0, #9
_021C9404:
	ldr r1, _021C9430 ; =0x021D991A
	ldrb r0, [r1, r0]
	bl FUN_021BD100
	cmp r0, #0
	beq _021C941A
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
	pop {r3, r4, r5, pc}
_021C941A:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDEA4
	cmp r0, #0
	beq _021C942E
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C942E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021C9430: .word 0x021D991A
	thumb_func_end FUN_021C93DC

	thumb_func_start FUN_021C9434
FUN_021C9434: ; 0x021C9434
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9468
	adds r0, r5, #0
	movs r1, #0x26
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #3
	strb r0, [r1, #5]
	movs r0, #0
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r6, #0
	bl FUN_021BC890
_021C9468:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C9434

	thumb_func_start FUN_021C946C
FUN_021C946C: ; 0x021C946C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C94CC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r0, r5, #0
	movs r1, #0x15
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #7
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_021C94D4
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C94D0 ; =0x00000205
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021C94CC:
	pop {r4, r5, r6, pc}
	nop
_021C94D0: .word 0x00000205
	thumb_func_end FUN_021C946C

	thumb_func_start FUN_021C94D4
FUN_021C94D4: ; 0x021C94D4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0x26
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	movs r1, #3
	bl FUN_021BC1EC
	adds r0, r0, #1
	strb r0, [r4, #6]
	strb r5, [r4, #4]
	movs r0, #3
	strb r0, [r4, #5]
	ldr r1, [r4]
	ldr r0, _021C9518 ; =0xFEFFFFFF
	ands r1, r0
	lsls r0, r7, #0x1f
	lsrs r0, r0, #7
	orrs r0, r1
	str r0, [r4]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C9518: .word 0xFEFFFFFF
	thumb_func_end FUN_021C94D4
_021C951C:
	.byte 0x07, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xBC, 0xA0, 0x1D, 0x02

	thumb_func_start FUN_021C9528
FUN_021C9528: ; 0x021C9528
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #2
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C95AA
	ldr r0, [r4]
	cmp r0, #0
	beq _021C954C
	cmp r0, #1
	beq _021C9588
	cmp r0, #2
	b _021C9598
_021C954C:
	adds r0, r7, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #0x19
	str r0, [r6, #4]
	ldr r0, [sp]
	bl FUN_021BC8F8
	bl FUN_021CE254
	str r0, [r6, #8]
	adds r0, r7, #0
	adds r1, r6, #0
	strb r5, [r6, #0xf]
	bl FUN_021AC448
	movs r0, #0x3e
	movs r1, #2
	bl FUN_021BCF10
	movs r0, #1
	str r0, [r4, #0x18]
	str r0, [r4]
	movs r0, #0
	add sp, #8
	str r0, [r4, #4]
	pop {r3, r4, r5, r6, r7, pc}
_021C9588:
	movs r0, #0x3e
	movs r1, #2
	bl FUN_021BCF10
	movs r0, #2
	add sp, #8
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021C9598:
	adds r0, r7, #0
	movs r1, #1
	bl FUN_021ABF5C
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021C9780
_021C95AA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9528

	thumb_func_start FUN_021C95B0
FUN_021C95B0: ; 0x021C95B0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C960A
	movs r0, #0x3f
	bl FUN_021BCFB0
	ldr r1, [r4]
	adds r6, r0, #0
	cmp r1, #1
	beq _021C95D6
	cmp r1, #2
	beq _021C95F0
	pop {r3, r4, r5, r6, r7, pc}
_021C95D6:
	ldr r2, _021C960C ; =0x000002E9
	adds r1, r7, #0
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC3E0
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C95F0:
	movs r2, #0xbb
	adds r1, r7, #0
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC3E0
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C960A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C960C: .word 0x000002E9
	thumb_func_end FUN_021C95B0

	thumb_func_start FUN_021C9610
FUN_021C9610: ; 0x021C9610
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9640
	ldr r0, [r4]
	cmp r0, #2
	blt _021C9640
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _021C962E
	b _021C9634
_021C962E:
	ldr r0, [r4, #8]
	cmp r0, #0x1f
	bne _021C963C
_021C9634:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021C963C:
	movs r0, #3
	str r0, [r4]
_021C9640:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C9610

	thumb_func_start FUN_021C9644
FUN_021C9644: ; 0x021C9644
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9674
	ldr r0, [r4]
	cmp r0, #2
	blt _021C9674
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_021C96FC
	adds r1, r0, #0
	movs r0, #4
	str r1, [r4, #8]
	bl FUN_021BCF10
_021C9674:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9644

	thumb_func_start FUN_021C9678
FUN_021C9678: ; 0x021C9678
	push {r3, r4, r5, lr}
	movs r0, #4
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C96A4
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C96A4
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _021C96A4
	movs r0, #0x32
	bl FUN_021BCFB0
	ldr r1, [r4, #4]
	adds r0, r1, r0
	str r0, [r4, #4]
_021C96A4:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021C9678

	thumb_func_start FUN_021C96A8
FUN_021C96A8: ; 0x021C96A8
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C96DA
	ldr r0, [r4]
	cmp r0, #2
	blt _021C96DA
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _021C96D0
	lsls r1, r1, #1
_021C96D0:
	movs r0, #0x37
	bl FUN_021BCF10
	movs r0, #3
	str r0, [r4]
_021C96DA:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C96A8

	thumb_func_start FUN_021C96DC
FUN_021C96DC: ; 0x021C96DC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C96F8
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021C9780
_021C96F8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021C96DC

	thumb_func_start FUN_021C96FC
FUN_021C96FC: ; 0x021C96FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r1, #0
	adds r7, r2, #0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB874
	adds r4, r0, #0
	movs r5, #0
_021C9710:
	lsls r1, r5, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021BC160
	cmp r0, #0
	beq _021C9774
	lsls r1, r5, #0x18
	add r3, sp, #4
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	movs r2, #0
	adds r3, #2
	bl FUN_021BC180
	add r0, sp, #0
	ldrb r4, [r0, #0xb]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AB880
	cmp r0, #6
	bne _021C976E
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021ABB90
	movs r1, #1
	adds r2, r0, #0
	lsls r1, r1, #8
	orrs r1, r2
	lsls r1, r1, #0x10
	add r4, sp, #0
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	bl FUN_021ABAE8
	cmp r0, #0
	beq _021C976C
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r4, [r4, r0]
	b _021C976E
_021C976C:
	movs r4, #0x1f
_021C976E:
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_021C9774:
	adds r5, r5, #1
	cmp r5, #3
	blo _021C9710
	movs r0, #0x1f
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C96FC

	thumb_func_start FUN_021C9780
FUN_021C9780: ; 0x021C9780
	push {r4, r5, r6, lr}
	adds r4, r2, #0
	adds r5, r1, #0
	ldr r1, [r4, #0x18]
	adds r6, r0, #0
	cmp r1, #0
	beq _021C97AE
	movs r1, #0xb
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #0x19
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r5, [r1, #8]
	strb r0, [r1, #0x15]
	adds r0, r6, #0
	bl FUN_021AC448
	movs r0, #0
	str r0, [r4, #0x18]
_021C97AE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021C9780
_021C97B0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x90, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C97BC
FUN_021C97BC: ; 0x021C97BC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9824
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BB380
	cmp r0, #0
	bne _021C9824
	adds r0, r4, #0
	bl FUN_021BBF80
	adds r7, r0, #0
	beq _021C9824
	adds r0, r6, #0
	movs r1, #0x20
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strh r7, [r4, #4]
	strb r5, [r4, #6]
	movs r0, #1
	strb r0, [r4, #7]
	adds r0, r4, #0
	ldr r2, _021C9828 ; =0x000002DD
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021C9824:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C9828: .word 0x000002DD
	thumb_func_end FUN_021C97BC
_021C982C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x88, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9838
FUN_021C9838: ; 0x021C9838
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	movs r0, #3
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021C98E6
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BBAE8
	adds r6, r0, #0
	beq _021C98E6
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	bne _021C98E6
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BBB54
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r6, [r4, #4]
	cmp r6, #5
	bne _021C98A4
	ldr r0, [sp, #4]
	bl FUN_021CE2F8
	cmp r0, #0
	beq _021C98A4
	bl FUN_021CE2D8
	b _021C98AA
_021C98A4:
	adds r0, r6, #0
	bl FUN_021BD56C
_021C98AA:
	str r0, [r4, #8]
	ldr r0, [sp]
	adds r1, r4, #0
	strb r0, [r4, #0xf]
	movs r0, #1
	strb r0, [r4, #0xc]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r7, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r6, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r7, [r1, #8]
	ldr r2, [r1]
	lsls r0, r0, #0x18
	orrs r0, r2
	str r0, [r1]
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCF10
_021C98E6:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9838
_021C98EC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x80, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C98F8
FUN_021C98F8: ; 0x021C98F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C99BA
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r7, #0
	movs r1, #0xd
	bl FUN_021BB1F4
	str r0, [sp, #4]
	ldr r0, [sp]
	movs r1, #0xd
	bl FUN_021BB1F4
	ldr r1, [sp, #4]
	str r0, [sp, #8]
	adds r0, r1, r0
	lsrs r7, r0, #1
	adds r0, r5, #0
	movs r1, #8
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #4]
	ldr r0, [sp, #4]
	strb r4, [r1, #7]
	subs r0, r7, r0
	str r0, [r1, #0x10]
	ldr r0, [sp, #8]
	strb r6, [r1, #8]
	subs r0, r7, r0
	str r0, [r1, #0x14]
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r7, r0, #0
	adds r0, r7, #4
	movs r1, #1
	movs r2, #0x71
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x21
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #1
	str r0, [r1, #8]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x21
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #4]
	movs r0, #1
	str r0, [r1, #8]
	adds r0, r5, #0
	bl FUN_021AC448
_021C99BA:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C98F8
_021C99C0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x78, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C99CC
FUN_021C99CC: ; 0x021C99CC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9A84
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp]
	movs r1, #2
	bl FUN_021BD3C8
	adds r6, r0, #0
	ldr r0, [sp]
	movs r1, #1
	bl FUN_021BB590
	adds r7, r0, #0
	ldr r0, [sp]
	movs r1, #0xd
	bl FUN_021BB1F4
	cmp r0, r6
	bls _021C9A84
	cmp r7, #0
	beq _021C9A84
	adds r0, r5, #0
	movs r1, #8
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #4]
	strb r0, [r1, #6]
	strb r4, [r1, #7]
	rsbs r0, r6, #0
	str r0, [r1, #0x10]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	str r0, [r1, #4]
	strb r7, [r1, #0xc]
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	strb r0, [r1, #0xd]
	strb r0, [r1, #0xe]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021C9A88 ; =0x00000265
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x21
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #1
	str r0, [r1, #8]
	adds r0, r5, #0
	bl FUN_021AC448
_021C9A84:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021C9A88: .word 0x00000265
	thumb_func_end FUN_021C99CC
_021C9A8C:
	.byte 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xD4, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021C9A98
FUN_021C9A98: ; 0x021C9A98
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9AAE
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021C9AAE:
	pop {r4, pc}
	thumb_func_end FUN_021C9A98

	thumb_func_start FUN_021C9AB0
FUN_021C9AB0: ; 0x021C9AB0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9B22
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #7
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021C9AE4
	ldr r0, [r7]
	cmp r0, #0
	beq _021C9B22
_021C9AE4:
	adds r0, r4, #0
	movs r1, #0x16
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #8]
	movs r0, #7
	str r0, [r1, #4]
	adds r0, r4, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r2, _021C9B24 ; =0x0000020E
	adds r0, r5, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C9B22:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C9B24: .word 0x0000020E
	thumb_func_end FUN_021C9AB0

	thumb_func_start FUN_021C9B28
FUN_021C9B28: ; 0x021C9B28
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9BA8
	adds r0, r4, #0
	bl FUN_0219D35C
	bl FUN_0219D378
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #9
	bl FUN_021ABE44
	cmp r0, #0
	bne _021C9B62
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0xa
	bl FUN_021ABE44
	cmp r0, #0
	beq _021C9BA8
_021C9B62:
	adds r0, r5, #0
	movs r1, #0x1a
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r7, [r1, #7]
	movs r0, #3
	strb r0, [r1, #4]
	movs r3, #1
	movs r2, #0
_021C9B78:
	adds r0, r1, r3
	adds r3, r3, #1
	strb r2, [r0, #4]
	cmp r3, #3
	blo _021C9B78
	ldrb r0, [r1, #4]
	cmp r0, #2
	bls _021C9B90
	ldrb r2, [r1, #6]
	movs r0, #2
	orrs r0, r2
	strb r0, [r1, #6]
_021C9B90:
	ldrb r0, [r1, #4]
	cmp r0, #2
	bls _021C9B9E
	ldrb r2, [r1, #6]
	movs r0, #4
	orrs r0, r2
	strb r0, [r1, #6]
_021C9B9E:
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r6]
_021C9BA8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9B28
_021C9BAC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x68, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9BB8
FUN_021C9BB8: ; 0x021C9BB8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	movs r0, #3
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021C9C6A
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r0, [sp]
	ldr r1, [sp, #8]
	bl FUN_021AB874
	ldr r7, _021C9C70 ; =0x021D9DE4
	adds r6, r0, #0
	movs r5, #0
	movs r4, #0
_021C9BE8:
	lsls r1, r5, #2
	ldr r1, [r7, r1]
	adds r0, r6, #0
	movs r2, #2
	bl FUN_021BB554
	cmp r0, #0
	beq _021C9BFE
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021C9BFE:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	blo _021C9BE8
	cmp r4, #0
	beq _021C9C6A
	adds r0, r4, #0
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r5, #0
_021C9C18:
	ldr r1, _021C9C70 ; =0x021D9DE4
	lsls r7, r5, #2
	ldr r1, [r1, r7]
	adds r0, r6, #0
	movs r2, #2
	bl FUN_021BB554
	cmp r0, #0
	beq _021C9C60
	cmp r4, #0
	bne _021C9C5A
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0xe
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r0, [sp, #8]
	strb r0, [r1, #0x10]
	movs r0, #1
	strb r0, [r1, #0xf]
	ldr r0, _021C9C70 ; =0x021D9DE4
	ldr r0, [r0, r7]
	str r0, [r1, #4]
	movs r0, #2
	strb r0, [r1, #0xc]
	movs r0, #0
	strb r0, [r1, #0xe]
	ldr r0, [sp]
	bl FUN_021AC448
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021C9C5A:
	subs r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021C9C60:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	blo _021C9C18
_021C9C6A:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021C9C70: .word 0x021D9DE4
	thumb_func_end FUN_021C9BB8
_021C9C74:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x4C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021C9C80
FUN_021C9C80: ; 0x021C9C80
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9D02
	movs r0, #0x22
	movs r7, #0x22
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021C9D02
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r1, r6, #0
	adds r4, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C9CBC
	adds r0, r7, #0
	movs r1, #0x1a
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C9CBC:
	adds r0, r4, #0
	movs r1, #0xf
	bl FUN_021BBB04
	cmp r0, #0
	beq _021C9CD2
	adds r0, r7, #0
	movs r1, #0xd
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C9CD2:
	adds r0, r4, #0
	bl FUN_021BB388
	cmp r0, #0
	beq _021C9CE6
	adds r0, r7, #0
	movs r1, #0xe
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021C9CE6:
	adds r0, r4, #0
	movs r1, #0x11
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	beq _021C9CFA
	cmp r0, #0x48
	bne _021C9D02
_021C9CFA:
	movs r0, #0x22
	movs r1, #0xf
	bl FUN_021BCF10
_021C9D02:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021C9C80

	thumb_func_start FUN_021C9D04
FUN_021C9D04: ; 0x021C9D04
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021C9DC8
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp]
	bl FUN_021BB388
	cmp r0, #0
	bne _021C9DC8
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	strb r4, [r5, #0xf]
	movs r0, #2
	str r0, [r5, #4]
	movs r0, #3
	bl FUN_021BD5CC
	str r0, [r5, #8]
	movs r0, #1
	strb r0, [r5, #0xc]
	strb r0, [r5, #0x10]
	strb r0, [r5, #0xe]
	adds r0, r5, #0
	ldr r2, _021C9DCC ; =0x0000027E
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r0, #0x14
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #5
	adds r2, r4, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp]
	movs r1, #0xe
	strb r4, [r5, #6]
	bl FUN_021BB1F4
	adds r7, r0, #0
	ldr r0, [sp]
	movs r1, #0xd
	bl FUN_021BB1F4
	subs r0, r7, r0
	strh r0, [r5, #4]
	movs r0, #1
	ldr r1, [r5]
	lsls r0, r0, #0x18
	orrs r0, r1
	str r0, [r5]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #0x21
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #3
	str r0, [r1, #8]
	movs r0, #1
	ldr r2, [r1]
	lsls r0, r0, #0x18
	orrs r0, r2
	str r0, [r1]
	adds r0, r6, #0
	bl FUN_021AC448
	movs r0, #0x51
	movs r1, #0
	bl FUN_021BCF10
_021C9DC8:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021C9DCC: .word 0x0000027E
	thumb_func_end FUN_021C9D04
_021C9DD0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9DDC
FUN_021C9DDC: ; 0x021C9DDC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021C9E36
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r5, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	movs r1, #0x12
	bl FUN_021BB1F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r5, #2
	beq _021C9E2E
	cmp r0, #2
	beq _021C9E2E
	cmp r5, r0
	bne _021C9E36
_021C9E2E:
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021C9E36:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021C9DDC
_021C9E38:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x48, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9E44
FUN_021C9E44: ; 0x021C9E44
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp, #4]
	movs r0, #3
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021C9EEE
	movs r0, #6
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [sp]
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BBFF0
	adds r4, r0, #0
	cmp r4, #0x11
	beq _021C9EEE
	ldr r0, [sp]
	movs r1, #0x11
	bl FUN_021ABCA0
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BD2F0
	adds r4, r0, #0
	beq _021C9EEE
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl FUN_021AB874
	adds r7, r0, #0
	movs r5, #0
	cmp r4, #0
	bls _021C9EC2
_021C9E9A:
	ldrb r1, [r6, r5]
	adds r0, r7, #0
	bl FUN_021BB054
	cmp r0, #0
	beq _021C9EBC
	subs r0, r4, #1
	subs r2, r0, r5
	cmp r2, #0
	ble _021C9EB8
	adds r0, r5, #1
	adds r0, r6, r0
	adds r1, r6, r5
	blx FUN_0207894C
_021C9EB8:
	subs r4, r4, #1
	b _021C9EBE
_021C9EBC:
	adds r5, r5, #1
_021C9EBE:
	cmp r5, r4
	blo _021C9E9A
_021C9EC2:
	cmp r4, #0
	beq _021C9EEE
	adds r0, r4, #0
	bl FUN_021BD100
	ldrb r5, [r6, r0]
	ldr r0, [sp]
	ldr r2, [sp, #4]
	movs r1, #0x14
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021CE570
	strh r0, [r4, #4]
	ldr r0, [sp, #4]
	adds r1, r4, #0
	strb r0, [r4, #6]
	ldr r0, [sp]
	bl FUN_021AC448
_021C9EEE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9E44
_021C9EF4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021C9F00
FUN_021C9F00: ; 0x021C9F00
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	movs r4, #3
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021C9FA6
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021AB874
	adds r5, r0, #0
	bl FUN_021BBFF8
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #0x17
	bl FUN_021BBB04
	cmp r0, #0
	bne _021C9FA6
	adds r0, r7, #0
	bl FUN_021C9FB0
	cmp r0, #0
	bne _021C9FA6
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021BADE0
	cmp r0, #0
	beq _021C9FA6
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021C9F66
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_021C9F66:
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #0x17
	str r0, [r5, #4]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021CE1EC
	str r0, [r5, #8]
	ldr r0, [sp, #4]
	ldr r2, _021C9FAC ; =0x0000022F
	strb r0, [r5, #0xf]
	movs r0, #0
	strb r0, [r5, #0xc]
	adds r0, r5, #0
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldr r1, [sp, #4]
	adds r0, #0x14
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021C9FA6:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021C9FAC: .word 0x0000022F
	thumb_func_end FUN_021C9F00

	thumb_func_start FUN_021C9FB0
FUN_021C9FB0: ; 0x021C9FB0
	bx pc
	nop
	thumb_func_end FUN_021C9FB0
_021C9FB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x35, 0xCA, 0x89, 0x06
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x38, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021C9FCC
FUN_021C9FCC: ; 0x021C9FCC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r6, r1, #0
	adds r4, r2, #0
	movs r5, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CA032
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB874
	movs r1, #0xb
	str r0, [sp]
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CA032
	ldr r0, [sp]
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021CA010
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021CA010:
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0xb
	str r0, [r4, #4]
	adds r0, r5, #0
	bl FUN_021BD5CC
	str r0, [r4, #8]
	adds r0, r6, #0
	adds r1, r4, #0
	strb r7, [r4, #0xf]
	bl FUN_021AC448
_021CA032:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021C9FCC
_021CA038:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x6C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CA044
FUN_021CA044: ; 0x021CA044
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CA090
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	movs r1, #0xc
	movs r7, #0xc
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CA090
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r7, [r4, #4]
	bl FUN_021CE240
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	strb r6, [r4, #0xf]
	bl FUN_021AC448
_021CA090:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CA044
_021CA094:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x28, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CA0A0
FUN_021CA0A0: ; 0x021CA0A0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp]
	movs r0, #3
	adds r7, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CA128
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	bl FUN_021AB874
	movs r1, #0xd
	adds r4, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CA128
	adds r0, r4, #0
	bl FUN_021BBFF8
	adds r6, r0, #0
	beq _021CA128
	cmp r6, #0xa5
	beq _021CA128
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021BAF90
	cmp r0, #0
	beq _021CA128
	adds r0, r4, #0
	movs r1, #1
	movs r5, #4
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021CA102
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021CA102:
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #0xc
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0xd
	str r0, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021CE1EC
	str r0, [r4, #8]
	ldr r0, [sp, #4]
	adds r1, r4, #0
	strb r0, [r4, #0xf]
	adds r0, r7, #0
	bl FUN_021AC448
_021CA128:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CA0A0
_021CA12C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CA138
FUN_021CA138: ; 0x021CA138
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	movs r7, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CA18C
	adds r0, r6, #0
	movs r1, #0x1b
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r7, [r4, #4]
	adds r0, r5, #0
	bl FUN_021CE21C
	str r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0xc]
	ldrh r2, [r4, #0x12]
	movs r0, #0xff
	movs r1, #2
	bics r2, r0
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r4, #0x12]
	ldr r0, _021CA190 ; =0x0000024A
	adds r1, #0xfe
	strh r0, [r4, #0x10]
	ldrh r2, [r4, #0x12]
	ldr r0, _021CA194 ; =0xFFFF80FF
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #0x12]
	adds r0, r6, #0
	adds r1, r4, #0
	str r5, [r4, #0x14]
	bl FUN_021AC448
_021CA18C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CA190: .word 0x0000024A
_021CA194: .word 0xFFFF80FF
	thumb_func_end FUN_021CA138
_021CA198:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x4C, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021CA1A4
FUN_021CA1A4: ; 0x021CA1A4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0x70
	str r4, [sp]
	bl FUN_021CA1D0
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021CA1A4
_021CA1B4:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x64, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021CA1C0
FUN_021CA1C0: ; 0x021CA1C0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0x6f
	str r4, [sp]
	bl FUN_021CA1D0
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021CA1C0

	thumb_func_start FUN_021CA1D0
FUN_021CA1D0: ; 0x021CA1D0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021CA27C
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021ABB4C
	adds r5, r0, #0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021ABB60
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_021ABCA0
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #4
	adds r2, r7, #0
	bl FUN_021AC424
	add r2, sp, #0x20
	str r0, [sp, #4]
	ldrh r2, [r2]
	adds r0, r0, #4
	movs r1, #1
	bl FUN_021AC3B8
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0xc
	adds r3, r4, #0
	bl FUN_021CA280
	adds r5, r0, #0
	ldr r0, [sp]
	cmp r0, #0
	beq _021CA244
	adds r1, r5, #0
	movs r2, #0xc
	adds r3, r4, #0
	bl FUN_021CA280
	adds r0, r5, r0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021CA244:
	cmp r5, #0
	beq _021CA27C
	cmp r5, #0xc
	bls _021CA24E
	movs r5, #0xc
_021CA24E:
	adds r0, r6, #0
	movs r1, #0xb
	adds r2, r7, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r3, #0
	strb r5, [r1, #0x14]
	cmp r5, #0
	bls _021CA272
_021CA262:
	ldrb r2, [r4, r3]
	adds r0, r1, r3
	strb r2, [r0, #8]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r5
	blo _021CA262
_021CA272:
	movs r0, #0x24
	str r0, [r1, #4]
	adds r0, r6, #0
	bl FUN_021AC448
_021CA27C:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CA1D0

	thumb_func_start FUN_021CA280
FUN_021CA280: ; 0x021CA280
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r2, [sp, #4]
	str r0, [sp]
	adds r5, r1, #0
	str r3, [sp, #8]
	bl FUN_0219D4C8
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xc]
	movs r6, #0
	movs r4, #0
	cmp r0, #0
	bls _021CA2D6
_021CA29C:
	ldr r0, [sp, #4]
	cmp r5, r0
	bhs _021CA2D6
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_0219D534
	adds r7, r0, #0
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021CA2CA
	adds r0, r7, #0
	bl FUN_021BAC80
	ldr r1, [sp, #8]
	strb r0, [r1, r5]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_021CA2CA:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #0xc]
	cmp r4, r0
	blo _021CA29C
_021CA2D6:
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CA280
_021CA2DC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x08, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CA2E8
FUN_021CA2E8: ; 0x021CA2E8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CA36A
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	bl FUN_021ABF4C
	adds r7, r0, #0
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r6, [r1, #0x10]
	str r0, [r1, #4]
	subs r0, r0, #3
	strb r0, [r1, #0xc]
	str r0, [sp]
	str r7, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0xe]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r6, [r1, #0x10]
	movs r0, #3
	str r0, [r1, #4]
	ldr r0, [sp]
	strb r0, [r1, #0xc]
	str r7, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0xe]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021CA36A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CA2E8
_021CA36C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CA378
FUN_021CA378: ; 0x021CA378
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CA412
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r1, [sp, #8]
	adds r0, r6, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BBFF8
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r4, #0
	bl FUN_021BAFB8
	adds r7, r0, #0
	cmp r7, #4
	beq _021CA412
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021BADC4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _021CA3C8
	movs r5, #4
_021CA3C8:
	cmp r5, #0
	beq _021CA412
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0xa
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #8]
	ldr r2, _021CA418 ; =0x00000281
	strb r0, [r4, #5]
	strb r5, [r4, #4]
	adds r0, r4, #0
	strb r7, [r4, #6]
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #8]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CA412:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021CA418: .word 0x00000281
	thumb_func_end FUN_021CA378
_021CA41C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x80, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CA428
FUN_021CA428: ; 0x021CA428
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021CA4D8
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021AB874
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0xf
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r7, [r4, #4]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021BB1F4
	strb r0, [r4, #5]
	adds r0, r5, #0
	movs r1, #2
	bl FUN_021BB1F4
	strb r0, [r4, #6]
	adds r0, r5, #0
	movs r1, #3
	bl FUN_021BB1F4
	strb r0, [r4, #7]
	adds r0, r5, #0
	movs r1, #4
	bl FUN_021BB1F4
	strb r0, [r4, #8]
	adds r0, r5, #0
	movs r1, #5
	bl FUN_021BB1F4
	strb r0, [r4, #9]
	adds r0, r5, #0
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r4, #0xa]
	adds r0, r5, #0
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r4, #0xb]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #4
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CA4DC ; =0x00000417
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	ldr r1, [sp]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CA4D8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CA4DC: .word 0x00000417
	thumb_func_end FUN_021CA428
_021CA4E0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x20, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CA4EC
FUN_021CA4EC: ; 0x021CA4EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp]
	movs r0, #3
	adds r7, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CA5FA
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r1, [sp, #8]
	adds r0, r7, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	ldr r1, [sp]
	adds r0, r7, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r7, #0
	movs r1, #0x1c
	bl FUN_021ABCA0
	adds r4, r0, #0
	movs r5, #1
_021CA52C:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021BB1F4
	lsls r1, r5, #2
	adds r1, r4, r1
	subs r1, r1, #4
	adds r5, r5, #1
	str r0, [r1]
	cmp r5, #7
	ble _021CA52C
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp]
	movs r1, #1
	strb r0, [r5, #4]
	ldr r0, [sp, #4]
	bl FUN_021BB1F4
	strb r0, [r5, #5]
	ldr r0, [sp, #4]
	movs r1, #2
	movs r6, #2
	bl FUN_021BB1F4
	strb r0, [r5, #6]
	ldr r0, [sp, #4]
	movs r1, #3
	bl FUN_021BB1F4
	strb r0, [r5, #7]
	ldr r0, [sp, #4]
	movs r1, #4
	bl FUN_021BB1F4
	strb r0, [r5, #8]
	ldr r0, [sp, #4]
	movs r1, #5
	bl FUN_021BB1F4
	strb r0, [r5, #9]
	ldr r0, [sp, #4]
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r5, #0xa]
	ldr r0, [sp, #4]
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r5, #0xb]
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AC448
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #0xf
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r0, [sp, #8]
	strb r0, [r1, #4]
	ldr r0, [r4]
	strb r0, [r1, #5]
	ldr r0, [r4, #4]
	strb r0, [r1, #6]
	ldr r0, [r4, #8]
	strb r0, [r1, #7]
	ldr r0, [r4, #0xc]
	strb r0, [r1, #8]
	ldr r0, [r4, #0x10]
	strb r0, [r1, #9]
	ldr r0, [r4, #0x14]
	strb r0, [r1, #0xa]
	ldr r0, [r4, #0x18]
	strb r0, [r1, #0xb]
	adds r0, r7, #0
	bl FUN_021AC448
	ldr r2, [sp]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CA600 ; =0x000002A1
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3B8
	ldr r1, [sp]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CA5FA:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021CA600: .word 0x000002A1
	thumb_func_end FUN_021CA4EC
_021CA604:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CA610
FUN_021CA610: ; 0x021CA610
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	beq _021CA624
	b _021CA72C
_021CA624:
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	movs r1, #1
	bl FUN_021BB1F4
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	movs r1, #3
	bl FUN_021BB1F4
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0xf
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	strb r6, [r5, #4]
	adds r0, r7, #0
	movs r1, #1
	bl FUN_021BB1F4
	strb r0, [r5, #5]
	adds r0, r7, #0
	movs r1, #3
	bl FUN_021BB1F4
	strb r0, [r5, #7]
	ldr r0, [sp, #4]
	movs r1, #2
	bl FUN_021BB1F4
	strb r0, [r5, #6]
	ldr r0, [sp, #4]
	movs r1, #4
	bl FUN_021BB1F4
	strb r0, [r5, #8]
	ldr r0, [sp, #4]
	movs r1, #5
	bl FUN_021BB1F4
	strb r0, [r5, #9]
	ldr r0, [sp, #4]
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r5, #0xa]
	ldr r0, [sp, #4]
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r5, #0xb]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #0xf
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp]
	movs r1, #2
	strb r0, [r5, #4]
	ldr r0, [sp, #8]
	strb r0, [r5, #5]
	ldr r0, [sp, #0xc]
	strb r0, [r5, #7]
	adds r0, r7, #0
	bl FUN_021BB1F4
	strb r0, [r5, #6]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021BB1F4
	strb r0, [r5, #8]
	adds r0, r7, #0
	movs r1, #5
	bl FUN_021BB1F4
	strb r0, [r5, #9]
	adds r0, r7, #0
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r5, #0xa]
	adds r0, r7, #0
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r5, #0xb]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r2, #0xa9
	adds r0, r5, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CA72C:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CA610
_021CA730:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x08, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CA73C
FUN_021CA73C: ; 0x021CA73C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	beq _021CA750
	b _021CA856
_021CA750:
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	movs r1, #2
	bl FUN_021BB1F4
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	movs r1, #4
	bl FUN_021BB1F4
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0xf
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp, #4]
	strb r6, [r5, #4]
	movs r1, #1
	bl FUN_021BB1F4
	strb r0, [r5, #5]
	ldr r0, [sp, #4]
	movs r1, #3
	bl FUN_021BB1F4
	strb r0, [r5, #7]
	adds r0, r7, #0
	movs r1, #2
	bl FUN_021BB1F4
	strb r0, [r5, #6]
	adds r0, r7, #0
	movs r1, #4
	bl FUN_021BB1F4
	strb r0, [r5, #8]
	ldr r0, [sp, #4]
	movs r1, #5
	bl FUN_021BB1F4
	strb r0, [r5, #9]
	ldr r0, [sp, #4]
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r5, #0xa]
	ldr r0, [sp, #4]
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r5, #0xb]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #0xf
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r0, [sp]
	movs r1, #1
	strb r0, [r5, #4]
	adds r0, r7, #0
	bl FUN_021BB1F4
	strb r0, [r5, #5]
	adds r0, r7, #0
	movs r1, #3
	bl FUN_021BB1F4
	strb r0, [r5, #7]
	ldr r0, [sp, #8]
	movs r1, #5
	strb r0, [r5, #6]
	ldr r0, [sp, #0xc]
	strb r0, [r5, #8]
	adds r0, r7, #0
	bl FUN_021BB1F4
	strb r0, [r5, #9]
	adds r0, r7, #0
	movs r1, #6
	bl FUN_021BB1F4
	strb r0, [r5, #0xa]
	adds r0, r7, #0
	movs r1, #7
	bl FUN_021BB1F4
	strb r0, [r5, #0xb]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r2, _021CA85C ; =0x000002A7
	adds r0, r5, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CA856:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CA85C: .word 0x000002A7
	thumb_func_end FUN_021CA73C
_021CA860:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x80, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CA86C
FUN_021CA86C: ; 0x021CA86C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CA8F0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r6, #0
	movs r1, #0x11
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xe]
	adds r0, r7, #0
	movs r1, #9
	bl FUN_021BB0E8
	strh r0, [r4, #4]
	adds r0, r7, #0
	movs r1, #8
	bl FUN_021BB0E8
	strh r0, [r4, #6]
	ldrb r1, [r4, #0xf]
	movs r0, #1
	ldr r2, _021CA8F4 ; =0x00000305
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #0xf]
	ldrb r0, [r4, #0xf]
	movs r1, #2
	orrs r0, r1
	strb r0, [r4, #0xf]
	adds r0, r4, #0
	adds r0, #0x10
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r6, #0
	movs r1, #0x17
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #8]
	movs r0, #0xa
	str r0, [r1, #4]
	adds r0, r6, #0
	bl FUN_021AC448
_021CA8F0:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CA8F4: .word 0x00000305
	thumb_func_end FUN_021CA86C
_021CA8F8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CA904
FUN_021CA904: ; 0x021CA904
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CA9DE
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	movs r1, #8
	bl FUN_021BB0E8
	adds r7, r0, #0
	ldr r0, [sp, #8]
	movs r1, #8
	bl FUN_021BB0E8
	adds r1, r7, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	str r0, [sp]
	ldr r0, [sp, #4]
	movs r1, #0xa
	bl FUN_021BB0E8
	adds r7, r0, #0
	ldr r0, [sp, #8]
	movs r1, #0xa
	bl FUN_021BB0E8
	adds r1, r7, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r7, r0, #1
	adds r0, r5, #0
	movs r1, #0x11
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r0, [sp]
	strb r4, [r1, #0xe]
	strh r0, [r1, #4]
	strh r7, [r1, #8]
	ldrb r2, [r1, #0xf]
	movs r0, #1
	bics r2, r0
	movs r0, #1
	orrs r0, r2
	strb r0, [r1, #0xf]
	ldrb r2, [r1, #0xf]
	movs r0, #4
	orrs r0, r2
	strb r0, [r1, #0xf]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x11
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	strb r6, [r4, #0xe]
	strh r0, [r4, #4]
	strh r7, [r4, #8]
	ldrb r1, [r4, #0xf]
	movs r0, #1
	ldr r2, _021CA9E4 ; =0x00000448
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #0xf]
	ldrb r1, [r4, #0xf]
	movs r0, #4
	orrs r0, r1
	strb r0, [r4, #0xf]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CA9DE:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021CA9E4: .word 0x00000448
	thumb_func_end FUN_021CA904
_021CA9E8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xC8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CA9F4
FUN_021CA9F4: ; 0x021CA9F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CAAC6
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	movs r1, #9
	bl FUN_021BB0E8
	adds r7, r0, #0
	ldr r0, [sp, #8]
	movs r1, #9
	bl FUN_021BB0E8
	adds r1, r7, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	str r0, [sp]
	ldr r0, [sp, #4]
	movs r1, #0xb
	bl FUN_021BB0E8
	adds r7, r0, #0
	ldr r0, [sp, #8]
	movs r1, #0xb
	bl FUN_021BB0E8
	adds r1, r7, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r7, r0, #1
	adds r0, r5, #0
	movs r1, #0x11
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r0, [sp]
	strb r4, [r1, #0xe]
	strh r0, [r1, #6]
	strh r7, [r1, #0xa]
	ldrb r2, [r1, #0xf]
	movs r0, #2
	orrs r0, r2
	strb r0, [r1, #0xf]
	ldrb r2, [r1, #0xf]
	movs r0, #8
	orrs r0, r2
	strb r0, [r1, #0xf]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x11
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	strb r6, [r4, #0xe]
	strh r0, [r4, #6]
	strh r7, [r4, #0xa]
	ldrb r1, [r4, #0xf]
	movs r0, #2
	ldr r2, _021CAACC ; =0x0000044B
	orrs r0, r1
	strb r0, [r4, #0xf]
	ldrb r1, [r4, #0xf]
	movs r0, #8
	orrs r0, r1
	strb r0, [r4, #0xf]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAAC6:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021CAACC: .word 0x0000044B
	thumb_func_end FUN_021CA9F4
_021CAAD0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CAADC
FUN_021CAADC: ; 0x021CAADC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CAB3A
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r7, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #0x1d
	str r0, [r4, #4]
	adds r0, r6, #0
	movs r1, #2
	bl FUN_021CE2A8
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021CAB3C ; =0x0000028B
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAB3A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CAB3C: .word 0x0000028B
	thumb_func_end FUN_021CAADC
_021CAB40:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xC0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CAB4C
FUN_021CAB4C: ; 0x021CAB4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r5, r2, #0
	movs r0, #5
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x7c
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CAB4C
_021CAB84:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x60, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CAB90
FUN_021CAB90: ; 0x021CAB90
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r5, r2, #0
	movs r0, #5
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x80
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CAB90
_021CABC8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x90, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CABD4
FUN_021CABD4: ; 0x021CABD4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r2, #0
	adds r6, r0, #0
	adds r0, r5, #0
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_0219D35C
	adds r4, r0, #0
	movs r0, #5
	bl FUN_021CE1C0
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x84
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CABD4
_021CAC0C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x58, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CAC18
FUN_021CAC18: ; 0x021CAC18
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r5, r2, #0
	movs r0, #5
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x88
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CAC18
_021CAC50:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CAC5C
FUN_021CAC5C: ; 0x021CAC5C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r5, r2, #0
	movs r0, #4
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #4
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x8c
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CAC5C
_021CAC94:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CACA0
FUN_021CACA0: ; 0x021CACA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r5, r2, #0
	movs r0, #5
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x90
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CACA0
_021CACD8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xC8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CACE4
FUN_021CACE4: ; 0x021CACE4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r2, #0
	adds r6, r0, #0
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE240
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D36C
	str r0, [sp]
	movs r0, #6
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x94
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CACE4
_021CAD18:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x00, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CAD24
FUN_021CAD24: ; 0x021CAD24
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r2, #0
	adds r6, r0, #0
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE240
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D36C
	str r0, [sp]
	movs r0, #7
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x98
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CAD24
_021CAD58:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x78, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CAD64
FUN_021CAD64: ; 0x021CAD64
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r2, #0
	adds r6, r0, #0
	adds r7, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE240
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0219D36C
	str r0, [sp]
	movs r0, #8
	str r0, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0x9c
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_021CADE4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CAD64
_021CAD98:
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xBC, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021CADA4
FUN_021CADA4: ; 0x021CADA4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	adds r4, r2, #0
	movs r0, #1
	adds r5, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #9
	str r0, [sp, #4]
	str r6, [sp, #8]
	movs r0, #0xa0
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021CADE4
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021C94D4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CADA4

	thumb_func_start FUN_021CADE4
FUN_021CADE4: ; 0x021CADE4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CAE2C
	adds r0, r5, #0
	movs r1, #0x19
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #0x14]
	add r6, sp, #0x10
	str r0, [r4, #4]
	ldrb r0, [r6]
	movs r1, #1
	strb r0, [r4, #0xc]
	ldr r0, [sp, #0x18]
	str r0, [r4, #8]
	adds r0, r4, #0
	ldrh r2, [r6, #0xc]
	adds r0, #0x10
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r6]
	adds r0, #0x10
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAE2C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CADE4
_021CAE30:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x48, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CAE3C
FUN_021CAE3C: ; 0x021CAE3C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CAE8A
	adds r0, r5, #0
	movs r1, #0x33
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	strb r0, [r4, #4]
	adds r0, r4, #0
	movs r2, #0xa1
	adds r0, #8
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrb r1, [r4, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAE8A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CAE3C
_021CAE8C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CAE98
FUN_021CAE98: ; 0x021CAE98
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CAEEA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021CAEEA
	adds r0, r5, #0
	movs r1, #0x1e
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #1
	str r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABB90
	strb r0, [r6, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021CAEEA:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CAE98
_021CAEEC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x58, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CAEF8
FUN_021CAEF8: ; 0x021CAEF8
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CAF4A
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021CAF4A
	adds r0, r5, #0
	movs r1, #0x1e
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #2
	str r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABB90
	strb r0, [r6, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strb r4, [r1, #4]
	bl FUN_021AC448
_021CAF4A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CAEF8
_021CAF4C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x10, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CAF58
FUN_021CAF58: ; 0x021CAF58
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CAF8A
	adds r0, r5, #0
	movs r1, #0x1e
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0
	str r0, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	strb r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAF8A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CAF58
_021CAF8C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x9C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CAF98
FUN_021CAF98: ; 0x021CAF98
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CAFBE
	movs r0, #0xd
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021CAFFC
_021CAFBE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CAF98

	thumb_func_start FUN_021CAFC0
FUN_021CAFC0: ; 0x021CAFC0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CAFF6
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CAFF8 ; =0x00000432
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CAFF6:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CAFF8: .word 0x00000432
	thumb_func_end FUN_021CAFC0

	thumb_func_start FUN_021CAFFC
FUN_021CAFFC: ; 0x021CAFFC
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB06A
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CB06A
	cmp r7, #6
	bne _021CB03A
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCDC
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0219C4CC
	adds r7, r0, #0
_021CB03A:
	adds r0, r5, #0
	movs r1, #0x1e
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #3
	str r0, [r4, #4]
	adds r0, r5, #0
	strb r7, [r4, #8]
	bl FUN_021ABCB8
	adds r0, r0, #2
	str r0, [r4, #0xc]
	ldr r0, [sp]
	bl FUN_021BC8F8
	str r0, [r4, #0x10]
	movs r0, #2
	strb r0, [r4, #0x1c]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB06A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CAFFC
_021CB06C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xAC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CB078
FUN_021CB078: ; 0x021CB078
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB09E
	movs r0, #0xd
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021CAFFC
_021CB09E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CB078

	thumb_func_start FUN_021CB0A0
FUN_021CB0A0: ; 0x021CB0A0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB0D6
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CB0D8 ; =0x00000435
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB0D6:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CB0D8: .word 0x00000435
	thumb_func_end FUN_021CB0A0
_021CB0DC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x38, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CB0E8
FUN_021CB0E8: ; 0x021CB0E8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB13A
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #0x10
	str r0, [r4, #4]
	bl FUN_021CE240
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021CB140 ; =0x00000235
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB13A:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021CB140: .word 0x00000235
	thumb_func_end FUN_021CB0E8
_021CB144:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CB150
FUN_021CB150: ; 0x021CB150
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CB1C8
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	adds r7, r0, #0
	lsls r0, r7, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021CB1D0
	cmp r0, #0
	bne _021CB1C8
	adds r0, r6, #0
	movs r1, #0x1f
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #6]
	ldr r2, _021CB1CC ; =0x0000026B
	adds r0, #0xc
	movs r1, #2
	strh r7, [r4, #4]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldr r1, [sp]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrh r1, [r4, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB1C8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CB1CC: .word 0x0000026B
	thumb_func_end FUN_021CB150

	thumb_func_start FUN_021CB1D0
FUN_021CB1D0: ; 0x021CB1D0
	bx pc
	nop
	thumb_func_end FUN_021CB1D0
_021CB1D4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA5, 0xCA, 0x89, 0x06
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x48, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CB1EC
FUN_021CB1EC: ; 0x021CB1EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CB292
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021CB292
	adds r0, r7, #0
	bl FUN_021ABACC
	cmp r0, #0
	beq _021CB292
	adds r0, r5, #0
	bl FUN_0219C688
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x29
	adds r2, r5, #0
	bl FUN_021AC424
	ldr r6, _021CB298 ; =0x00000302
	adds r4, r0, #0
	adds r0, #0x54
	strb r5, [r0]
	adds r0, r4, #4
	movs r1, #2
	adds r2, r6, #0
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	ldr r1, [sp, #4]
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r7, #0
	movs r1, #0x37
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	bl FUN_021BC8F8
	ldr r1, _021CB29C ; =0x00000171
	cmp r0, r1
	bne _021CB26E
	subs r6, #0x7f
	b _021CB270
_021CB26E:
	subs r6, #0x7e
_021CB270:
	strh r6, [r4, #4]
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021ABB90
	strb r0, [r4, #6]
	movs r0, #6
	strb r0, [r4, #7]
	movs r0, #1
	ldr r1, [r4]
	lsls r0, r0, #0x18
	orrs r0, r1
	str r0, [r4]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB292:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CB298: .word 0x00000302
_021CB29C: .word 0x00000171
	thumb_func_end FUN_021CB1EC
_021CB2A0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CB2AC
FUN_021CB2AC: ; 0x021CB2AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB3B0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0x12
	adds r6, r0, #0
	movs r7, #0x12
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CB2EE
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
_021CB2EE:
	adds r0, r6, #0
	movs r1, #8
	movs r6, #8
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CB316
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
_021CB316:
	adds r0, r4, #0
	bl FUN_0219D35C
	movs r1, #6
	str r0, [sp, #4]
	bl FUN_021CB3B4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [sp, #4]
	movs r1, #7
	bl FUN_021CB3C4
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #4]
	movs r1, #8
	bl FUN_021CB3D4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp]
	cmp r0, #0
	bne _021CB350
	cmp r7, #0
	bne _021CB350
	cmp r6, #0
	beq _021CB3B0
_021CB350:
	adds r0, r5, #0
	movs r1, #0x1a
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	ldr r0, [sp, #4]
	movs r3, #1
	strb r0, [r1, #7]
	movs r0, #3
	strb r0, [r1, #4]
	movs r2, #0
_021CB368:
	adds r0, r1, r3
	adds r3, r3, #1
	strb r2, [r0, #4]
	cmp r3, #3
	blo _021CB368
	ldr r0, [sp]
	cmp r0, #0
	beq _021CB386
	ldrb r0, [r1, #4]
	cmp r0, #1
	bls _021CB386
	ldrb r2, [r1, #5]
	movs r0, #0x40
	orrs r0, r2
	strb r0, [r1, #5]
_021CB386:
	cmp r7, #0
	beq _021CB398
	ldrb r0, [r1, #4]
	cmp r0, #1
	bls _021CB398
	ldrb r2, [r1, #5]
	movs r0, #0x80
	orrs r0, r2
	strb r0, [r1, #5]
_021CB398:
	cmp r6, #0
	beq _021CB3AA
	ldrb r0, [r1, #4]
	cmp r0, #2
	bls _021CB3AA
	ldrb r2, [r1, #6]
	movs r0, #1
	orrs r0, r2
	strb r0, [r1, #6]
_021CB3AA:
	adds r0, r5, #0
	bl FUN_021AC448
_021CB3B0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CB2AC

	thumb_func_start FUN_021CB3B4
FUN_021CB3B4: ; 0x021CB3B4
	bx pc
	nop
	thumb_func_end FUN_021CB3B4
_021CB3B8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF5, 0x8C, 0x89, 0x06

	thumb_func_start FUN_021CB3C4
FUN_021CB3C4: ; 0x021CB3C4
	bx pc
	nop
	thumb_func_end FUN_021CB3C4
_021CB3C8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF5, 0x8C, 0x89, 0x06

	thumb_func_start FUN_021CB3D4
FUN_021CB3D4: ; 0x021CB3D4
	bx pc
	nop
	thumb_func_end FUN_021CB3D4
_021CB3D8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xF5, 0x8C, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x18, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CB3F0
FUN_021CB3F0: ; 0x021CB3F0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB482
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABAA4
	cmp r0, #0
	beq _021CB482
	adds r0, r5, #0
	bl FUN_021ABACC
	cmp r0, #0
	beq _021CB482
	adds r0, r5, #0
	movs r1, #0x1e
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #4
	str r0, [r6, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABB90
	strb r0, [r6, #8]
	str r4, [r6, #0xc]
	movs r7, #1
	adds r0, r5, #0
	adds r1, r6, #0
	strb r7, [r6, #0x1c]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #0xe
	str r0, [r1, #4]
	ldr r2, [r1]
	lsls r0, r7, #0x18
	orrs r0, r2
	str r0, [r1]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x29
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, #0x54
	strb r4, [r0]
	adds r0, r1, #0
	adds r0, #0x55
	strb r7, [r0]
	ldr r2, [r1]
	lsls r0, r7, #0x18
	orrs r0, r2
	str r0, [r1]
	adds r0, r5, #0
	bl FUN_021AC448
_021CB482:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CB3F0
_021CB484:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x9C, 0x9D, 0x1D, 0x02

	thumb_func_start FUN_021CB490
FUN_021CB490: ; 0x021CB490
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021ABCE8
	cmp r0, #0
	bne _021CB4AA
	adds r0, r5, #0
	bl FUN_021ABCDC
	cmp r0, #0
	beq _021CB4B2
_021CB4AA:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CB4B2:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #8
	adds r4, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CB4DA
	adds r0, r4, #0
	movs r1, #0x16
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CB4DA
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CB4DA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CB490

	thumb_func_start FUN_021CB4DC
FUN_021CB4DC: ; 0x021CB4DC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB4FE
	adds r0, r5, #0
	bl FUN_021BC918
	adds r0, r4, #0
	movs r1, #0x28
	adds r2, r6, #0
	bl FUN_021AC434
_021CB4FE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CB4DC

	thumb_func_start FUN_021CB500
FUN_021CB500: ; 0x021CB500
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	movs r0, #0x51
	movs r1, #1
	adds r6, r2, #0
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CB538
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CB53C ; =0x000002FF
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB538:
	pop {r4, r5, r6, pc}
	nop
_021CB53C: .word 0x000002FF
	thumb_func_end FUN_021CB500
_021CB540:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021CB54C
FUN_021CB54C: ; 0x021CB54C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB598
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	beq _021CB590
	movs r1, #0xa
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021CB590
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABDCC
	cmp r0, #0
	beq _021CB590
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDF1C
	cmp r0, #0
	beq _021CB598
_021CB590:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CB598:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CB54C

	thumb_func_start FUN_021CB59C
FUN_021CB59C: ; 0x021CB59C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB5CA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xa
	bl FUN_021BD8C4
	adds r1, r0, #0
	movs r0, #0x30
	bl FUN_021BCF10
_021CB5CA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CB59C

	thumb_func_start FUN_021CB5CC
FUN_021CB5CC: ; 0x021CB5CC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB61C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	beq _021CB61C
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CB620 ; =0x0000030B
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB61C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CB620: .word 0x0000030B
	thumb_func_end FUN_021CB5CC

	thumb_func_start FUN_021CB624
FUN_021CB624: ; 0x021CB624
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB6A0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	beq _021CB6A0
	adds r0, r5, #0
	movs r1, #0x23
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7]
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021CB6A0
	movs r0, #0x47
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021CB6A0
	adds r0, r6, #0
	movs r1, #9
	bl FUN_021BD8C4
	cmp r0, #0
	beq _021CB6A0
	adds r0, r5, #0
	movs r1, #0x22
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	strb r0, [r4, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	strh r6, [r4, #6]
	bl FUN_021AC448
_021CB6A0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CB624

	thumb_func_start FUN_021CB6A4
FUN_021CB6A4: ; 0x021CB6A4
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB6E4
	ldr r0, [r6]
	cmp r0, #0
	bne _021CB6E4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	beq _021CB6E4
	adds r0, r5, #0
	movs r1, #0x23
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021CB6E4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CB6A4
_021CB6E8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xFC, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CB6F4
FUN_021CB6F4: ; 0x021CB6F4
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB72C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0x15
	adds r4, r0, #0
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CB724
	adds r0, r4, #0
	movs r1, #0x1f
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CB72C
_021CB724:
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CB72C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CB6F4

	thumb_func_start FUN_021CB730
FUN_021CB730: ; 0x021CB730
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CB77A
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #0x1e
	str r0, [r4, #4]
	movs r0, #5
	bl FUN_021CE1C0
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, _021CB780 ; =0x00000292
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CB77A:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021CB780: .word 0x00000292
	thumb_func_end FUN_021CB730
_021CB784:
	.byte 0x05, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB4, 0x9F, 0x1D, 0x02

	thumb_func_start FUN_021CB790
FUN_021CB790: ; 0x021CB790
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB7A6
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CB7A6:
	pop {r4, pc}
	thumb_func_end FUN_021CB790

	thumb_func_start FUN_021CB7A8
FUN_021CB7A8: ; 0x021CB7A8
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB7BE
	movs r0, #0x42
	movs r1, #0
	bl FUN_021BCF10
_021CB7BE:
	pop {r4, pc}
	thumb_func_end FUN_021CB7A8

	thumb_func_start FUN_021CB7C0
FUN_021CB7C0: ; 0x021CB7C0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r6, r2, #0
	str r3, [sp, #4]
	bl FUN_021ABD00
	cmp r0, #1
	bls _021CB840
	movs r0, #3
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB840
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021CB840
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021CB840
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CB844 ; =0x00000414
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	ldr r0, [sp, #4]
	str r7, [r0]
	ldr r0, [sp]
	bl FUN_021BC8E0
_021CB840:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CB844: .word 0x00000414
	thumb_func_end FUN_021CB7C0

	thumb_func_start FUN_021CB848
FUN_021CB848: ; 0x021CB848
	push {r3, r4, r5, lr}
	adds r5, r3, #0
	movs r0, #3
	movs r4, #3
	bl FUN_021BCFB0
	ldr r1, [r5]
	cmp r1, r0
	bne _021CB862
	movs r0, #0x31
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021CB862:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CB848

	thumb_func_start FUN_021CB864
FUN_021CB864: ; 0x021CB864
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB87A
	adds r0, r5, #0
	bl FUN_021BC890
_021CB87A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CB864
_021CB87C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x2C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CB888
FUN_021CB888: ; 0x021CB888
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r7, r1, #0
	adds r6, r2, #0
	str r3, [sp]
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CB8CA
	movs r4, #0
	movs r5, #0
_021CB89E:
	lsls r2, r5, #0x18
	adds r0, r7, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x18
	bl FUN_021CB920
	cmp r0, #0
	beq _021CB8B0
	adds r4, r4, #1
_021CB8B0:
	adds r5, r5, #1
	cmp r5, #6
	blo _021CB89E
	cmp r4, #0
	bne _021CB8BC
	movs r4, #1
_021CB8BC:
	movs r0, #0x2a
	adds r1, r4, #0
	bl FUN_021BCF10
	ldr r0, [sp]
	movs r1, #0
	str r1, [r0]
_021CB8CA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CB888

	thumb_func_start FUN_021CB8CC
FUN_021CB8CC: ; 0x021CB8CC
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CB91C
	ldr r2, [r4]
	adds r0, r6, #0
	lsls r2, r2, #0x18
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_021CB920
	cmp r0, #0
	bne _021CB8F8
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
_021CB8F8:
	ldr r1, [r4]
	adds r1, r1, #1
	str r1, [r4]
	cmp r1, #6
	blt _021CB906
	movs r1, #0
	str r1, [r4]
_021CB906:
	movs r1, #0x15
	bl FUN_021BB1F4
	movs r1, #0xa
	blx FUN_0208D894
	adds r1, r0, #0
	movs r0, #0x30
	adds r1, r1, #5
	bl FUN_021BCF10
_021CB91C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CB8CC

	thumb_func_start FUN_021CB920
FUN_021CB920: ; 0x021CB920
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp]
	adds r5, r2, #0
	bl FUN_021ABB4C
	str r0, [sp, #8]
	bl FUN_0219D4C8
	str r0, [sp, #4]
	cmp r5, r0
	blo _021CB93E
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_021CB93E:
	movs r4, #0
	cmp r0, #0
	bls _021CB990
_021CB944:
	lsls r1, r4, #0x18
	ldr r0, [sp, #8]
	lsrs r1, r1, #0x18
	movs r6, #0
	bl FUN_0219D534
	adds r7, r0, #0
	bl FUN_021BAC80
	ldr r1, [sp]
	cmp r1, r0
	bne _021CB95E
	b _021CB972
_021CB95E:
	adds r0, r7, #0
	bl FUN_021BB3BC
	cmp r0, #0
	beq _021CB974
	adds r0, r7, #0
	bl FUN_021BBAE8
	cmp r0, #0
	bne _021CB974
_021CB972:
	movs r6, #1
_021CB974:
	cmp r6, #0
	beq _021CB988
	cmp r5, #0
	bne _021CB982
	add sp, #0xc
	adds r0, r7, #0
	pop {r4, r5, r6, r7, pc}
_021CB982:
	subs r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_021CB988:
	ldr r0, [sp, #4]
	adds r4, r4, #1
	cmp r4, r0
	blo _021CB944
_021CB990:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CB920
_021CB998:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xF0, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021CB9A4
FUN_021CB9A4: ; 0x021CB9A4
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CB9CE
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0
	bl FUN_021BB41C
	cmp r0, #0
	beq _021CB9CE
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CB9CE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CB9A4
_021CB9D0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD0, 0x94, 0x1D, 0x02

	thumb_func_start FUN_021CB9DC
FUN_021CB9DC: ; 0x021CB9DC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #2
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBA20
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #4
	bhi _021CBA16
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CBA04: ; jump table
	.short _021CBA16 - _021CBA04 - 2 ; case 0
	.short _021CBA0E - _021CBA04 - 2 ; case 1
	.short _021CBA12 - _021CBA04 - 2 ; case 2
	.short _021CBA12 - _021CBA04 - 2 ; case 3
	.short _021CBA12 - _021CBA04 - 2 ; case 4
_021CBA0E:
	ldr r1, _021CBA24 ; =0x00000AAC
	b _021CBA1A
_021CBA12:
	lsls r1, r6, #9
	b _021CBA1A
_021CBA16:
	movs r1, #2
	lsls r1, r1, #0xa
_021CBA1A:
	movs r0, #0x35
	bl FUN_021BCF10
_021CBA20:
	pop {r4, r5, r6, pc}
	nop
_021CBA24: .word 0x00000AAC
	thumb_func_end FUN_021CB9DC
_021CBA28:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x4C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBA34
FUN_021CBA34: ; 0x021CBA34
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBA82
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021CBA84 ; =0x00000211
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBA82:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBA84: .word 0x00000211
	thumb_func_end FUN_021CBA34
_021CBA88:
	.byte 0x70, 0x47, 0x00, 0x00, 0x05, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x04, 0xA0, 0x1D, 0x02

	thumb_func_start FUN_021CBA98
FUN_021CBA98: ; 0x021CBA98
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBAE6
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #6
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021CBAE8 ; =0x0000021D
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBAE6:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBAE8: .word 0x0000021D
	thumb_func_end FUN_021CBA98
_021CBAEC:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start FUN_021CBAF0
FUN_021CBAF0: ; 0x021CBAF0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBB5C
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #7
	movs r7, #7
	bl FUN_021BB3F0
	cmp r0, #0
	beq _021CBB5C
	adds r0, r5, #0
	movs r1, #0x16
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r7, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r2, #0x82
	adds r0, r6, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBB5C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CBAF0
_021CBB60:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x6C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBB6C
FUN_021CBB6C: ; 0x021CBB6C
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBBBC
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	adds r0, r5, #0
	str r6, [r1, #4]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r2, #0x22
	adds r0, r6, #4
	movs r1, #2
	lsls r2, r2, #4
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBBBC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CBB6C
_021CBBC0:
	.byte 0x70, 0x47, 0x00, 0x00, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x8C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBBD0
FUN_021CBBD0: ; 0x021CBBD0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBC1E
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #4
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021CBC20 ; =0x00000217
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBC1E:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBC20: .word 0x00000217
	thumb_func_end FUN_021CBBD0
_021CBC24:
	.byte 0x70, 0x47, 0x00, 0x00, 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x9C, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBC34
FUN_021CBC34: ; 0x021CBC34
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBC82
	adds r0, r5, #0
	movs r1, #0x17
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #5
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r2, _021CBC84 ; =0x0000021A
	adds r0, r6, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CBC82:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBC84: .word 0x0000021A
	thumb_func_end FUN_021CBC34
_021CBC88:
	.byte 0x70, 0x47, 0x00, 0x00, 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xBC, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBC98
FUN_021CBC98: ; 0x021CBC98
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBCBA
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021CBCBA
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CBCBA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CBC98

	thumb_func_start FUN_021CBCBC
FUN_021CBCBC: ; 0x021CBCBC
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBCF2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CBCF4 ; =0x00000229
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CBCF2:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBCF4: .word 0x00000229
	thumb_func_end FUN_021CBCBC

	thumb_func_start FUN_021CBCF8
FUN_021CBCF8: ; 0x021CBCF8
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBD22
	adds r0, r5, #0
	bl FUN_021ABE08
	adds r0, #0xfe
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _021CBD22
	movs r1, #2
	movs r0, #0x31
	lsls r1, r1, #0xa
	bl FUN_021BCF58
_021CBD22:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CBCF8
_021CBD24:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CBD30
FUN_021CBD30: ; 0x021CBD30
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBD66
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CBD68 ; =0x00000223
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CBD66:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBD68: .word 0x00000223
	thumb_func_end FUN_021CBD30
_021CBD6C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xA0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CBD78
FUN_021CBD78: ; 0x021CBD78
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBDAE
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CBDB0 ; =0x00000226
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CBDAE:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CBDB0: .word 0x00000226
	thumb_func_end FUN_021CBD78
_021CBDB4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x98, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CBDC0
FUN_021CBDC0: ; 0x021CBDC0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBE18
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r2, #0x8b
	adds r0, r6, #4
	movs r1, #2
	lsls r2, r2, #2
	movs r7, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0xf]
	strb r4, [r1, #0x10]
	str r7, [r1, #4]
	strb r0, [r1, #0xc]
	strb r0, [r1, #0xe]
	adds r0, r5, #0
	bl FUN_021AC448
_021CBE18:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CBDC0
_021CBE1C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x70, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CBE28
FUN_021CBE28: ; 0x021CBE28
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBEBC
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r7, #0
	bl FUN_02026C20
	cmp r0, #0
	beq _021CBEBC
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp]
	movs r2, #0xc2
	strb r0, [r4, #6]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x22
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	ldr r2, [r1]
	lsls r0, r0, #0x17
	orrs r0, r2
	str r0, [r1]
	strh r7, [r1, #6]
	adds r0, r5, #0
	strb r6, [r1, #4]
	bl FUN_021AC448
_021CBEBC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CBE28
_021CBEC0:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xEC, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CBECC
FUN_021CBECC: ; 0x021CBECC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBEE2
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CBEE2:
	pop {r4, pc}
	thumb_func_end FUN_021CBECC

	thumb_func_start FUN_021CBEE4
FUN_021CBEE4: ; 0x021CBEE4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CBF1C
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0xd1
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CBF1C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CBEE4

	thumb_func_start FUN_021CBF20
FUN_021CBF20: ; 0x021CBF20
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBF36
	movs r0, #0x4b
	movs r1, #1
	bl FUN_021BCF10
_021CBF36:
	pop {r4, pc}
	thumb_func_end FUN_021CBF20
_021CBF38:
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x04, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021CBF44
FUN_021CBF44: ; 0x021CBF44
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CBF80
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CBF84 ; =0x00000272
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7, #0x18]
_021CBF80:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CBF84: .word 0x00000272
	thumb_func_end FUN_021CBF44

	thumb_func_start FUN_021CBF88
FUN_021CBF88: ; 0x021CBF88
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CBF9E
	adds r0, r5, #0
	bl FUN_021BC890
_021CBF9E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CBF88

	thumb_func_start FUN_021CBFA0
FUN_021CBFA0: ; 0x021CBFA0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC054
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021CC054
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021CC05C
	cmp r0, #0
	bne _021CC04E
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021CC04E
	ldr r0, [sp]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021CC04E
	adds r0, r7, #0
	bl FUN_021BC8E0
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #4]
	movs r0, #1
	strb r0, [r1, #5]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x13
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r0, #3
	bl FUN_021BCFB0
	strb r0, [r6, #4]
	adds r0, r6, #0
	ldr r2, _021CC058 ; =0x00000275
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CC04E:
	adds r0, r7, #0
	bl FUN_021BC890
_021CC054:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CC058: .word 0x00000275
	thumb_func_end FUN_021CBFA0

	thumb_func_start FUN_021CC05C
FUN_021CC05C: ; 0x021CC05C
	bx pc
	nop
	thumb_func_end FUN_021CC05C
_021CC060:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x55, 0xCA, 0x89, 0x06, 0x03, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x1C, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021CC078
FUN_021CC078: ; 0x021CC078
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC0B6
	adds r0, r6, #0
	movs r1, #4
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0x9e
	adds r0, r4, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	movs r0, #1
	str r0, [r7, #0x18]
_021CC0B6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CC078

	thumb_func_start FUN_021CC0B8
FUN_021CC0B8: ; 0x021CC0B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp]
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC176
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_021CC180
	cmp r0, #0
	bne _021CC176
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021CC176
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB874
	str r0, [sp, #8]
	movs r0, #0x14
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	bl FUN_021BAFB8
	str r0, [sp, #0xc]
	cmp r0, #4
	beq _021CC170
	adds r0, r5, #0
	movs r1, #0xa
	adds r2, r4, #0
	movs r6, #0xa
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, [sp, #0xc]
	strb r7, [r4, #5]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [sp, #8]
	strb r1, [r4, #6]
	bl FUN_021BADC4
	subs r6, #0xb
	adds r1, r0, #0
	muls r1, r6, r1
	strb r1, [r4, #4]
	ldrb r0, [r4, #7]
	movs r1, #2
	ldr r2, _021CC17C ; =0x0000027B
	orrs r0, r1
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #8
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldr r1, [sp, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CC170:
	ldr r0, [sp]
	bl FUN_021BC890
_021CC176:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CC17C: .word 0x0000027B
	thumb_func_end FUN_021CC0B8

	thumb_func_start FUN_021CC180
FUN_021CC180: ; 0x021CC180
	bx pc
	nop
	thumb_func_end FUN_021CC180
_021CC184:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x55, 0xCA, 0x89, 0x06
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x30, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CC19C
FUN_021CC19C: ; 0x021CC19C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC1C4
	adds r0, r4, #0
	movs r1, #0x17
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #8]
	movs r0, #8
	str r0, [r1, #4]
	adds r0, r4, #0
	bl FUN_021AC448
_021CC1C4:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CC19C
_021CC1C8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x18, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CC1D4
FUN_021CC1D4: ; 0x021CC1D4
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC1FC
	adds r0, r4, #0
	movs r1, #0x17
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r5, [r1, #8]
	movs r0, #7
	str r0, [r1, #4]
	adds r0, r4, #0
	bl FUN_021AC448
_021CC1FC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CC1D4
_021CC200:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x20, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CC20C
FUN_021CC20C: ; 0x021CC20C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r6, r1, #0
	adds r5, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC252
	adds r0, r6, #0
	movs r1, #0xc
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r5, [r4, #0xf]
	movs r0, #1
	strb r0, [r4, #0xd]
	movs r0, #0x18
	str r0, [r4, #4]
	movs r0, #1
	adds r1, r7, #0
	bl FUN_021CE1EC
	adds r1, r4, #0
	adds r1, #8
	str r0, [r4, #8]
	adds r0, r1, #0
	movs r1, #1
	bl FUN_021CE450
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CC252:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CC20C
_021CC254:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC260
FUN_021CC260: ; 0x021CC260
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC2EA
	adds r0, r5, #0
	movs r1, #0x15
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #8]
	movs r0, #5
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB470
	cmp r0, #0
	bne _021CC2C2
	adds r0, r5, #0
	movs r1, #0x37
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	ldr r0, _021CC2EC ; =0x00000272
	adds r1, r4, #0
	strh r0, [r6, #4]
	adds r0, r5, #0
	bl FUN_021ABB90
	strb r0, [r6, #6]
	movs r0, #6
	strb r0, [r6, #7]
	movs r0, #1
	strb r0, [r6, #0xb]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CC2C2:
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r6, r0, #0
	movs r2, #0x9a
	adds r0, r6, #4
	movs r1, #2
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CC2EA:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CC2EC: .word 0x00000272
	thumb_func_end FUN_021CC260
_021CC2F0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xBC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CC2FC
FUN_021CC2FC: ; 0x021CC2FC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CC33C
	add r0, sp, #0
	bl FUN_021CC340
	ldr r1, [sp]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021BD698
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021ABBB0
	adds r5, r0, #0
	movs r0, #0x12
	adds r1, r4, #0
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r5, #0
	bl FUN_021BCF10
_021CC33C:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021CC2FC

	thumb_func_start FUN_021CC340
FUN_021CC340: ; 0x021CC340
	bx pc
	nop
	thumb_func_end FUN_021CC340
_021CC344:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021CC350
FUN_021CC350: ; 0x021CC350
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC38A
	movs r0, #0x3f
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x78
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC3E0
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CC38A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CC350
_021CC38C:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xEC, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CC398
FUN_021CC398: ; 0x021CC398
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CC420
	adds r0, r4, #0
	bl FUN_021ABCF4
	cmp r0, #0x13
	bhi _021CC3EA
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CC3BE: ; jump table
	.short _021CC3F2 - _021CC3BE - 2 ; case 0
	.short _021CC3E6 - _021CC3BE - 2 ; case 1
	.short _021CC3E6 - _021CC3BE - 2 ; case 2
	.short _021CC3E6 - _021CC3BE - 2 ; case 3
	.short _021CC3EA - _021CC3BE - 2 ; case 4
	.short _021CC3F2 - _021CC3BE - 2 ; case 5
	.short _021CC3F6 - _021CC3BE - 2 ; case 6
	.short _021CC3FE - _021CC3BE - 2 ; case 7
	.short _021CC3E6 - _021CC3BE - 2 ; case 8
	.short _021CC3FA - _021CC3BE - 2 ; case 9
	.short _021CC3EE - _021CC3BE - 2 ; case 10
	.short _021CC3F6 - _021CC3BE - 2 ; case 11
	.short _021CC3F6 - _021CC3BE - 2 ; case 12
	.short _021CC402 - _021CC3BE - 2 ; case 13
	.short _021CC3EA - _021CC3BE - 2 ; case 14
	.short _021CC3E6 - _021CC3BE - 2 ; case 15
	.short _021CC3EA - _021CC3BE - 2 ; case 16
	.short _021CC3E6 - _021CC3BE - 2 ; case 17
	.short _021CC3EA - _021CC3BE - 2 ; case 18
	.short _021CC3EE - _021CC3BE - 2 ; case 19
_021CC3E6:
	movs r5, #0x59
	b _021CC404
_021CC3EA:
	movs r5, #0xa1
	b _021CC404
_021CC3EE:
	movs r5, #0x9d
	b _021CC404
_021CC3F2:
	ldr r5, _021CC424 ; =0x00000192
	b _021CC404
_021CC3F6:
	movs r5, #0x38
	b _021CC404
_021CC3FA:
	ldr r5, _021CC428 ; =0x000001AA
	b _021CC404
_021CC3FE:
	movs r5, #0x3b
	b _021CC404
_021CC402:
	movs r5, #0x3a
_021CC404:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_021ABBB0
	adds r4, r0, #0
	movs r0, #0x12
	adds r1, r5, #0
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r4, #0
	bl FUN_021BCF10
_021CC420:
	pop {r4, r5, r6, pc}
	nop
_021CC424: .word 0x00000192
_021CC428: .word 0x000001AA
	thumb_func_end FUN_021CC398

	thumb_func_start FUN_021CC42C
FUN_021CC42C: ; 0x021CC42C
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC466
	movs r0, #0x3f
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x79
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC3E0
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CC466:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CC42C
_021CC468:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xD0, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC474
FUN_021CC474: ; 0x021CC474
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021CC53C
	ldr r0, [sp]
	bl FUN_021ABB4C
	str r0, [sp, #0x18]
	ldr r0, [sp]
	movs r1, #0x30
	bl FUN_021ABCA0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x18]
	movs r4, #0
	bl FUN_0219D4C8
	str r0, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bls _021CC50E
_021CC4AE:
	ldr r0, [sp, #0x18]
	ldr r1, [sp, #0xc]
	bl FUN_0219D534
	adds r7, r0, #0
	bl FUN_021BAC80
	ldr r1, [sp, #4]
	cmp r1, r0
	beq _021CC4FE
	adds r0, r7, #0
	bl FUN_021BAC88
	str r0, [sp, #8]
	ldr r0, [sp, #8]
	movs r5, #0
	cmp r0, #0
	bls _021CC4FE
_021CC4D2:
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021BAD00
	adds r6, r0, #0
	bl FUN_021CC540
	cmp r0, #0
	bne _021CC4F2
	adds r0, r4, #1
	lsls r0, r0, #0x18
	adds r1, r4, #0
	lsrs r4, r0, #0x18
	ldr r0, [sp, #0x14]
	lsls r1, r1, #1
	strh r6, [r0, r1]
_021CC4F2:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blo _021CC4D2
_021CC4FE:
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	blo _021CC4AE
_021CC50E:
	cmp r4, #0
	beq _021CC53C
	adds r0, r4, #0
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x17
	ldr r2, [sp, #0x14]
	ldr r0, [sp]
	ldrh r2, [r2, r5]
	ldr r1, [sp, #4]
	bl FUN_021ABBB0
	ldr r1, [sp, #0x14]
	adds r4, r0, #0
	ldrh r1, [r1, r5]
	movs r0, #0x12
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r4, #0
	bl FUN_021BCF10
_021CC53C:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CC474

	thumb_func_start FUN_021CC540
FUN_021CC540: ; 0x021CC540
	bx pc
	nop
	thumb_func_end FUN_021CC540
_021CC544:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCB, 0x89, 0x06
	.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x7C, 0x9C, 0x1D, 0x02

	thumb_func_start FUN_021CC55C
FUN_021CC55C: ; 0x021CC55C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r2, [sp, #4]
	movs r0, #2
	str r1, [sp]
	adds r7, r3, #0
	movs r4, #2
	bl FUN_021BCFB0
	ldr r1, [sp, #4]
	cmp r1, r0
	bne _021CC60A
	ldr r0, [sp]
	bl FUN_021AB874
	adds r1, r4, #0
	str r0, [sp, #0xc]
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CC60A
	ldr r0, [sp, #0xc]
	bl FUN_021BAC88
	str r0, [sp, #8]
	ldr r0, [sp, #8]
	movs r5, #0
	movs r6, #0
	cmp r0, #0
	bls _021CC5CE
_021CC598:
	ldr r0, [sp, #0xc]
	adds r1, r5, #0
	bl FUN_021BAD00
	adds r4, r0, #0
	bl FUN_021CC610
	cmp r0, #0
	bne _021CC5C2
	adds r0, r4, #0
	movs r1, #1
	bl FUN_0202143C
	cmp r0, #0
	bne _021CC5C2
	adds r0, r6, #1
	adds r1, r6, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r0, r1, #2
	str r4, [r7, r0]
_021CC5C2:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blo _021CC598
_021CC5CE:
	cmp r6, #0
	beq _021CC602
	adds r0, r6, #0
	bl FUN_021BD100
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	ldr r0, [r7, r0]
	ldr r1, [sp, #4]
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [sp]
	adds r2, r5, #0
	bl FUN_021ABBB0
	adds r4, r0, #0
	movs r0, #0x12
	adds r1, r5, #0
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r4, #0
	bl FUN_021BCF10
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_021CC602:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021CC60A:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021CC55C

	thumb_func_start FUN_021CC610
FUN_021CC610: ; 0x021CC610
	bx pc
	nop
	thumb_func_end FUN_021CC610
_021CC614:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA5, 0xCB, 0x89, 0x06
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x38, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CC62C
FUN_021CC62C: ; 0x021CC62C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC6A8
	movs r0, #0xe
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #6
	bne _021CC666
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB880
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCDC
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0219C4CC
	adds r6, r0, #0
_021CC666:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021ABAE8
	cmp r0, #0
	beq _021CC6A8
	ldrb r1, [r7]
	adds r0, r5, #0
	bl FUN_021AB874
	bl FUN_021BBFE8
	adds r4, r0, #0
	beq _021CC68E
	movs r1, #6
	bl FUN_0202143C
	cmp r0, #0
	bne _021CC698
_021CC68E:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021CC698:
	movs r0, #0x12
	adds r1, r4, #0
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r6, #0
	bl FUN_021BCF10
_021CC6A8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CC62C
_021CC6AC:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x2C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CC6B8
FUN_021CC6B8: ; 0x021CC6B8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC77E
	movs r0, #0xe
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #6
	bne _021CC6F4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB880
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCDC
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0219C4CC
	adds r7, r0, #0
_021CC6F4:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021ABAE8
	cmp r0, #0
	beq _021CC776
	ldrb r1, [r6]
	adds r0, r5, #0
	bl FUN_021AB874
	movs r1, #3
	ldrb r6, [r6]
	movs r4, #0
	bl FUN_021BB3F0
	cmp r0, #0
	bne _021CC75E
	adds r0, r5, #0
	adds r1, r6, #0
	add r2, sp, #4
	bl FUN_021ABBCC
	cmp r0, #0
	beq _021CC75E
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABCCC
	cmp r0, #0
	beq _021CC75E
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABEF4
	cmp r0, #0
	bne _021CC75E
	add r0, sp, #4
	bl FUN_021BDBA8
	str r0, [sp]
	cmp r0, #0
	beq _021CC75E
	bl FUN_02021898
	cmp r0, #0
	beq _021CC75E
	ldr r0, [sp]
	bl FUN_021CC784
	cmp r0, #0
	bne _021CC75E
	movs r4, #1
_021CC75E:
	cmp r4, #0
	beq _021CC776
	ldr r1, [sp]
	movs r0, #0x12
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r7, #0
	bl FUN_021BCF10
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021CC776:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021CC77E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021CC6B8

	thumb_func_start FUN_021CC784
FUN_021CC784: ; 0x021CC784
	bx pc
	nop
	thumb_func_end FUN_021CC784
_021CC788:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x45, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021CC794
FUN_021CC794: ; 0x021CC794
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	movs r4, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC7AC
	movs r0, #0x31
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021CC7AC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CC794
_021CC7B0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x88, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC7BC
FUN_021CC7BC: ; 0x021CC7BC
	push {r4, r5, r6, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CC7FA
	adds r0, r5, #0
	bl FUN_021ABC94
	adds r4, r0, #0
	beq _021CC7FA
	bl FUN_021CC7FC
	cmp r0, #0
	bne _021CC7FA
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021ABBB0
	adds r5, r0, #0
	movs r0, #0x12
	adds r1, r4, #0
	bl FUN_021BCF10
	movs r0, #0xd
	adds r1, r5, #0
	bl FUN_021BCF10
_021CC7FA:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CC7BC

	thumb_func_start FUN_021CC7FC
FUN_021CC7FC: ; 0x021CC7FC
	bx pc
	nop
	thumb_func_end FUN_021CC7FC
_021CC800:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xE5, 0xCB, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xF0, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CC818
FUN_021CC818: ; 0x021CC818
	push {r4, lr}
	movs r0, #4
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC838
	movs r0, #3
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC838
	movs r0, #0x1f
	movs r1, #0xa
	bl FUN_021BCF10
_021CC838:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CC818
_021CC83C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xE0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CC848
FUN_021CC848: ; 0x021CC848
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC87E
	movs r0, #4
	movs r4, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #5
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CC87E
	movs r0, #0x31
	lsls r1, r4, #0xb
	bl FUN_021BCF58
_021CC87E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CC848
_021CC880:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CC88C
FUN_021CC88C: ; 0x021CC88C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC8BC
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021CC8BC
	movs r0, #2
	bl FUN_021CE0E0
_021CC8BC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CC88C
_021CC8C0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x50, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC8CC
FUN_021CC8CC: ; 0x021CC8CC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC8F2
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	cmp r0, #0
	bne _021CC8F2
	movs r0, #2
	bl FUN_021CE0E0
_021CC8F2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CC8CC
_021CC8F4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC900
FUN_021CC900: ; 0x021CC900
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CC950
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	ldr r7, _021CC954 ; =0x021D94C8
	adds r6, r0, #0
	movs r4, #0
	movs r5, #0
_021CC920:
	ldrb r1, [r7, r5]
	adds r0, r6, #0
	bl FUN_021BB1F4
	subs r0, r0, #6
	cmp r0, #0
	ble _021CC930
	adds r4, r4, r0
_021CC930:
	adds r5, r5, #1
	cmp r5, #7
	blo _021CC920
	cmp r4, #0
	beq _021CC950
	movs r0, #0x30
	bl FUN_021BCFB0
	adds r2, r0, #0
	movs r0, #0x14
	adds r1, r4, #0
	muls r1, r0, r1
	movs r0, #0x30
	adds r1, r2, r1
	bl FUN_021BCF10
_021CC950:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CC954: .word 0x021D94C8
	thumb_func_end FUN_021CC900
_021CC958:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x18, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CC964
FUN_021CC964: ; 0x021CC964
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CC9D6
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021ABF20
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021ABF20
	adds r1, r0, #0
	adds r0, r5, #0
	blx FUN_0208D688
	cmp r0, #5
	blt _021CC9B8
	movs r1, #0x78
	b _021CC9D0
_021CC9B8:
	cmp r0, #4
	bne _021CC9C0
	movs r1, #0x64
	b _021CC9D0
_021CC9C0:
	cmp r0, #3
	bne _021CC9C8
	movs r1, #0x50
	b _021CC9D0
_021CC9C8:
	movs r1, #0x3c
	cmp r0, #2
	beq _021CC9D0
	movs r1, #0x28
_021CC9D0:
	movs r0, #0x30
	bl FUN_021BCF10
_021CC9D6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CC964
_021CC9D8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x20, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CC9E4
FUN_021CC9E4: ; 0x021CC9E4
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CCA56
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r5, r0, #0
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_021ABD48
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_021ABD48
	adds r1, r0, #0
	adds r0, r5, #0
	blx FUN_0208D688
	cmp r0, #4
	blt _021CCA38
	movs r1, #0x96
	b _021CCA50
_021CCA38:
	cmp r0, #3
	blt _021CCA40
	movs r1, #0x78
	b _021CCA50
_021CCA40:
	cmp r0, #2
	blt _021CCA48
	movs r1, #0x50
	b _021CCA50
_021CCA48:
	movs r1, #0x3c
	cmp r0, #1
	bge _021CCA50
	movs r1, #0x28
_021CCA50:
	movs r0, #0x30
	bl FUN_021BCF10
_021CCA56:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CC9E4
_021CCA58:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xB0, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CCA64
FUN_021CCA64: ; 0x021CCA64
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CCAD8
	adds r0, r5, #0
	bl FUN_021ABCAC
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCB8
	subs r4, r0, #1
	ldr r5, _021CCADC ; =0x00000000
	bmi _021CCAA8
_021CCA92:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021CCAE0
	subs r4, r4, #1
	cmp r0, #0
	beq _021CCAA8
	adds r5, r5, #1
	cmp r4, #0
	bge _021CCA92
_021CCAA8:
	cmp r5, #3
	bhi _021CCAD0
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CCAB8: ; jump table
	.short _021CCAC0 - _021CCAB8 - 2 ; case 0
	.short _021CCAC4 - _021CCAB8 - 2 ; case 1
	.short _021CCAC8 - _021CCAB8 - 2 ; case 2
	.short _021CCACC - _021CCAB8 - 2 ; case 3
_021CCAC0:
	movs r1, #0x28
	b _021CCAD2
_021CCAC4:
	movs r1, #0x50
	b _021CCAD2
_021CCAC8:
	movs r1, #0x78
	b _021CCAD2
_021CCACC:
	movs r1, #0xa0
	b _021CCAD2
_021CCAD0:
	movs r1, #0xc8
_021CCAD2:
	movs r0, #0x30
	bl FUN_021BCF10
_021CCAD8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCADC: .word 0x00000000
	thumb_func_end FUN_021CCA64

	thumb_func_start FUN_021CCAE0
FUN_021CCAE0: ; 0x021CCAE0
	bx pc
	nop
	thumb_func_end FUN_021CCAE0
_021CCAE4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xED, 0xD1, 0x89, 0x06
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CCAFC
FUN_021CCAFC: ; 0x021CCAFC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CCB4C
	adds r0, r4, #0
	bl FUN_021ABCB0
	movs r1, #1
	adds r7, r0, #0
	bl FUN_021CCB54
	adds r4, r0, #0
	ldr r5, _021CCB50 ; =0x00000000
	beq _021CCB4C
_021CCB20:
	adds r0, r7, #0
	movs r1, #1
	adds r2, r5, #0
	bl FUN_021CCB64
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021CCB42
	movs r1, #2
	movs r0, #0x31
	lsls r1, r1, #0xc
	bl FUN_021BCF58
	pop {r3, r4, r5, r6, r7, pc}
_021CCB42:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r4
	blo _021CCB20
_021CCB4C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCB50: .word 0x00000000
	thumb_func_end FUN_021CCAFC

	thumb_func_start FUN_021CCB54
FUN_021CCB54: ; 0x021CCB54
	bx pc
	nop
	thumb_func_end FUN_021CCB54
_021CCB58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xFD, 0xD2, 0x89, 0x06

	thumb_func_start FUN_021CCB64
FUN_021CCB64: ; 0x021CCB64
	bx pc
	nop
	thumb_func_end FUN_021CCB64
_021CCB68:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x0D, 0xD3, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCB80
FUN_021CCB80: ; 0x021CCB80
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CCB9E
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x3b
	bl FUN_021BCF10
_021CCB9E:
	pop {r4, pc}
	thumb_func_end FUN_021CCB80
_021CCBA0:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCBAC
FUN_021CCBAC: ; 0x021CCBAC
	push {r3, r4, r5, r6, r7, lr}
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CCBF4
	movs r0, #5
	bl FUN_021BCFB0
	adds r7, r0, #0
	ldr r5, _021CCBF8 ; =0x00000000
	beq _021CCBF4
_021CCBCA:
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0x14
	bl FUN_021AC424
	adds r4, r0, #0
	movs r0, #0xa
	bl FUN_021CE570
	strh r0, [r4, #4]
	adds r0, r5, #6
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
	adds r5, r5, #1
	cmp r5, r7
	blo _021CCBCA
_021CCBF4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCBF8: .word 0x00000000
	thumb_func_end FUN_021CCBAC
_021CCBFC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xB8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCC08
FUN_021CCC08: ; 0x021CCC08
	push {r3, r4, r5, r6, r7, lr}
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CCC88
	movs r0, #5
	bl FUN_021BCFB0
	adds r7, r0, #0
	ldr r5, _021CCC8C ; =0x00000000
	beq _021CCC88
_021CCC26:
	adds r0, r5, #6
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	cmp r0, #0x36
	beq _021CCC82
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #0x1f
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r5, #6
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	movs r0, #0x56
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021CCC90 ; =0x00000195
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrh r1, [r4, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CCC82:
	adds r5, r5, #1
	cmp r5, r7
	blo _021CCC26
_021CCC88:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCC8C: .word 0x00000000
_021CCC90: .word 0x00000195
	thumb_func_end FUN_021CCC08
_021CCC94:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCCA0
FUN_021CCCA0: ; 0x021CCCA0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021CCD3E
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	bl FUN_021CCD48
	cmp r0, #0
	bne _021CCD3E
	movs r0, #5
	bl FUN_021BCFB0
	movs r5, #0
	str r0, [sp]
	cmp r0, #0
	bls _021CCD3E
_021CCCDC:
	adds r0, r5, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r6, #0
	bl FUN_021AB874
	movs r1, #0x10
	bl FUN_021BB1F4
	cmp r0, #0x36
	beq _021CCD36
	adds r0, r6, #0
	movs r1, #0x1f
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r5, #6
	bl FUN_021BCFB0
	strb r0, [r4, #6]
	ldr r0, [sp, #4]
	ldr r2, _021CCD44 ; =0x00000195
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r4, #0
	ldrh r1, [r4, #4]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CCD36:
	ldr r0, [sp]
	adds r5, r5, #1
	cmp r5, r0
	blo _021CCCDC
_021CCD3E:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCD44: .word 0x00000195
	thumb_func_end FUN_021CCCA0

	thumb_func_start FUN_021CCD48
FUN_021CCD48: ; 0x021CCD48
	bx pc
	nop
	thumb_func_end FUN_021CCD48
_021CCD4C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xC5, 0xCA, 0x89, 0x06, 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0xA8, 0x95, 0x1D, 0x02

	thumb_func_start FUN_021CCD64
FUN_021CCD64: ; 0x021CCD64
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CCDC6
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021CCDC6
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	movs r1, #0x10
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #4]
	adds r0, r5, #0
	strb r4, [r1, #5]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r6, r0, #0
	adds r0, r6, #4
	movs r1, #2
	movs r2, #0xc3
	bl FUN_021AC3B8
	adds r0, r6, #4
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
_021CCDC6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CCD64
_021CCDC8:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x60, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCDD4
FUN_021CCDD4: ; 0x021CCDD4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CCE4C
	movs r0, #0x46
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021CCE4C
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r7, #0
	bl FUN_02026C20
	cmp r0, #0
	beq _021CCE4C
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #6]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	ldr r2, _021CCE50 ; =0x00000454
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CCE4C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCE50: .word 0x00000454
	thumb_func_end FUN_021CCDD4
_021CCE54:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCE60
FUN_021CCE60: ; 0x021CCE60
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CCEA2
	adds r0, r4, #0
	movs r1, #0x2e
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	strb r0, [r5, #6]
	adds r0, r6, #0
	bl FUN_021BC8F8
	ldr r1, _021CCEA4 ; =0x000001FD
	cmp r0, r1
	bne _021CCE96
	adds r1, #0x8e
	b _021CCE98
_021CCE96:
	adds r1, #0x8f
_021CCE98:
	strh r1, [r5, #4]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CCEA2:
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CCEA4: .word 0x000001FD
	thumb_func_end FUN_021CCE60
_021CCEA8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x7C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CCEB4
FUN_021CCEB4: ; 0x021CCEB4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	beq _021CCEC8
	b _021CCFCA
_021CCEC8:
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r6, #0
	bl FUN_021ABEF4
	cmp r0, #0
	bne _021CCFCA
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABDB4
	cmp r0, #0
	beq _021CCF8C
	ldr r0, [sp]
	movs r1, #0x21
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CCF8C
	adds r0, r5, #0
	movs r1, #0xc
	adds r2, r7, #0
	bl FUN_021AC424
	adds r6, r0, #0
	strb r4, [r6, #0xf]
	movs r0, #0x1f
	str r0, [r6, #4]
	bl FUN_021CE240
	str r0, [r6, #8]
	adds r0, r6, #0
	ldr r2, _021CCFD0 ; =0x00000468
	adds r0, #0x14
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r6, #0
	adds r0, #0x14
	adds r1, r4, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AC448
	ldr r0, [sp]
	movs r1, #0x1e
	movs r6, #1
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CCF62
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r7, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r6, [r1, #0x14]
	strb r4, [r1, #8]
	strb r6, [r1, #0x15]
	movs r0, #0x1e
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021CCF62:
	ldr r0, [sp]
	movs r1, #0x20
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CCF8C
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r7, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #0x14]
	strb r4, [r1, #8]
	strb r0, [r1, #0x15]
	movs r0, #0x20
	str r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021CCF8C:
	ldr r0, [sp]
	movs r1, #3
	bl FUN_021BB41C
	cmp r0, #0
	beq _021CCFCA
	adds r0, r5, #0
	movs r1, #0x36
	adds r2, r7, #0
	bl FUN_021AC424
	adds r7, r0, #0
	movs r1, #3
	strb r4, [r7, #4]
	str r1, [r7, #8]
	cmp r6, #0
	bne _021CCFC2
	ldr r2, _021CCFD0 ; =0x00000468
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r7, #0
	adds r0, #0xc
	adds r1, r4, #0
	bl FUN_021AC3E0
_021CCFC2:
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AC448
_021CCFCA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CCFD0: .word 0x00000468
	thumb_func_end FUN_021CCEB4
_021CCFD4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x10, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CCFE0
FUN_021CCFE0: ; 0x021CCFE0
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD08E
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #2
	str r0, [r1, #4]
	subs r7, r0, #3
	strb r7, [r1, #0xc]
	movs r6, #1
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	adds r0, r5, #0
	strb r6, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #4
	str r0, [r1, #4]
	strb r7, [r1, #0xc]
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	adds r0, r5, #0
	strb r6, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	str r6, [r1, #4]
	movs r0, #2
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	adds r0, r5, #0
	strb r6, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #3
	str r0, [r1, #4]
	movs r0, #2
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	adds r0, r5, #0
	strb r6, [r1, #0xe]
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0xe
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	movs r0, #5
	str r0, [r1, #4]
	movs r0, #2
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xf]
	strb r4, [r1, #0x10]
	adds r0, r5, #0
	strb r6, [r1, #0xe]
	bl FUN_021AC448
_021CD08E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CCFE0
_021CD090:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD09C
FUN_021CD09C: ; 0x021CD09C
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CD11C
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_021AB874
	adds r7, r0, #0
	adds r0, r4, #0
	movs r1, #0x14
	adds r2, r6, #0
	bl FUN_021AC424
	adds r5, r0, #0
	strb r6, [r5, #6]
	adds r0, r7, #0
	bl FUN_021BB03C
	strh r0, [r5, #4]
	movs r0, #1
	strb r0, [r5, #7]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	adds r0, r4, #0
	movs r1, #4
	adds r2, r6, #0
	movs r7, #4
	bl FUN_021AC424
	adds r5, r0, #0
	ldr r1, [r5]
	lsls r0, r7, #0x16
	orrs r0, r1
	str r0, [r5]
	ldr r2, _021CD120 ; =0x00000441
	adds r0, r5, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	ldr r1, [sp]
	adds r0, r5, #4
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CD11C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CD120: .word 0x00000441
	thumb_func_end FUN_021CD09C
_021CD124:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x40, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CD130
FUN_021CD130: ; 0x021CD130
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD18E
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AB874
	bl FUN_021BC028
	adds r6, r0, #0
	cmp r6, #1
	bls _021CD18E
	adds r0, r7, #0
	movs r1, #0x2d
	adds r2, r5, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r0, _021CD190 ; =0x000003E9
	cmp r6, r0
	bls _021CD16A
	subs r0, r0, #1
	subs r0, r6, r0
	b _021CD16C
_021CD16A:
	movs r0, #1
_021CD16C:
	strb r5, [r4, #4]
	strh r0, [r4, #6]
	adds r0, r4, #0
	ldr r2, _021CD194 ; =0x0000044E
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CD18E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CD190: .word 0x000003E9
_021CD194: .word 0x0000044E
	thumb_func_end FUN_021CD130
_021CD198:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x98, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD1A4
FUN_021CD1A4: ; 0x021CD1A4
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD1CC
	movs r0, #0x3c
	bl FUN_021BCFB0
	cmp r0, #0xb
	bne _021CD1CC
	movs r0, #0x3d
	bl FUN_021BCFB0
	adds r1, r0, #0
	movs r0, #0x3d
	adds r1, r1, #1
	bl FUN_021BCF10
_021CD1CC:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CD1A4
_021CD1D0:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x5C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CD1DC
FUN_021CD1DC: ; 0x021CD1DC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD1F2
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CD1F2:
	pop {r4, pc}
	thumb_func_end FUN_021CD1DC

	thumb_func_start FUN_021CD1F4
FUN_021CD1F4: ; 0x021CD1F4
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD20A
	movs r0, #0x4b
	movs r1, #1
	bl FUN_021BCF10
_021CD20A:
	pop {r4, pc}
	thumb_func_end FUN_021CD1F4
_021CD20C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x60, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD218
FUN_021CD218: ; 0x021CD218
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD278
	movs r0, #6
	movs r6, #6
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021CD264
	adds r0, r4, #0
	movs r1, #0x1b
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	str r6, [r5, #4]
	movs r0, #5
	bl FUN_021CE1C0
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	movs r2, #0xb2
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021CD264:
	adds r0, r4, #0
	movs r1, #0x1c
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r4, #0
	str r6, [r1, #4]
	bl FUN_021AC448
_021CD278:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021CD218
_021CD27C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x48, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD288
FUN_021CD288: ; 0x021CD288
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD2E8
	movs r0, #7
	movs r6, #7
	bl FUN_021D5AB4
	cmp r0, #0
	bne _021CD2D4
	adds r0, r4, #0
	movs r1, #0x1b
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	str r6, [r5, #4]
	movs r0, #5
	bl FUN_021CE1C0
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	movs r2, #0xb4
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021CD2D4:
	adds r0, r4, #0
	movs r1, #0x1c
	adds r2, r5, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r4, #0
	str r6, [r1, #4]
	bl FUN_021AC448
_021CD2E8:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021CD288
_021CD2EC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x20, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD2F8
FUN_021CD2F8: ; 0x021CD2F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r2, [sp]
	movs r0, #3
	adds r6, r1, #0
	bl FUN_021BCFB0
	ldr r1, [sp]
	cmp r1, r0
	bne _021CD3AA
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r1, [sp, #8]
	adds r0, r6, #0
	bl FUN_021AB8B4
	adds r2, r0, #0
	cmp r2, #6
	beq _021CD3AA
	movs r1, #9
	lsls r1, r1, #8
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r6, #0
	lsrs r1, r1, #0x10
	add r2, sp, #0x10
	bl FUN_021ABAE8
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	movs r5, #0
	cmp r0, #0
	bls _021CD3AA
	movs r0, #1
	str r0, [sp, #0xc]
_021CD346:
	add r0, sp, #0x10
	ldrb r1, [r0, r5]
	ldr r0, [sp, #8]
	cmp r1, r0
	beq _021CD39E
	adds r0, r6, #0
	bl FUN_021AB874
	adds r7, r0, #0
	ldr r2, [sp]
	adds r0, r6, #0
	movs r1, #7
	bl FUN_021AC424
	adds r4, r0, #0
	add r0, sp, #0x10
	ldrb r0, [r0, r5]
	movs r1, #0x10
	strb r0, [r4, #6]
	adds r0, r7, #0
	bl FUN_021BD3C8
	strh r0, [r4, #4]
	ldrb r1, [r4, #7]
	ldr r0, [sp, #0xc]
	ldr r2, _021CD3B0 ; =0x00000451
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldrb r1, [r4, #6]
	adds r0, #0xc
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CD39E:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #4]
	cmp r5, r0
	blo _021CD346
_021CD3AA:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021CD3B0: .word 0x00000451
	thumb_func_end FUN_021CD2F8
_021CD3B4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xF8, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CD3C0
FUN_021CD3C0: ; 0x021CD3C0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD40A
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB03C
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BB03C
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021CE5C8
	cmp r0, #0
	bne _021CD40A
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021CD40A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CD3C0
_021CD40C:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x00, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CD418
FUN_021CD418: ; 0x021CD418
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD4E4
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021AB874
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	beq _021CD4E4
	adds r0, r6, #0
	bl FUN_02026BCC
	cmp r0, #0
	bne _021CD4E4
	ldr r0, [sp]
	bl FUN_021BB380
	cmp r0, #0
	bne _021CD4E4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDF1C
	cmp r0, #0
	bne _021CD4E4
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021CDF1C
	cmp r0, #0
	bne _021CD4E4
	ldr r0, [sp]
	bl FUN_021BAC84
	adds r1, r6, #0
	bl FUN_021CDEB8
	cmp r0, #0
	bne _021CD4E4
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r4, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #6]
	movs r0, #0
	strh r0, [r1, #4]
	adds r0, r5, #0
	bl FUN_021AC448
	adds r0, r5, #0
	movs r1, #0x20
	adds r2, r4, #0
	bl FUN_021AC424
	strb r7, [r0, #6]
	ldr r2, _021CD4E8 ; =0x00000457
	str r0, [sp, #4]
	strh r6, [r0, #4]
	adds r0, #0xc
	movs r1, #2
	bl FUN_021AC3B8
	ldr r0, [sp, #4]
	adds r1, r7, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	ldr r0, [sp, #4]
	adds r1, r4, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	ldr r0, [sp, #4]
	adds r1, r6, #0
	adds r0, #0xc
	bl FUN_021AC3E0
	ldr r1, [sp, #4]
	adds r0, r5, #0
	bl FUN_021AC448
_021CD4E4:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CD4E8: .word 0x00000457
	thumb_func_end FUN_021CD418
_021CD4EC:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0xAC, 0x9B, 0x1D, 0x02

	thumb_func_start FUN_021CD4F8
FUN_021CD4F8: ; 0x021CD4F8
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD51E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r1, r0, #0
	movs r0, #0x37
	bl FUN_021BCF10
_021CD51E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CD4F8
_021CD520:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xB0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CD52C
FUN_021CD52C: ; 0x021CD52C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD56E
	adds r0, r4, #0
	movs r1, #0x2f
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	strb r0, [r5, #4]
	adds r0, r5, #0
	ldr r2, _021CD570 ; =0x0000046E
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldrb r1, [r5, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CD56E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021CD570: .word 0x0000046E
	thumb_func_end FUN_021CD52C
_021CD574:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x78, 0x96, 0x1D, 0x02

	thumb_func_start FUN_021CD580
FUN_021CD580: ; 0x021CD580
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD5C2
	adds r0, r4, #0
	movs r1, #0x31
	adds r2, r5, #0
	bl FUN_021AC424
	adds r5, r0, #0
	movs r0, #6
	bl FUN_021BCFB0
	strb r0, [r5, #4]
	adds r0, r5, #0
	ldr r2, _021CD5C4 ; =0x0000046B
	adds r0, #8
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r5, #0
	ldrb r1, [r5, #4]
	adds r0, #8
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AC448
_021CD5C2:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021CD5C4: .word 0x0000046B
	thumb_func_end FUN_021CD580
_021CD5C8:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x8C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CD5D4
FUN_021CD5D4: ; 0x021CD5D4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CD61E
	adds r0, r5, #0
	bl FUN_021ABCAC
	adds r7, r0, #0
	adds r0, r4, #0
	bl FUN_021BC8F8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCB8
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021CD620
	cmp r0, #1
	bne _021CD61E
	adds r0, r5, #0
	movs r1, #0x30
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	adds r0, r5, #0
	strh r4, [r1, #4]
	bl FUN_021AC448
_021CD61E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CD5D4

	thumb_func_start FUN_021CD620
FUN_021CD620: ; 0x021CD620
	bx pc
	nop
	thumb_func_end FUN_021CD620
_021CD624:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x21, 0xD2, 0x89, 0x06

	thumb_func_start FUN_021CD630
FUN_021CD630: ; 0x021CD630
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD66C
	adds r0, r5, #0
	bl FUN_021ABCAC
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021ABCB8
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_021CD670
	cmp r0, #1
	bls _021CD66C
	movs r0, #2
	bl FUN_021CE0E0
_021CD66C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021CD630

	thumb_func_start FUN_021CD670
FUN_021CD670: ; 0x021CD670
	bx pc
	nop
	thumb_func_end FUN_021CD670
_021CD674:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x21, 0xD2, 0x89, 0x06
	.byte 0x04, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x7C, 0x9E, 0x1D, 0x02

	thumb_func_start FUN_021CD68C
FUN_021CD68C: ; 0x021CD68C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	adds r4, r2, #0
	movs r0, #1
	adds r5, r1, #0
	str r3, [sp, #0x10]
	bl FUN_021CE1C0
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0219D35C
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	str r6, [sp, #8]
	movs r0, #0xa2
	str r0, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021CADE4
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	bl FUN_021C94D4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CD68C
_021CD6CC:
	.byte 0x01, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x90, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CD6D8
FUN_021CD6D8: ; 0x021CD6D8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r2, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021ABB90
	adds r4, r0, #0
	adds r0, r5, #0
	adds r7, r6, #0
	bl FUN_021ABCDC
	cmp r0, #1
	beq _021CD6FA
	cmp r0, #2
	beq _021CD726
	b _021CD750
_021CD6FA:
	adds r0, r6, #0
	bl FUN_0219C688
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_021ABE80
	cmp r0, #4
	bne _021CD750
	adds r0, r4, #0
	movs r1, #0
	bl FUN_0219C4E4
	adds r1, r0, #0
	cmp r1, r4
	bne _021CD724
	adds r0, r4, #0
	movs r1, #1
	bl FUN_0219C4E4
	adds r1, r0, #0
_021CD724:
	b _021CD748
_021CD726:
	adds r0, r4, #0
	bl FUN_0219D30C
	cmp r0, #0
	bne _021CD750
	adds r0, r4, #0
	movs r1, #0
	bl FUN_0219C4E4
	adds r1, r0, #0
	cmp r1, r4
	bne _021CD748
	adds r0, r4, #0
	movs r1, #2
	bl FUN_0219C4E4
	adds r1, r0, #0
_021CD748:
	adds r0, r5, #0
	bl FUN_021ABBA0
	adds r7, r0, #0
_021CD750:
	cmp r7, r6
	beq _021CD78A
	adds r0, r5, #0
	movs r1, #0x32
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	strb r6, [r4, #4]
	ldr r2, _021CD78C ; =0x00000471
	adds r0, #8
	movs r1, #2
	strb r7, [r4, #5]
	bl FUN_021AC3B8
	adds r0, r4, #0
	adds r0, #8
	adds r1, r6, #0
	bl FUN_021AC3E0
	adds r0, r4, #0
	adds r0, #8
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CD78A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CD78C: .word 0x00000471
	thumb_func_end FUN_021CD6D8
_021CD790:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x6C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CD79C
FUN_021CD79C: ; 0x021CD79C
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD7EA
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC84
	cmp r0, #0x32
	beq _021CD7E2
	cmp r0, #0x33
	beq _021CD7E2
	adds r0, r4, #0
	movs r1, #0x1f
	bl FUN_021BBB04
	cmp r0, #0
	bne _021CD7E2
	adds r0, r4, #0
	movs r1, #0x15
	bl FUN_021BBB04
	cmp r0, #0
	beq _021CD7EA
_021CD7E2:
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021CD7EA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CD79C

	thumb_func_start FUN_021CD7EC
FUN_021CD7EC: ; 0x021CD7EC
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD822
	movs r0, #0x3f
	bl FUN_021BCFB0
	adds r4, r0, #0
	movs r0, #0x1d
	movs r1, #0x20
	bl FUN_021BCF10
	ldr r2, _021CD824 ; =0x00000474
	adds r0, r4, #0
	movs r1, #2
	bl FUN_021AC3B8
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_021AC3E0
_021CD822:
	pop {r4, pc}
	.align 2, 0
_021CD824: .word 0x00000474
	thumb_func_end FUN_021CD7EC
_021CD828:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47
	.byte 0x5C, 0xA0, 0x1D, 0x02

	thumb_func_start FUN_021CD834
FUN_021CD834: ; 0x021CD834
	push {r4, lr}
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD862
	movs r0, #4
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x1f
	beq _021CD862
	adds r0, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021CD862
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021CD862:
	pop {r4, pc}
	thumb_func_end FUN_021CD834

	thumb_func_start FUN_021CD864
FUN_021CD864: ; 0x021CD864
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #3
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021CD8EA
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #0
	str r0, [sp]
	cmp r5, #0x1f
	beq _021CD896
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	add r3, sp, #0
	bl FUN_021ABFEC
	cmp r0, #0
	bne _021CD8B0
_021CD896:
	movs r0, #0x41
	movs r1, #1
	movs r4, #1
	bl FUN_021BCF10
	ldr r0, [sp]
	cmp r0, #0
	beq _021CD8EA
	movs r0, #0x4f
	adds r1, r4, #0
	bl FUN_021BCF10
	pop {r3, r4, r5, r6, r7, pc}
_021CD8B0:
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CD8EA
	adds r0, r6, #0
	movs r1, #4
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	ldr r2, _021CD8EC ; =0x0000045E
	adds r0, r4, #4
	movs r1, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r4, #4
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CD8EA:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CD8EC: .word 0x0000045E
	thumb_func_end FUN_021CD864

	thumb_func_start FUN_021CD8F0
FUN_021CD8F0: ; 0x021CD8F0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CD93C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021CD91C
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x18
	blo _021CD91E
_021CD91C:
	movs r1, #0x1f
_021CD91E:
	cmp r1, #0x1f
	beq _021CD92C
	adds r0, r5, #0
	bl FUN_021AB880
	cmp r0, #6
	bne _021CD934
_021CD92C:
	movs r0, #0x41
	movs r1, #1
	bl FUN_021BCF10
_021CD934:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC014
_021CD93C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CD8F0

	thumb_func_start FUN_021CD940
FUN_021CD940: ; 0x021CD940
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021ABCDC
	cmp r0, #0
	beq _021CD982
	adds r0, r5, #0
	bl FUN_021ABCDC
	cmp r0, #3
	beq _021CD982
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021CD976
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x18
	blo _021CD978
_021CD976:
	movs r1, #0x1f
_021CD978:
	cmp r1, #0x1f
	beq _021CD982
	movs r0, #4
	bl FUN_021BCF10
_021CD982:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CD940

	thumb_func_start FUN_021CD984
FUN_021CD984: ; 0x021CD984
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CD9C8
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021AB874
	movs r1, #4
	bl FUN_021BC1EC
	cmp r0, #0
	beq _021CD9B0
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x18
	blo _021CD9B2
_021CD9B0:
	movs r1, #0x1f
_021CD9B2:
	cmp r1, #0x1f
	beq _021CD9C8
	adds r0, r4, #0
	bl FUN_021ABCCC
	cmp r0, #0
	bne _021CD9C8
	movs r0, #0x22
	movs r1, #0x1a
	bl FUN_021BCF10
_021CD9C8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CD984

	thumb_func_start FUN_021CD9CC
FUN_021CD9CC: ; 0x021CD9CC
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r4, r1, #0
	adds r5, r2, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDA00
	movs r0, #4
	bl FUN_021BCFB0
	adds r1, r0, #0
	lsls r1, r1, #0x18
	adds r0, r4, #0
	lsrs r1, r1, #0x18
	bl FUN_021AB874
	movs r1, #2
	bl FUN_021BB054
	cmp r0, #0
	beq _021CDA00
	movs r0, #0x40
	movs r1, #1
	bl FUN_021BCF10
_021CDA00:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CD9CC
_021CDA04:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xE0, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CDA10
FUN_021CDA10: ; 0x021CDA10
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r2, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_021AB874
	adds r4, r0, #0
	bl FUN_021BAC84
	movs r1, #0xa2
	lsls r1, r1, #2
	cmp r0, r1
	bne _021CDA72
	movs r0, #3
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDA72
	adds r0, r4, #0
	movs r1, #0x13
	bl FUN_021BB1F4
	movs r4, #1
	cmp r0, #0
	beq _021CDA46
	movs r4, #0
_021CDA46:
	adds r0, r6, #0
	movs r1, #0x39
	adds r2, r5, #0
	bl FUN_021AC424
	adds r7, r0, #0
	strb r5, [r7, #4]
	adds r0, #8
	movs r1, #2
	movs r2, #0xde
	strb r4, [r7, #5]
	bl FUN_021AC3B8
	adds r0, r7, #0
	adds r0, #8
	adds r1, r5, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_021AC448
_021CDA72:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CDA10
_021CDA74:
	.byte 0x02, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x5C, 0x99, 0x1D, 0x02

	thumb_func_start FUN_021CDA80
FUN_021CDA80: ; 0x021CDA80
	push {r3, r4, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CDAA8
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	add r0, sp, #0
	movs r1, #7
	bl FUN_021CE3A8
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021CDAA8:
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021CDA80
_021CDAAC:
	.byte 0x02, 0x21, 0x01, 0x60
	.byte 0x00, 0x48, 0x70, 0x47, 0x1C, 0x9A, 0x1D, 0x02

	thumb_func_start FUN_021CDAB8
FUN_021CDAB8: ; 0x021CDAB8
	push {r3, r4, lr}
	sub sp, #4
	movs r0, #3
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CDAE0
	movs r0, #0x1e
	bl FUN_021BCFB0
	str r0, [sp]
	add r0, sp, #0
	movs r1, #0x10
	bl FUN_021CE3A8
	ldr r1, [sp]
	movs r0, #0x1e
	bl FUN_021BCF10
_021CDAE0:
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021CDAB8
_021CDAE4:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x68, 0x97, 0x1D, 0x02

	thumb_func_start FUN_021CDAF0
FUN_021CDAF0: ; 0x021CDAF0
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CDB1E
	adds r0, r5, #0
	bl FUN_021ABE08
	cmp r0, #1
	bne _021CDB1E
	movs r0, #0x20
	bl FUN_021BCFB0
	adds r1, r0, #0
	cmp r1, #1
	bne _021CDB18
	adds r1, r1, #1
_021CDB18:
	movs r0, #0x20
	bl FUN_021BCF10
_021CDB1E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CDAF0
_021CDB20:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xD8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CDB2C
FUN_021CDB2C: ; 0x021CDB2C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r0, #3
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021BCFB0
	cmp r7, r0
	bne _021CDB76
	adds r0, r4, #0
	bl FUN_021BC8F8
	ldr r1, _021CDB78 ; =0x00000229
	ldr r5, _021CDB7C ; =0x0000035F
	cmp r0, r1
	beq _021CDB4E
	ldr r5, _021CDB80 ; =0x00000362
_021CDB4E:
	adds r0, r6, #0
	movs r1, #4
	adds r2, r7, #0
	bl FUN_021AC424
	adds r4, r0, #0
	lsls r2, r5, #0x10
	adds r0, r4, #4
	movs r1, #2
	lsrs r2, r2, #0x10
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r7, #0
	bl FUN_021AC3E0
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CDB76:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021CDB78: .word 0x00000229
_021CDB7C: .word 0x0000035F
_021CDB80: .word 0x00000362
	thumb_func_end FUN_021CDB2C
_021CDB84:
	.byte 0x01, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0xA8, 0x98, 0x1D, 0x02

	thumb_func_start FUN_021CDB90
FUN_021CDB90: ; 0x021CDB90
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CDBEC
	adds r0, r5, #0
	bl FUN_021ABCAC
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_021BC8F8
	ldr r4, _021CDBF0 ; =0x0000022E
	cmp r0, r4
	beq _021CDBBE
	adds r1, r4, #1
	cmp r0, r1
	beq _021CDBC4
	b _021CDBC2
_021CDBBE:
	adds r4, r4, #1
	b _021CDBC4
_021CDBC2:
	movs r4, #0
_021CDBC4:
	cmp r4, #0
	beq _021CDBEC
	adds r0, r5, #0
	bl FUN_021ABCB8
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021CDBF4
	cmp r4, r0
	bne _021CDBEC
	movs r1, #2
	movs r0, #0x31
	lsls r1, r1, #0xc
	bl FUN_021BCF58
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021ABF5C
_021CDBEC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CDBF0: .word 0x0000022E
	thumb_func_end FUN_021CDB90

	thumb_func_start FUN_021CDBF4
FUN_021CDBF4: ; 0x021CDBF4
	bx pc
	nop
	thumb_func_end FUN_021CDBF4
_021CDBF8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x51, 0xD2, 0x89, 0x06

	thumb_func_start FUN_021CDC04
FUN_021CDC04: ; 0x021CDC04
	push {r4, r5, r6, r7}
	ldr r4, _021CDC38 ; =0x021D9DB4
	movs r5, #0
_021CDC0A:
	lsls r2, r5, #3
	ldrh r7, [r4, r2]
	adds r6, r4, r2
	cmp r0, r7
	bne _021CDC1A
	ldrh r3, [r6, #2]
	cmp r1, r3
	beq _021CDC24
_021CDC1A:
	cmp r1, r7
	bne _021CDC2C
	ldrh r3, [r6, #2]
	cmp r0, r3
	bne _021CDC2C
_021CDC24:
	ldr r0, _021CDC3C ; =0x021D9DB8
	ldr r0, [r0, r2]
	pop {r4, r5, r6, r7}
	bx lr
_021CDC2C:
	adds r5, r5, #1
	cmp r5, #3
	blo _021CDC0A
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
_021CDC38: .word 0x021D9DB4
_021CDC3C: .word 0x021D9DB8
	thumb_func_end FUN_021CDC04
_021CDC40:
	.byte 0x06, 0x21, 0x01, 0x60, 0x00, 0x48, 0x70, 0x47, 0x2C, 0xA0, 0x1D, 0x02

	thumb_func_start FUN_021CDC4C
FUN_021CDC4C: ; 0x021CDC4C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	adds r7, r1, #0
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDCBC
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021AB874
	add r2, sp, #0
	add r1, sp, #0
	adds r2, #2
	bl FUN_021BC690
	cmp r0, #0
	beq _021CDCBC
	adds r0, r6, #0
	bl FUN_021BC8F8
	add r6, sp, #0
	ldrh r1, [r6, #2]
	bl FUN_021CDC04
	adds r5, r0, #0
	movs r0, #0x16
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r5, #0
	beq _021CDCBC
	movs r0, #1
	str r5, [r4, #4]
	str r0, [r4]
	ldrb r0, [r6]
	cmp r5, #1
	str r0, [r4, #8]
	beq _021CDCAC
	cmp r5, #2
	beq _021CDCB0
	cmp r5, #3
	beq _021CDCB4
	b _021CDCB6
_021CDCAC:
	movs r1, #0xa
	b _021CDCB6
_021CDCB0:
	movs r1, #9
	b _021CDCB6
_021CDCB4:
	movs r1, #0xb
_021CDCB6:
	movs r0, #0x16
	bl FUN_021BCF10
_021CDCBC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CDC4C

	thumb_func_start FUN_021CDCC0
FUN_021CDCC0: ; 0x021CDCC0
	push {r4, r5, r6, lr}
	movs r0, #3
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CDCF6
	ldr r0, [r6]
	cmp r0, #0
	beq _021CDCF6
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	bl FUN_021AC424
	adds r4, r0, #0
	adds r0, r4, #4
	movs r1, #1
	movs r2, #0xbb
	bl FUN_021AC3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CDCF6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CDCC0

	thumb_func_start FUN_021CDCF8
FUN_021CDCF8: ; 0x021CDCF8
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDD16
	ldr r0, [r4]
	cmp r0, #0
	beq _021CDD16
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CDD16:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CDCF8

	thumb_func_start FUN_021CDD18
FUN_021CDD18: ; 0x021CDD18
	push {r3, r4, r5, lr}
	movs r0, #3
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDD36
	ldr r0, [r4]
	cmp r0, #0
	beq _021CDD36
	movs r0, #0x30
	movs r1, #0x96
	bl FUN_021BCF10
_021CDD36:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CDD18

	thumb_func_start FUN_021CDD38
FUN_021CDD38: ; 0x021CDD38
	push {r3, r4, r5, lr}
	movs r0, #2
	adds r5, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDD72
	ldr r0, [r4]
	cmp r0, #0
	beq _021CDD72
	ldr r0, [r4, #4]
	movs r1, #0
	cmp r0, #1
	beq _021CDD60
	cmp r0, #2
	beq _021CDD64
	cmp r0, #3
	beq _021CDD68
	b _021CDD6C
_021CDD60:
	ldr r1, _021CDD74 ; =0x00000206
	b _021CDD6C
_021CDD64:
	ldr r1, _021CDD78 ; =0x00000207
	b _021CDD6C
_021CDD68:
	movs r1, #0x82
	lsls r1, r1, #2
_021CDD6C:
	movs r0, #0x13
	bl FUN_021BCF10
_021CDD72:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021CDD74: .word 0x00000206
_021CDD78: .word 0x00000207
	thumb_func_end FUN_021CDD38

	thumb_func_start FUN_021CDD7C
FUN_021CDD7C: ; 0x021CDD7C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	movs r0, #3
	str r1, [sp]
	adds r6, r2, #0
	adds r4, r3, #0
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CDE66
	ldr r0, [r4]
	cmp r0, #0
	beq _021CDE66
	adds r0, r6, #0
	movs r5, #0xe
	bl FUN_0219D35C
	str r0, [sp, #0x10]
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_0219D35C
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0
	str r1, [sp, #4]
	ldr r1, [r4, #4]
	movs r7, #0x1f
	cmp r1, #1
	beq _021CDDC8
	cmp r1, #2
	beq _021CDDDA
	cmp r1, #3
	beq _021CDDE6
	b _021CDDFC
_021CDDC8:
	movs r0, #0xa4
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	movs r5, #0xb
	str r0, [sp, #0xc]
	ldr r0, _021CDE6C ; =0x0000028D
	adds r7, r6, #0
	str r0, [sp, #8]
	b _021CDDFC
_021CDDDA:
	movs r1, #0xa8
	str r1, [sp, #4]
	str r0, [sp, #0xc]
	movs r5, #0xc
	ldr r0, _021CDE70 ; =0x0000028E
	b _021CDDF0
_021CDDE6:
	movs r1, #0xac
	str r1, [sp, #4]
	str r0, [sp, #0xc]
	ldr r0, _021CDE74 ; =0x0000028F
	movs r5, #0xd
_021CDDF0:
	str r0, [sp, #8]
	movs r0, #6
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_021CDDFC:
	cmp r5, #0xe
	beq _021CDE66
	ldr r0, [sp]
	movs r1, #0x19
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	str r5, [r4, #4]
	ldr r0, [sp, #0xc]
	strb r0, [r4, #0xc]
	movs r0, #4
	bl FUN_021CE1C0
	str r0, [r4, #8]
	adds r0, r4, #0
	ldr r2, [sp, #4]
	adds r0, #0x10
	movs r1, #1
	bl FUN_021AC3B8
	adds r0, r4, #0
	ldr r1, [sp, #0xc]
	adds r0, #0x10
	bl FUN_021AC3E0
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_021AC448
	cmp r7, #0x1f
	beq _021CDE66
	ldr r0, [sp]
	adds r1, r7, #0
	bl FUN_021AB8B4
	adds r4, r0, #0
	cmp r4, #6
	beq _021CDE66
	ldr r0, [sp]
	movs r1, #0x37
	adds r2, r6, #0
	bl FUN_021AC424
	adds r1, r0, #0
	strb r4, [r1, #6]
	movs r0, #6
	strb r0, [r1, #7]
	ldr r0, [sp, #8]
	strh r0, [r1, #4]
	ldr r0, [sp]
	bl FUN_021AC448
_021CDE66:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CDE6C: .word 0x0000028D
_021CDE70: .word 0x0000028E
_021CDE74: .word 0x0000028F
	thumb_func_end FUN_021CDD7C

	thumb_func_start FUN_021CDE78
FUN_021CDE78: ; 0x021CDE78
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #5
	bl FUN_021BCFB0
	adds r6, r0, #0
	ldr r4, _021CDEA0 ; =0x00000000
	beq _021CDE9C
_021CDE88:
	adds r0, r4, #6
	bl FUN_021BCFB0
	cmp r5, r0
	bne _021CDE96
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CDE96:
	adds r4, r4, #1
	cmp r4, r6
	blo _021CDE88
_021CDE9C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CDEA0: .word 0x00000000
	thumb_func_end FUN_021CDE78

	thumb_func_start FUN_021CDEA4
FUN_021CDEA4: ; 0x021CDEA4
	push {r3, lr}
	bl FUN_021ABC2C
	cmp r0, #0
	beq _021CDEB2
	movs r0, #1
	pop {r3, pc}
_021CDEB2:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021CDEA4

	thumb_func_start FUN_021CDEB8
FUN_021CDEB8: ; 0x021CDEB8
	push {r3, lr}
	ldr r3, _021CDEF8 ; =0x000001E7
	cmp r0, r3
	beq _021CDECE
	adds r2, r3, #6
	cmp r0, r2
	beq _021CDED6
	adds r3, #0xa2
	cmp r0, r3
	beq _021CDEE4
	b _021CDEF2
_021CDECE:
	cmp r1, #0x70
	bne _021CDEF2
	movs r0, #1
	pop {r3, pc}
_021CDED6:
	adds r0, r1, #0
	bl FUN_021CDEFC
	cmp r0, #0
	beq _021CDEF2
	movs r0, #1
	pop {r3, pc}
_021CDEE4:
	adds r0, r1, #0
	bl FUN_021CDF0C
	cmp r0, #0
	beq _021CDEF2
	movs r0, #1
	pop {r3, pc}
_021CDEF2:
	movs r0, #0
	pop {r3, pc}
	nop
_021CDEF8: .word 0x000001E7
	thumb_func_end FUN_021CDEB8

	thumb_func_start FUN_021CDEFC
FUN_021CDEFC: ; 0x021CDEFC
	bx pc
	nop
	thumb_func_end FUN_021CDEFC
_021CDF00:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x09, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021CDF0C
FUN_021CDF0C: ; 0x021CDF0C
	bx pc
	nop
	thumb_func_end FUN_021CDF0C
_021CDF10:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x19, 0xCB, 0x89, 0x06

	thumb_func_start FUN_021CDF1C
FUN_021CDF1C: ; 0x021CDF1C
	push {r3, r4, r5, lr}
	bl FUN_021AB874
	adds r5, r0, #0
	bl FUN_021BAC84
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r4, #0
	bl FUN_021CDEB8
	cmp r0, #0
	beq _021CDF42
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CDF42:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CDF1C

	thumb_func_start FUN_021CDF48
FUN_021CDF48: ; 0x021CDF48
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_021ABCE8
	cmp r0, #0
	bne _021CDF64
	adds r0, r4, #0
	bl FUN_0219C688
	cmp r0, #1
	beq _021CDF60
	bne _021CDF64
_021CDF60:
	movs r0, #1
	pop {r4, pc}
_021CDF64:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021CDF48

	thumb_func_start FUN_021CDF68
FUN_021CDF68: ; 0x021CDF68
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021CDF48
	cmp r0, #0
	beq _021CDF7C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CDF7C:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021CDF1C
	cmp r0, #0
	beq _021CDF8C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CDF8C:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BAC84
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021BB380
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r5, #0
	bl FUN_021CDEB8
	cmp r0, #0
	beq _021CDFC0
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CDFC0:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CDF68

	thumb_func_start FUN_021CDFC4
FUN_021CDFC4: ; 0x021CDFC4
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021CE016
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	bl FUN_02021740
	cmp r0, #0xb
	bne _021CE016
	adds r0, r6, #0
	movs r1, #4
	bl FUN_0202143C
	cmp r0, #0
	beq _021CE016
	movs r0, #0x22
	movs r1, #0x19
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CE016
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_021ABFB4
_021CE016:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CDFC4

	thumb_func_start FUN_021CE018
FUN_021CE018: ; 0x021CE018
	push {r4, r5, r6, lr}
	movs r0, #4
	adds r5, r1, #0
	adds r4, r2, #0
	movs r6, #4
	bl FUN_021BCFB0
	cmp r4, r0
	bne _021CE080
	movs r0, #0x4e
	bl FUN_021BCFB0
	cmp r0, #0
	bne _021CE080
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AB874
	bl FUN_021BB470
	cmp r0, #0
	bne _021CE080
	movs r0, #0x12
	bl FUN_021BCFB0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	bl FUN_0202143C
	cmp r0, #0
	beq _021CE080
	movs r0, #0x40
	movs r1, #1
	movs r6, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CE080
	movs r0, #3
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021ABFB4
	movs r0, #0x51
	adds r1, r6, #0
	bl FUN_021BCF10
_021CE080:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021CE018

	thumb_func_start FUN_021CE084
FUN_021CE084: ; 0x021CE084
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #2
	adds r5, r1, #0
	adds r6, r2, #0
	movs r7, #2
	bl FUN_021BCFB0
	cmp r6, r0
	bne _021CE0DC
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021AB874
	bl FUN_021BB470
	cmp r0, #0
	bne _021CE0DC
	adds r0, r5, #0
	movs r1, #4
	adds r2, r6, #0
	bl FUN_021AC424
	adds r4, r0, #0
	movs r2, #0xbf
	adds r0, r4, #4
	adds r1, r7, #0
	lsls r2, r2, #2
	bl FUN_021AC3B8
	adds r0, r4, #4
	adds r1, r6, #0
	bl FUN_021AC3E0
	movs r0, #0x12
	bl FUN_021BCFB0
	adds r1, r0, #0
	adds r0, r4, #4
	bl FUN_021AC3E0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021AC448
_021CE0DC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CE084

	thumb_func_start FUN_021CE0E0
FUN_021CE0E0: ; 0x021CE0E0
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x30
	bl FUN_021BCFB0
	adds r1, r4, #0
	muls r1, r0, r1
	movs r0, #0x30
	bl FUN_021BCF10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CE0E0

	thumb_func_start FUN_021CE0F8
FUN_021CE0F8: ; 0x021CE0F8
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021CE118
	movs r0, #0x51
	movs r1, #1
	bl FUN_021BCF10
_021CE118:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CE0F8

	thumb_func_start FUN_021CE11C
FUN_021CE11C: ; 0x021CE11C
	push {r4, lr}
	movs r0, #2
	adds r4, r2, #0
	bl FUN_021BCFB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	beq _021CE146
	movs r0, #0x51
	movs r1, #1
	movs r4, #1
	bl FUN_021BCF10
	cmp r0, #0
	beq _021CE146
	adds r0, r4, #0
	pop {r4, pc}
_021CE146:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CE11C

	thumb_func_start FUN_021CE14C
FUN_021CE14C: ; 0x021CE14C
	push {r3, lr}
	bl FUN_0207AC50
	movs r1, #2
	lsls r1, r1, #0x18
	tst r0, r1
	beq _021CE168
	ldr r0, _021CE170 ; =0x000000DB
	bl FUN_0203CE38
	ldr r0, _021CE174 ; =0x021DD8A4
	movs r1, #1
	str r1, [r0]
	pop {r3, pc}
_021CE168:
	ldr r0, _021CE174 ; =0x021DD8A4
	movs r1, #0
	str r1, [r0]
	pop {r3, pc}
	.align 2, 0
_021CE170: .word 0x000000DB
_021CE174: .word 0x021DD8A4
	thumb_func_end FUN_021CE14C

	thumb_func_start FUN_021CE178
FUN_021CE178: ; 0x021CE178
	push {r4, lr}
	ldr r4, _021CE190 ; =0x021DD8A4
	ldr r0, [r4]
	cmp r0, #0
	beq _021CE18C
	ldr r0, _021CE194 ; =0x000000DB
	bl FUN_0203CDF4
	movs r0, #0
	str r0, [r4]
_021CE18C:
	pop {r4, pc}
	nop
_021CE190: .word 0x021DD8A4
_021CE194: .word 0x000000DB
	thumb_func_end FUN_021CE178

	thumb_func_start FUN_021CE198
FUN_021CE198: ; 0x021CE198
	push {r3}
	sub sp, #4
	movs r0, #0
	movs r1, #7
	bics r0, r1
	add sp, #4
	pop {r3}
	bx lr
	thumb_func_end FUN_021CE198

	thumb_func_start FUN_021CE1A8
FUN_021CE1A8: ; 0x021CE1A8
	push {r0, r1, r2, r3}
	ldr r0, [sp]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	bne _021CE1B8
	movs r0, #1
	add sp, #0x10
	bx lr
_021CE1B8:
	movs r0, #0
	add sp, #0x10
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CE1A8

	thumb_func_start FUN_021CE1C0
FUN_021CE1C0: ; 0x021CE1C0
	push {r3}
	sub sp, #4
	movs r2, #0
	movs r1, #7
	bics r2, r1
	movs r1, #2
	orrs r2, r1
	ldr r1, _021CE1E4 ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r1, r2
	lsrs r0, r0, #0x17
	orrs r1, r0
	ldr r0, _021CE1E8 ; =0xFE0001FF
	ands r0, r1
	add sp, #4
	pop {r3}
	bx lr
	nop
_021CE1E4: .word 0xFFFFFE07
_021CE1E8: .word 0xFE0001FF
	thumb_func_end FUN_021CE1C0

	thumb_func_start FUN_021CE1EC
FUN_021CE1EC: ; 0x021CE1EC
	push {r3}
	sub sp, #4
	movs r3, #0
	movs r2, #7
	bics r3, r2
	movs r2, #2
	orrs r3, r2
	ldr r2, _021CE214 ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r2, r3
	lsrs r0, r0, #0x17
	orrs r2, r0
	ldr r0, _021CE218 ; =0xFE0001FF
	ands r2, r0
	lsls r0, r1, #0x10
	lsrs r0, r0, #7
	orrs r0, r2
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_021CE214: .word 0xFFFFFE07
_021CE218: .word 0xFE0001FF
	thumb_func_end FUN_021CE1EC

	thumb_func_start FUN_021CE21C
FUN_021CE21C: ; 0x021CE21C
	push {r3}
	sub sp, #4
	movs r2, #0
	movs r1, #7
	bics r2, r1
	movs r1, #3
	orrs r2, r1
	ldr r1, _021CE23C ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r1, r2
	lsrs r0, r0, #0x17
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	nop
_021CE23C: .word 0xFFFFFE07
	thumb_func_end FUN_021CE21C

	thumb_func_start FUN_021CE240
FUN_021CE240: ; 0x021CE240
	push {r3}
	sub sp, #4
	movs r1, #0
	movs r0, #7
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	thumb_func_end FUN_021CE240

	thumb_func_start FUN_021CE254
FUN_021CE254: ; 0x021CE254
	push {r3}
	sub sp, #4
	movs r2, #0
	movs r1, #7
	bics r2, r1
	movs r1, #1
	orrs r2, r1
	ldr r1, _021CE274 ; =0xFE0001FF
	lsls r0, r0, #0x10
	ands r1, r2
	lsrs r0, r0, #7
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	nop
_021CE274: .word 0xFE0001FF
	thumb_func_end FUN_021CE254

	thumb_func_start FUN_021CE278
FUN_021CE278: ; 0x021CE278
	push {r3}
	sub sp, #4
	movs r3, #0
	movs r2, #7
	bics r3, r2
	movs r2, #1
	orrs r3, r2
	ldr r2, _021CE2A0 ; =0xFFFFFE07
	lsls r0, r0, #0x1a
	ands r2, r3
	lsrs r0, r0, #0x17
	orrs r2, r0
	ldr r0, _021CE2A4 ; =0xFE0001FF
	ands r2, r0
	lsls r0, r1, #0x10
	lsrs r0, r0, #7
	orrs r0, r2
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_021CE2A0: .word 0xFFFFFE07
_021CE2A4: .word 0xFE0001FF
	thumb_func_end FUN_021CE278

	thumb_func_start FUN_021CE2A8
FUN_021CE2A8: ; 0x021CE2A8
	push {r3}
	sub sp, #4
	movs r3, #0
	movs r2, #7
	bics r3, r2
	movs r2, #4
	orrs r3, r2
	ldr r2, _021CE2D0 ; =0xFFFFFE07
	lsls r1, r1, #0x1a
	lsls r0, r0, #0x1a
	ands r2, r3
	lsrs r1, r1, #0x17
	orrs r2, r1
	ldr r1, _021CE2D4 ; =0xFFFF81FF
	lsrs r0, r0, #0x11
	ands r1, r2
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_021CE2D0: .word 0xFFFFFE07
_021CE2D4: .word 0xFFFF81FF
	thumb_func_end FUN_021CE2A8

	thumb_func_start FUN_021CE2D8
FUN_021CE2D8: ; 0x021CE2D8
	push {r3}
	sub sp, #4
	movs r1, #0
	movs r0, #7
	bics r1, r0
	movs r0, #1
	orrs r1, r0
	ldr r0, _021CE2F4 ; =0xFFFFFE07
	ands r1, r0
	movs r0, #0x78
	orrs r0, r1
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_021CE2F4: .word 0xFFFFFE07
	thumb_func_end FUN_021CE2D8

	thumb_func_start FUN_021CE2F8
FUN_021CE2F8: ; 0x021CE2F8
	push {r0, r1, r2, r3}
	ldr r0, [sp]
	lsls r1, r0, #0x17
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	lsrs r1, r1, #0x1a
	cmp r0, #1
	bne _021CE312
	cmp r1, #0xf
	bne _021CE312
	movs r0, #1
	add sp, #0x10
	bx lr
_021CE312:
	movs r0, #0
	add sp, #0x10
	bx lr
	thumb_func_end FUN_021CE2F8

	thumb_func_start FUN_021CE318
FUN_021CE318: ; 0x021CE318
	push {r0, r1, r2, r3}
	ldr r2, [sp]
	lsls r0, r2, #0x1d
	lsrs r3, r0, #0x1d
	lsls r0, r2, #0x17
	lsrs r1, r0, #0x1a
	lsls r0, r2, #0x11
	lsrs r0, r0, #0x1a
	cmp r3, #3
	bne _021CE334
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	bx lr
_021CE334:
	cmp r3, #4
	bne _021CE340
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	bx lr
_021CE340:
	movs r0, #0x1f
	add sp, #0x10
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CE318

	thumb_func_start FUN_021CE348
FUN_021CE348: ; 0x021CE348
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #3
	bne _021CE360
	ldr r2, _021CE374 ; =0xFFFFFE07
	lsls r1, r1, #0x1a
	ands r2, r3
	lsrs r1, r1, #0x17
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE360:
	cmp r2, #4
	bne _021CE370
	ldr r2, _021CE378 ; =0xFFFF81FF
	lsls r1, r1, #0x1a
	ands r2, r3
	lsrs r1, r1, #0x11
	orrs r1, r2
	str r1, [r0]
_021CE370:
	bx lr
	nop
_021CE374: .word 0xFFFFFE07
_021CE378: .word 0xFFFF81FF
	thumb_func_end FUN_021CE348

	thumb_func_start FUN_021CE37C
FUN_021CE37C: ; 0x021CE37C
	push {r0, r1, r2, r3}
	ldr r0, [sp]
	lsls r1, r0, #0x1d
	lsls r0, r0, #0x17
	lsrs r1, r1, #0x1d
	lsrs r0, r0, #0x1a
	cmp r1, #2
	bne _021CE394
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	bx lr
_021CE394:
	cmp r1, #4
	bne _021CE3A0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	bx lr
_021CE3A0:
	movs r0, #0
	add sp, #0x10
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CE37C

	thumb_func_start FUN_021CE3A8
FUN_021CE3A8: ; 0x021CE3A8
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #1
	bne _021CE3C0
	ldr r2, _021CE3F8 ; =0xFE0001FF
	lsls r1, r1, #0x10
	ands r2, r3
	lsrs r1, r1, #7
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE3C0:
	cmp r2, #3
	bne _021CE3D2
	ldr r2, _021CE3F8 ; =0xFE0001FF
	lsls r1, r1, #0x10
	ands r2, r3
	lsrs r1, r1, #7
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE3D2:
	cmp r2, #4
	bne _021CE3E4
	ldr r2, _021CE3FC ; =0x80007FFF
	lsls r1, r1, #0x10
	ands r2, r3
	lsrs r1, r1, #1
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE3E4:
	cmp r2, #2
	bne _021CE3F4
	ldr r2, _021CE3F8 ; =0xFE0001FF
	lsls r1, r1, #0x10
	ands r2, r3
	lsrs r1, r1, #7
	orrs r1, r2
	str r1, [r0]
_021CE3F4:
	bx lr
	nop
_021CE3F8: .word 0xFE0001FF
_021CE3FC: .word 0x80007FFF
	thumb_func_end FUN_021CE3A8

	thumb_func_start FUN_021CE400
FUN_021CE400: ; 0x021CE400
	push {r0, r1, r2, r3}
	ldr r0, [sp]
	lsls r1, r0, #0x1d
	lsrs r1, r1, #0x1d
	cmp r1, #1
	bne _021CE418
	lsls r0, r0, #7
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #0x10
	bx lr
_021CE418:
	cmp r1, #3
	bne _021CE428
	lsls r0, r0, #7
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #0x10
	bx lr
_021CE428:
	cmp r1, #4
	bne _021CE438
	lsls r0, r0, #1
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #0x10
	bx lr
_021CE438:
	cmp r1, #2
	bne _021CE448
	lsls r0, r0, #7
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add sp, #0x10
	bx lr
_021CE448:
	movs r0, #0
	add sp, #0x10
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CE400

	thumb_func_start FUN_021CE450
FUN_021CE450: ; 0x021CE450
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #1
	bne _021CE468
	ldr r2, _021CE49C ; =0xFDFFFFFF
	lsls r1, r1, #0x1f
	ands r2, r3
	lsrs r1, r1, #6
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE468:
	cmp r2, #3
	bne _021CE47A
	ldr r2, _021CE49C ; =0xFDFFFFFF
	lsls r1, r1, #0x1f
	ands r2, r3
	lsrs r1, r1, #6
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE47A:
	cmp r2, #4
	bne _021CE48A
	ldr r2, _021CE4A0 ; =0x7FFFFFFF
	lsls r1, r1, #0x1f
	ands r2, r3
	orrs r1, r2
	str r1, [r0]
	bx lr
_021CE48A:
	cmp r2, #2
	bne _021CE49A
	ldr r2, _021CE49C ; =0xFDFFFFFF
	lsls r1, r1, #0x1f
	ands r2, r3
	lsrs r1, r1, #6
	orrs r1, r2
	str r1, [r0]
_021CE49A:
	bx lr
	.align 2, 0
_021CE49C: .word 0xFDFFFFFF
_021CE4A0: .word 0x7FFFFFFF
	thumb_func_end FUN_021CE450
_021CE4A4:
	.byte 0x0F, 0xB4, 0x00, 0x99, 0x48, 0x07, 0x42, 0x0F, 0x88, 0x01, 0xC0, 0x0F
	.byte 0xC9, 0x0F, 0x01, 0x2A, 0x09, 0xD0, 0x03, 0x2A, 0x07, 0xD0, 0x04, 0x2A, 0x02, 0xD1, 0x08, 0x1C
	.byte 0x04, 0xB0, 0x70, 0x47, 0x02, 0x2A, 0x00, 0xD0, 0x00, 0x20, 0x04, 0xB0, 0x70, 0x47, 0x00, 0x00

	thumb_func_start FUN_021CE4D0
FUN_021CE4D0: ; 0x021CE4D0
	push {r3, r4}
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #2
	bne _021CE4F2
	lsls r2, r3, #0x17
	lsrs r4, r2, #0x1a
	cmp r4, #8
	bhs _021CE4F2
	ldr r2, _021CE518 ; =0xFFFFFE07
	ands r3, r2
	adds r2, r4, r1
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x17
	orrs r2, r3
	str r2, [r0]
_021CE4F2:
	ldr r4, [r0]
	lsls r2, r4, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #4
	bne _021CE512
	lsls r2, r4, #0x17
	lsrs r3, r2, #0x1a
	cmp r3, #8
	bhs _021CE512
	ldr r2, _021CE518 ; =0xFFFFFE07
	adds r1, r3, r1
	lsls r1, r1, #0x1a
	ands r2, r4
	lsrs r1, r1, #0x17
	orrs r1, r2
	str r1, [r0]
_021CE512:
	pop {r3, r4}
	bx lr
	nop
_021CE518: .word 0xFFFFFE07
	thumb_func_end FUN_021CE4D0

	thumb_func_start FUN_021CE51C
FUN_021CE51C: ; 0x021CE51C
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #2
	bne _021CE53A
	lsls r2, r3, #0x17
	lsrs r2, r2, #0x1a
	cmp r2, #8
	bhs _021CE53A
	ldr r2, _021CE55C ; =0xFFFFFE07
	ands r3, r2
	lsls r2, r1, #0x1a
	lsrs r2, r2, #0x17
	orrs r2, r3
	str r2, [r0]
_021CE53A:
	ldr r3, [r0]
	lsls r2, r3, #0x1d
	lsrs r2, r2, #0x1d
	cmp r2, #4
	bne _021CE558
	lsls r2, r3, #0x17
	lsrs r2, r2, #0x1a
	cmp r2, #8
	bhs _021CE558
	ldr r2, _021CE55C ; =0xFFFFFE07
	lsls r1, r1, #0x1a
	ands r2, r3
	lsrs r1, r1, #0x17
	orrs r1, r2
	str r1, [r0]
_021CE558:
	bx lr
	nop
_021CE55C: .word 0xFFFFFE07
	thumb_func_end FUN_021CE51C

	thumb_func_start FUN_021CE560
FUN_021CE560: ; 0x021CE560
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x10
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	thumb_func_end FUN_021CE560

	thumb_func_start FUN_021CE570
FUN_021CE570: ; 0x021CE570
	ldr r3, _021CE578 ; =FUN_021CE560
	adds r1, r0, #0
	bx r3
	nop
_021CE578: .word FUN_021CE560
	thumb_func_end FUN_021CE570

	thumb_func_start FUN_021CE57C
FUN_021CE57C: ; 0x021CE57C
	asrs r0, r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_021CE57C

	thumb_func_start FUN_021CE584
FUN_021CE584: ; 0x021CE584
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CE584

	thumb_func_start FUN_021CE58C
FUN_021CE58C: ; 0x021CE58C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021CE57C
	strb r0, [r5]
	adds r0, r6, #0
	bl FUN_021CE584
	strb r0, [r4]
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CE58C

	thumb_func_start FUN_021CE5A4
FUN_021CE5A4: ; 0x021CE5A4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_021CE57C
	cmp r4, r0
	bne _021CE5B6
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CE5B6:
	adds r0, r5, #0
	bl FUN_021CE584
	cmp r4, r0
	bne _021CE5C4
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CE5C4:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CE5A4

	thumb_func_start FUN_021CE5C8
FUN_021CE5C8: ; 0x021CE5C8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r0, #0
	bl FUN_021CE57C
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021CE57C
	cmp r5, r0
	bne _021CE5E2
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CE5E2:
	adds r0, r6, #0
	bl FUN_021CE57C
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021CE584
	cmp r5, r0
	bne _021CE5F8
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CE5F8:
	adds r0, r6, #0
	bl FUN_021CE584
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021CE57C
	cmp r5, r0
	bne _021CE60E
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CE60E:
	adds r0, r6, #0
	bl FUN_021CE584
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_021CE584
	cmp r5, r0
	bne _021CE624
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CE624:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CE5C8

	thumb_func_start FUN_021CE628
FUN_021CE628: ; 0x021CE628
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_021CE57C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_021CE584
	cmp r4, r0
	bne _021CE640
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CE640:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CE628

	thumb_func_start FUN_021CE644
FUN_021CE644: ; 0x021CE644
	push {r3, lr}
	bl FUN_021CE6B8
	ldr r0, _021CE66C ; =0x000000A8
	bl FUN_0203CE38
	movs r0, #0x80
	bl FUN_02076AF0
	ldr r0, _021CE670 ; =0x000000A9
	bl FUN_0203CE38
	bl FUN_02042B4C
	cmp r0, #0
	bne _021CE66A
	ldr r0, _021CE674 ; =0x000000AA
	bl FUN_0203CE38
_021CE66A:
	pop {r3, pc}
	.align 2, 0
_021CE66C: .word 0x000000A8
_021CE670: .word 0x000000A9
_021CE674: .word 0x000000AA
	thumb_func_end FUN_021CE644

	thumb_func_start FUN_021CE678
FUN_021CE678: ; 0x021CE678
	push {r3, lr}
	bl FUN_021CE788
	ldr r0, _021CE69C ; =0x000000A8
	bl FUN_0203CDF4
	ldr r0, _021CE6A0 ; =0x000000A9
	bl FUN_0203CDF4
	bl FUN_02042B4C
	cmp r0, #0
	bne _021CE698
	ldr r0, _021CE6A4 ; =0x000000AA
	bl FUN_0203CDF4
_021CE698:
	pop {r3, pc}
	nop
_021CE69C: .word 0x000000A8
_021CE6A0: .word 0x000000A9
_021CE6A4: .word 0x000000AA
	thumb_func_end FUN_021CE678

	thumb_func_start FUN_021CE6A8
FUN_021CE6A8: ; 0x021CE6A8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021CE788
	adds r0, r4, #0
	bl FUN_021CE6B8
	pop {r4, pc}
	thumb_func_end FUN_021CE6A8

	thumb_func_start FUN_021CE6B8
FUN_021CE6B8: ; 0x021CE6B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	bl FUN_020444D0
	adds r0, r4, #0
	bl FUN_020480AC
	bl FUN_020232FC
	ldr r7, _021CE768 ; =0x021DA940
	adds r0, r7, #0
	bl FUN_02046C6C
	ldr r6, _021CE76C ; =0x04000050
	movs r5, #0
	ldr r0, _021CE770 ; =0x04001050
	strh r5, [r6]
	ldr r2, _021CE774 ; =0x04000304
	strh r5, [r0]
	ldrh r1, [r2]
	lsrs r0, r2, #0xb
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _021CE778 ; =0x021DA914
	bl FUN_0204473C
	str r5, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	movs r0, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	movs r5, #1
	bl FUN_02048D54
	movs r0, #1
	movs r1, #0
	bl FUN_02049240
	adds r0, r6, #0
	adds r0, #0x10
	ldrh r1, [r0]
	ldr r2, _021CE77C ; =0xFFFFCFFF
	adds r3, r1, #0
	ands r3, r2
	movs r1, #8
	orrs r1, r3
	strh r1, [r0]
	ldrh r3, [r0]
	ldr r1, _021CE780 ; =0x0000CFDF
	ands r1, r3
	strh r1, [r0]
	ldrh r1, [r0]
	movs r3, #0
	ands r2, r1
	movs r1, #0x10
	orrs r1, r2
	strh r1, [r0]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl FUN_02074EA4
	adds r1, r6, #0
	subs r1, #0x48
	ldrh r2, [r1]
	movs r0, #3
	movs r3, #0x1f
	bics r2, r0
	adds r0, r2, #0
	orrs r0, r5
	strh r0, [r1]
	movs r0, #3
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #2
	movs r2, #0x3d
	bl FUN_02074A98
	ldr r0, _021CE784 ; =0x021DA924
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_0204B6D4
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021CE768: .word 0x021DA940
_021CE76C: .word 0x04000050
_021CE770: .word 0x04001050
_021CE774: .word 0x04000304
_021CE778: .word 0x021DA914
_021CE77C: .word 0xFFFFCFFF
_021CE780: .word 0x0000CFDF
_021CE784: .word 0x021DA924
	thumb_func_end FUN_021CE6B8

	thumb_func_start FUN_021CE788
FUN_021CE788: ; 0x021CE788
	push {r3, lr}
	bl FUN_021DF178
	bl FUN_0204B784
	bl FUN_020480D4
	bl FUN_02044554
	bl FUN_02048F70
	pop {r3, pc}
	thumb_func_end FUN_021CE788

	thumb_func_start FUN_021CE7A0
FUN_021CE7A0: ; 0x021CE7A0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	ldr r6, _021CE898 ; =0x00000133
	ldr r5, [sp, #0x30]
	str r1, [sp, #0x14]
	str r3, [sp, #0x18]
	adds r1, r6, #0
	str r0, [sp, #0x10]
	adds r7, r2, #0
	ldr r3, _021CE89C ; =0x021DAFE0
	adds r0, r5, #0
	adds r1, #0x99
	movs r2, #0
	str r6, [sp]
	bl FUN_0203A228
	adds r4, r0, #0
	ldr r0, [sp, #0x10]
	str r0, [r4]
	ldr r0, [sp, #0x14]
	str r0, [r4, #4]
	str r7, [r4, #8]
	bl FUN_021B91B4
	strb r0, [r4, #0xc]
	movs r0, #4
	str r0, [r4, #0x10]
	adds r0, r6, #0
	adds r0, #0x95
	strh r5, [r4, r0]
	movs r0, #3
	lsls r0, r0, #8
	adds r1, r5, #0
	bl FUN_0204855C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	movs r0, #0x17
	movs r1, #0
	movs r2, #0
	movs r3, #0
	str r5, [sp]
	bl FUN_02022D84
	adds r1, r4, #0
	adds r1, #0xb0
	str r0, [r1]
	movs r0, #0x17
	movs r1, #2
	movs r2, #0
	movs r3, #0
	str r5, [sp]
	bl FUN_02022D84
	adds r1, r4, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r0, r5, #0
	adds r1, r5, #0
	movs r2, #0x40
	movs r3, #0x80
	bl FUN_0203A7B8
	adds r1, r6, #0
	adds r1, #0x89
	str r0, [r4, r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	adds r3, r6, #0
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r3, #0x89
	str r0, [sp, #4]
	ldrb r0, [r4, #0xc]
	adds r2, r7, #0
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [r4]
	ldr r3, [r4, r3]
	adds r0, r4, #0
	bl FUN_021D0C64
	adds r1, r6, #0
	adds r1, #0x8d
	str r0, [r4, r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	adds r3, r6, #0
	str r0, [sp]
	ldr r0, [r4, #4]
	adds r3, #0x89
	str r0, [sp, #4]
	ldr r0, [sp, #0x18]
	adds r2, r7, #0
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [r4]
	ldr r3, [r4, r3]
	adds r0, r4, #0
	bl FUN_021CE8A0
	adds r1, r6, #0
	adds r1, #0x91
	str r0, [r4, r1]
	movs r0, #0
	str r0, [r4, #0x14]
	str r0, [r4, #0x18]
	adds r6, #0x81
	strb r0, [r4, r6]
	ldrb r1, [r4, #0xc]
	ldr r0, [sp, #0x10]
	adds r2, r7, #0
	adds r3, r5, #0
	bl FUN_021D4CA4
	adds r0, r4, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_021CE898: .word 0x00000133
_021CE89C: .word 0x021DAFE0
	thumb_func_end FUN_021CE7A0

	thumb_func_start FUN_021CE8A0
FUN_021CE8A0: ; 0x021CE8A0
	bx pc
	nop
	thumb_func_end FUN_021CE8A0
_021CE8A4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xF1, 0x9A, 0x89, 0x06

	thumb_func_start FUN_021CE8B0
FUN_021CE8B0: ; 0x021CE8B0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_021D4D90
	movs r4, #0x71
	lsls r4, r4, #2
	ldr r0, [r5, r4]
	bl FUN_021CE8F8
	subs r0, r4, #4
	ldr r0, [r5, r0]
	bl FUN_021D0FC4
	subs r4, #8
	ldr r0, [r5, r4]
	bl FUN_0203A868
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	bl FUN_02048590
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	bl FUN_02022DD4
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl FUN_02022DD4
	adds r0, r5, #0
	bl FUN_0203A278
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CE8B0

	thumb_func_start FUN_021CE8F8
FUN_021CE8F8: ; 0x021CE8F8
	bx pc
	nop
	thumb_func_end FUN_021CE8F8
_021CE8FC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD1, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CE908
FUN_021CE908: ; 0x021CE908
	push {r3, lr}
	movs r1, #0x6f
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bl FUN_0203A820
	bl FUN_021DF254
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021CE908

	thumb_func_start FUN_021CE91C
FUN_021CE91C: ; 0x021CE91C
	push {r4, r5}
	ldr r3, _021CE944 ; =0x021DA904
	movs r5, #0
_021CE922:
	lsls r4, r5, #3
	ldr r2, [r3, r4]
	cmp r1, r2
	bne _021CE93A
	str r1, [r0, #0x10]
	ldr r1, _021CE948 ; =0x021DA908
	ldr r1, [r1, r4]
	str r1, [r0, #0x14]
	movs r1, #0
	str r1, [r0, #0x18]
	pop {r4, r5}
	bx lr
_021CE93A:
	adds r5, r5, #1
	cmp r5, #2
	blo _021CE922
	pop {r4, r5}
	bx lr
	.align 2, 0
_021CE944: .word 0x021DA904
_021CE948: .word 0x021DA908
	thumb_func_end FUN_021CE91C

	thumb_func_start FUN_021CE94C
FUN_021CE94C: ; 0x021CE94C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x10]
	cmp r1, #4
	beq _021CE976
	adds r1, r4, #0
	adds r2, r4, #0
	ldr r3, [r4, #0x14]
	adds r1, #0x18
	adds r2, #0x2c
	blx r3
	cmp r0, #0
	beq _021CE972
	movs r0, #4
	str r0, [r4, #0x10]
	movs r0, #0
	str r0, [r4, #0x14]
	movs r0, #1
	pop {r4, pc}
_021CE972:
	movs r0, #0
	pop {r4, pc}
_021CE976:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CE94C

	thumb_func_start FUN_021CE97C
FUN_021CE97C: ; 0x021CE97C
	adds r0, #0x2c
	bx lr
	thumb_func_end FUN_021CE97C

	thumb_func_start FUN_021CE980
FUN_021CE980: ; 0x021CE980
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021CE996
	cmp r0, #1
	beq _021CE9D6
	cmp r0, #2
	beq _021CE9EA
	b _021CEA3E
_021CE996:
	movs r7, #7
	lsls r7, r7, #6
	adds r2, r7, #0
	adds r2, #8
	ldrh r2, [r5, r2]
	ldr r0, [r5]
	ldr r1, [r5, r7]
	bl FUN_021DED5C
	adds r2, r7, #0
	adds r1, r5, #0
	adds r2, #8
	adds r1, #0xb4
	ldrh r2, [r5, r2]
	ldr r1, [r1]
	adds r6, r0, #0
	bl FUN_021DEE44
	adds r0, r6, #0
	bl FUN_0203A278
	ldr r0, [r5, r7]
	bl FUN_021D0D14
	adds r0, r7, #4
	ldr r0, [r5, r0]
	bl FUN_021CEA44
_021CE9CE:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021CEA3E
_021CE9D6:
	ldr r0, [r5, #4]
	bl FUN_021B19D0
	adds r1, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	bl FUN_021D10C4
	b _021CE9CE
_021CE9EA:
	movs r4, #7
	lsls r4, r4, #6
	ldr r0, [r5, r4]
	bl FUN_021D12E0
	cmp r0, #0
	beq _021CEA3E
	ldr r0, [r5, #4]
	bl FUN_021B19B8
	cmp r0, #0
	beq _021CEA3A
	adds r0, r4, #0
	movs r1, #1
	subs r0, #0x20
	str r1, [r5, r0]
	adds r0, r4, #0
	subs r0, #0x1c
	str r1, [r5, r0]
	ldr r0, [r5, #4]
	bl FUN_021B19CC
	adds r1, r4, #0
	subs r1, #0x18
	str r0, [r5, r1]
	adds r0, r4, #0
	movs r1, #0
	subs r0, #0x14
	str r1, [r5, r0]
	ldr r0, [r5, #4]
	bl FUN_021B19D0
	cmp r0, #0
	bne _021CEA3A
	adds r0, r4, #4
	subs r4, #0x20
	ldr r0, [r5, r0]
	adds r1, r5, r4
	bl FUN_021CEA54
_021CEA3A:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021CEA3E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021CE980

	thumb_func_start FUN_021CEA44
FUN_021CEA44: ; 0x021CEA44
	bx pc
	nop
	thumb_func_end FUN_021CEA44
_021CEA48:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x7D, 0x9C, 0x89, 0x06

	thumb_func_start FUN_021CEA54
FUN_021CEA54: ; 0x021CEA54
	bx pc
	nop
	thumb_func_end FUN_021CEA54
_021CEA58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xDD, 0xB8, 0x89, 0x06

	thumb_func_start FUN_021CEA64
FUN_021CEA64: ; 0x021CEA64
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x88
	adds r5, r1, #0
	ldr r1, [r5]
	adds r4, r0, #0
	adds r6, r2, #0
	cmp r1, #0x14
	bls _021CEA76
	b _021CEE48
_021CEA76:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021CEA82: ; jump table
	.short _021CEAAC - _021CEA82 - 2 ; case 0
	.short _021CEB10 - _021CEA82 - 2 ; case 1
	.short _021CEB1E - _021CEA82 - 2 ; case 2
	.short _021CEB62 - _021CEA82 - 2 ; case 3
	.short _021CEB9C - _021CEA82 - 2 ; case 4
	.short _021CEBBC - _021CEA82 - 2 ; case 5
	.short _021CEBE4 - _021CEA82 - 2 ; case 6
	.short _021CEC14 - _021CEA82 - 2 ; case 7
	.short _021CEC52 - _021CEA82 - 2 ; case 8
	.short _021CEC78 - _021CEA82 - 2 ; case 9
	.short _021CECA0 - _021CEA82 - 2 ; case 10
	.short _021CECB8 - _021CEA82 - 2 ; case 11
	.short _021CED04 - _021CEA82 - 2 ; case 12
	.short _021CED2C - _021CEA82 - 2 ; case 13
	.short _021CED58 - _021CEA82 - 2 ; case 14
	.short _021CED7A - _021CEA82 - 2 ; case 15
	.short _021CEDAC - _021CEA82 - 2 ; case 16
	.short _021CEDCE - _021CEA82 - 2 ; case 17
	.short _021CEE04 - _021CEA82 - 2 ; case 18
	.short _021CEE20 - _021CEA82 - 2 ; case 19
	.short _021CEE34 - _021CEA82 - 2 ; case 20
_021CEAAC:
	movs r7, #7
	lsls r7, r7, #6
	adds r2, r7, #0
	adds r2, #8
	ldrh r2, [r4, r2]
	ldr r0, [r4]
	ldr r1, [r4, r7]
	bl FUN_021DED5C
	adds r2, r7, #0
	adds r1, r4, #0
	adds r2, #8
	adds r1, #0xb4
	ldrh r2, [r4, r2]
	ldr r1, [r1]
	str r0, [sp, #0xc]
	bl FUN_021DEE44
	ldr r0, [sp, #0xc]
	bl FUN_0203A278
	adds r0, r7, #4
	ldr r0, [r4, r0]
	bl FUN_021CEE60
	ldrb r1, [r0]
	strb r1, [r6, #8]
	movs r1, #0
	strb r1, [r0]
	ldr r0, [r4, r7]
	bl FUN_021D0D14
	adds r0, r7, #4
	ldr r0, [r4, r0]
	bl FUN_021CEE70
	adds r7, #8
	ldrh r3, [r4, r7]
	movs r0, #0
	movs r1, #2
	movs r2, #0x17
	bl FUN_02048788
	str r0, [r6]
	movs r0, #0
_021CEB06:
	str r0, [r6, #4]
_021CEB08:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021CEE48
_021CEB10:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	movs r1, #0
	bl FUN_021D10C4
	b _021CEB08
_021CEB1E:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D12E0
	cmp r0, #0
	beq _021CEC22
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021CEF00
	add r7, sp, #0x60
	adds r6, r0, #0
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0x45
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021D0B64
	adds r0, r7, #0
	movs r1, #0
	bl FUN_021D0B8C
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021D0274
	b _021CEB08
_021CEB62:
	movs r1, #0
	movs r6, #0
	bl FUN_021CEF00
	adds r1, r4, #0
	adds r1, #0xbc
	str r0, [r1]
	bl FUN_021BAC80
	adds r1, r4, #0
	adds r1, #0xc0
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb8
	str r6, [r0]
	adds r0, r4, #0
	adds r0, #0xc4
	adds r1, r4, #0
	ldr r2, _021CEE50 ; =0x000001B5
	str r6, [r0]
	adds r0, r2, #0
	strb r6, [r4, r2]
	adds r0, #0xf
	adds r1, #0xbc
	ldr r0, [r4, r0]
	ldr r1, [r1]
	ldrb r2, [r4, r2]
	movs r3, #0
	b _021CED52
_021CEB9C:
	movs r6, #0x71
	lsls r6, r6, #2
	ldr r0, [r4, r6]
	bl FUN_021CEE80
	cmp r0, #0
	beq _021CEC22
	adds r1, r4, #0
	ldr r0, [r4, r6]
	adds r1, #0xbc
	adds r4, #0xb8
	ldr r1, [r1]
	ldr r2, [r4]
	bl FUN_021CEE90
	b _021CEB08
_021CEBBC:
	movs r6, #0x71
	lsls r6, r6, #2
	ldr r0, [r4, r6]
	bl FUN_021CEEA0
	cmp r0, #0
	beq _021CEC22
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021CEF00
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0x21
	bl FUN_021D030C
	ldr r0, [r4, r6]
	b _021CEDA6
_021CEBE4:
	bl FUN_021D0328
	cmp r0, #0
	beq _021CEC22
	movs r6, #0x71
	lsls r6, r6, #2
	ldr r0, [r4, r6]
	bl FUN_021CEEB0
	cmp r0, #0
	beq _021CEC22
	movs r0, #0x21
	movs r1, #0x1b
	bl FUN_020212AC
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	subs r0, r6, #4
	ldr r0, [r4, r0]
	movs r2, #1
	movs r3, #0x21
	b _021CEC9A
_021CEC14:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3170
	cmp r0, #0
	bne _021CEC24
_021CEC22:
	b _021CEE48
_021CEC24:
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021CEF00
	movs r1, #0xe
	bl FUN_021BB1F4
	movs r1, #6
	blx FUN_0208D688
	adds r1, r0, #0
	movs r0, #1
	bl FUN_021DFB04
	movs r0, #1
	movs r1, #0x21
	bl FUN_021DF5A0
	ldr r1, _021CEE54 ; =0x00000564
	adds r0, r4, #0
	bl FUN_021D0B14
	b _021CEB08
_021CEC52:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3210
	cmp r0, #0
	beq _021CED3C
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021CEF00
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0x2d
	bl FUN_021D030C
	b _021CEB08
_021CEC78:
	bl FUN_021D0328
	cmp r0, #0
	beq _021CED3C
	movs r0, #0x2d
	movs r1, #0x1b
	bl FUN_020212AC
	str r0, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r0, #7
	str r2, [sp, #8]
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	movs r1, #1
	movs r3, #0x2d
_021CEC9A:
	bl FUN_021D30D4
	b _021CEB08
_021CECA0:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3170
	cmp r0, #0
	beq _021CED3C
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021D03E0
	b _021CEB08
_021CECB8:
	movs r1, #0
	movs r7, #0
	bl FUN_021D0400
	cmp r0, #0
	beq _021CED3C
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021CEF00
	adds r6, r0, #0
	add r0, sp, #0x38
	movs r1, #2
	movs r2, #0x5a
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	add r0, sp, #0x38
	bl FUN_021D0B64
	add r0, sp, #0x38
	movs r1, #1
	bl FUN_021D0B64
	add r0, sp, #0x38
	adds r1, r7, #0
	bl FUN_021D0B64
	add r0, sp, #0x38
	adds r1, r7, #0
	bl FUN_021D0B8C
	adds r0, r4, #0
	add r1, sp, #0x38
	b _021CEDFE
_021CED04:
	bl FUN_021D0328
	cmp r0, #0
	beq _021CED3C
	adds r2, r4, #0
	adds r2, #0xac
	ldr r0, [r6]
	ldr r2, [r2]
	movs r1, #0
	bl FUN_02048864
	adds r0, r4, #0
	adds r4, #0xac
	ldr r1, [r4]
	movs r2, #0
	movs r3, #0
	bl FUN_021D0348
	movs r0, #0x3c
	b _021CEB06
_021CED2C:
	bl FUN_021D0328
	cmp r0, #0
	beq _021CED3C
	ldr r0, [r6, #4]
	subs r0, r0, #1
	str r0, [r6, #4]
	beq _021CED3E
_021CED3C:
	b _021CEE48
_021CED3E:
	movs r2, #0x71
	lsls r2, r2, #2
	ldr r0, [r4, r2]
	adds r1, r4, #0
	subs r2, #0xf
	adds r1, #0xbc
	ldrb r2, [r4, r2]
	adds r4, #0xb8
	ldr r1, [r1]
	ldr r3, [r4]
_021CED52:
	bl FUN_021CEEC0
	b _021CEB08
_021CED58:
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021CEED0
	cmp r0, #0
	beq _021CEE48
	movs r0, #1
	str r0, [sp]
	movs r2, #0
	adds r0, r4, #0
	movs r1, #2
	movs r3, #0
	str r2, [sp, #4]
	bl FUN_021CF5EC
	b _021CEB08
_021CED7A:
	bl FUN_021CF77C
	cmp r0, #0
	beq _021CEE48
	adds r2, r4, #0
	adds r2, #0xac
	ldr r0, [r6]
	ldr r2, [r2]
	movs r1, #1
	bl FUN_02048864
	adds r1, r4, #0
	adds r1, #0xac
	ldr r1, [r1]
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl FUN_021D0348
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
_021CEDA6:
	bl FUN_021CEEE0
	b _021CEB08
_021CEDAC:
	bl FUN_021D0328
	cmp r0, #0
	beq _021CEE48
	bl FUN_021DF828
	cmp r0, #0
	bne _021CEE48
	movs r0, #0
	str r0, [sp]
	movs r0, #1
	movs r1, #4
	movs r2, #3
	movs r3, #1
	bl FUN_021DF670
	b _021CEB08
_021CEDCE:
	bl FUN_021DF828
	cmp r0, #0
	bne _021CEE48
	adds r0, r4, #0
	movs r1, #1
	bl FUN_021CEF00
	add r7, sp, #0x10
	adds r6, r0, #0
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0x41
	bl FUN_021D0B2C
	adds r0, r6, #0
	bl FUN_021BAC80
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_021D0B64
	adds r0, r4, #0
	adds r1, r7, #0
_021CEDFE:
	bl FUN_021D022C
	b _021CEB08
_021CEE04:
	bl FUN_021D0338
	cmp r0, #0
	beq _021CEE14
	ldr r0, _021CEE58 ; =0x00000518
	ldr r1, _021CEE5C ; =0x0000FFFF
	bl FUN_02005DF4
_021CEE14:
	adds r0, r4, #0
	bl FUN_021D0328
	cmp r0, #0
	beq _021CEE48
	b _021CEB08
_021CEE20:
	bl FUN_02005FA8
	cmp r0, #0
	bne _021CEE48
	bl FUN_021DF580
	ldr r0, [r6]
	bl FUN_02048800
	b _021CEB08
_021CEE34:
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021CEEF0
	ldrb r1, [r6, #8]
	add sp, #0x88
	strb r1, [r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021CEE48:
	movs r0, #0
	add sp, #0x88
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CEE50: .word 0x000001B5
_021CEE54: .word 0x00000564
_021CEE58: .word 0x00000518
_021CEE5C: .word 0x0000FFFF
	thumb_func_end FUN_021CEA64

	thumb_func_start FUN_021CEE60
FUN_021CEE60: ; 0x021CEE60
	bx pc
	nop
	thumb_func_end FUN_021CEE60
_021CEE64:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xB7, 0x89, 0x06

	thumb_func_start FUN_021CEE70
FUN_021CEE70: ; 0x021CEE70
	bx pc
	nop
	thumb_func_end FUN_021CEE70
_021CEE74:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x7D, 0x9C, 0x89, 0x06

	thumb_func_start FUN_021CEE80
FUN_021CEE80: ; 0x021CEE80
	bx pc
	nop
	thumb_func_end FUN_021CEE80
_021CEE84:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x61, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEE90
FUN_021CEE90: ; 0x021CEE90
	bx pc
	nop
	thumb_func_end FUN_021CEE90
_021CEE94:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x21, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CEEA0
FUN_021CEEA0: ; 0x021CEEA0
	bx pc
	nop
	thumb_func_end FUN_021CEEA0
_021CEEA4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x61, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEEB0
FUN_021CEEB0: ; 0x021CEEB0
	bx pc
	nop
	thumb_func_end FUN_021CEEB0
_021CEEB4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA9, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CEEC0
FUN_021CEEC0: ; 0x021CEEC0
	bx pc
	nop
	thumb_func_end FUN_021CEEC0
_021CEEC4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x39, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEED0
FUN_021CEED0: ; 0x021CEED0
	bx pc
	nop
	thumb_func_end FUN_021CEED0
_021CEED4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x61, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEEE0
FUN_021CEEE0: ; 0x021CEEE0
	bx pc
	nop
	thumb_func_end FUN_021CEEE0
_021CEEE4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x5D, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CEEF0
FUN_021CEEF0: ; 0x021CEEF0
	bx pc
	nop
	thumb_func_end FUN_021CEEF0
_021CEEF4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xB7, 0x89, 0x06

	thumb_func_start FUN_021CEF00
FUN_021CEF00: ; 0x021CEF00
	push {r4, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r4]
	lsrs r1, r1, #0x18
	bl FUN_0219C784
	adds r1, r0, #0
	ldr r0, [r4, #8]
	bl FUN_0219D1C8
	pop {r4, pc}
	thumb_func_end FUN_021CEF00

	thumb_func_start FUN_021CEF18
FUN_021CEF18: ; 0x021CEF18
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021CEF2A
	cmp r0, #1
	beq _021CEF54
	b _021CEF6A
_021CEF2A:
	ldr r0, [r5, #4]
	bl FUN_021B91E4
	adds r3, r0, #0
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	movs r2, #0x71
	adds r1, r5, #0
	lsls r2, r2, #2
	str r0, [sp]
	ldr r0, [r5, r2]
	subs r2, #0xf
	adds r1, #0xbc
	ldrb r2, [r5, r2]
	ldr r1, [r1]
	bl FUN_021CEF70
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
_021CEF54:
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	bl FUN_021CEF80
	adds r5, #0xc4
	str r0, [r5]
	cmp r0, #0
	beq _021CEF6A
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CEF6A:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
	thumb_func_end FUN_021CEF18

	thumb_func_start FUN_021CEF70
FUN_021CEF70: ; 0x021CEF70
	bx pc
	nop
	thumb_func_end FUN_021CEF70
_021CEF74:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x09, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEF80
FUN_021CEF80: ; 0x021CEF80
	bx pc
	nop
	thumb_func_end FUN_021CEF80
_021CEF84:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x61, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CEF90
FUN_021CEF90: ; 0x021CEF90
	push {r4, lr}
	adds r4, r1, #0
	adds r2, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _021CEFA2
	cmp r0, #1
	beq _021CEFBE
	b _021CEFD0
_021CEFA2:
	movs r0, #0x71
	lsls r0, r0, #2
	adds r1, r2, #0
	ldr r0, [r2, r0]
	adds r1, #0xbc
	adds r2, #0xb8
	ldr r1, [r1]
	ldr r2, [r2]
	bl FUN_021CEFD4
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021CEFD0
_021CEFBE:
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	bl FUN_021CEFE4
	cmp r0, #0
	beq _021CEFD0
	movs r0, #1
	pop {r4, pc}
_021CEFD0:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021CEF90

	thumb_func_start FUN_021CEFD4
FUN_021CEFD4: ; 0x021CEFD4
	bx pc
	nop
	thumb_func_end FUN_021CEFD4
_021CEFD8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x41, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CEFE4
FUN_021CEFE4: ; 0x021CEFE4
	bx pc
	nop
	thumb_func_end FUN_021CEFE4
_021CEFE8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x59, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CEFF4
FUN_021CEFF4: ; 0x021CEFF4
	str r1, [r0, #0x14]
	movs r1, #0
	str r1, [r0, #0x18]
	bx lr
	thumb_func_end FUN_021CEFF4

	thumb_func_start FUN_021CEFFC
FUN_021CEFFC: ; 0x021CEFFC
	movs r1, #0
	str r1, [r0, #0x14]
	str r1, [r0, #0x18]
	bx lr
	thumb_func_end FUN_021CEFFC

	thumb_func_start FUN_021CF004
FUN_021CF004: ; 0x021CF004
	push {r4, lr}
	adds r4, r0, #0
	ldr r3, [r4, #0x14]
	cmp r3, #0
	beq _021CF028
	adds r1, r4, #0
	adds r2, r4, #0
	adds r1, #0x18
	adds r2, #0x2c
	blx r3
	cmp r0, #0
	beq _021CF024
	movs r0, #0
	str r0, [r4, #0x14]
	movs r0, #1
	pop {r4, pc}
_021CF024:
	movs r0, #0
	pop {r4, pc}
_021CF028:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021CF004

	thumb_func_start FUN_021CF02C
FUN_021CF02C: ; 0x021CF02C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r0, #0xbc
	str r1, [r0]
	adds r0, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_021BAC80
	adds r1, r5, #0
	adds r1, #0xc0
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xb8
	str r6, [r0]
	adds r0, r5, #0
	movs r1, #0
	adds r0, #0xc4
	str r1, [r0]
	ldr r0, _021CF060 ; =0x000001B5
	ldr r1, _021CF064 ; =FUN_021CEF18
	strb r4, [r5, r0]
	adds r0, r5, #0
	bl FUN_021CEFF4
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CF060: .word 0x000001B5
_021CF064: .word FUN_021CEF18
	thumb_func_end FUN_021CF02C

	thumb_func_start FUN_021CF068
FUN_021CF068: ; 0x021CF068
	ldr r3, _021CF06C ; =FUN_021CF1F4
	bx r3
	.align 2, 0
_021CF06C: .word FUN_021CF1F4
	thumb_func_end FUN_021CF068

	thumb_func_start FUN_021CF070
FUN_021CF070: ; 0x021CF070
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021CF004
	cmp r0, #0
	beq _021CF082
	adds r4, #0xc4
	ldr r0, [r4]
	pop {r4, pc}
_021CF082:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CF070

	thumb_func_start FUN_021CF088
FUN_021CF088: ; 0x021CF088
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xbc
	str r1, [r0]
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r1, r5, #0
	adds r1, #0xc0
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xb8
	str r4, [r0]
	movs r0, #0x71
	adds r1, r5, #0
	lsls r0, r0, #2
	adds r1, #0xbc
	ldr r0, [r5, r0]
	ldr r1, [r1]
	adds r2, r4, #0
	bl FUN_021CF0C4
	ldr r1, _021CF0C0 ; =FUN_021CF150
	adds r0, r5, #0
	bl FUN_021CEFF4
	pop {r3, r4, r5, pc}
	.align 2, 0
_021CF0C0: .word FUN_021CF150
	thumb_func_end FUN_021CF088

	thumb_func_start FUN_021CF0C4
FUN_021CF0C4: ; 0x021CF0C4
	bx pc
	nop
	thumb_func_end FUN_021CF0C4
_021CF0C8:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x79, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CF0D4
FUN_021CF0D4: ; 0x021CF0D4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	ldr r0, [r4]
	adds r1, #0xbc
	adds r6, r2, #0
	str r0, [r1]
	bl FUN_021BAC80
	adds r1, r5, #0
	adds r1, #0xc0
	str r0, [r1]
	movs r1, #0x1b
	lsls r1, r1, #4
	adds r0, r5, #0
	str r4, [r5, r1]
	adds r0, #0xb8
	adds r1, #0x14
	str r6, [r0]
	ldr r0, [r5, r1]
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021CF114
	ldr r1, _021CF110 ; =FUN_021CF150
	adds r0, r5, #0
	bl FUN_021CEFF4
	pop {r4, r5, r6, pc}
	.align 2, 0
_021CF110: .word FUN_021CF150
	thumb_func_end FUN_021CF0D4

	thumb_func_start FUN_021CF114
FUN_021CF114: ; 0x021CF114
	bx pc
	nop
	thumb_func_end FUN_021CF114
_021CF118:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x9D, 0xA0, 0x89, 0x06

	thumb_func_start FUN_021CF124
FUN_021CF124: ; 0x021CF124
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021CF140
	ldr r1, _021CF13C ; =FUN_021CF150
	adds r0, r4, #0
	bl FUN_021CEFF4
	pop {r4, pc}
	.align 2, 0
_021CF13C: .word FUN_021CF150
	thumb_func_end FUN_021CF124

	thumb_func_start FUN_021CF140
FUN_021CF140: ; 0x021CF140
	bx pc
	nop
	thumb_func_end FUN_021CF140
_021CF144:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x15, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CF150
FUN_021CF150: ; 0x021CF150
	push {r3, lr}
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bl FUN_021CF168
	cmp r0, #0
	beq _021CF164
	movs r0, #1
	pop {r3, pc}
_021CF164:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021CF150

	thumb_func_start FUN_021CF168
FUN_021CF168: ; 0x021CF168
	bx pc
	nop
	thumb_func_end FUN_021CF168
_021CF16C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x0D, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CF178
FUN_021CF178: ; 0x021CF178
	ldr r3, _021CF17C ; =FUN_021CF1F4
	bx r3
	.align 2, 0
_021CF17C: .word FUN_021CF1F4
	thumb_func_end FUN_021CF178

	thumb_func_start FUN_021CF180
FUN_021CF180: ; 0x021CF180
	ldr r3, _021CF184 ; =FUN_021CF004
	bx r3
	.align 2, 0
_021CF184: .word FUN_021CF004
	thumb_func_end FUN_021CF180

	thumb_func_start FUN_021CF188
FUN_021CF188: ; 0x021CF188
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xbc
	str r1, [r0]
	adds r0, r1, #0
	adds r4, r2, #0
	bl FUN_021BAC80
	adds r1, r5, #0
	adds r1, #0xc0
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xb8
	str r4, [r0]
	ldr r1, _021CF1B0 ; =FUN_021CEF90
	adds r0, r5, #0
	bl FUN_021CEFF4
	pop {r3, r4, r5, pc}
	nop
_021CF1B0: .word FUN_021CEF90
	thumb_func_end FUN_021CF188

	thumb_func_start FUN_021CF1B4
FUN_021CF1B4: ; 0x021CF1B4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021CF004
	cmp r0, #0
	beq _021CF1D6
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021CF1DC
	cmp r0, #0
	beq _021CF1D2
	movs r0, #1
	pop {r4, pc}
_021CF1D2:
	movs r0, #2
	pop {r4, pc}
_021CF1D6:
	movs r0, #0
	pop {r4, pc}
	nop
	thumb_func_end FUN_021CF1B4

	thumb_func_start FUN_021CF1DC
FUN_021CF1DC: ; 0x021CF1DC
	bx pc
	nop
	thumb_func_end FUN_021CF1DC
_021CF1E0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0xB2, 0x89, 0x06

	thumb_func_start FUN_021CF1EC
FUN_021CF1EC: ; 0x021CF1EC
	ldr r3, _021CF1F0 ; =FUN_021CF1F4
	bx r3
	.align 2, 0
_021CF1F0: .word FUN_021CF1F4
	thumb_func_end FUN_021CF1EC

	thumb_func_start FUN_021CF1F4
FUN_021CF1F4: ; 0x021CF1F4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021E04A8
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021CF210
	adds r0, r4, #0
	bl FUN_021CEFFC
	pop {r4, pc}
	nop
	thumb_func_end FUN_021CF1F4

	thumb_func_start FUN_021CF210
FUN_021CF210: ; 0x021CF210
	bx pc
	nop
	thumb_func_end FUN_021CF210
_021CF214:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x61, 0xA1, 0x89, 0x06

	thumb_func_start FUN_021CF220
FUN_021CF220: ; 0x021CF220
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021CF22C ; =FUN_06899E34
	bx r3
	nop
_021CF22C: .word FUN_06899E34
	thumb_func_end FUN_021CF220

	thumb_func_start FUN_021CF230
FUN_021CF230: ; 0x021CF230
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021CF23C ; =FUN_06899E5C
	bx r3
	nop
_021CF23C: .word FUN_06899E5C
	thumb_func_end FUN_021CF230

	thumb_func_start FUN_021CF240
FUN_021CF240: ; 0x021CF240
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021CF24C ; =FUN_06899EA8
	bx r3
	nop
_021CF24C: .word FUN_06899EA8
	thumb_func_end FUN_021CF240

	thumb_func_start FUN_021CF250
FUN_021CF250: ; 0x021CF250
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #3
	bne _021CF270
	ldr r0, [r4]
	bl FUN_0219BF1C
	cmp r0, #2
	bne _021CF26C
	movs r0, #1
	pop {r4, pc}
_021CF26C:
	movs r0, #0
	pop {r4, pc}
_021CF270:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021CF250

	thumb_func_start FUN_021CF274
FUN_021CF274: ; 0x021CF274
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021B91B4
	str r0, [sp]
	ldr r0, [r5]
	ldr r1, [sp]
	bl FUN_0219C808
	str r0, [r4, #4]
	cmp r6, #3
	beq _021CF29C
	ldr r0, [r5]
	bl FUN_0219C7E4
	b _021CF29E
_021CF29C:
	movs r0, #0
_021CF29E:
	str r0, [r4, #0x18]
	cmp r0, #0
	beq _021CF2B8
	ldr r0, [r5]
	ldr r1, [sp]
	bl FUN_0219C828
	str r0, [r4, #8]
	ldr r0, [r5]
	ldr r1, [sp]
	bl FUN_0219C86C
	b _021CF2BC
_021CF2B8:
	movs r0, #0
	str r0, [r4, #8]
_021CF2BC:
	strb r6, [r4, #0x1f]
	strb r0, [r4, #0x1c]
	ldr r0, [r5]
	bl FUN_0219BDC0
	cmp r0, #3
	beq _021CF2DA
	ldr r0, [r5]
	ldr r1, [sp]
	bl FUN_0219D2D4
	adds r1, r4, #0
	adds r1, #0x22
	strb r0, [r1]
	b _021CF2E2
_021CF2DA:
	adds r0, r4, #0
	movs r1, #3
	adds r0, #0x22
	strb r1, [r0]
_021CF2E2:
	cmp r6, #4
	beq _021CF2EA
	cmp r6, #5
	bne _021CF2EE
_021CF2EA:
	adds r1, r7, #0
	b _021CF2F0
_021CF2EE:
	movs r1, #0
_021CF2F0:
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	strb r7, [r0]
	ldr r0, [sp, #0x18]
	movs r7, #0x72
	strh r0, [r4, #0x26]
	adds r0, r4, #0
	movs r6, #0
	adds r0, #0x4b
	lsls r7, r7, #2
	strb r6, [r0]
	ldrh r0, [r5, r7]
	strh r0, [r4, #0x10]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	str r0, [r4, #0xc]
	ldr r0, [r5]
	bl FUN_0219BDC0
	str r0, [r4, #0x14]
	subs r0, r7, #4
	ldr r0, [r5, r0]
	bl FUN_021CF350
	str r0, [r4, #0x44]
	bl FUN_021E00EC
	str r0, [r4, #0x28]
	bl FUN_021E00F8
	str r0, [r4, #0x2c]
	ldr r0, [r5]
	bl FUN_0219BFD8
	str r0, [r4]
	adds r0, r5, #0
	str r6, [r4, #0x30]
	bl FUN_021CF250
	str r0, [r4, #0x40]
	str r6, [r4, #0x34]
	adds r4, #0x4c
	strb r6, [r4]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CF274

	thumb_func_start FUN_021CF350
FUN_021CF350: ; 0x021CF350
	bx pc
	nop
	thumb_func_end FUN_021CF350
_021CF354:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xB7, 0x89, 0x06

	thumb_func_start FUN_021CF360
FUN_021CF360: ; 0x021CF360
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	mov ip, r1
	adds r5, r2, #0
	ldr r6, [sp, #0x20]
	bpl _021CF370
	movs r5, #0
_021CF370:
	mov r2, ip
	movs r7, #0x43
	str r3, [sp]
	lsls r7, r7, #2
	lsls r3, r5, #0x18
	ldrb r2, [r2, #0xb]
	adds r0, r4, #0
	adds r1, r4, r7
	lsrs r3, r3, #0x18
	bl FUN_021CF274
	adds r0, r6, #0
	bl FUN_021CF3DC
	movs r5, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _021CF3B0
	adds r7, #0x1d
_021CF396:
	cmp r5, #2
	bhs _021CF3B0
	lsls r1, r5, #0x18
	adds r0, r6, #0
	lsrs r1, r1, #0x18
	bl FUN_021CF3EC
	adds r1, r4, r5
	strb r0, [r1, r7]
	ldr r0, [sp, #4]
	adds r5, r5, #1
	cmp r5, r0
	blo _021CF396
_021CF3B0:
	cmp r5, #2
	bhs _021CF3C2
	ldr r0, _021CF3D8 ; =0x00000129
	movs r2, #6
_021CF3B8:
	adds r1, r4, r5
	adds r5, r5, #1
	strb r2, [r1, r0]
	cmp r5, #2
	blo _021CF3B8
_021CF3C2:
	movs r0, #1
	strb r0, [r6, #8]
	movs r0, #0x67
	lsls r0, r0, #2
	str r6, [r4, r0]
	movs r1, #0
	adds r0, #0x18
	strb r1, [r4, r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CF3D8: .word 0x00000129
	thumb_func_end FUN_021CF360

	thumb_func_start FUN_021CF3DC
FUN_021CF3DC: ; 0x021CF3DC
	bx pc
	nop
	thumb_func_end FUN_021CF3DC
_021CF3E0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xA1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021CF3EC
FUN_021CF3EC: ; 0x021CF3EC
	bx pc
	nop
	thumb_func_end FUN_021CF3EC
_021CF3F0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xB5, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021CF3FC
FUN_021CF3FC: ; 0x021CF3FC
	movs r1, #0x4f
	movs r2, #1
	lsls r1, r1, #2
	str r2, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CF3FC

	thumb_func_start FUN_021CF408
FUN_021CF408: ; 0x021CF408
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	movs r6, #0x6d
	adds r4, r0, #0
	lsls r6, r6, #2
	ldrb r0, [r4, r6]
	cmp r0, #3
	bls _021CF41A
	b _021CF524
_021CF41A:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CF426: ; jump table
	.short _021CF42E - _021CF426 - 2 ; case 0
	.short _021CF462 - _021CF426 - 2 ; case 1
	.short _021CF492 - _021CF426 - 2 ; case 2
	.short _021CF514 - _021CF426 - 2 ; case 3
_021CF42E:
	adds r0, r6, #0
	subs r0, #0x89
	ldrb r0, [r4, r0]
	adds r0, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _021CF446
	adds r6, #0x10
	ldr r0, [r4, r6]
	movs r1, #0
	b _021CF44C
_021CF446:
	adds r6, #0x10
	ldr r0, [r4, r6]
	movs r1, #1
_021CF44C:
	bl FUN_021CF548
	ldr r0, _021CF540 ; =0x0000011D
	bl FUN_0203CE38
	movs r0, #0x6d
	lsls r0, r0, #2
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
	b _021CF538
_021CF462:
	adds r0, r6, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF558
	cmp r0, #0
	beq _021CF538
	adds r0, r6, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF568
	ldr r0, _021CF544 ; =0x0000011F
	bl FUN_0203CE38
	adds r0, r6, #0
	subs r0, #0xa8
	adds r0, r4, r0
	bl FUN_021F8754
_021CF48A:
	ldrb r0, [r4, r6]
	adds r0, r0, #1
	strb r0, [r4, r6]
	b _021CF538
_021CF492:
	adds r0, r6, #0
	subs r0, #0x5c
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021CF538
	adds r0, r6, #0
	subs r0, #0x89
	ldrb r0, [r4, r0]
	cmp r0, #5
	beq _021CF4F0
	adds r0, r6, #0
	subs r0, #0x78
	ldr r0, [r4, r0]
	cmp r0, #0
	bne _021CF4F0
	adds r0, r6, #0
	str r0, [sp, #4]
	subs r0, #0x18
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r7, r6, #0
	str r0, [sp]
	subs r0, #0x18
	movs r5, #0
	str r0, [sp]
	subs r7, #0x18
	subs r6, #0x60
_021CF4C8:
	adds r0, r4, r5
	ldrb r2, [r0, r6]
	cmp r2, #0xff
	beq _021CF4EA
	ldr r0, [sp, #4]
	lsls r1, r5, #0x18
	ldr r0, [r4, r0]
	lsrs r1, r1, #0x18
	bl FUN_021CF578
	ldr r0, [sp]
	ldr r0, [r4, r0]
	bl FUN_021CF588
	ldr r1, [r4, r7]
	movs r0, #0
	strb r0, [r1, #8]
_021CF4EA:
	adds r5, r5, #1
	cmp r5, #3
	blo _021CF4C8
_021CF4F0:
	ldr r0, _021CF544 ; =0x0000011F
	bl FUN_0203CDF4
	movs r5, #0x71
	lsls r5, r5, #2
	ldr r0, [r4, r5]
	bl FUN_021CF598
	ldr r0, [r4, r5]
	bl FUN_021CF5A8
	adds r0, r5, #0
	subs r0, #0x10
	ldrb r0, [r4, r0]
	subs r5, #0x10
	adds r0, r0, #1
	strb r0, [r4, r5]
	b _021CF538
_021CF514:
	adds r0, r6, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF5B8
	cmp r0, #0
	beq _021CF538
	b _021CF48A
_021CF524:
	ldr r0, _021CF540 ; =0x0000011D
	bl FUN_0203CDF4
	movs r0, #0x6d
	movs r1, #0
	lsls r0, r0, #2
	strb r1, [r4, r0]
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021CF538:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CF540: .word 0x0000011D
_021CF544: .word 0x0000011F
	thumb_func_end FUN_021CF408

	thumb_func_start FUN_021CF548
FUN_021CF548: ; 0x021CF548
	bx pc
	nop
	thumb_func_end FUN_021CF548
_021CF54C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF558
FUN_021CF558: ; 0x021CF558
	bx pc
	nop
	thumb_func_end FUN_021CF558
_021CF55C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF568
FUN_021CF568: ; 0x021CF568
	bx pc
	nop
	thumb_func_end FUN_021CF568
_021CF56C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CF578
FUN_021CF578: ; 0x021CF578
	bx pc
	nop
	thumb_func_end FUN_021CF578
_021CF57C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x75, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021CF588
FUN_021CF588: ; 0x021CF588
	bx pc
	nop
	thumb_func_end FUN_021CF588
_021CF58C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xA1, 0xCC, 0x89, 0x06

	thumb_func_start FUN_021CF598
FUN_021CF598: ; 0x021CF598
	bx pc
	nop
	thumb_func_end FUN_021CF598
_021CF59C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD5, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF5A8
FUN_021CF5A8: ; 0x021CF5A8
	bx pc
	nop
	thumb_func_end FUN_021CF5A8
_021CF5AC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CF5B8
FUN_021CF5B8: ; 0x021CF5B8
	bx pc
	nop
	thumb_func_end FUN_021CF5B8
_021CF5BC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF5C8
FUN_021CF5C8: ; 0x021CF5C8
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0x43
	adds r5, r0, #0
	adds r6, r2, #0
	movs r7, #0
	lsls r4, r4, #2
	adds r3, r1, #0
	adds r1, r5, r4
	movs r2, #5
	str r7, [sp]
	bl FUN_021CF274
	adds r0, r4, #0
	adds r0, #0x4b
	strb r6, [r5, r0]
	adds r4, #0xa8
	strb r7, [r5, r4]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CF5C8

	thumb_func_start FUN_021CF5EC
FUN_021CF5EC: ; 0x021CF5EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r6, #0x6d
	adds r5, r0, #0
	str r3, [sp, #4]
	lsls r6, r6, #2
	ldrb r0, [r5, r6]
	adds r4, r1, #0
	adds r7, r2, #0
	cmp r0, #0
	beq _021CF604
	b _021CF756
_021CF604:
	ldr r0, [r5]
	bl FUN_0219C994
	adds r1, r5, #0
	adds r1, #0xc8
	str r0, [r1]
	ldr r0, [r5]
	bl FUN_0219C99C
	adds r1, r5, #0
	adds r1, #0xe4
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xd0
	str r4, [r0]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r1, [r0]
	adds r0, r5, #0
	adds r0, #0xcc
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x14
	ldrh r1, [r5, r0]
	adds r0, r5, #0
	adds r0, #0xd4
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0xdc
	strb r7, [r0]
	adds r1, r5, #0
	ldr r0, [sp, #4]
	adds r1, #0xdd
	strb r0, [r1]
	adds r0, r5, #0
	movs r4, #0
	adds r0, #0xde
	adds r6, #0x10
	strh r4, [r0]
	ldr r0, [r5, r6]
	bl FUN_021CF75C
	adds r1, r5, #0
	adds r1, #0xf4
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xe8
	str r4, [r0]
	ldr r0, [r5]
	bl FUN_0219DB40
	adds r1, r5, #0
	adds r1, #0xd8
	str r0, [r1]
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #3
	beq _021CF67C
	movs r4, #1
_021CF67C:
	movs r0, #0x42
	lsls r0, r0, #2
	str r4, [r5, r0]
	adds r0, r5, #0
	movs r4, #0
	adds r0, #0xec
	str r4, [r0]
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021CF696
	movs r4, #1
_021CF696:
	adds r0, r5, #0
	adds r0, #0xf1
	strb r4, [r0]
	adds r0, r5, #0
	movs r4, #0
	adds r0, #0xe1
	add r6, sp, #0x20
	strb r4, [r0]
	ldrb r0, [r6]
	cmp r0, #0
	bne _021CF6B0
	movs r4, #3
	b _021CF6F4
_021CF6B0:
	ldr r0, [r5]
	movs r1, #0x40
	bl FUN_0219DB04
	cmp r0, #0
	beq _021CF6C0
	movs r4, #1
	b _021CF6F4
_021CF6C0:
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #0
	bne _021CF6E4
	ldr r0, [r5, #8]
	movs r1, #1
	bl FUN_0219D438
	cmp r0, #1
	bls _021CF6DA
	movs r4, #2
	b _021CF6F4
_021CF6DA:
	ldrb r0, [r6, #4]
	cmp r0, #0
	beq _021CF6E4
	movs r4, #4
	b _021CF6F4
_021CF6E4:
	movs r1, #1
	ldr r0, [r5]
	lsls r1, r1, #0x10
	bl FUN_0219DB04
	cmp r0, #0
	beq _021CF6F4
	movs r4, #5
_021CF6F4:
	adds r0, r5, #0
	adds r0, #0xf0
	strb r4, [r0]
	movs r6, #0x43
	movs r4, #0
	lsls r6, r6, #2
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r5, r6
	movs r2, #3
	movs r3, #0
	bl FUN_021CF274
	ldr r0, [r5, #4]
	bl FUN_021B91C0
	str r0, [sp, #8]
	bl FUN_0219D4C8
	adds r7, r0, #0
	beq _021CF73A
	adds r6, #0x38
_021CF720:
	lsls r1, r4, #0x18
	ldr r0, [sp, #8]
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	movs r1, #0x13
	bl FUN_021BBB04
	adds r1, r5, r4
	adds r4, r4, #1
	strb r0, [r1, r6]
	cmp r4, r7
	blo _021CF720
_021CF73A:
	cmp r4, #6
	bhs _021CF74E
	movs r0, #0x51
	movs r2, #0
	lsls r0, r0, #2
_021CF744:
	adds r1, r5, r4
	adds r4, r4, #1
	strb r2, [r1, r0]
	cmp r4, #6
	blo _021CF744
_021CF74E:
	movs r0, #0x6d
	movs r1, #1
	lsls r0, r0, #2
	strb r1, [r5, r0]
_021CF756:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021CF5EC

	thumb_func_start FUN_021CF75C
FUN_021CF75C: ; 0x021CF75C
	bx pc
	nop
	thumb_func_end FUN_021CF75C
_021CF760:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xC9, 0xB7, 0x89, 0x06

	thumb_func_start FUN_021CF76C
FUN_021CF76C: ; 0x021CF76C
	adds r1, r0, #0
	movs r2, #1
	adds r1, #0xe8
	str r2, [r1]
	movs r1, #0x4f
	lsls r1, r1, #2
	str r2, [r0, r1]
	bx lr
	thumb_func_end FUN_021CF76C

	thumb_func_start FUN_021CF77C
FUN_021CF77C: ; 0x021CF77C
	push {r3, r4, r5, lr}
	movs r5, #0x6d
	adds r4, r0, #0
	lsls r5, r5, #2
	ldrb r0, [r4, r5]
	cmp r0, #7
	bls _021CF78C
	b _021CF898
_021CF78C:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CF798: ; jump table
	.short _021CF898 - _021CF798 - 2 ; case 0
	.short _021CF7A8 - _021CF798 - 2 ; case 1
	.short _021CF7C0 - _021CF798 - 2 ; case 2
	.short _021CF7EA - _021CF798 - 2 ; case 3
	.short _021CF80A - _021CF798 - 2 ; case 4
	.short _021CF850 - _021CF798 - 2 ; case 5
	.short _021CF864 - _021CF798 - 2 ; case 6
	.short _021CF87C - _021CF798 - 2 ; case 7
_021CF7A8:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	movs r1, #1
	bl FUN_021CF8A8
	ldr r0, _021CF89C ; =0x0000011D
	bl FUN_0203CE38
	movs r0, #2
_021CF7BC:
	strb r0, [r4, r5]
	b _021CF898
_021CF7C0:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF8B8
	cmp r0, #0
	beq _021CF898
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF8C8
	ldr r0, _021CF8A0 ; =0x0000011E
	bl FUN_0203CE38
	adds r0, r4, #0
	adds r0, #0xc8
	bl FUN_021F5BA4
	movs r0, #3
	b _021CF7BC
_021CF7EA:
	adds r0, r4, #0
	adds r0, #0xe1
	ldrb r0, [r0]
	cmp r0, #0
	beq _021CF898
	ldr r0, _021CF8A0 ; =0x0000011E
	bl FUN_0203CDF4
	adds r0, r4, #0
	adds r0, #0xe8
	ldr r0, [r0]
	cmp r0, #0
	bne _021CF808
	movs r0, #4
	b _021CF7BC
_021CF808:
	b _021CF860
_021CF80A:
	adds r0, r4, #0
	adds r0, #0xde
	ldrh r0, [r0]
	cmp r0, #0
	beq _021CF846
	adds r1, r4, #0
	adds r1, #0xf2
	ldrb r1, [r1]
	cmp r1, #2
	beq _021CF846
	bl FUN_021CF8D8
	cmp r0, #0
	bne _021CF846
	adds r0, r4, #0
	adds r0, #0xde
	ldrh r1, [r0]
	adds r0, r5, #0
	subs r0, #0x84
	strh r1, [r4, r0]
	ldr r0, _021CF8A4 ; =0x0000011F
	bl FUN_0203CE38
	adds r0, r5, #0
	subs r0, #0xa8
	adds r0, r4, r0
	bl FUN_021F8754
	movs r0, #5
	b _021CF7BC
_021CF846:
	movs r0, #0x6d
	movs r1, #6
	lsls r0, r0, #2
	strb r1, [r4, r0]
	b _021CF898
_021CF850:
	adds r0, r5, #0
	subs r0, #0x5c
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021CF898
	ldr r0, _021CF8A4 ; =0x0000011F
	bl FUN_0203CDF4
_021CF860:
	movs r0, #6
	b _021CF7BC
_021CF864:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF8E8
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF8F8
	movs r0, #7
	b _021CF7BC
_021CF87C:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CF908
	cmp r0, #0
	beq _021CF898
	ldr r0, _021CF89C ; =0x0000011D
	bl FUN_0203CDF4
	movs r0, #0
	strb r0, [r4, r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CF898:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_021CF89C: .word 0x0000011D
_021CF8A0: .word 0x0000011E
_021CF8A4: .word 0x0000011F
	thumb_func_end FUN_021CF77C

	thumb_func_start FUN_021CF8A8
FUN_021CF8A8: ; 0x021CF8A8
	bx pc
	nop
	thumb_func_end FUN_021CF8A8
_021CF8AC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF8B8
FUN_021CF8B8: ; 0x021CF8B8
	bx pc
	nop
	thumb_func_end FUN_021CF8B8
_021CF8BC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF8C8
FUN_021CF8C8: ; 0x021CF8C8
	bx pc
	nop
	thumb_func_end FUN_021CF8C8
_021CF8CC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CF8D8
FUN_021CF8D8: ; 0x021CF8D8
	bx pc
	nop
	thumb_func_end FUN_021CF8D8
_021CF8DC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x95, 0xCA, 0x89, 0x06

	thumb_func_start FUN_021CF8E8
FUN_021CF8E8: ; 0x021CF8E8
	bx pc
	nop
	thumb_func_end FUN_021CF8E8
_021CF8EC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD5, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF8F8
FUN_021CF8F8: ; 0x021CF8F8
	bx pc
	nop
	thumb_func_end FUN_021CF8F8
_021CF8FC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CF908
FUN_021CF908: ; 0x021CF908
	bx pc
	nop
	thumb_func_end FUN_021CF908
_021CF90C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CF918
FUN_021CF918: ; 0x021CF918
	adds r1, r0, #0
	adds r1, #0xe1
	ldrb r1, [r1]
	cmp r1, #0
	beq _021CF928
	adds r0, #0xde
	ldrh r0, [r0]
	bx lr
_021CF928:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021CF918

	thumb_func_start FUN_021CF92C
FUN_021CF92C: ; 0x021CF92C
	adds r1, r0, #0
	adds r1, #0xe1
	ldrb r1, [r1]
	cmp r1, #0
	beq _021CF93C
	adds r0, #0xe0
	ldrb r0, [r0]
	bx lr
_021CF93C:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021CF92C

	thumb_func_start FUN_021CF940
FUN_021CF940: ; 0x021CF940
	movs r1, #0x4b
	lsls r1, r1, #2
	ldrb r0, [r0, r1]
	bx lr
	thumb_func_end FUN_021CF940

	thumb_func_start FUN_021CF948
FUN_021CF948: ; 0x021CF948
	ldr r1, _021CF950 ; =0x00000157
	ldrb r0, [r0, r1]
	bx lr
	nop
_021CF950: .word 0x00000157
	thumb_func_end FUN_021CF948

	thumb_func_start FUN_021CF954
FUN_021CF954: ; 0x021CF954
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xde
	ldrh r0, [r0]
	cmp r0, #0
	beq _021CF99A
	movs r2, #0x4b
	lsls r2, r2, #2
	ldrb r0, [r4, r2]
	cmp r0, #6
	beq _021CF99A
	adds r0, r4, #0
	adds r0, #0xd0
	ldr r0, [r0]
	cmp r0, #1
	beq _021CF99A
	adds r0, r4, #0
	adds r0, #0xe4
	adds r1, r4, #0
	subs r2, #0x2c
	ldr r0, [r0]
	adds r1, #0xf8
	adds r2, r4, r2
	bl FUN_020088C4
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0xde
	adds r4, #0xf2
	adds r0, #0xe4
	ldrh r1, [r1]
	ldrb r2, [r4]
	ldr r0, [r0]
	bl FUN_020088E0
_021CF99A:
	pop {r4, pc}
	thumb_func_end FUN_021CF954

	thumb_func_start FUN_021CF99C
FUN_021CF99C: ; 0x021CF99C
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x6d
	adds r5, r0, #0
	lsls r7, r7, #2
	ldrb r0, [r5, r7]
	adds r4, r1, #0
	cmp r0, #0
	bne _021CF9FC
	adds r1, r7, #0
	movs r0, #0
	subs r1, #0x52
	strb r0, [r5, r1]
	adds r1, r7, #0
	adds r1, #0x14
	ldrh r2, [r5, r1]
	adds r1, r7, #0
	subs r1, #0x54
	strh r2, [r5, r1]
	adds r1, r5, #0
	adds r1, #0xb0
	ldr r2, [r1]
	adds r1, r7, #0
	subs r1, #0x58
	str r2, [r5, r1]
	adds r1, r7, #0
	subs r1, #0x40
	str r0, [r5, r1]
	adds r1, r7, #0
	subs r1, #0x44
	str r0, [r5, r1]
	ldr r0, [r5]
	movs r1, #1
	movs r6, #1
	bl FUN_0219C808
	adds r1, r7, #0
	subs r1, #0x50
	str r0, [r5, r1]
	ldr r0, [r5]
	bl FUN_0219C9F0
	adds r1, r7, #0
	subs r1, #0x4c
	str r0, [r5, r1]
	adds r0, r7, #0
	subs r0, #0x48
	str r4, [r5, r0]
	strb r6, [r5, r7]
_021CF9FC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CF99C

	thumb_func_start FUN_021CFA00
FUN_021CFA00: ; 0x021CFA00
	movs r1, #0x17
	movs r2, #1
	lsls r1, r1, #4
	str r2, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CFA00

	thumb_func_start FUN_021CFA0C
FUN_021CFA0C: ; 0x021CFA0C
	push {r3, r4, r5, lr}
	movs r5, #0x6d
	adds r4, r0, #0
	lsls r5, r5, #2
	ldrb r0, [r4, r5]
	cmp r0, #5
	bhi _021CFABE
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CFA26: ; jump table
	.short _021CFABE - _021CFA26 - 2 ; case 0
	.short _021CFA32 - _021CFA26 - 2 ; case 1
	.short _021CFA4A - _021CFA26 - 2 ; case 2
	.short _021CFA76 - _021CFA26 - 2 ; case 3
	.short _021CFA8A - _021CFA26 - 2 ; case 4
	.short _021CFAA2 - _021CFA26 - 2 ; case 5
_021CFA32:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	movs r1, #1
	bl FUN_021CFACC
	ldr r0, _021CFAC4 ; =0x0000011D
	bl FUN_0203CE38
	movs r0, #2
_021CFA46:
	strb r0, [r4, r5]
	b _021CFABE
_021CFA4A:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFADC
	cmp r0, #0
	beq _021CFABE
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFAEC
	ldr r0, _021CFAC8 ; =0x00000120
	bl FUN_0203CE38
	adds r0, r5, #0
	subs r0, #0x58
	adds r0, r4, r0
	bl FUN_021F4480
	movs r0, #3
	b _021CFA46
_021CFA76:
	adds r0, r5, #0
	subs r0, #0x52
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021CFABE
	ldr r0, _021CFAC8 ; =0x00000120
	bl FUN_0203CDF4
	movs r0, #4
	b _021CFA46
_021CFA8A:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFAFC
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFB0C
	movs r0, #5
	b _021CFA46
_021CFAA2:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFB1C
	cmp r0, #0
	beq _021CFABE
	ldr r0, _021CFAC4 ; =0x0000011D
	bl FUN_0203CDF4
	movs r0, #0
	strb r0, [r4, r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CFABE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021CFAC4: .word 0x0000011D
_021CFAC8: .word 0x00000120
	thumb_func_end FUN_021CFA0C

	thumb_func_start FUN_021CFACC
FUN_021CFACC: ; 0x021CFACC
	bx pc
	nop
	thumb_func_end FUN_021CFACC
_021CFAD0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFADC
FUN_021CFADC: ; 0x021CFADC
	bx pc
	nop
	thumb_func_end FUN_021CFADC
_021CFAE0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFAEC
FUN_021CFAEC: ; 0x021CFAEC
	bx pc
	nop
	thumb_func_end FUN_021CFAEC
_021CFAF0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CFAFC
FUN_021CFAFC: ; 0x021CFAFC
	bx pc
	nop
	thumb_func_end FUN_021CFAFC
_021CFB00:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD5, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFB0C
FUN_021CFB0C: ; 0x021CFB0C
	bx pc
	nop
	thumb_func_end FUN_021CFB0C
_021CFB10:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CFB1C
FUN_021CFB1C: ; 0x021CFB1C
	bx pc
	nop
	thumb_func_end FUN_021CFB1C
_021CFB20:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFB2C
FUN_021CFB2C: ; 0x021CFB2C
	push {r3, r4}
	movs r1, #0x6d
	lsls r1, r1, #2
	ldrb r2, [r0, r1]
	cmp r2, #0
	bne _021CFB62
	adds r3, r1, #0
	movs r2, #0
	subs r3, #0x36
	strb r2, [r0, r3]
	adds r3, r1, #0
	adds r3, #0x14
	ldrh r4, [r0, r3]
	adds r3, r1, #0
	subs r3, #0x38
	strh r4, [r0, r3]
	adds r3, r0, #0
	adds r3, #0xb0
	ldr r4, [r3]
	adds r3, r1, #0
	subs r3, #0x3c
	str r4, [r0, r3]
	adds r3, r1, #0
	subs r3, #0x1c
	str r2, [r0, r3]
	movs r2, #1
	strb r2, [r0, r1]
_021CFB62:
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021CFB2C

	thumb_func_start FUN_021CFB68
FUN_021CFB68: ; 0x021CFB68
	movs r3, #6
	lsls r3, r3, #6
	str r1, [r0, r3]
	adds r3, #0x14
	str r2, [r0, r3]
	bx lr
	thumb_func_end FUN_021CFB68

	thumb_func_start FUN_021CFB74
FUN_021CFB74: ; 0x021CFB74
	lsls r1, r1, #2
	adds r1, r0, r1
	movs r0, #0x61
	lsls r0, r0, #2
	str r2, [r1, r0]
	bx lr
	thumb_func_end FUN_021CFB74

	thumb_func_start FUN_021CFB80
FUN_021CFB80: ; 0x021CFB80
	push {r3, r4, r5, lr}
	movs r5, #0x6d
	adds r4, r0, #0
	lsls r5, r5, #2
	ldrb r0, [r4, r5]
	cmp r0, #5
	bhi _021CFC32
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021CFB9A: ; jump table
	.short _021CFC32 - _021CFB9A - 2 ; case 0
	.short _021CFBA6 - _021CFB9A - 2 ; case 1
	.short _021CFBBE - _021CFB9A - 2 ; case 2
	.short _021CFBEA - _021CFB9A - 2 ; case 3
	.short _021CFBFE - _021CFB9A - 2 ; case 4
	.short _021CFC16 - _021CFB9A - 2 ; case 5
_021CFBA6:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	movs r1, #0
	bl FUN_021CFC40
	ldr r0, _021CFC38 ; =0x0000011D
	bl FUN_0203CE38
	movs r0, #2
_021CFBBA:
	strb r0, [r4, r5]
	b _021CFC32
_021CFBBE:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFC50
	cmp r0, #0
	beq _021CFC32
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFC60
	ldr r0, _021CFC3C ; =0x00000121
	bl FUN_0203CE38
	adds r0, r5, #0
	subs r0, #0x3c
	adds r0, r4, r0
	bl FUN_021F4480
	movs r0, #3
	b _021CFBBA
_021CFBEA:
	adds r0, r5, #0
	subs r0, #0x36
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021CFC32
	ldr r0, _021CFC3C ; =0x00000121
	bl FUN_0203CDF4
	movs r0, #4
	b _021CFBBA
_021CFBFE:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFC70
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFC80
	movs r0, #5
	b _021CFBBA
_021CFC16:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021CFC90
	cmp r0, #0
	beq _021CFC32
	ldr r0, _021CFC38 ; =0x0000011D
	bl FUN_0203CDF4
	movs r0, #0
	strb r0, [r4, r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021CFC32:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021CFC38: .word 0x0000011D
_021CFC3C: .word 0x00000121
	thumb_func_end FUN_021CFB80

	thumb_func_start FUN_021CFC40
FUN_021CFC40: ; 0x021CFC40
	bx pc
	nop
	thumb_func_end FUN_021CFC40
_021CFC44:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFC50
FUN_021CFC50: ; 0x021CFC50
	bx pc
	nop
	thumb_func_end FUN_021CFC50
_021CFC54:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFC60
FUN_021CFC60: ; 0x021CFC60
	bx pc
	nop
	thumb_func_end FUN_021CFC60
_021CFC64:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CFC70
FUN_021CFC70: ; 0x021CFC70
	bx pc
	nop
	thumb_func_end FUN_021CFC70
_021CFC74:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xD5, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFC80
FUN_021CFC80: ; 0x021CFC80
	bx pc
	nop
	thumb_func_end FUN_021CFC80
_021CFC84:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021CFC90
FUN_021CFC90: ; 0x021CFC90
	bx pc
	nop
	thumb_func_end FUN_021CFC90
_021CFC94:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021CFCA0
FUN_021CFCA0: ; 0x021CFCA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0219C71C
	adds r7, r0, #0
	cmp r4, #6
	beq _021CFCC2
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_0219C71C
	adds r2, r0, #0
	b _021CFCC4
_021CFCC2:
	movs r2, #0xff
_021CFCC4:
	ldr r0, [sp, #0x20]
	adds r1, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r3, r6, #0
	str r0, [sp, #4]
	add r0, sp, #0x20
	ldrb r0, [r0, #8]
	str r0, [sp, #8]
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	bl FUN_021D30D4
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CFCA0

	thumb_func_start FUN_021CFCE4
FUN_021CFCE4: ; 0x021CFCE4
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021CFCF0 ; =FUN_021D3170
	bx r3
	nop
_021CFCF0: .word FUN_021D3170
	thumb_func_end FUN_021CFCE4

	thumb_func_start FUN_021CFCF4
FUN_021CFCF4: ; 0x021CFCF4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r7, r3, #0
	movs r1, #0xc
	adds r5, r0, #0
	adds r6, r2, #0
	bl FUN_021CE97C
	str r7, [r0, #4]
	strb r6, [r0, #0xa]
	movs r1, #0
	strh r1, [r0, #8]
	strh r4, [r0]
	ldr r0, _021CFD1C ; =FUN_021CFD60
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r5, [r5, #0x24]
	str r1, [r5, #0x28]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CFD1C: .word FUN_021CFD60
	thumb_func_end FUN_021CFCF4

	thumb_func_start FUN_021CFD20
FUN_021CFD20: ; 0x021CFD20
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _021CFD3E
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021CFD3A
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x28]
_021CFD3A:
	movs r0, #0
	pop {r4, pc}
_021CFD3E:
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _021CFD5A
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021CFD56
	movs r0, #0
	str r0, [r4, #0x20]
	movs r0, #1
	pop {r4, pc}
_021CFD56:
	movs r0, #0
	pop {r4, pc}
_021CFD5A:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CFD20

	thumb_func_start FUN_021CFD60
FUN_021CFD60: ; 0x021CFD60
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_021CE97C
	adds r6, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021CFD7C
	cmp r0, #1
	beq _021CFDA2
	b _021CFDB4
_021CFD7C:
	ldr r0, [r4, #4]
	bl FUN_021B19D0
	adds r3, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r6, #0xa]
	ldrh r2, [r6]
	ldr r0, [r4, r0]
	bl FUN_021D31C8
	ldr r1, [r6, #4]
	adds r0, r4, #0
	bl FUN_021CFF2C
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021CFDB4
_021CFDA2:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3210
	cmp r0, #0
	beq _021CFDB4
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CFDB4:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CFD60

	thumb_func_start FUN_021CFDB8
FUN_021CFDB8: ; 0x021CFDB8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021B19D0
	cmp r0, #0
	bne _021CFDE8
	adds r0, r5, #0
	movs r1, #0xc
	bl FUN_021CE97C
	str r7, [r0, #4]
	strb r6, [r0, #0xa]
	movs r1, #0
	strh r1, [r0, #8]
	strh r4, [r0]
	ldr r0, _021CFDEC ; =FUN_021CFE30
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r5, [r5, #0x24]
	str r1, [r5, #0x28]
_021CFDE8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021CFDEC: .word FUN_021CFE30
	thumb_func_end FUN_021CFDB8

	thumb_func_start FUN_021CFDF0
FUN_021CFDF0: ; 0x021CFDF0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _021CFE0E
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021CFE0A
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x28]
_021CFE0A:
	movs r0, #0
	pop {r4, pc}
_021CFE0E:
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _021CFE2A
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021CFE26
	movs r0, #0
	str r0, [r4, #0x20]
	movs r0, #1
	pop {r4, pc}
_021CFE26:
	movs r0, #0
	pop {r4, pc}
_021CFE2A:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021CFDF0

	thumb_func_start FUN_021CFE30
FUN_021CFE30: ; 0x021CFE30
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_021CE97C
	adds r6, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021CFE4C
	cmp r0, #1
	beq _021CFE6A
	b _021CFE7C
_021CFE4C:
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r6, #0xa]
	ldrh r2, [r6]
	ldr r0, [r4, r0]
	bl FUN_021D3228
	ldr r1, [r6, #4]
	adds r0, r4, #0
	bl FUN_021CFF2C
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021CFE7C
_021CFE6A:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3240
	cmp r0, #0
	beq _021CFE7C
	movs r0, #1
	pop {r4, r5, r6, pc}
_021CFE7C:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021CFE30

	thumb_func_start FUN_021CFE80
FUN_021CFE80: ; 0x021CFE80
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	movs r1, #0x14
	adds r7, r0, #0
	adds r5, r2, #0
	str r3, [sp]
	bl FUN_021CE97C
	adds r4, r0, #0
	str r5, [r4, #0xc]
	movs r5, #0
	strb r6, [r4, #6]
	add r0, sp, #0x18
	ldrh r0, [r0]
	cmp r6, #0
	strh r0, [r4, #0x10]
	strh r5, [r4, #8]
	bls _021CFEB8
_021CFEA4:
	ldr r2, [sp]
	ldr r0, [r7]
	ldrb r2, [r2, r5]
	ldr r1, [r7, #8]
	bl FUN_0219C638
	strb r0, [r4, r5]
	adds r5, r5, #1
	cmp r5, r6
	blo _021CFEA4
_021CFEB8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021CFE80

	thumb_func_start FUN_021CFEBC
FUN_021CFEBC: ; 0x021CFEBC
	push {r3, r4, r5, r6, r7, lr}
	movs r1, #0x14
	adds r6, r0, #0
	bl FUN_021CE97C
	adds r4, r0, #0
	ldrh r0, [r4, #8]
	cmp r0, #0
	beq _021CFED4
	cmp r0, #1
	beq _021CFF0C
	b _021CFF28
_021CFED4:
	ldr r0, [r6, #4]
	bl FUN_021B19D0
	adds r7, r0, #0
	ldrb r0, [r4, #6]
	movs r5, #0
	cmp r0, #0
	bls _021CFEFC
_021CFEE4:
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r4, r5]
	ldrh r2, [r4, #0x10]
	ldr r0, [r6, r0]
	adds r3, r7, #0
	bl FUN_021D31C8
	ldrb r0, [r4, #6]
	adds r5, r5, #1
	cmp r5, r0
	blo _021CFEE4
_021CFEFC:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl FUN_021CFF2C
	ldrh r0, [r4, #8]
	adds r0, r0, #1
	strh r0, [r4, #8]
	b _021CFF28
_021CFF0C:
	movs r4, #7
	lsls r4, r4, #6
	ldr r0, [r6, r4]
	bl FUN_021D3210
	cmp r0, #0
	beq _021CFF28
	ldr r0, [r6, r4]
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021CFF28
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021CFF28:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021CFEBC

	thumb_func_start FUN_021CFF2C
FUN_021CFF2C: ; 0x021CFF2C
	cmp r1, #2
	beq _021CFF36
	cmp r1, #3
	beq _021CFF3A
	b _021CFF3E
_021CFF36:
	ldr r1, _021CFF44 ; =0x00000563
	b _021CFF40
_021CFF3A:
	ldr r1, _021CFF48 ; =0x00000565
	b _021CFF40
_021CFF3E:
	ldr r1, _021CFF4C ; =0x00000564
_021CFF40:
	ldr r3, _021CFF50 ; =FUN_021D0B14
	bx r3
	.align 2, 0
_021CFF44: .word 0x00000563
_021CFF48: .word 0x00000565
_021CFF4C: .word 0x00000564
_021CFF50: .word FUN_021D0B14
	thumb_func_end FUN_021CFF2C

	thumb_func_start FUN_021CFF54
FUN_021CFF54: ; 0x021CFF54
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r5, #0
	adds r4, r2, #0
	bl FUN_021DF890
	cmp r0, #0
	beq _021CFF80
	adds r0, r5, #0
	bl FUN_021DFF54
	cmp r4, r0
	beq _021CFF80
	cmp r4, #1
	bne _021CFF7A
	adds r0, r5, #0
	bl FUN_021DF7E8
	pop {r3, r4, r5, pc}
_021CFF7A:
	adds r0, r5, #0
	bl FUN_021DF7F8
_021CFF80:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CFF54

	thumb_func_start FUN_021CFF84
FUN_021CFF84: ; 0x021CFF84
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	bl FUN_021B19D0
	adds r2, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D3454
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021CFF84

	thumb_func_start FUN_021CFFA0
FUN_021CFFA0: ; 0x021CFFA0
	push {r3, lr}
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	bl FUN_021D3490
	cmp r0, #0
	beq _021CFFB4
	movs r0, #1
	pop {r3, pc}
_021CFFB4:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021CFFA0

	thumb_func_start FUN_021CFFB8
FUN_021CFFB8: ; 0x021CFFB8
	push {r3, r4, r5, lr}
	ldr r0, [r0, #4]
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_021B19D0
	cmp r0, #0
	bne _021CFFD0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021DF39C
_021CFFD0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021CFFB8

	thumb_func_start FUN_021CFFD4
FUN_021CFFD4: ; 0x021CFFD4
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021CFFE2
	movs r0, #1
	pop {r3, pc}
_021CFFE2:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021CFFD4

	thumb_func_start FUN_021CFFE8
FUN_021CFFE8: ; 0x021CFFE8
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, _021CFFF4 ; =FUN_021DF420
	bx r3
	nop
_021CFFF4: .word FUN_021DF420
	thumb_func_end FUN_021CFFE8

	thumb_func_start FUN_021CFFF8
FUN_021CFFF8: ; 0x021CFFF8
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D0006
	movs r0, #1
	pop {r3, pc}
_021D0006:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021CFFF8

	thumb_func_start FUN_021D000C
FUN_021D000C: ; 0x021D000C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	bl FUN_021B19D0
	adds r2, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D3254
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D000C

	thumb_func_start FUN_021D0028
FUN_021D0028: ; 0x021D0028
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0034 ; =FUN_021D327C
	bx r3
	nop
_021D0034: .word FUN_021D327C
	thumb_func_end FUN_021D0028

	thumb_func_start FUN_021D0038
FUN_021D0038: ; 0x021D0038
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D0044 ; =FUN_021D3290
	bx r3
	nop
_021D0044: .word FUN_021D3290
	thumb_func_end FUN_021D0038

	thumb_func_start FUN_021D0048
FUN_021D0048: ; 0x021D0048
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0054 ; =FUN_021D32C4
	bx r3
	nop
_021D0054: .word FUN_021D32C4
	thumb_func_end FUN_021D0048

	thumb_func_start FUN_021D0058
FUN_021D0058: ; 0x021D0058
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021B19D0
	adds r3, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D32D8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D0058

	thumb_func_start FUN_021D0078
FUN_021D0078: ; 0x021D0078
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0084 ; =FUN_021D3334
	bx r3
	nop
_021D0084: .word FUN_021D3334
	thumb_func_end FUN_021D0078

	thumb_func_start FUN_021D0088
FUN_021D0088: ; 0x021D0088
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	str r3, [sp]
	movs r1, #4
	adds r7, r2, #0
	bl FUN_021CE97C
	adds r4, r0, #0
	ldr r0, [r5, #8]
	adds r1, r6, #0
	bl FUN_0219D1C8
	strb r7, [r4, #1]
	ldr r1, [sp]
	strb r1, [r4, #2]
	strb r6, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #3]
	movs r1, #0
	ldr r0, _021D00C0 ; =FUN_021D0104
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r5, [r5, #0x24]
	str r1, [r5, #0x28]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D00C0: .word FUN_021D0104
	thumb_func_end FUN_021D0088

	thumb_func_start FUN_021D00C4
FUN_021D00C4: ; 0x021D00C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _021D00E2
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D00DE
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x28]
_021D00DE:
	movs r0, #0
	pop {r4, pc}
_021D00E2:
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _021D00FE
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D00FA
	movs r0, #0
	str r0, [r4, #0x20]
	movs r0, #1
	pop {r4, pc}
_021D00FA:
	movs r0, #0
	pop {r4, pc}
_021D00FE:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D00C4

	thumb_func_start FUN_021D0104
FUN_021D0104: ; 0x021D0104
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #4
	bl FUN_021CE97C
	adds r6, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021D0122
	cmp r0, #1
	beq _021D0142
	b _021D0156
_021D0122:
	ldr r0, [r4, #4]
	bl FUN_021B19D0
	str r0, [sp]
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r6]
	ldrb r2, [r6, #1]
	ldrb r3, [r6, #2]
	ldr r0, [r4, r0]
	bl FUN_021D3394
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D0156
_021D0142:
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D3410
	cmp r0, #0
	beq _021D0156
	add sp, #4
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021D0156:
	movs r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_021D0104

	thumb_func_start FUN_021D015C
FUN_021D015C: ; 0x021D015C
	push {r3, lr}
	adds r2, r0, #0
	ldrb r0, [r2, #3]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #9
	bhi _021D01FA
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D0176: ; jump table
	.short _021D01FA - _021D0176 - 2 ; case 0
	.short _021D018A - _021D0176 - 2 ; case 1
	.short _021D0196 - _021D0176 - 2 ; case 2
	.short _021D01A2 - _021D0176 - 2 ; case 3
	.short _021D01C4 - _021D0176 - 2 ; case 4
	.short _021D01AC - _021D0176 - 2 ; case 5
	.short _021D01B8 - _021D0176 - 2 ; case 6
	.short _021D01D8 - _021D0176 - 2 ; case 7
	.short _021D01E8 - _021D0176 - 2 ; case 8
	.short _021D01F2 - _021D0176 - 2 ; case 9
_021D018A:
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r2, r2, #4
	bl FUN_021D4F5C
	pop {r3, pc}
_021D0196:
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r2, r2, #4
	bl FUN_021D4FD0
	pop {r3, pc}
_021D01A2:
	adds r0, r1, #0
	ldrh r1, [r2]
	bl FUN_021D579C
	pop {r3, pc}
_021D01AC:
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r2, r2, #4
	bl FUN_021D57B0
	pop {r3, pc}
_021D01B8:
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r2, r2, #4
	bl FUN_021D57F0
	pop {r3, pc}
_021D01C4:
	adds r0, r1, #0
	ldr r1, [r2, #4]
	ldr r2, [r2, #8]
	lsls r1, r1, #0x18
	lsls r2, r2, #0x10
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x10
	bl FUN_021D56C4
	pop {r3, pc}
_021D01D8:
	adds r0, r1, #0
	ldr r1, [r2, #4]
	ldr r2, [r2, #8]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_021D5740
	pop {r3, pc}
_021D01E8:
	adds r0, r1, #0
	ldrh r1, [r2]
	bl FUN_021D5944
	pop {r3, pc}
_021D01F2:
	adds r0, r1, #0
	ldrh r1, [r2]
	bl FUN_021D5964
_021D01FA:
	pop {r3, pc}
	thumb_func_end FUN_021D015C

	thumb_func_start FUN_021D01FC
FUN_021D01FC: ; 0x021D01FC
	adds r0, #0xac
	ldr r0, [r0]
	ldr r3, _021D0204 ; =FUN_020485AC
	bx r3
	.align 2, 0
_021D0204: .word FUN_020485AC
	thumb_func_end FUN_021D01FC

	thumb_func_start FUN_021D0208
FUN_021D0208: ; 0x021D0208
	adds r2, r0, #0
	adds r2, #0xac
	adds r0, r1, #0
	ldr r1, [r2]
	ldr r3, _021D0214 ; =FUN_021D015C
	bx r3
	.align 2, 0
_021D0214: .word FUN_021D015C
	thumb_func_end FUN_021D0208

	thumb_func_start FUN_021D0218
FUN_021D0218: ; 0x021D0218
	push {r3, lr}
	adds r1, r0, #0
	adds r1, #0xac
	ldr r1, [r1]
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D0348
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D0218

	thumb_func_start FUN_021D022C
FUN_021D022C: ; 0x021D022C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	adds r1, #0xac
	ldr r1, [r1]
	adds r0, r4, #0
	bl FUN_021D015C
	adds r0, r5, #0
	adds r5, #0xac
	ldrb r2, [r4, #2]
	ldr r1, [r5]
	movs r3, #0
	bl FUN_021D0348
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D022C

	thumb_func_start FUN_021D0250
FUN_021D0250: ; 0x021D0250
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	adds r1, #0xac
	ldr r1, [r1]
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_021D015C
	adds r0, r5, #0
	adds r5, #0xac
	ldrb r2, [r4, #2]
	ldr r1, [r5]
	adds r3, r6, #0
	bl FUN_021D0348
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D0250

	thumb_func_start FUN_021D0274
FUN_021D0274: ; 0x021D0274
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	adds r1, r4, #0
	adds r1, #0xac
	ldr r1, [r1]
	bl FUN_021D015C
	adds r0, r4, #0
	adds r4, #0xac
	ldr r1, [r4]
	bl FUN_021D0370
	pop {r4, pc}
	thumb_func_end FUN_021D0274

	thumb_func_start FUN_021D0290
FUN_021D0290: ; 0x021D0290
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	bl FUN_021D4F5C
	adds r0, r4, #0
	adds r4, #0xac
	ldr r1, [r4]
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D0348
	pop {r4, pc}
	thumb_func_end FUN_021D0290

	thumb_func_start FUN_021D02AC
FUN_021D02AC: ; 0x021D02AC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	bl FUN_021D4FD0
	adds r0, r4, #0
	adds r4, #0xac
	ldr r1, [r4]
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D0348
	pop {r4, pc}
	thumb_func_end FUN_021D02AC

	thumb_func_start FUN_021D02C8
FUN_021D02C8: ; 0x021D02C8
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x72
	adds r5, r0, #0
	lsls r7, r7, #2
	adds r6, r2, #0
	adds r4, r1, #0
	ldrh r2, [r5, r7]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_02030574
	cmp r0, #0
	beq _021D0302
	adds r2, r5, #0
	adds r2, #0xac
	ldrh r3, [r5, r7]
	ldr r2, [r2]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_02030604
	adds r0, r5, #0
	adds r5, #0xac
	ldr r1, [r5]
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D0348
	b _021D0306
_021D0302:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D0306:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D02C8

	thumb_func_start FUN_021D030C
FUN_021D030C: ; 0x021D030C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	bl FUN_021D56C4
	adds r0, r4, #0
	adds r4, #0xac
	ldr r1, [r4]
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D0348
	pop {r4, pc}
	thumb_func_end FUN_021D030C

	thumb_func_start FUN_021D0328
FUN_021D0328: ; 0x021D0328
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0334 ; =FUN_021D2F1C
	bx r3
	nop
_021D0334: .word FUN_021D2F1C
	thumb_func_end FUN_021D0328

	thumb_func_start FUN_021D0338
FUN_021D0338: ; 0x021D0338
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0344 ; =FUN_021D2F04
	bx r3
	nop
_021D0344: .word FUN_021D2F04
	thumb_func_end FUN_021D0338

	thumb_func_start FUN_021D0348
FUN_021D0348: ; 0x021D0348
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_021B19D0
	cmp r0, #0
	bne _021D036C
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021D2E60
_021D036C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D0348

	thumb_func_start FUN_021D0370
FUN_021D0370: ; 0x021D0370
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D037C ; =FUN_021D2DFC
	bx r3
	nop
_021D037C: .word FUN_021D2DFC
	thumb_func_end FUN_021D0370

	thumb_func_start FUN_021D0380
FUN_021D0380: ; 0x021D0380
	movs r3, #7
	lsls r3, r3, #6
	ldr r0, [r0, r3]
	ldr r3, _021D038C ; =FUN_021D3A24
	bx r3
	nop
_021D038C: .word FUN_021D3A24
	thumb_func_end FUN_021D0380

	thumb_func_start FUN_021D0390
FUN_021D0390: ; 0x021D0390
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D039C ; =FUN_021D3A5C
	bx r3
	nop
_021D039C: .word FUN_021D3A5C
	thumb_func_end FUN_021D0390

	thumb_func_start FUN_021D03A0
FUN_021D03A0: ; 0x021D03A0
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D03AC ; =FUN_021D3A78
	bx r3
	nop
_021D03AC: .word FUN_021D3A78
	thumb_func_end FUN_021D03A0

	thumb_func_start FUN_021D03B0
FUN_021D03B0: ; 0x021D03B0
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D03BC ; =FUN_021D3AA8
	bx r3
	nop
_021D03BC: .word FUN_021D3AA8
	thumb_func_end FUN_021D03B0

	thumb_func_start FUN_021D03C0
FUN_021D03C0: ; 0x021D03C0
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D03CC ; =FUN_021D3AC8
	bx r3
	nop
_021D03CC: .word FUN_021D3AC8
	thumb_func_end FUN_021D03C0

	thumb_func_start FUN_021D03D0
FUN_021D03D0: ; 0x021D03D0
	movs r2, #7
	lsls r2, r2, #6
	ldr r0, [r0, r2]
	ldr r3, _021D03DC ; =FUN_021D3AE8
	bx r3
	nop
_021D03DC: .word FUN_021D3AE8
	thumb_func_end FUN_021D03D0

	thumb_func_start FUN_021D03E0
FUN_021D03E0: ; 0x021D03E0
	adds r0, r1, #0
	ldr r1, _021D03E8 ; =0x00000262
	ldr r3, _021D03EC ; =FUN_021DF39C
	bx r3
	.align 2, 0
_021D03E8: .word 0x00000262
_021D03EC: .word FUN_021DF39C
	thumb_func_end FUN_021D03E0

	thumb_func_start FUN_021D03F0
FUN_021D03F0: ; 0x021D03F0
	adds r0, r1, #0
	ldr r1, _021D03F8 ; =0x00000261
	ldr r3, _021D03FC ; =FUN_021DF39C
	bx r3
	.align 2, 0
_021D03F8: .word 0x00000261
_021D03FC: .word FUN_021DF39C
	thumb_func_end FUN_021D03F0

	thumb_func_start FUN_021D0400
FUN_021D0400: ; 0x021D0400
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D040E
	movs r0, #1
	pop {r3, pc}
_021D040E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D0400

	thumb_func_start FUN_021D0414
FUN_021D0414: ; 0x021D0414
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #3
	bl FUN_021E0470
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D41D4
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D0414

	thumb_func_start FUN_021D042C
FUN_021D042C: ; 0x021D042C
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0438 ; =FUN_021D41F0
	bx r3
	nop
_021D0438: .word FUN_021D41F0
	thumb_func_end FUN_021D042C

	thumb_func_start FUN_021D043C
FUN_021D043C: ; 0x021D043C
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021E04A8
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D41F8
	pop {r4, pc}
	thumb_func_end FUN_021D043C

	thumb_func_start FUN_021D0450
FUN_021D0450: ; 0x021D0450
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219C71C
	adds r1, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D352C
	pop {r4, pc}
	thumb_func_end FUN_021D0450

	thumb_func_start FUN_021D0468
FUN_021D0468: ; 0x021D0468
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0219C71C
	adds r1, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	bl FUN_021D353C
	pop {r4, pc}
	thumb_func_end FUN_021D0468

	thumb_func_start FUN_021D0480
FUN_021D0480: ; 0x021D0480
	movs r3, #7
	lsls r3, r3, #6
	ldr r0, [r0, r3]
	ldr r3, _021D048C ; =FUN_021D3550
	bx r3
	nop
_021D048C: .word FUN_021D3550
	thumb_func_end FUN_021D0480

	thumb_func_start FUN_021D0490
FUN_021D0490: ; 0x021D0490
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D049C ; =FUN_021D3598
	bx r3
	nop
_021D049C: .word FUN_021D3598
	thumb_func_end FUN_021D0490

	thumb_func_start FUN_021D04A0
FUN_021D04A0: ; 0x021D04A0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	bl FUN_021B19D0
	adds r2, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D367C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D04A0

	thumb_func_start FUN_021D04BC
FUN_021D04BC: ; 0x021D04BC
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D04C8 ; =FUN_021D36D4
	bx r3
	nop
_021D04C8: .word FUN_021D36D4
	thumb_func_end FUN_021D04BC

	thumb_func_start FUN_021D04CC
FUN_021D04CC: ; 0x021D04CC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_021B19D0
	adds r3, r0, #0
	movs r0, #7
	lsls r0, r0, #6
	ldr r0, [r5, r0]
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D3620
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D04CC

	thumb_func_start FUN_021D04EC
FUN_021D04EC: ; 0x021D04EC
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D04F8 ; =FUN_021D36D4
	bx r3
	nop
_021D04F8: .word FUN_021D36D4
	thumb_func_end FUN_021D04EC

	thumb_func_start FUN_021D04FC
FUN_021D04FC: ; 0x021D04FC
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0508 ; =FUN_021D3870
	bx r3
	nop
_021D0508: .word FUN_021D3870
	thumb_func_end FUN_021D04FC

	thumb_func_start FUN_021D050C
FUN_021D050C: ; 0x021D050C
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0518 ; =FUN_021D389C
	bx r3
	nop
_021D0518: .word FUN_021D389C
	thumb_func_end FUN_021D050C

	thumb_func_start FUN_021D051C
FUN_021D051C: ; 0x021D051C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	movs r1, #7
	adds r5, r0, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_021CE97C
	adds r4, r0, #0
	strb r6, [r4]
	strb r7, [r4, #1]
	ldr r0, [sp]
	add r7, sp, #0x18
	strb r0, [r4, #2]
	ldrb r2, [r7]
	adds r1, r6, #0
	strb r2, [r4, #3]
	ldrb r0, [r7, #4]
	strb r0, [r4, #4]
	ldr r0, [r5]
	bl FUN_0219C498
	strb r0, [r4, #5]
	ldrb r2, [r7, #4]
	ldr r0, [r5]
	adds r1, r6, #0
	bl FUN_0219C498
	strb r0, [r4, #6]
	movs r1, #0
	ldr r0, _021D0564 ; =FUN_021D05A8
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r5, [r5, #0x24]
	str r1, [r5, #0x28]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D0564: .word FUN_021D05A8
	thumb_func_end FUN_021D051C

	thumb_func_start FUN_021D0568
FUN_021D0568: ; 0x021D0568
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _021D0586
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D0582
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x28]
_021D0582:
	movs r0, #0
	pop {r4, pc}
_021D0586:
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _021D05A2
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D059E
	movs r0, #0
	str r0, [r4, #0x20]
	movs r0, #1
	pop {r4, pc}
_021D059E:
	movs r0, #0
	pop {r4, pc}
_021D05A2:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D0568

	thumb_func_start FUN_021D05A8
FUN_021D05A8: ; 0x021D05A8
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #7
	movs r7, #7
	bl FUN_021CE97C
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	beq _021D05CA
	cmp r0, #1
	beq _021D05E2
	cmp r0, #2
	beq _021D05F8
	b _021D060C
_021D05CA:
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	bl FUN_021DFECC
	ldr r1, _021D0610 ; =0x0000057B
	adds r0, r6, #0
	bl FUN_021D0B14
_021D05DA:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D060C
_021D05E2:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D060C
	lsls r0, r7, #6
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldr r0, [r6, r0]
	bl FUN_021D34A4
	b _021D05DA
_021D05F8:
	lsls r0, r7, #6
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldr r0, [r6, r0]
	bl FUN_021D34D0
	cmp r0, #0
	beq _021D060C
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D060C:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D0610: .word 0x0000057B
	thumb_func_end FUN_021D05A8

	thumb_func_start FUN_021D0614
FUN_021D0614: ; 0x021D0614
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r1, #0x3c
	bl FUN_021CE97C
	adds r4, r0, #0
	ldrb r1, [r5, #0xc]
	ldr r0, [r5, #8]
	bl FUN_0219D414
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D0638
	pop {r3, r4, r5, pc}
	nop
	thumb_func_end FUN_021D0614

	thumb_func_start FUN_021D0638
FUN_021D0638: ; 0x021D0638
	bx pc
	nop
	thumb_func_end FUN_021D0638
_021D063C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x71, 0xB6, 0x89, 0x06

	thumb_func_start FUN_021D0648
FUN_021D0648: ; 0x021D0648
	push {r3, lr}
	movs r2, #0x71
	lsls r2, r2, #2
	ldr r0, [r0, r2]
	bl FUN_021D0660
	cmp r0, #0
	beq _021D065C
	movs r0, #1
	pop {r3, pc}
_021D065C:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021D0648

	thumb_func_start FUN_021D0660
FUN_021D0660: ; 0x021D0660
	bx pc
	nop
	thumb_func_end FUN_021D0660
_021D0664:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0xB6, 0x89, 0x06

	thumb_func_start FUN_021D0670
FUN_021D0670: ; 0x021D0670
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021D067C ; =FUN_0689B6B4
	bx r3
	nop
_021D067C: .word FUN_0689B6B4
	thumb_func_end FUN_021D0670

	thumb_func_start FUN_021D0680
FUN_021D0680: ; 0x021D0680
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r7, #1
	beq _021D06E6
	movs r1, #8
	bl FUN_021CE97C
	adds r4, r0, #0
	strb r6, [r4]
	strb r7, [r4, #1]
	ldr r0, [r5]
	adds r1, r6, #0
	movs r2, #0
	movs r7, #0
	bl FUN_0219C498
	strb r0, [r4, #5]
	ldr r0, [r5]
	adds r1, r6, #0
	movs r2, #1
	bl FUN_0219C498
	strb r0, [r4, #6]
	ldr r0, [r5]
	adds r1, r6, #0
	movs r2, #2
	bl FUN_0219C498
	strb r0, [r4, #7]
	ldrb r1, [r4, #5]
	ldr r0, [r5]
	bl FUN_0219C71C
	strb r0, [r4, #2]
	ldrb r1, [r4, #6]
	ldr r0, [r5]
	bl FUN_0219C71C
	strb r0, [r4, #3]
	ldrb r1, [r4, #7]
	ldr r0, [r5]
	bl FUN_0219C71C
	strb r0, [r4, #4]
	ldr r0, _021D06E8 ; =FUN_021D072C
	str r7, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r5, [r5, #0x24]
	str r7, [r5, #0x28]
_021D06E6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D06E8: .word FUN_021D072C
	thumb_func_end FUN_021D0680

	thumb_func_start FUN_021D06EC
FUN_021D06EC: ; 0x021D06EC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _021D070A
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D0706
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x28]
_021D0706:
	movs r0, #0
	pop {r4, pc}
_021D070A:
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _021D0726
	ldr r1, [r4, #0x24]
	adds r0, #0x28
	blx r2
	cmp r0, #0
	beq _021D0722
	movs r0, #0
	str r0, [r4, #0x20]
	movs r0, #1
	pop {r4, pc}
_021D0722:
	movs r0, #0
	pop {r4, pc}
_021D0726:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D06EC

	thumb_func_start FUN_021D072C
FUN_021D072C: ; 0x021D072C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r0, r5, #0
	movs r1, #8
	bl FUN_021CE97C
	adds r4, r0, #0
	ldr r0, [r6]
	cmp r0, #0
	beq _021D074C
	cmp r0, #1
	beq _021D076E
	cmp r0, #2
	beq _021D0794
	b _021D07D4
_021D074C:
	ldr r0, [r5, #4]
	bl FUN_021B19D0
	movs r2, #1
	cmp r0, #0
	beq _021D075A
	movs r2, #0
_021D075A:
	ldrb r3, [r4, #2]
	ldrb r0, [r4, #1]
	movs r1, #1
	ands r1, r3
	bl FUN_021DFE2C
_021D0766:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021D07D4
_021D076E:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D07D4
	movs r7, #7
	lsls r7, r7, #6
	ldrb r1, [r4, #5]
	ldr r0, [r5, r7]
	bl FUN_021D34FC
	ldrb r1, [r4, #6]
	ldr r0, [r5, r7]
	bl FUN_021D34FC
	ldrb r1, [r4, #7]
	ldr r0, [r5, r7]
	bl FUN_021D34FC
	b _021D0766
_021D0794:
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r4, #5]
	ldr r0, [r5, r0]
	movs r6, #1
	bl FUN_021D3514
	cmp r0, #0
	bne _021D07A8
	movs r6, #0
_021D07A8:
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r4, #6]
	ldr r0, [r5, r0]
	bl FUN_021D3514
	cmp r0, #0
	bne _021D07BA
	movs r6, #0
_021D07BA:
	movs r0, #7
	lsls r0, r0, #6
	ldrb r1, [r4, #7]
	ldr r0, [r5, r0]
	bl FUN_021D3514
	cmp r0, #0
	bne _021D07CC
	movs r6, #0
_021D07CC:
	cmp r6, #0
	beq _021D07D4
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D07D4:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D072C

	thumb_func_start FUN_021D07D8
FUN_021D07D8: ; 0x021D07D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r1, [sp]
	movs r1, #0xc
	adds r5, r0, #0
	str r2, [sp, #4]
	adds r6, r3, #0
	bl FUN_021CE97C
	movs r1, #0x72
	lsls r1, r1, #2
	ldrh r1, [r5, r1]
	adds r4, r0, #0
	ldr r7, _021D0854 ; =0x00007FFF
	adds r2, r1, #0
	ands r2, r7
	adds r1, r7, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	movs r0, #0x20
	lsrs r1, r1, #0x10
	bl FUN_0204855C
	movs r1, #0x72
	str r0, [r4]
	lsls r1, r1, #2
	ldrh r1, [r5, r1]
	movs r0, #0x20
	adds r2, r1, #0
	ands r2, r7
	adds r1, r7, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_0204855C
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [sp]
	ldr r1, [r4]
	bl FUN_021D015C
	ldr r0, [sp, #4]
	ldr r1, [r4, #4]
	bl FUN_021D015C
	movs r0, #0x72
	lsls r0, r0, #2
	subs r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D0858
	ldr r0, [r4]
	bl FUN_0203A278
	ldr r0, [r4, #4]
	bl FUN_0203A278
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D0854: .word 0x00007FFF
	thumb_func_end FUN_021D07D8

	thumb_func_start FUN_021D0858
FUN_021D0858: ; 0x021D0858
	bx pc
	nop
	thumb_func_end FUN_021D0858
_021D085C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x01, 0xB7, 0x89, 0x06

	thumb_func_start FUN_021D0868
FUN_021D0868: ; 0x021D0868
	movs r2, #0x71
	lsls r2, r2, #2
	ldr r0, [r0, r2]
	ldr r3, _021D0874 ; =FUN_0689B728
	bx r3
	nop
_021D0874: .word FUN_0689B728
	thumb_func_end FUN_021D0868

	thumb_func_start FUN_021D0878
FUN_021D0878: ; 0x021D0878
	push {r3, r4, r5, lr}
	movs r5, #0x43
	adds r4, r0, #0
	str r2, [sp]
	lsls r5, r5, #2
	adds r3, r1, #0
	adds r1, r4, r5
	movs r2, #4
	bl FUN_021CF274
	movs r0, #0
	adds r5, #0xa8
	strb r0, [r4, r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D0878

	thumb_func_start FUN_021D0894
FUN_021D0894: ; 0x021D0894
	push {r3, r4, r5, lr}
	movs r5, #0x6d
	adds r4, r0, #0
	lsls r5, r5, #2
	ldrb r0, [r4, r5]
	cmp r0, #3
	bhi _021D0930
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D08AE: ; jump table
	.short _021D08B6 - _021D08AE - 2 ; case 0
	.short _021D08D0 - _021D08AE - 2 ; case 1
	.short _021D08FA - _021D08AE - 2 ; case 2
	.short _021D0920 - _021D08AE - 2 ; case 3
_021D08B6:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	movs r1, #0
	bl FUN_021D0958
	ldr r0, _021D094C ; =0x0000011D
	bl FUN_0203CE38
_021D08C8:
	ldrb r0, [r4, r5]
	adds r0, r0, #1
	strb r0, [r4, r5]
	b _021D0946
_021D08D0:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021D0968
	cmp r0, #0
	beq _021D0946
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021D0978
	ldr r0, _021D0950 ; =0x0000011F
	bl FUN_0203CE38
	adds r0, r5, #0
	subs r0, #0xa8
	adds r0, r4, r0
	bl FUN_021F8754
	b _021D08C8
_021D08FA:
	adds r0, r5, #0
	subs r0, #0x5c
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021D0946
	ldr r0, _021D0950 ; =0x0000011F
	bl FUN_0203CDF4
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021D0988
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021D0998
	b _021D08C8
_021D0920:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_021D09A8
	cmp r0, #0
	beq _021D0946
	b _021D08C8
_021D0930:
	ldr r5, _021D0954 ; =0x00000157
	ldrb r0, [r4, r5]
	strb r0, [r1]
	ldr r0, _021D094C ; =0x0000011D
	bl FUN_0203CDF4
	movs r0, #0
	adds r5, #0x5d
	strb r0, [r4, r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021D0946:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021D094C: .word 0x0000011D
_021D0950: .word 0x0000011F
_021D0954: .word 0x00000157
	thumb_func_end FUN_021D0894

	thumb_func_start FUN_021D0958
FUN_021D0958: ; 0x021D0958
	bx pc
	nop
	thumb_func_end FUN_021D0958
_021D095C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x9D, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021D0968
FUN_021D0968: ; 0x021D0968
	bx pc
	nop
	thumb_func_end FUN_021D0968
_021D096C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021D0978
FUN_021D0978: ; 0x021D0978
	bx pc
	nop
	thumb_func_end FUN_021D0978
_021D097C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x25, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021D0988
FUN_021D0988: ; 0x021D0988
	bx pc
	nop
	thumb_func_end FUN_021D0988
_021D098C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xD5, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021D0998
FUN_021D0998: ; 0x021D0998
	bx pc
	nop
	thumb_func_end FUN_021D0998
_021D099C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x29, 0x9E, 0x89, 0x06

	thumb_func_start FUN_021D09A8
FUN_021D09A8: ; 0x021D09A8
	bx pc
	nop
	thumb_func_end FUN_021D09A8
_021D09AC:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0xFD, 0x9D, 0x89, 0x06

	thumb_func_start FUN_021D09B8
FUN_021D09B8: ; 0x021D09B8
	movs r3, #7
	lsls r3, r3, #6
	ldr r0, [r0, r3]
	ldr r3, _021D09C4 ; =FUN_021D4238
	bx r3
	nop
_021D09C4: .word FUN_021D4238
	thumb_func_end FUN_021D09B8

	thumb_func_start FUN_021D09C8
FUN_021D09C8: ; 0x021D09C8
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D09D4 ; =FUN_021D4274
	bx r3
	nop
_021D09D4: .word FUN_021D4274
	thumb_func_end FUN_021D09C8

	thumb_func_start FUN_021D09D8
FUN_021D09D8: ; 0x021D09D8
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D09E4 ; =FUN_021D42CC
	bx r3
	nop
_021D09E4: .word FUN_021D42CC
	thumb_func_end FUN_021D09D8

	thumb_func_start FUN_021D09E8
FUN_021D09E8: ; 0x021D09E8
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D09F4 ; =FUN_021D42EC
	bx r3
	nop
_021D09F4: .word FUN_021D42EC
	thumb_func_end FUN_021D09E8

	thumb_func_start FUN_021D09F8
FUN_021D09F8: ; 0x021D09F8
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A04 ; =FUN_021D4344
	bx r3
	nop
_021D0A04: .word FUN_021D4344
	thumb_func_end FUN_021D09F8

	thumb_func_start FUN_021D0A08
FUN_021D0A08: ; 0x021D0A08
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A14 ; =FUN_021D4364
	bx r3
	nop
_021D0A14: .word FUN_021D4364
	thumb_func_end FUN_021D0A08

	thumb_func_start FUN_021D0A18
FUN_021D0A18: ; 0x021D0A18
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A24 ; =FUN_021D41FC
	bx r3
	nop
_021D0A24: .word FUN_021D41FC
	thumb_func_end FUN_021D0A18

	thumb_func_start FUN_021D0A28
FUN_021D0A28: ; 0x021D0A28
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A34 ; =FUN_021D4230
	bx r3
	nop
_021D0A34: .word FUN_021D4230
	thumb_func_end FUN_021D0A28

	thumb_func_start FUN_021D0A38
FUN_021D0A38: ; 0x021D0A38
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A44 ; =FUN_021D4210
	bx r3
	nop
_021D0A44: .word FUN_021D4210
	thumb_func_end FUN_021D0A38

	thumb_func_start FUN_021D0A48
FUN_021D0A48: ; 0x021D0A48
	movs r1, #7
	lsls r1, r1, #6
	ldr r0, [r0, r1]
	ldr r3, _021D0A54 ; =FUN_021D4230
	bx r3
	nop
_021D0A54: .word FUN_021D4230
	thumb_func_end FUN_021D0A48

	thumb_func_start FUN_021D0A58
FUN_021D0A58: ; 0x021D0A58
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021D0A64 ; =FUN_0689B7CC
	bx r3
	nop
_021D0A64: .word FUN_0689B7CC
	thumb_func_end FUN_021D0A58

	thumb_func_start FUN_021D0A68
FUN_021D0A68: ; 0x021D0A68
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021D0A74 ; =FUN_0689B7F8
	bx r3
	nop
_021D0A74: .word FUN_0689B7F8
	thumb_func_end FUN_021D0A68

	thumb_func_start FUN_021D0A78
FUN_021D0A78: ; 0x021D0A78
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021D0A84 ; =FUN_0689B8EC
	bx r3
	nop
_021D0A84: .word FUN_0689B8EC
	thumb_func_end FUN_021D0A78

	thumb_func_start FUN_021D0A88
FUN_021D0A88: ; 0x021D0A88
	push {r4, lr}
	movs r3, #0x1a
	adds r4, r0, #0
	lsls r3, r3, #4
	str r1, [r4, r3]
	adds r0, r3, #4
	str r2, [r4, r0]
	adds r0, r3, #0
	movs r1, #0
	adds r0, #0xc
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x24
	ldr r0, [r4, r0]
	adds r1, r4, r3
	bl FUN_021D0AAC
	pop {r4, pc}
	thumb_func_end FUN_021D0A88

	thumb_func_start FUN_021D0AAC
FUN_021D0AAC: ; 0x021D0AAC
	bx pc
	nop
	thumb_func_end FUN_021D0AAC
_021D0AB0:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0xDD, 0xB8, 0x89, 0x06

	thumb_func_start FUN_021D0ABC
FUN_021D0ABC: ; 0x021D0ABC
	movs r3, #0x1a
	adds r2, r0, #0
	lsls r3, r3, #4
	str r1, [r2, r3]
	adds r0, r3, #4
	str r1, [r2, r0]
	adds r0, r3, #0
	movs r1, #3
	adds r0, #0xc
	str r1, [r2, r0]
	adds r0, r3, #0
	adds r0, #0x24
	adds r1, r2, r3
	ldr r0, [r2, r0]
	ldr r3, _021D0ADC ; =FUN_0689B8DC
	bx r3
	.align 2, 0
_021D0ADC: .word FUN_0689B8DC
	thumb_func_end FUN_021D0ABC

	thumb_func_start FUN_021D0AE0
FUN_021D0AE0: ; 0x021D0AE0
	push {r4, lr}
	movs r3, #0x1a
	adds r4, r0, #0
	lsls r3, r3, #4
	str r1, [r4, r3]
	adds r0, r3, #4
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0xc
	str r2, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x24
	ldr r0, [r4, r0]
	adds r1, r4, r3
	bl FUN_021D0B04
	pop {r4, pc}
	nop
	thumb_func_end FUN_021D0AE0

	thumb_func_start FUN_021D0B04
FUN_021D0B04: ; 0x021D0B04
	bx pc
	nop
	thumb_func_end FUN_021D0B04
_021D0B08:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0xDD, 0xB8, 0x89, 0x06

	thumb_func_start FUN_021D0B14
FUN_021D0B14: ; 0x021D0B14
	push {r4, lr}
	ldr r0, [r0, #4]
	adds r4, r1, #0
	bl FUN_021B19D0
	cmp r0, #0
	bne _021D0B28
	adds r0, r4, #0
	bl FUN_02006254
_021D0B28:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D0B14

	thumb_func_start FUN_021D0B2C
FUN_021D0B2C: ; 0x021D0B2C
	push {r4, r5}
	movs r5, #0
	adds r4, r5, #0
_021D0B32:
	lsls r3, r5, #2
	adds r3, r0, r3
	adds r5, r5, #1
	str r4, [r3, #4]
	cmp r5, #9
	blo _021D0B32
	ldrb r4, [r0, #3]
	movs r3, #0xf0
	strh r2, [r0]
	bics r4, r3
	strb r4, [r0, #3]
	ldrb r3, [r0, #3]
	movs r2, #0xf
	lsls r1, r1, #0x18
	bics r3, r2
	lsrs r2, r1, #0x18
	movs r1, #0xf
	ands r1, r2
	orrs r1, r3
	strb r1, [r0, #3]
	movs r1, #0x50
	strb r1, [r0, #2]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D0B2C

	thumb_func_start FUN_021D0B64
FUN_021D0B64: ; 0x021D0B64
	push {r3, r4}
	ldrb r2, [r0, #3]
	lsls r3, r2, #0x18
	lsrs r3, r3, #0x1c
	cmp r3, #9
	bhs _021D0B88
	movs r4, #0xf0
	bics r2, r4
	adds r4, r3, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r4, r4, #0x1c
	lsrs r4, r4, #0x18
	orrs r2, r4
	strb r2, [r0, #3]
	lsls r2, r3, #2
	adds r0, r0, r2
	str r1, [r0, #4]
_021D0B88:
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021D0B64

	thumb_func_start FUN_021D0B8C
FUN_021D0B8C: ; 0x021D0B8C
	strb r1, [r0, #2]
	bx lr
	thumb_func_end FUN_021D0B8C

	thumb_func_start FUN_021D0B90
FUN_021D0B90: ; 0x021D0B90
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021D0BAC
	bl FUN_021E0108
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021E9C64
_021D0BAC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D0B90

	thumb_func_start FUN_021D0BB0
FUN_021D0BB0: ; 0x021D0BB0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021D0BCE
	bl FUN_021E0108
	adds r5, #0xb0
	ldr r2, [r5]
	adds r1, r4, #0
	bl FUN_021EA20C
_021D0BCE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D0BB0

	thumb_func_start FUN_021D0BD0
FUN_021D0BD0: ; 0x021D0BD0
	push {r3, lr}
	ldr r0, [r0]
	bl FUN_0219C9C8
	cmp r0, #1
	bne _021D0BE6
	bl FUN_021E0108
	bl FUN_021E9EC8
	pop {r3, pc}
_021D0BE6:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D0BD0

	thumb_func_start FUN_021D0BEC
FUN_021D0BEC: ; 0x021D0BEC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021D0C10
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021D0C14
_021D0C10:
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021D0BEC

	thumb_func_start FUN_021D0C14
FUN_021D0C14: ; 0x021D0C14
	bx pc
	nop
	thumb_func_end FUN_021D0C14
_021D0C18:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x05, 0xB9, 0x89, 0x06

	thumb_func_start FUN_021D0C24
FUN_021D0C24: ; 0x021D0C24
	movs r1, #0x71
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	ldr r3, _021D0C30 ; =FUN_0689B920
	bx r3
	nop
_021D0C30: .word FUN_0689B920
	thumb_func_end FUN_021D0C24

	thumb_func_start FUN_021D0C34
FUN_021D0C34: ; 0x021D0C34
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021D0C50
	movs r0, #0x71
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_021D0C54
_021D0C50:
	pop {r3, r4, r5, pc}
	nop
	thumb_func_end FUN_021D0C34

	thumb_func_start FUN_021D0C54
FUN_021D0C54: ; 0x021D0C54
	bx pc
	nop
	thumb_func_end FUN_021D0C54
_021D0C58:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x2D, 0xB9, 0x89, 0x06

	thumb_func_start FUN_021D0C64
FUN_021D0C64: ; 0x021D0C64
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r5, _021D0D0C ; =0x0000015F
	ldr r6, [sp, #0x34]
	str r1, [sp, #4]
	str r3, [sp, #0xc]
	adds r1, r5, #0
	adds r7, r0, #0
	str r2, [sp, #8]
	str r1, [sp, #0x10]
	adds r1, #0x21
	ldr r3, _021D0D10 ; =0x021DAFEC
	adds r0, r6, #0
	movs r2, #1
	str r5, [sp]
	str r1, [sp, #0x10]
	bl FUN_0203A228
	adds r4, r0, #0
	adds r0, r5, #0
	subs r0, #0x2f
	str r7, [r4, r0]
	adds r1, r5, #0
	ldr r0, [sp, #4]
	subs r1, #0x2b
	str r0, [r4, r1]
	adds r1, r5, #0
	ldr r0, [sp, #8]
	subs r1, #0x27
	str r0, [r4, r1]
	adds r0, r5, #0
	subs r0, #0x23
	strh r6, [r4, r0]
	add r0, sp, #0x28
	ldrb r1, [r0, #8]
	adds r0, r5, #0
	subs r0, #0x1f
	strb r1, [r4, r0]
	ldr r0, [sp, #0x28]
	movs r7, #0
	str r0, [r4, #0x24]
	ldr r0, [sp, #0x2c]
	adds r1, r6, #0
	str r0, [r4, #0x28]
	adds r0, r5, #0
	subs r0, #0xf
	strb r7, [r4, r0]
	ldr r0, [sp, #0xc]
	str r7, [r4, #0x30]
	str r0, [r4, #0x2c]
	movs r0, #1
	lsls r0, r0, #0xa
	bl FUN_0204855C
	str r0, [r4, #0x34]
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	bl FUN_0204855C
	str r0, [r4, #0x38]
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	bl FUN_0204855C
	str r0, [r4, #0x3c]
	adds r0, r5, #0
	subs r0, #0x11
	strb r7, [r4, r0]
	adds r0, r4, #0
	adds r0, #0xd8
	subs r5, #0x23
	str r7, [r0]
	ldrh r0, [r4, r5]
	bl FUN_020219C4
	str r0, [r4, #0x18]
	ldr r0, [r4]
	str r0, [r4, #0x1c]
	adds r0, r4, #0
	adds r0, #0x20
	strb r7, [r0]
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D0D0C: .word 0x0000015F
_021D0D10: .word 0x021DAFEC
	thumb_func_end FUN_021D0C64

	thumb_func_start FUN_021D0D14
FUN_021D0D14: ; 0x021D0D14
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	ldr r1, _021D0F48 ; =0x021DA9FC
	adds r5, r0, #0
	movs r0, #1
	movs r2, #0
	movs r4, #0
	bl FUN_02044798
	ldr r1, _021D0F4C ; =0x021DAA1C
	movs r0, #2
	movs r2, #0
	bl FUN_02044798
	ldr r1, _021D0F50 ; =0x021DAA3C
	movs r0, #3
	movs r2, #0
	bl FUN_02044798
	bl FUN_021E00F8
	ldr r6, _021D0F54 ; =0x00000165
	str r4, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r3, r6, #0
	str r4, [sp, #0xc]
	subs r3, #0x29
	ldrh r3, [r5, r3]
	movs r1, #0xb
	adds r2, r6, #0
	bl FUN_02026EC0
	bl FUN_021E00F8
	movs r3, #0x60
	adds r2, r6, #0
	str r4, [sp]
	movs r7, #0x60
	str r7, [sp, #4]
	movs r1, #0x10
	str r1, [sp, #8]
	str r1, [sp, #0xc]
	adds r3, #0xdc
	ldrh r3, [r5, r3]
	movs r1, #0xb
	adds r2, #0x7f
	bl FUN_02026EC0
	add r0, sp, #0x14
	strh r4, [r0]
	bl FUN_021E00F8
	movs r1, #2
	str r1, [sp]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl FUN_02026E90
	movs r0, #0x20
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0x11
	str r0, [sp, #8]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl FUN_02045630
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl FUN_02045144
	adds r0, r5, #0
	movs r1, #0xb
	subs r2, r6, #1
	movs r3, #1
	bl FUN_021D0F68
	adds r2, r6, #0
	str r0, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, #0x7e
	movs r3, #3
	bl FUN_021D0F68
	str r0, [r5, #0x14]
	str r4, [sp]
	movs r0, #0x60
	adds r1, r6, #0
	str r4, [sp, #4]
	adds r0, #0xdc
	ldrh r0, [r5, r0]
	adds r1, #0x80
	movs r2, #2
	str r0, [sp, #8]
	movs r0, #0xb
	movs r3, #0
	bl FUN_0204AF44
	str r4, [sp]
	movs r0, #0x60
	adds r6, #0x81
	str r4, [sp, #4]
	adds r0, #0xdc
	ldrh r0, [r5, r0]
	adds r1, r6, #0
	movs r2, #3
	str r0, [sp, #8]
	movs r0, #0xb
	movs r3, #0
	bl FUN_0204AF44
	movs r0, #4
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #1
	movs r1, #1
	movs r2, #0x13
	movs r3, #0x1e
	bl FUN_020480EC
	str r0, [r5]
	bl FUN_02048520
	str r0, [r5, #4]
	ldr r0, [r5]
	bl FUN_02048298
	adds r7, #0xd4
	ldr r0, [r5, r7]
	bl FUN_0219C9C8
	cmp r0, #2
	beq _021D0E3E
	ldr r1, [sp, #0x10]
	ldr r0, [r5]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	bl FUN_02048384
_021D0E3E:
	adds r0, r5, #0
	movs r1, #0xc
	movs r6, #0xc
	bl FUN_021D45B8
	adds r1, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_02047168
	ldr r0, [r5]
	bl FUN_02048270
	ldr r4, _021D0F58 ; =0x000001EB
	adds r0, r5, #0
	movs r1, #0xb
	adds r2, r4, #0
	movs r3, #3
	movs r7, #3
	bl FUN_021D0F68
	str r0, [r5, #0x10]
	str r6, [sp]
	str r7, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	movs r0, #3
	movs r1, #0x15
	movs r2, #0x25
	movs r3, #0xa
	bl FUN_020480EC
	str r0, [r5, #8]
	bl FUN_02048520
	str r0, [r5, #0xc]
	adds r0, r4, #0
	subs r0, #0x97
	ldr r1, [r5]
	adds r0, r5, r0
	bl FUN_021D372C
	adds r0, r5, #0
	bl FUN_021D38F8
	ldr r1, [r5, #0x14]
	adds r0, r5, #0
	bl FUN_021D3B04
	movs r0, #1
	bl FUN_02044FBC
	movs r0, #2
	movs r6, #2
	bl FUN_02044FBC
	movs r0, #3
	bl FUN_02044FBC
	movs r0, #0
	movs r1, #1
	bl FUN_02044CC4
	movs r0, #1
	movs r1, #1
	bl FUN_02044CC4
	movs r0, #2
	movs r1, #1
	bl FUN_02044CC4
	movs r0, #3
	movs r1, #1
	bl FUN_02044CC4
	subs r4, #0xb7
	ldr r0, [r5, r4]
	bl FUN_0219C9C8
	cmp r0, #2
	beq _021D0EFA
	movs r4, #0x10
	movs r0, #0x10
	movs r1, #1
	bl FUN_02046D28
	lsls r2, r4, #0x16
	ldr r1, [r2]
	ldr r0, _021D0F5C ; =0xFFFF1FFF
	add sp, #0x18
	ands r0, r1
	str r0, [r2]
	pop {r3, r4, r5, r6, r7, pc}
_021D0EFA:
	ldr r0, _021D0F60 ; =0x04000048
	movs r2, #0x3f
	ldrh r3, [r0]
	movs r1, #0x1f
	bics r3, r2
	orrs r3, r1
	movs r1, #0x20
	orrs r3, r1
	strh r3, [r0]
	ldrh r3, [r0, #2]
	lsls r4, r1, #0x15
	lsls r1, r1, #8
	bics r3, r2
	adds r2, r3, #0
	orrs r2, r6
	strh r2, [r0, #2]
	ldr r3, [r4]
	ldr r2, _021D0F5C ; =0xFFFF1FFF
	ands r3, r2
	orrs r1, r3
	str r1, [r4]
	adds r1, r0, #0
	movs r3, #0xff
	subs r1, #8
	strh r3, [r1]
	ldr r1, _021D0F64 ; =0x0000089E
	subs r0, r0, #4
	strh r1, [r0]
	movs r0, #1
	adds r1, r7, #0
	asrs r2, r2, #0xd
	bl FUN_02044D28
	movs r0, #0x10
	movs r1, #1
	bl FUN_02046D28
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D0F48: .word 0x021DA9FC
_021D0F4C: .word 0x021DAA1C
_021D0F50: .word 0x021DAA3C
_021D0F54: .word 0x00000165
_021D0F58: .word 0x000001EB
_021D0F5C: .word 0xFFFF1FFF
_021D0F60: .word 0x04000048
_021D0F64: .word 0x0000089E
	thumb_func_end FUN_021D0D14

	thumb_func_start FUN_021D0F68
FUN_021D0F68: ; 0x021D0F68
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #0x4f
	lsls r1, r1, #2
	ldrh r1, [r5, r1]
	adds r6, r2, #0
	ldr r4, _021D0FC0 ; =0x00007FFF
	adds r2, r1, #0
	ands r2, r4
	adds r1, r4, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r7, r3, #0
	bl FUN_0204AA5C
	movs r1, #0
	str r1, [sp]
	movs r1, #0x4f
	lsls r1, r1, #2
	ldrh r1, [r5, r1]
	str r0, [sp, #8]
	movs r3, #0
	adds r2, r1, #0
	ands r2, r4
	adds r1, r4, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #4]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0204AE68
	adds r4, r0, #0
	ldr r0, [sp, #8]
	bl FUN_0204AB38
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D0FC0: .word 0x00007FFF
	thumb_func_end FUN_021D0F68

	thumb_func_start FUN_021D0FC4
FUN_021D0FC4: ; 0x021D0FC4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_021D3BB4
	adds r0, r4, #0
	bl FUN_021D3950
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _021D0FE0
	bl FUN_0204823C
	movs r0, #0
	str r0, [r4, #8]
_021D0FE0:
	ldr r0, [r4]
	cmp r0, #0
	beq _021D0FEE
	bl FUN_0204823C
	movs r0, #0
	str r0, [r4]
_021D0FEE:
	movs r0, #1
	bl FUN_02044BB0
	movs r0, #2
	bl FUN_02044BB0
	movs r0, #3
	bl FUN_02044BB0
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _021D100E
	bl FUN_02021A44
	movs r0, #0
	str r0, [r4, #0x18]
_021D100E:
	ldr r0, [r4, #0x3c]
	cmp r0, #0
	beq _021D101C
	bl FUN_02048590
	movs r0, #0
	str r0, [r4, #0x3c]
_021D101C:
	ldr r0, [r4, #0x38]
	cmp r0, #0
	beq _021D102A
	bl FUN_02048590
	movs r0, #0
	str r0, [r4, #0x38]
_021D102A:
	ldr r0, [r4, #0x34]
	bl FUN_02048590
	adds r0, r4, #0
	bl FUN_0203A278
	pop {r4, pc}
	thumb_func_end FUN_021D0FC4

	thumb_func_start FUN_021D1038
FUN_021D1038: ; 0x021D1038
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r4, #0x4f
	adds r5, r0, #0
	lsls r4, r4, #2
	ldrh r2, [r5, r4]
	ldr r1, _021D10AC ; =0x00007FFF
	movs r0, #0xb
	ands r2, r1
	adds r1, r1, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl FUN_0204AA5C
	movs r7, #0
	str r7, [sp]
	ldrh r1, [r5, r4]
	str r7, [sp, #4]
	ldr r3, [r5, #0x14]
	str r1, [sp, #8]
	adds r1, r4, #0
	adds r1, #0xa7
	movs r2, #3
	adds r6, r0, #0
	bl FUN_0204ADD4
	str r7, [sp]
	adds r1, r4, #0
	ldrh r0, [r5, r4]
	str r7, [sp, #4]
	ldr r3, [r5, #0x10]
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r1, #0xaf
	movs r2, #3
	bl FUN_0204ADD4
	adds r0, r6, #0
	bl FUN_0204AB38
	movs r0, #3
	bl FUN_02045764
	ldrh r0, [r5, r4]
	str r7, [sp]
	str r7, [sp, #4]
	adds r4, #0xaa
	str r0, [sp, #8]
	movs r0, #0xb
	adds r1, r4, #0
	movs r2, #3
	movs r3, #0
	bl FUN_0204AF44
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_021D10AC: .word 0x00007FFF
	thumb_func_end FUN_021D1038

	thumb_func_start FUN_021D10B0
FUN_021D10B0: ; 0x021D10B0
	push {r3, lr}
	bl FUN_0204E10C
	cmp r0, #0
	bne _021D10BE
	movs r0, #1
	pop {r3, pc}
_021D10BE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D10B0

	thumb_func_start FUN_021D10C4
FUN_021D10C4: ; 0x021D10C4
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4d
	adds r4, r0, #0
	lsls r7, r7, #2
	ldr r0, [r4, r7]
	str r1, [sp]
	bl FUN_0219BF14
	adds r6, r0, #0
	adds r0, r7, #0
	adds r1, r7, #0
	movs r5, #0
	adds r0, #0x1b
	strb r5, [r4, r0]
	ldr r0, [sp]
	adds r1, #0x1c
	strb r0, [r4, r1]
	ldr r0, [r4, r7]
	bl FUN_0219BDC0
	cmp r0, #3
	bhi _021D1172
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D10FC: ; jump table
	.short _021D1104 - _021D10FC - 2 ; case 0
	.short _021D116E - _021D10FC - 2 ; case 1
	.short _021D1242 - _021D10FC - 2 ; case 2
	.short _021D127A - _021D10FC - 2 ; case 3
_021D1104:
	cmp r6, #4
	bhi _021D111E
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D1114: ; jump table
	.short _021D111E - _021D1114 - 2 ; case 0
	.short _021D113A - _021D1114 - 2 ; case 1
	.short _021D113A - _021D1114 - 2 ; case 2
	.short _021D1154 - _021D1114 - 2 ; case 3
	.short _021D111E - _021D1114 - 2 ; case 4
_021D111E:
	adds r0, r4, #0
	movs r2, #0
	adds r0, #0xe0
	str r2, [r0]
	adds r0, r4, #0
	ldr r1, _021D12B4 ; =FUN_021D1444
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r2, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D113A:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12B8 ; =FUN_021D1638
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1154:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12BC ; =FUN_021D1898
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D116E:
	cmp r6, #3
	bls _021D1174
_021D1172:
	b _021D12B0
_021D1174:
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D1180: ; jump table
	.short _021D1188 - _021D1180 - 2 ; case 0
	.short _021D1204 - _021D1180 - 2 ; case 1
	.short _021D1204 - _021D1180 - 2 ; case 2
	.short _021D11C6 - _021D1180 - 2 ; case 3
_021D1188:
	ldr r0, [r4, r7]
	bl FUN_0219BF2C
	cmp r0, #0
	bne _021D11AC
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12C0 ; =FUN_021D18F8
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D11AC:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12C4 ; =FUN_021D1B68
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D11C6:
	ldr r0, [r4, r7]
	bl FUN_0219BF2C
	cmp r0, #0
	bne _021D11EA
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12C8 ; =FUN_021D1C4C
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D11EA:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12CC ; =FUN_021D1CAC
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1204:
	ldr r0, [r4, r7]
	bl FUN_0219BF2C
	cmp r0, #0
	bne _021D1228
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12D0 ; =FUN_021D1BB4
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1228:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12D4 ; =FUN_021D1C00
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1242:
	cmp r6, #3
	beq _021D1260
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12D8 ; =FUN_021D1CF8
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1260:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12DC ; =FUN_021D1D44
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D127A:
	cmp r6, #3
	beq _021D1298
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12D8 ; =FUN_021D1CF8
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D1298:
	adds r0, r4, #0
	adds r0, #0xe0
	str r5, [r0]
	adds r0, r4, #0
	ldr r1, _021D12DC ; =FUN_021D1D44
	adds r0, #0xe4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xe8
	str r4, [r0]
	adds r4, #0xec
	str r5, [r4]
_021D12B0:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D12B4: .word FUN_021D1444
_021D12B8: .word FUN_021D1638
_021D12BC: .word FUN_021D1898
_021D12C0: .word FUN_021D18F8
_021D12C4: .word FUN_021D1B68
_021D12C8: .word FUN_021D1C4C
_021D12CC: .word FUN_021D1CAC
_021D12D0: .word FUN_021D1BB4
_021D12D4: .word FUN_021D1C00
_021D12D8: .word FUN_021D1CF8
_021D12DC: .word FUN_021D1D44
	thumb_func_end FUN_021D10C4

	thumb_func_start FUN_021D12E0
FUN_021D12E0: ; 0x021D12E0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xe0
	ldr r2, [r0]
	cmp r2, #0
	beq _021D130C
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D1308
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xe0
	adds r4, #0xec
	str r1, [r0]
	str r1, [r4]
_021D1308:
	movs r0, #0
	pop {r4, pc}
_021D130C:
	adds r0, r4, #0
	adds r0, #0xe4
	ldr r2, [r0]
	cmp r2, #0
	beq _021D1334
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D1330
	movs r0, #0
	adds r4, #0xe4
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
_021D1330:
	movs r0, #0
	pop {r4, pc}
_021D1334:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D12E0

	thumb_func_start FUN_021D1338
FUN_021D1338: ; 0x021D1338
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _021D1364 ; =0x0400006C
	bl FUN_020749C0
	cmp r0, #0
	bgt _021D1354
	movs r0, #3
	movs r1, #0x10
	movs r2, #0
	adds r3, r4, #0
	bl FUN_0204E08C
	pop {r4, pc}
_021D1354:
	movs r0, #0xc
	movs r1, #0x10
	movs r2, #0
	adds r3, r4, #0
	bl FUN_0204E08C
	pop {r4, pc}
	nop
_021D1364: .word 0x0400006C
	thumb_func_end FUN_021D1338

	thumb_func_start FUN_021D1368
FUN_021D1368: ; 0x021D1368
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r0, #0
	str r3, [sp, #8]
	adds r0, r1, #0
	ldr r0, [r0]
	str r1, [sp]
	str r2, [sp, #4]
	cmp r0, #0
	beq _021D1386
	cmp r0, #1
	beq _021D13E6
	cmp r0, #2
	beq _021D1400
	b _021D140E
_021D1386:
	ldr r0, [sp, #8]
	movs r5, #0
	cmp r0, #0
	bls _021D13DA
	adds r0, r7, #0
	str r0, [sp, #0xc]
	adds r0, #0x48
	str r0, [sp, #0xc]
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x10]
_021D139E:
	ldr r0, [sp, #4]
	ldrb r4, [r0, r5]
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	adds r1, r4, #0
	bl FUN_0219C784
	adds r6, r0, #0
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	ldr r0, [r7, r0]
	bl FUN_0219D1C8
	bl FUN_021BB0A4
	adds r1, r4, #0
	bl FUN_021DF85C
	movs r0, #0xc
	adds r1, r6, #0
	muls r1, r0, r1
	ldr r0, [sp, #0xc]
	adds r0, r0, r1
	bl FUN_021D39CC
	ldr r0, [sp, #8]
	adds r5, r5, #1
	cmp r5, r0
	blo _021D139E
_021D13DA:
	ldr r0, [sp]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp]
	str r1, [r0]
	b _021D140E
_021D13E6:
	movs r0, #0x15
	lsls r0, r0, #4
	ldrb r0, [r7, r0]
	cmp r0, #0
	beq _021D13F6
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D13F6:
	movs r0, #2
	mvns r0, r0
	bl FUN_021D1338
	b _021D13DA
_021D1400:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D140E
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D140E:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D1368

	thumb_func_start FUN_021D1414
FUN_021D1414: ; 0x021D1414
	push {r3, lr}
	ldr r2, _021D1420 ; =0x021DA970
	movs r3, #2
	bl FUN_021D1368
	pop {r3, pc}
	.align 2, 0
_021D1420: .word 0x021DA970
	thumb_func_end FUN_021D1414

	thumb_func_start FUN_021D1424
FUN_021D1424: ; 0x021D1424
	push {r3, lr}
	ldr r2, _021D1430 ; =0x021DA972
	movs r3, #4
	bl FUN_021D1368
	pop {r3, pc}
	.align 2, 0
_021D1430: .word 0x021DA972
	thumb_func_end FUN_021D1424

	thumb_func_start FUN_021D1434
FUN_021D1434: ; 0x021D1434
	push {r3, lr}
	ldr r2, _021D1440 ; =0x021DA976
	movs r3, #6
	bl FUN_021D1368
	pop {r3, pc}
	.align 2, 0
_021D1440: .word 0x021DA976
	thumb_func_end FUN_021D1434

	thumb_func_start FUN_021D1444
FUN_021D1444: ; 0x021D1444
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x15
	adds r6, r1, #0
	lsls r7, r7, #4
	adds r4, r0, #0
	adds r5, r6, #0
	ldrb r0, [r6, r7]
	adds r5, #0xf0
	cmp r0, #0
	beq _021D1462
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021D1414
	pop {r3, r4, r5, r6, r7, pc}
_021D1462:
	ldr r0, [r4]
	cmp r0, #9
	bhi _021D14CA
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D1474: ; jump table
	.short _021D1488 - _021D1474 - 2 ; case 0
	.short _021D14BE - _021D1474 - 2 ; case 1
	.short _021D14DA - _021D1474 - 2 ; case 2
	.short _021D14EC - _021D1474 - 2 ; case 3
	.short _021D1500 - _021D1474 - 2 ; case 4
	.short _021D151C - _021D1474 - 2 ; case 5
	.short _021D1544 - _021D1474 - 2 ; case 6
	.short _021D15A0 - _021D1474 - 2 ; case 7
	.short _021D15AC - _021D1474 - 2 ; case 8
	.short _021D15BA - _021D1474 - 2 ; case 9
_021D1488:
	movs r0, #1
	strb r0, [r5, #5]
	adds r0, r7, #0
	subs r0, #0x1c
	ldrb r1, [r5, #5]
	ldr r0, [r6, r0]
	bl FUN_0219C784
	strb r0, [r5, #4]
	adds r0, r7, #0
	subs r0, #0x18
	ldrb r1, [r5, #4]
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	str r0, [r5]
	bl FUN_021BAC80
	strb r0, [r5, #6]
_021D14AE:
	adds r0, r7, #4
	adds r0, r6, r0
	bl FUN_021D3758
_021D14B6:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021D15D4
_021D14BE:
	adds r0, r7, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	bne _021D14CC
_021D14CA:
	b _021D15D4
_021D14CC:
	ldr r0, [r5]
	bl FUN_021BB0A4
	ldrb r1, [r5, #5]
	bl FUN_021DF85C
	b _021D14B6
_021D14DA:
	ldrb r0, [r5, #5]
	adds r7, #0xe1
	adds r1, r7, #0
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
	b _021D14B6
_021D14EC:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D15D4
	adds r0, r6, #0
	bl FUN_021D15D8
	adds r1, r0, #0
	ldr r0, [r6, #0x34]
	b _021D158A
_021D1500:
	adds r0, r6, #0
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D15D4
	ldrb r2, [r5, #4]
	adds r0, r6, #0
	movs r1, #0xc
	adds r0, #0x48
	muls r1, r2, r1
	adds r0, r0, r1
	bl FUN_021D39CC
	b _021D14AE
_021D151C:
	adds r0, r7, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D15D4
	adds r0, r7, #0
	subs r0, #0x1c
	ldr r0, [r6, r0]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D153A
	adds r7, #0xec
	b _021D153C
_021D153A:
	adds r7, #0xe2
_021D153C:
	adds r0, r7, #0
	bl FUN_021DF308
	b _021D14B6
_021D1544:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D15D4
	movs r0, #0
	strb r0, [r5, #5]
	adds r0, r7, #0
	subs r0, #0x1c
	ldrb r1, [r5, #5]
	ldr r0, [r6, r0]
	bl FUN_0219C784
	strb r0, [r5, #4]
	adds r0, r7, #0
	subs r0, #0x18
	ldrb r1, [r5, #4]
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	str r0, [r5]
	bl FUN_021BAC80
	strb r0, [r5, #6]
	ldr r0, [r5]
	bl FUN_021BB0A4
	ldrb r1, [r5, #5]
	bl FUN_021DF85C
	adds r7, #0xe4
	adds r0, r7, #0
	bl FUN_021DF308
	ldr r0, [r6, #0x34]
	movs r1, #0xb
_021D158A:
	ldrb r3, [r5, #6]
	movs r2, #1
	bl FUN_021D4F00
	ldr r1, [r6, #0x34]
	adds r0, r6, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D14B6
_021D15A0:
	adds r0, r6, #0
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D15D4
	b _021D14AE
_021D15AC:
	adds r0, r7, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D15D4
	b _021D14B6
_021D15BA:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D15D4
	ldrb r1, [r5, #4]
	movs r0, #0xc
	adds r6, #0x48
	muls r0, r1, r0
	adds r0, r6, r0
	bl FUN_021D39CC
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D15D4:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D1444

	thumb_func_start FUN_021D15D8
FUN_021D15D8: ; 0x021D15D8
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0x4d
	adds r5, r0, #0
	lsls r4, r4, #2
	ldr r0, [r5, r4]
	movs r1, #4
	movs r7, #4
	bl FUN_0219DB04
	cmp r0, #0
	beq _021D15F2
	movs r0, #6
	pop {r3, r4, r5, r6, r7, pc}
_021D15F2:
	ldr r0, [r5, r4]
	movs r1, #8
	movs r6, #8
	bl FUN_0219DB04
	cmp r0, #0
	beq _021D1604
	movs r0, #3
	pop {r3, r4, r5, r6, r7, pc}
_021D1604:
	ldr r0, [r5, r4]
	lsls r1, r6, #0xa
	bl FUN_0219DB04
	cmp r0, #0
	beq _021D1614
	movs r0, #0xc8
	pop {r3, r4, r5, r6, r7, pc}
_021D1614:
	ldr r0, [r5, r4]
	movs r1, #0x80
	bl FUN_0219DB04
	cmp r0, #0
	beq _021D1624
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D1624:
	ldr r0, [r5, r4]
	movs r1, #0x10
	bl FUN_0219DB04
	cmp r0, #0
	beq _021D1634
	movs r0, #5
	pop {r3, r4, r5, r6, r7, pc}
_021D1634:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D15D8

	thumb_func_start FUN_021D1638
FUN_021D1638: ; 0x021D1638
	push {r4, r5, r6, r7, lr}
	sub sp, #0x4c
	movs r7, #0x15
	adds r4, r1, #0
	lsls r7, r7, #4
	adds r5, r0, #0
	adds r6, r4, #0
	ldrb r0, [r4, r7]
	adds r6, #0xf0
	cmp r0, #0
	beq _021D165A
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1414
	add sp, #0x4c
	pop {r4, r5, r6, r7, pc}
_021D165A:
	ldr r0, [r5]
	cmp r0, #0xb
	bls _021D1662
	b _021D1890
_021D1662:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D166E: ; jump table
	.short _021D1686 - _021D166E - 2 ; case 0
	.short _021D16F4 - _021D166E - 2 ; case 1
	.short _021D1712 - _021D166E - 2 ; case 2
	.short _021D173C - _021D166E - 2 ; case 3
	.short _021D1752 - _021D166E - 2 ; case 4
	.short _021D1774 - _021D166E - 2 ; case 5
	.short _021D179E - _021D166E - 2 ; case 6
	.short _021D17D4 - _021D166E - 2 ; case 7
	.short _021D17EC - _021D166E - 2 ; case 8
	.short _021D1852 - _021D166E - 2 ; case 9
	.short _021D1860 - _021D166E - 2 ; case 10
	.short _021D1874 - _021D166E - 2 ; case 11
_021D1686:
	adds r0, r7, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	movs r1, #1
	bl FUN_0219C784
	str r0, [sp, #4]
	adds r0, r7, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	ldr r1, [sp, #4]
	bl FUN_0219C690
	str r0, [sp, #8]
	adds r0, r7, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	ldr r1, [sp, #8]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	movs r1, #9
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	movs r0, #9
	movs r1, #0
	bl FUN_021DFA28
	movs r0, #1
	strb r0, [r6, #5]
	ldr r0, [sp, #8]
	strb r0, [r6, #7]
	ldr r0, [sp, #4]
	strb r0, [r6, #4]
	adds r0, r7, #0
	subs r0, #0x18
	ldrb r1, [r6, #4]
	ldr r0, [r4, r0]
	bl FUN_0219D1C8
	str r0, [r6]
	bl FUN_021BAC80
	strb r0, [r6, #6]
_021D16E4:
	adds r0, r7, #4
	adds r0, r4, r0
	bl FUN_021D3758
_021D16EC:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D1890
_021D16F4:
	adds r0, r7, #4
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D177E
	ldrb r0, [r6, #5]
	adds r7, #0xe7
	adds r1, r7, #0
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
	b _021D16EC
_021D1712:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D177E
	movs r0, #1
	str r0, [sp]
	ldrb r2, [r6, #7]
	add r7, sp, #0x2c
	adds r0, r4, #0
	adds r1, r7, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r7, #0
	bl FUN_021DFC54
	ldr r0, [r4, #0x34]
	movs r1, #7
	movs r2, #1
	ldrb r3, [r6, #7]
	b _021D1840
_021D173C:
	adds r0, r4, #0
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D177E
	ldrb r0, [r6, #5]
	adds r1, r7, #0
	adds r1, #0xe8
	bl FUN_021DF39C
	b _021D16E4
_021D1752:
	adds r0, r7, #4
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D177E
	bl FUN_021DF828
	cmp r0, #0
	bne _021D177E
	ldrb r0, [r6, #6]
	movs r1, #0xe
	movs r2, #2
	str r0, [sp]
	ldr r0, [r4, #0x34]
	movs r3, #1
	b _021D1840
_021D1774:
	adds r0, r4, #0
	bl FUN_021D2F1C
	cmp r0, #0
	bne _021D1780
_021D177E:
	b _021D1890
_021D1780:
	ldr r0, [r6]
	bl FUN_021BB0A4
	ldrb r1, [r6, #5]
	bl FUN_021DF85C
	adds r1, r7, #0
	ldrb r0, [r6, #5]
	adds r1, #0xe9
	bl FUN_021DF39C
	movs r0, #1
_021D1798:
	bl FUN_021DFC78
	b _021D16E4
_021D179E:
	adds r0, r7, #4
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1890
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1890
	subs r7, #0x1c
	ldr r0, [r4, r7]
	bl FUN_0219C8A0
	adds r2, r0, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	add r4, sp, #0xc
	adds r1, r4, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r4, #0
	bl FUN_021DFC54
	b _021D16EC
_021D17D4:
	ldrb r1, [r6, #4]
	movs r0, #0xc
	adds r4, #0x48
	muls r0, r1, r0
	adds r0, r4, r0
	bl FUN_021D39CC
	adds r7, #0xe2
	adds r0, r7, #0
	bl FUN_021DF308
	b _021D16EC
_021D17EC:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1890
	movs r0, #0
	bl FUN_021DFC94
	cmp r0, #0
	bne _021D1890
	movs r0, #0
	strb r0, [r6, #5]
	adds r0, r7, #0
	subs r0, #0x1c
	ldrb r1, [r6, #5]
	ldr r0, [r4, r0]
	bl FUN_0219C784
	strb r0, [r6, #4]
	adds r0, r7, #0
	subs r0, #0x18
	ldrb r1, [r6, #4]
	ldr r0, [r4, r0]
	bl FUN_0219D1C8
	str r0, [r6]
	bl FUN_021BAC80
	strb r0, [r6, #6]
	ldr r0, [r6]
	bl FUN_021BB0A4
	ldrb r1, [r6, #5]
	bl FUN_021DF85C
	adds r7, #0xe4
	adds r0, r7, #0
	bl FUN_021DF308
	ldrb r3, [r6, #6]
	ldr r0, [r4, #0x34]
	movs r1, #0xb
	movs r2, #1
_021D1840:
	bl FUN_021D4F00
	ldr r1, [r4, #0x34]
	adds r0, r4, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D16EC
_021D1852:
	adds r0, r4, #0
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D1890
	movs r0, #0
	b _021D1798
_021D1860:
	adds r0, r7, #4
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1890
	adds r0, r4, #0
	bl FUN_021D45D0
	b _021D16EC
_021D1874:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1890
	ldrb r1, [r6, #4]
	movs r0, #0xc
	adds r4, #0x48
	muls r0, r1, r0
	adds r0, r4, r0
	bl FUN_021D39CC
	add sp, #0x4c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D1890:
	movs r0, #0
	add sp, #0x4c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D1638

	thumb_func_start FUN_021D1898
FUN_021D1898: ; 0x021D1898
	push {r3, r4, r5, r6, r7, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D18B2
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1414
	pop {r3, r4, r5, r6, r7, pc}
_021D18B2:
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	cmp r0, #3
	bhs _021D18F0
	adds r0, r6, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	bl FUN_0219C8A0
	adds r2, r0, #0
	subs r3, r6, #1
	ldrb r3, [r4, r3]
	ldr r7, _021D18F4 ; =0x021DA9CC
	lsls r2, r2, #2
	lsls r3, r3, #3
	adds r3, r7, r3
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D18EC
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D18EC:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D18F0:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D18F4: .word 0x021DA9CC
	thumb_func_end FUN_021D1898

	thumb_func_start FUN_021D18F8
FUN_021D18F8: ; 0x021D18F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #4]
	movs r0, #0x15
	adds r6, r1, #0
	lsls r0, r0, #4
	str r0, [sp, #8]
	adds r4, r6, #0
	ldrb r0, [r6, r0]
	adds r4, #0xf0
	cmp r0, #0
	beq _021D191C
	ldr r1, [sp, #4]
	adds r0, r6, #0
	bl FUN_021D1424
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_021D191C:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	cmp r0, #9
	bls _021D1926
	b _021D1B62
_021D1926:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D1932: ; jump table
	.short _021D1946 - _021D1932 - 2 ; case 0
	.short _021D19B8 - _021D1932 - 2 ; case 1
	.short _021D19E4 - _021D1932 - 2 ; case 2
	.short _021D1A1A - _021D1932 - 2 ; case 3
	.short _021D1A2C - _021D1932 - 2 ; case 4
	.short _021D1A5C - _021D1932 - 2 ; case 5
	.short _021D1A76 - _021D1932 - 2 ; case 6
	.short _021D1B10 - _021D1932 - 2 ; case 7
	.short _021D1B1C - _021D1932 - 2 ; case 8
	.short _021D1B54 - _021D1932 - 2 ; case 9
_021D1946:
	ldr r1, [sp, #8]
	ldr r0, [sp, #8]
	subs r1, #0x10
	subs r0, #0x1c
	ldrb r1, [r6, r1]
	ldr r0, [r6, r0]
	movs r2, #0
	bl FUN_0219C498
	adds r5, r0, #0
	ldr r0, [sp, #8]
	adds r1, r5, #0
	subs r0, #0x1c
	ldr r0, [r6, r0]
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4, #0xa]
	ldr r0, [sp, #8]
	ldrb r1, [r4, #0xa]
	subs r0, #0x18
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #8]
	ldr r0, [sp, #8]
	adds r1, r5, #0
	subs r0, #0x1c
	ldr r0, [r6, r0]
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #0xb]
	ldr r0, [sp, #8]
	ldrb r1, [r4, #0xb]
	subs r0, #0x18
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	str r0, [r4, #4]
	bl FUN_021BAC80
	strb r0, [r4, #9]
_021D19A2:
	ldr r0, [sp, #8]
	adds r0, r0, #4
	adds r0, r6, r0
	bl FUN_021D3758
_021D19AC:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [r0]
	b _021D1B62
_021D19B8:
	ldr r0, [sp, #8]
	adds r0, r0, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1A36
	ldr r0, [sp, #8]
	ldrb r1, [r4, #0xa]
	subs r0, #0x1c
	str r0, [sp, #8]
	ldr r0, [r6, r0]
	bl FUN_0219C71C
	adds r5, r0, #0
	ldr r0, [r4]
	bl FUN_021BB0A4
	adds r1, r5, #0
	bl FUN_021DF85C
	b _021D19AC
_021D19E4:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1A36
	ldr r0, [sp, #8]
	ldrb r1, [r4, #0xb]
	subs r0, #0x1c
	ldr r0, [r6, r0]
	bl FUN_0219C71C
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	adds r1, r5, #0
	bl FUN_021DF85C
	ldr r1, [sp, #8]
	adds r0, r5, #0
	adds r1, #0xe1
	str r1, [sp, #8]
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
	b _021D19AC
_021D1A1A:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1A36
	ldrb r0, [r4, #9]
	movs r1, #2
	str r0, [sp]
	ldr r0, [r6, #0x34]
	b _021D1AFA
_021D1A2C:
	adds r0, r6, #0
	bl FUN_021D2F1C
	cmp r0, #0
	bne _021D1A38
_021D1A36:
	b _021D1B62
_021D1A38:
	ldrb r0, [r4, #0xa]
	adds r2, r6, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0xb]
	adds r2, r6, #0
	adds r2, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	b _021D19A2
_021D1A5C:
	ldr r0, [sp, #8]
	adds r0, r0, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1B62
	ldr r0, [sp, #8]
	adds r0, #0xe2
	str r0, [sp, #8]
	bl FUN_021DF308
	b _021D19AC
_021D1A76:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1B62
	movs r0, #2
	strb r0, [r4, #0xc]
	movs r0, #4
	strb r0, [r4, #0xd]
	ldr r0, [sp, #8]
	subs r0, #0x1c
	ldr r0, [r6, r0]
	bl FUN_0219C8A0
	strb r0, [r4, #0xf]
	ldr r0, [sp, #8]
	movs r7, #0
	str r0, [sp, #0x10]
	subs r0, #0x1c
	str r0, [sp, #0x10]
	ldr r0, [sp, #8]
	subs r0, #0x18
	str r0, [sp, #8]
_021D1AA2:
	adds r5, r4, r7
	ldr r0, [sp, #0x10]
	ldrb r1, [r5, #0xc]
	ldr r0, [r6, r0]
	bl FUN_0219C784
	strb r0, [r5, #0xa]
	lsls r0, r7, #2
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	ldrb r1, [r5, #0xa]
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #0xc]
	cmp r0, #0
	str r0, [r4, r1]
	beq _021D1ACC
	bl FUN_021BAC80
	strb r0, [r5, #8]
_021D1ACC:
	adds r7, r7, #1
	cmp r7, #2
	blo _021D1AA2
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xc]
	bl FUN_021DF85C
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xd]
	bl FUN_021DF85C
	movs r0, #0x8d
	lsls r0, r0, #2
	bl FUN_021DF308
	ldrb r0, [r4, #9]
	movs r1, #0xc
	str r0, [sp]
	ldr r0, [r6, #0x34]
_021D1AFA:
	ldrb r3, [r4, #8]
	movs r2, #2
	bl FUN_021D4F00
	ldr r1, [r6, #0x34]
	adds r0, r6, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D19AC
_021D1B10:
	adds r0, r6, #0
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D1B62
	b _021D19A2
_021D1B1C:
	ldr r0, [sp, #8]
	adds r0, r0, #4
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1B62
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1B62
	ldrb r0, [r4, #0xa]
	adds r2, r6, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0xb]
	adds r6, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r6, r1
	bl FUN_021D39CC
	b _021D19AC
_021D1B54:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1B62
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D1B62:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D18F8

	thumb_func_start FUN_021D1B68
FUN_021D1B68: ; 0x021D1B68
	push {r4, r5, r6, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1B82
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1424
	pop {r4, r5, r6, pc}
_021D1B82:
	subs r0, r6, #1
	ldrb r2, [r4, r0]
	cmp r2, #2
	bhs _021D1BAC
	lsls r3, r2, #2
	ldr r2, _021D1BB0 ; =0x021DA97C
	adds r0, r4, #0
	ldr r2, [r2, r3]
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1BA8
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1BA8:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021D1BAC:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D1BB0: .word 0x021DA97C
	thumb_func_end FUN_021D1B68

	thumb_func_start FUN_021D1BB4
FUN_021D1BB4: ; 0x021D1BB4
	push {r4, r5, r6, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1BCE
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1424
	pop {r4, r5, r6, pc}
_021D1BCE:
	subs r0, r6, #1
	ldrb r2, [r4, r0]
	cmp r2, #3
	bhs _021D1BF8
	lsls r3, r2, #2
	ldr r2, _021D1BFC ; =0x021DA9A8
	adds r0, r4, #0
	ldr r2, [r2, r3]
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1BF4
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1BF4:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021D1BF8:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D1BFC: .word 0x021DA9A8
	thumb_func_end FUN_021D1BB4

	thumb_func_start FUN_021D1C00
FUN_021D1C00: ; 0x021D1C00
	push {r4, r5, r6, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1C1A
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1424
	pop {r4, r5, r6, pc}
_021D1C1A:
	subs r0, r6, #1
	ldrb r2, [r4, r0]
	cmp r2, #3
	bhs _021D1C44
	lsls r3, r2, #2
	ldr r2, _021D1C48 ; =0x021DA990
	adds r0, r4, #0
	ldr r2, [r2, r3]
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1C40
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1C40:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021D1C44:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D1C48: .word 0x021DA990
	thumb_func_end FUN_021D1C00

	thumb_func_start FUN_021D1C4C
FUN_021D1C4C: ; 0x021D1C4C
	push {r3, r4, r5, r6, r7, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1C66
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1424
	pop {r3, r4, r5, r6, r7, pc}
_021D1C66:
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	cmp r0, #3
	bhs _021D1CA4
	adds r0, r6, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	bl FUN_0219C8A0
	adds r2, r0, #0
	subs r3, r6, #1
	ldrb r3, [r4, r3]
	ldr r7, _021D1CA8 ; =0x021DA9E4
	lsls r2, r2, #2
	lsls r3, r3, #3
	adds r3, r7, r3
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1CA0
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1CA0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D1CA4:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D1CA8: .word 0x021DA9E4
	thumb_func_end FUN_021D1C4C

	thumb_func_start FUN_021D1CAC
FUN_021D1CAC: ; 0x021D1CAC
	push {r4, r5, r6, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1CC6
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1424
	pop {r4, r5, r6, pc}
_021D1CC6:
	subs r0, r6, #1
	ldrb r2, [r4, r0]
	cmp r2, #3
	bhs _021D1CF0
	lsls r3, r2, #2
	ldr r2, _021D1CF4 ; =0x021DA984
	adds r0, r4, #0
	ldr r2, [r2, r3]
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1CEC
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1CEC:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021D1CF0:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D1CF4: .word 0x021DA984
	thumb_func_end FUN_021D1CAC

	thumb_func_start FUN_021D1CF8
FUN_021D1CF8: ; 0x021D1CF8
	push {r4, r5, r6, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1D12
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1434
	pop {r4, r5, r6, pc}
_021D1D12:
	subs r0, r6, #1
	ldrb r2, [r4, r0]
	cmp r2, #3
	bhs _021D1D3C
	lsls r3, r2, #2
	ldr r2, _021D1D40 ; =0x021DA99C
	adds r0, r4, #0
	ldr r2, [r2, r3]
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1D38
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1D38:
	movs r0, #0
	pop {r4, r5, r6, pc}
_021D1D3C:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D1D40: .word 0x021DA99C
	thumb_func_end FUN_021D1CF8

	thumb_func_start FUN_021D1D44
FUN_021D1D44: ; 0x021D1D44
	push {r3, r4, r5, r6, r7, lr}
	movs r6, #0x15
	adds r4, r1, #0
	lsls r6, r6, #4
	adds r5, r0, #0
	ldrb r0, [r4, r6]
	cmp r0, #0
	beq _021D1D5E
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_021D1434
	pop {r3, r4, r5, r6, r7, pc}
_021D1D5E:
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	cmp r0, #3
	bhs _021D1D9C
	adds r0, r6, #0
	subs r0, #0x1c
	ldr r0, [r4, r0]
	bl FUN_0219C8A0
	adds r2, r0, #0
	subs r3, r6, #1
	ldrb r3, [r4, r3]
	ldr r7, _021D1DA0 ; =0x021DA9B4
	lsls r2, r2, #2
	lsls r3, r3, #3
	adds r3, r7, r3
	ldr r2, [r2, r3]
	adds r0, r4, #0
	adds r1, r5, #0
	blx r2
	cmp r0, #0
	beq _021D1D98
	subs r0, r6, #1
	ldrb r0, [r4, r0]
	adds r1, r0, #1
	subs r0, r6, #1
	strb r1, [r4, r0]
	movs r0, #0
	str r0, [r5]
_021D1D98:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D1D9C:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D1DA0: .word 0x021DA9B4
	thumb_func_end FUN_021D1D44

	thumb_func_start FUN_021D1DA4
FUN_021D1DA4: ; 0x021D1DA4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	adds r5, r0, #0
	adds r4, r5, #0
	ldr r1, [r6]
	adds r4, #0xf0
	cmp r1, #5
	bls _021D1DB8
	b _021D1EF8
_021D1DB8:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D1DC4: ; jump table
	.short _021D1DD0 - _021D1DC4 - 2 ; case 0
	.short _021D1E30 - _021D1DC4 - 2 ; case 1
	.short _021D1E58 - _021D1DC4 - 2 ; case 2
	.short _021D1E8C - _021D1DC4 - 2 ; case 3
	.short _021D1EB2 - _021D1DC4 - 2 ; case 4
	.short _021D1EE4 - _021D1DC4 - 2 ; case 5
_021D1DD0:
	movs r7, #0x4d
	lsls r7, r7, #2
	adds r1, r7, #0
	adds r1, #0xc
	ldrb r1, [r5, r1]
	ldr r0, [r5, r7]
	movs r2, #0
	bl FUN_0219C498
	str r0, [sp, #4]
	ldr r0, [r5, r7]
	ldr r1, [sp, #4]
	movs r2, #0
	bl FUN_0219C4FC
	strb r0, [r4, #0xa]
	adds r0, r7, #4
	ldrb r1, [r4, #0xa]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #8]
	ldr r0, [r5, r7]
	ldr r1, [sp, #4]
	movs r2, #1
	bl FUN_0219C4FC
	strb r0, [r4, #0xb]
	adds r0, r7, #4
	ldrb r1, [r4, #0xb]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4, #4]
	bl FUN_021BAC80
	adds r7, #0x20
	strb r0, [r4, #9]
	adds r0, r5, r7
_021D1E24:
	bl FUN_021D3758
_021D1E28:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021D1EF8
_021D1E30:
	movs r7, #0x55
	lsls r7, r7, #2
	adds r0, r5, r7
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1EF8
	subs r7, #0x20
	ldrb r1, [r4, #0xa]
	ldr r0, [r5, r7]
	bl FUN_0219C71C
	adds r5, r0, #0
	ldr r0, [r4]
	bl FUN_021BB0A4
	adds r1, r5, #0
	bl FUN_021DF85C
_021D1E56:
	b _021D1E28
_021D1E58:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1EF8
	movs r7, #0x4d
	lsls r7, r7, #2
	ldrb r1, [r4, #0xb]
	ldr r0, [r5, r7]
	bl FUN_0219C71C
	adds r5, r0, #0
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	adds r1, r5, #0
	bl FUN_021DF85C
	adds r7, #0xfd
	adds r0, r5, #0
	adds r1, r7, #0
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
	b _021D1E56
_021D1E8C:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D1EF8
	ldrb r0, [r4, #9]
	movs r1, #2
	movs r2, #2
	str r0, [sp]
	ldrb r3, [r4, #8]
	ldr r0, [r5, #0x34]
	bl FUN_021D4F00
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D1E56
_021D1EB2:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D1EF8
	ldrb r0, [r4, #0xa]
	adds r2, r5, #0
	movs r7, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r7, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0xb]
	adds r2, r5, #0
	adds r2, #0x48
	adds r1, r0, #0
	muls r1, r7, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	b _021D1E24
_021D1EE4:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D1EF8
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D1EF8:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D1DA4

	thumb_func_start FUN_021D1F00
FUN_021D1F00: ; 0x021D1F00
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r4, r1, #0
	ldr r0, [r5, r0]
	movs r1, #0
	bl FUN_0219C8F8
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021D1F5C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D1F00

	thumb_func_start FUN_021D1F20
FUN_021D1F20: ; 0x021D1F20
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4d
	adds r5, r0, #0
	lsls r7, r7, #2
	adds r6, r1, #0
	ldr r0, [r5, r7]
	movs r1, #0
	bl FUN_0219C8F8
	adds r4, r0, #0
	ldr r0, [r5, r7]
	movs r1, #1
	bl FUN_0219C8F8
	adds r3, r0, #0
	cmp r4, r3
	beq _021D1F4E
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021D2068
	pop {r3, r4, r5, r6, r7, pc}
_021D1F4E:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021D1F5C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D1F20

	thumb_func_start FUN_021D1F5C
FUN_021D1F5C: ; 0x021D1F5C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r4, r1, #0
	str r2, [sp, #4]
	adds r5, r0, #0
	adds r6, r5, #0
	ldr r1, [r4]
	adds r6, #0xf0
	cmp r1, #4
	bhi _021D2060
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D1F7C: ; jump table
	.short _021D1F86 - _021D1F7C - 2 ; case 0
	.short _021D1FBC - _021D1F7C - 2 ; case 1
	.short _021D1FDC - _021D1F7C - 2 ; case 2
	.short _021D202A - _021D1F7C - 2 ; case 3
	.short _021D2044 - _021D1F7C - 2 ; case 4
_021D1F86:
	movs r0, #9
	movs r7, #0x4d
	strb r0, [r6, #1]
	lsls r7, r7, #2
	ldr r0, [r5, r7]
	ldr r1, [sp, #4]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	ldrb r1, [r6, #1]
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	ldrb r0, [r6, #1]
	movs r1, #0
	bl FUN_021DFA28
	adds r7, #0x20
	adds r0, r5, r7
_021D1FB0:
	bl FUN_021D3758
_021D1FB4:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021D2060
_021D1FBC:
	movs r7, #0x55
	lsls r7, r7, #2
	adds r0, r5, r7
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2060
	ldrb r0, [r6, #1]
	adds r7, #0xe3
	adds r1, r7, #0
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
_021D1FDA:
	b _021D1FB4
_021D1FDC:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2060
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	bl FUN_0219BF14
	movs r6, #7
	cmp r0, #3
	bne _021D1FF6
	movs r6, #8
_021D1FF6:
	movs r0, #1
	str r0, [sp]
	add r7, sp, #8
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r7, #0
	bl FUN_021DFC54
	lsls r1, r6, #0x10
	ldr r0, [r5, #0x34]
	ldr r3, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #1
	bl FUN_021D4F00
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D1FDA
_021D202A:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2060
	ldrb r0, [r6, #1]
	movs r6, #0x8e
	lsls r6, r6, #2
	adds r1, r6, #0
	bl FUN_021DF39C
	subs r6, #0xe4
	adds r0, r5, r6
	b _021D1FB0
_021D2044:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2060
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2060
	add sp, #0x28
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D2060:
	movs r0, #0
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D1F5C

	thumb_func_start FUN_021D2068
FUN_021D2068: ; 0x021D2068
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	str r2, [sp, #4]
	adds r5, r1, #0
	str r3, [sp, #8]
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r1, [r5]
	adds r6, #0xf0
	cmp r1, #4
	bls _021D2080
	b _021D2196
_021D2080:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D208C: ; jump table
	.short _021D2096 - _021D208C - 2 ; case 0
	.short _021D20EE - _021D208C - 2 ; case 1
	.short _021D210E - _021D208C - 2 ; case 2
	.short _021D2160 - _021D208C - 2 ; case 3
	.short _021D217A - _021D208C - 2 ; case 4
_021D2096:
	movs r0, #0xb
	strb r0, [r6]
	movs r0, #0xd
	movs r7, #0x4d
	strb r0, [r6, #1]
	lsls r7, r7, #2
	ldr r0, [r4, r7]
	ldr r1, [sp, #4]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	ldrb r1, [r6]
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	ldrb r0, [r6]
	movs r1, #0
	bl FUN_021DFA28
	ldr r0, [r4, r7]
	ldr r1, [sp, #8]
	bl FUN_0219D978
	movs r1, #0
	str r1, [sp]
	ldrb r1, [r6, #1]
	movs r2, #0
	movs r3, #0
	bl FUN_021DF8CC
	ldrb r0, [r6, #1]
	movs r1, #0
	bl FUN_021DFA28
	adds r7, #0x20
	adds r0, r4, r7
_021D20E2:
	bl FUN_021D3758
_021D20E6:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D2196
_021D20EE:
	movs r7, #0x55
	lsls r7, r7, #2
	adds r0, r4, r7
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2196
	ldrb r0, [r6]
	adds r7, #0xe3
	adds r1, r7, #0
	bl FUN_021DF39C
	movs r0, #2
	bl FUN_021D1338
_021D210C:
	b _021D20E6
_021D210E:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2196
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0219BF14
	movs r6, #9
	cmp r0, #3
	bne _021D2128
	movs r6, #0xa
_021D2128:
	movs r0, #1
	str r0, [sp]
	add r7, sp, #0xc
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021D40CC
	adds r0, r7, #0
	bl FUN_021DFC54
	ldr r0, [sp, #8]
	lsls r1, r6, #0x10
	str r0, [sp]
	ldr r0, [r4, #0x34]
	ldr r3, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #2
	bl FUN_021D4F00
	ldr r1, [r4, #0x34]
	adds r0, r4, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D210C
_021D2160:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2196
	ldrb r0, [r6]
	movs r6, #0x8e
	lsls r6, r6, #2
	adds r1, r6, #0
	bl FUN_021DF39C
	subs r6, #0xe4
	adds r0, r4, r6
	b _021D20E2
_021D217A:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2196
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2196
	add sp, #0x2c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D2196:
	movs r0, #0
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D2068

	thumb_func_start FUN_021D219C
FUN_021D219C: ; 0x021D219C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r4, r5, #0
	ldr r1, [r6]
	adds r4, #0xf0
	cmp r1, #4
	bhi _021D227E
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D21B8: ; jump table
	.short _021D21C2 - _021D21B8 - 2 ; case 0
	.short _021D2224 - _021D21B8 - 2 ; case 1
	.short _021D2238 - _021D21B8 - 2 ; case 2
	.short _021D2254 - _021D21B8 - 2 ; case 3
	.short _021D227A - _021D21B8 - 2 ; case 4
_021D21C2:
	movs r7, #0x4d
	movs r0, #1
	lsls r7, r7, #2
	strb r0, [r4, #5]
	ldr r0, [r5, r7]
	bl FUN_0219C8A0
	adds r1, r0, #0
	ldr r0, [r5, r7]
	movs r2, #0
	bl FUN_0219C910
	strb r0, [r4, #8]
	ldrb r1, [r4, #5]
	ldr r0, [r5, r7]
	bl FUN_0219C784
	strb r0, [r4, #4]
	adds r0, r7, #4
	ldrb r1, [r4, #4]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #6]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021D2DA4
	adds r1, r0, #0
	ldrb r0, [r4, #6]
	movs r2, #2
	str r0, [sp]
	ldrb r3, [r4, #8]
	ldr r0, [r5, #0x34]
	bl FUN_021D4F00
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
_021D221C:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021D227E
_021D2224:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D227E
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D3758
	b _021D221C
_021D2238:
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #5]
	bl FUN_021DF85C
	ldrb r0, [r4, #5]
	ldr r1, _021D2284 ; =0x00000239
	bl FUN_021DF39C
	movs r0, #1
	bl FUN_021DFC78
	b _021D221C
_021D2254:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D227E
	bl FUN_021DF828
	cmp r0, #0
	bne _021D227E
	ldrb r1, [r4, #4]
	movs r0, #0xc
	adds r5, #0x48
	muls r0, r1, r0
	adds r0, r5, r0
	bl FUN_021D39CC
	b _021D221C
_021D227A:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D227E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D2284: .word 0x00000239
	thumb_func_end FUN_021D219C

	thumb_func_start FUN_021D2288
FUN_021D2288: ; 0x021D2288
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4d
	adds r5, r0, #0
	lsls r7, r7, #2
	adds r6, r1, #0
	ldr r0, [r5, r7]
	movs r1, #0
	bl FUN_0219C8F8
	adds r4, r0, #0
	ldr r0, [r5, r7]
	movs r1, #1
	bl FUN_0219C8F8
	adds r3, r0, #0
	cmp r4, r3
	beq _021D22B6
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021D2414
	pop {r3, r4, r5, r6, r7, pc}
_021D22B6:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_021D22C4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D2288

	thumb_func_start FUN_021D22C4
FUN_021D22C4: ; 0x021D22C4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r7, r0, #0
	str r1, [sp, #8]
	adds r4, r7, #0
	ldr r1, [r1]
	adds r4, #0xf0
	cmp r1, #4
	bls _021D22D8
	b _021D240A
_021D22D8:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D22E4: ; jump table
	.short _021D22EE - _021D22E4 - 2 ; case 0
	.short _021D2384 - _021D22E4 - 2 ; case 1
	.short _021D2398 - _021D22E4 - 2 ; case 2
	.short _021D23C6 - _021D22E4 - 2 ; case 3
	.short _021D2404 - _021D22E4 - 2 ; case 4
_021D22EE:
	movs r0, #3
	strb r0, [r4, #0xa]
	movs r0, #5
	strb r0, [r4, #0xb]
	adds r0, r4, #0
	str r0, [sp, #0x10]
	adds r0, #0xe
	str r0, [sp, #0x10]
	movs r0, #0x4d
	lsls r0, r0, #2
	movs r6, #0
	adds r0, r0, #4
	strb r2, [r4, #0xf]
	strb r6, [r4, #0xe]
	str r0, [sp, #0x14]
_021D230C:
	adds r5, r4, r6
	movs r0, #0x4d
	lsls r0, r0, #2
	ldrb r1, [r5, #0xa]
	ldr r0, [r7, r0]
	bl FUN_0219C784
	strb r0, [r5, #8]
	lsls r0, r6, #2
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x14]
	ldrb r1, [r5, #8]
	ldr r0, [r7, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #0xc]
	str r0, [r4, r1]
	bl FUN_021BAC80
	strb r0, [r5, #0xc]
	ldr r0, [sp, #0xc]
	ldr r0, [r4, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021D234A
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	strb r1, [r0]
_021D234A:
	adds r6, r6, #1
	cmp r6, #2
	blo _021D230C
	ldrb r1, [r4, #0xe]
	adds r0, r7, #0
	bl FUN_021D2DA4
	adds r1, r0, #0
	ldrb r0, [r4, #0xc]
	movs r2, #3
	str r0, [sp]
	ldrb r0, [r4, #0xd]
	str r0, [sp, #4]
	ldrb r3, [r4, #0xf]
	ldr r0, [r7, #0x34]
	bl FUN_021D4F00
	ldr r1, [r7, #0x34]
	adds r0, r7, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
_021D2378:
	ldr r0, [sp, #8]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #8]
	str r1, [r0]
	b _021D240A
_021D2384:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D240A
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D3758
	b _021D2378
_021D2398:
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xa]
	bl FUN_021DF85C
	ldrb r0, [r4, #0xe]
	cmp r0, #2
	bne _021D23B6
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xb]
	bl FUN_021DF85C
_021D23B6:
	ldrb r0, [r4, #0xa]
	ldr r1, _021D2410 ; =0x00000239
	bl FUN_021DF39C
	movs r0, #1
	bl FUN_021DFC78
	b _021D2378
_021D23C6:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D240A
	bl FUN_021DF828
	cmp r0, #0
	bne _021D240A
	ldrb r0, [r4, #8]
	adds r2, r7, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0xe]
	cmp r0, #2
	bne _021D2402
	ldrb r0, [r4, #9]
	adds r7, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r7, r1
	bl FUN_021D39CC
_021D2402:
	b _021D2378
_021D2404:
	add sp, #0x18
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D240A:
	movs r0, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D2410: .word 0x00000239
	thumb_func_end FUN_021D22C4

	thumb_func_start FUN_021D2414
FUN_021D2414: ; 0x021D2414
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	str r2, [sp, #4]
	adds r5, r0, #0
	adds r4, r5, #0
	ldr r1, [r6]
	adds r7, r3, #0
	adds r4, #0xf0
	cmp r1, #5
	bls _021D242C
	b _021D2560
_021D242C:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D2438: ; jump table
	.short _021D2444 - _021D2438 - 2 ; case 0
	.short _021D24B4 - _021D2438 - 2 ; case 1
	.short _021D24C4 - _021D2438 - 2 ; case 2
	.short _021D24E8 - _021D2438 - 2 ; case 3
	.short _021D2522 - _021D2438 - 2 ; case 4
	.short _021D255A - _021D2438 - 2 ; case 5
_021D2444:
	movs r0, #3
	strb r0, [r4, #0xa]
	movs r7, #0x4d
	lsls r7, r7, #2
	ldrb r1, [r4, #0xa]
	ldr r0, [r5, r7]
	bl FUN_0219C784
	strb r0, [r4, #8]
	adds r0, r7, #4
	ldrb r1, [r4, #8]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #0xc]
	movs r0, #5
	strb r0, [r4, #0xb]
	ldrb r1, [r4, #0xb]
	ldr r0, [r5, r7]
	bl FUN_0219C784
	strb r0, [r4, #9]
	adds r0, r7, #4
	ldrb r1, [r4, #9]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4, #4]
	bl FUN_021BAC80
	strb r0, [r4, #0xd]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021D2DA4
	adds r1, r0, #0
	ldrb r0, [r4, #0xc]
	movs r2, #2
	str r0, [sp]
	ldr r0, [r5, #0x34]
	ldr r3, [sp, #4]
_021D249C:
	bl FUN_021D4F00
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
_021D24AC:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021D2560
_021D24B4:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2560
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	b _021D251C
_021D24C4:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2560
	adds r0, r5, #0
	movs r1, #1
	bl FUN_021D2DA4
	adds r1, r0, #0
	ldrb r0, [r4, #0xd]
	movs r2, #2
	adds r3, r7, #0
	str r0, [sp]
	ldr r0, [r5, #0x34]
	b _021D249C
_021D24E8:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2560
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xa]
	bl FUN_021DF85C
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xb]
	bl FUN_021DF85C
	ldrb r0, [r4, #0xa]
	ldr r4, _021D2568 ; =0x00000239
	adds r1, r4, #0
	bl FUN_021DF39C
	movs r0, #1
	bl FUN_021DFC78
	subs r4, #0xe5
	adds r0, r5, r4
_021D251C:
	bl FUN_021D3758
	b _021D24AC
_021D2522:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2560
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2560
	ldrb r0, [r4, #8]
	adds r2, r5, #0
	movs r7, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r7, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #9]
	adds r5, #0x48
	adds r1, r0, #0
	muls r1, r7, r1
	adds r0, r5, r1
	bl FUN_021D39CC
	b _021D24AC
_021D255A:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D2560:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D2568: .word 0x00000239
	thumb_func_end FUN_021D2414

	thumb_func_start FUN_021D256C
FUN_021D256C: ; 0x021D256C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	str r1, [sp, #0xc]
	adds r4, r7, #0
	ldr r1, [r1]
	adds r4, #0xf0
	cmp r1, #4
	bls _021D2580
	b _021D26FA
_021D2580:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D258C: ; jump table
	.short _021D2596 - _021D258C - 2 ; case 0
	.short _021D264C - _021D258C - 2 ; case 1
	.short _021D2660 - _021D258C - 2 ; case 2
	.short _021D26A0 - _021D258C - 2 ; case 3
	.short _021D26F4 - _021D258C - 2 ; case 4
_021D2596:
	movs r0, #3
	strb r0, [r4, #0xf]
	movs r0, #5
	strb r0, [r4, #0x10]
	movs r0, #7
	strb r0, [r4, #0x11]
	movs r6, #0
	movs r0, #0x4d
	strb r6, [r4, #0x15]
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	bl FUN_0219C8A0
	adds r1, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	movs r2, #0
	bl FUN_0219C910
	strb r0, [r4, #0x16]
	adds r0, r4, #0
	str r0, [sp, #0x14]
	adds r0, #0x15
	str r0, [sp, #0x14]
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x18]
_021D25D0:
	adds r5, r4, r6
	movs r0, #0x4d
	lsls r0, r0, #2
	ldrb r1, [r5, #0xf]
	ldr r0, [r7, r0]
	bl FUN_0219C784
	strb r0, [r5, #0xc]
	lsls r0, r6, #2
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x18]
	ldrb r1, [r5, #0xc]
	ldr r0, [r7, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #0x10]
	str r0, [r4, r1]
	bl FUN_021BAC80
	strb r0, [r5, #0x12]
	ldr r0, [sp, #0x10]
	ldr r0, [r4, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021D260E
	ldr r0, [sp, #0x14]
	ldrb r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #0x14]
	strb r1, [r0]
_021D260E:
	adds r6, r6, #1
	cmp r6, #3
	blo _021D25D0
	ldrb r1, [r4, #0x15]
	adds r0, r7, #0
	bl FUN_021D2DA4
	adds r1, r0, #0
	ldrb r0, [r4, #0x12]
	movs r2, #4
	str r0, [sp]
	ldrb r0, [r4, #0x13]
	str r0, [sp, #4]
	ldrb r0, [r4, #0x14]
	str r0, [sp, #8]
	ldrb r3, [r4, #0x16]
	ldr r0, [r7, #0x34]
	bl FUN_021D4F00
	ldr r1, [r7, #0x34]
	adds r0, r7, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
_021D2640:
	ldr r0, [sp, #0xc]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #0xc]
	str r1, [r0]
	b _021D26FA
_021D264C:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D26FA
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D3758
	b _021D2640
_021D2660:
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xf]
	bl FUN_021DF85C
	ldrb r0, [r4, #0x15]
	cmp r0, #1
	bls _021D267E
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0x10]
	bl FUN_021DF85C
_021D267E:
	ldrb r0, [r4, #0x15]
	cmp r0, #2
	bls _021D2690
	ldr r0, [r4, #8]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0x11]
	bl FUN_021DF85C
_021D2690:
	ldrb r0, [r4, #0xf]
	ldr r1, _021D2700 ; =0x00000239
	bl FUN_021DF39C
	movs r0, #1
	bl FUN_021DFC78
	b _021D2640
_021D26A0:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D26FA
	bl FUN_021DF828
	cmp r0, #0
	bne _021D26FA
	ldrb r0, [r4, #0xc]
	adds r2, r7, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0x15]
	cmp r0, #1
	bls _021D26DE
	ldrb r0, [r4, #0xd]
	adds r2, r7, #0
	adds r2, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
_021D26DE:
	ldrb r0, [r4, #0x15]
	cmp r0, #2
	bls _021D26F2
	ldrb r1, [r4, #0xe]
	movs r0, #0xc
	adds r7, #0x48
	muls r0, r1, r0
	adds r0, r7, r0
	bl FUN_021D39CC
_021D26F2:
	b _021D2640
_021D26F4:
	add sp, #0x1c
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D26FA:
	movs r0, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D2700: .word 0x00000239
	thumb_func_end FUN_021D256C

	thumb_func_start FUN_021D2704
FUN_021D2704: ; 0x021D2704
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r6, r1, #0
	adds r5, r0, #0
	adds r4, r5, #0
	ldr r1, [r6]
	adds r4, #0xf0
	cmp r1, #5
	bls _021D2718
	b _021D281E
_021D2718:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D2724: ; jump table
	.short _021D2730 - _021D2724 - 2 ; case 0
	.short _021D275C - _021D2724 - 2 ; case 1
	.short _021D276C - _021D2724 - 2 ; case 2
	.short _021D27D8 - _021D2724 - 2 ; case 3
	.short _021D27F2 - _021D2724 - 2 ; case 4
	.short _021D2818 - _021D2724 - 2 ; case 5
_021D2730:
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	bl FUN_0219C8A0
	strb r0, [r4, #7]
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	add r5, sp, #4
	ldrb r2, [r4, #7]
	adds r1, r5, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r5, #0
	bl FUN_021DFC54
_021D2754:
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
	b _021D281E
_021D275C:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D281E
	ldr r0, _021D2824 ; =0x00000232
	bl FUN_021DF308
	b _021D2754
_021D276C:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D281E
	movs r0, #0
	bl FUN_021DFC94
	cmp r0, #0
	bne _021D281E
	movs r7, #0x4d
	movs r0, #0
	lsls r7, r7, #2
	strb r0, [r4, #5]
	ldr r0, [r5, r7]
	bl FUN_0219C8A0
	strb r0, [r4, #7]
	ldrb r1, [r4, #5]
	ldr r0, [r5, r7]
	bl FUN_0219C784
	strb r0, [r4, #4]
	adds r0, r7, #4
	ldrb r1, [r4, #4]
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BAC80
	strb r0, [r4, #6]
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #5]
	bl FUN_021DF85C
	movs r0, #0x8d
	lsls r0, r0, #2
	bl FUN_021DF308
	ldrb r3, [r4, #6]
	ldr r0, [r5, #0x34]
	movs r1, #0xb
	movs r2, #1
	bl FUN_021D4F00
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D2754
_021D27D8:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D281E
	movs r0, #0
	bl FUN_021DFC78
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D3758
	b _021D2754
_021D27F2:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r5, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D281E
	bl FUN_021DF828
	cmp r0, #0
	bne _021D281E
	ldrb r1, [r4, #4]
	movs r0, #0xc
	adds r5, #0x48
	muls r0, r1, r0
	adds r0, r5, r0
	bl FUN_021D39CC
	b _021D2754
_021D2818:
	add sp, #0x24
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D281E:
	movs r0, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D2824: .word 0x00000232
	thumb_func_end FUN_021D2704

	thumb_func_start FUN_021D2828
FUN_021D2828: ; 0x021D2828
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4d
	adds r5, r0, #0
	lsls r7, r7, #2
	ldr r0, [r5, r7]
	adds r4, r1, #0
	bl FUN_0219C8A0
	adds r6, r0, #0
	ldr r0, [r5, r7]
	bl FUN_0219C8AC
	adds r3, r0, #0
	cmp r3, #4
	bne _021D2852
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D2860
	pop {r3, r4, r5, r6, r7, pc}
_021D2852:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D29FC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D2828

	thumb_func_start FUN_021D2860
FUN_021D2860: ; 0x021D2860
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r7, r0, #0
	str r1, [sp, #4]
	adds r4, r7, #0
	ldr r1, [r1]
	adds r4, #0xf0
	cmp r1, #5
	bhi _021D28D2
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D287E: ; jump table
	.short _021D288A - _021D287E - 2 ; case 0
	.short _021D28AE - _021D287E - 2 ; case 1
	.short _021D28BE - _021D287E - 2 ; case 2
	.short _021D2992 - _021D287E - 2 ; case 3
	.short _021D29AC - _021D287E - 2 ; case 4
	.short _021D29EA - _021D287E - 2 ; case 5
_021D288A:
	strb r2, [r4, #0xf]
	movs r1, #0
	str r1, [sp]
	add r5, sp, #0x14
	ldrb r2, [r4, #0xf]
	adds r1, r5, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r5, #0
	bl FUN_021DFC54
_021D28A2:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [r0]
	b _021D29F0
_021D28AE:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D28D2
	ldr r0, _021D29F8 ; =0x00000232
	bl FUN_021DF308
	b _021D28A2
_021D28BE:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D28D2
	movs r0, #0
	movs r6, #0
	bl FUN_021DFC94
	cmp r0, #0
	beq _021D28D4
_021D28D2:
	b _021D29F0
_021D28D4:
	movs r0, #2
	strb r0, [r4, #0xa]
	movs r0, #4
	strb r0, [r4, #0xb]
	movs r0, #0x4d
	strb r6, [r4, #0xe]
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	bl FUN_0219C8A0
	strb r0, [r4, #0xf]
	adds r0, r4, #0
	str r0, [sp, #0xc]
	adds r0, #0xe
	str r0, [sp, #0xc]
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x10]
_021D28FA:
	adds r5, r4, r6
	movs r0, #0x4d
	lsls r0, r0, #2
	ldrb r1, [r5, #0xa]
	ldr r0, [r7, r0]
	bl FUN_0219C784
	strb r0, [r5, #8]
	lsls r0, r6, #2
	str r0, [sp, #8]
	ldr r0, [sp, #0x10]
	ldrb r1, [r5, #8]
	ldr r0, [r7, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #8]
	cmp r0, #0
	str r0, [r4, r1]
	beq _021D293C
	bl FUN_021BAC80
	strb r0, [r5, #0xc]
	ldr r0, [sp, #8]
	ldr r0, [r4, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021D293C
	ldr r0, [sp, #0xc]
	ldrb r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #0xc]
	strb r1, [r0]
_021D293C:
	adds r6, r6, #1
	cmp r6, #2
	blo _021D28FA
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xa]
	bl FUN_021DF85C
	ldrb r0, [r4, #0xe]
	cmp r0, #1
	bls _021D2960
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xb]
	bl FUN_021DF85C
_021D2960:
	movs r0, #0x8d
	lsls r0, r0, #2
	bl FUN_021DF308
	ldrb r0, [r4, #0xe]
	movs r1, #0xc
	cmp r0, #2
	beq _021D2972
	movs r1, #0xb
_021D2972:
	ldrb r0, [r4, #0xd]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r0, [sp]
	ldrb r3, [r4, #0xc]
	ldr r0, [r7, #0x34]
	movs r2, #2
	bl FUN_021D4F00
	ldr r1, [r7, #0x34]
	adds r0, r7, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D28A2
_021D2992:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D29F0
	movs r0, #0
	bl FUN_021DFC78
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D3758
	b _021D28A2
_021D29AC:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D29F0
	bl FUN_021DF828
	cmp r0, #0
	bne _021D29F0
	ldrb r0, [r4, #8]
	adds r2, r7, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0xe]
	cmp r0, #1
	bls _021D29E8
	ldrb r0, [r4, #9]
	adds r7, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r7, r1
	bl FUN_021D39CC
_021D29E8:
	b _021D28A2
_021D29EA:
	add sp, #0x34
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D29F0:
	movs r0, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_021D29F8: .word 0x00000232
	thumb_func_end FUN_021D2860

	thumb_func_start FUN_021D29FC
FUN_021D29FC: ; 0x021D29FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	str r3, [sp, #8]
	adds r6, r0, #0
	str r1, [sp, #4]
	adds r7, r6, #0
	ldr r1, [r1]
	adds r4, r2, #0
	adds r7, #0xf0
	cmp r1, #6
	bhi _021D2A74
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D2A1E: ; jump table
	.short _021D2A2C - _021D2A1E - 2 ; case 0
	.short _021D2A50 - _021D2A1E - 2 ; case 1
	.short _021D2A60 - _021D2A1E - 2 ; case 2
	.short _021D2B0C - _021D2A1E - 2 ; case 3
	.short _021D2B30 - _021D2A1E - 2 ; case 4
	.short _021D2B76 - _021D2A1E - 2 ; case 5
	.short _021D2B80 - _021D2A1E - 2 ; case 6
_021D2A2C:
	ldr r1, [sp, #8]
	cmp r4, r1
	bhs _021D2A3A
	movs r1, #0
	str r1, [sp]
	add r1, sp, #0x18
	b _021D2A44
_021D2A3A:
	movs r1, #0
	str r1, [sp]
	ldr r2, [sp, #8]
	add r1, sp, #0x18
	adds r3, r4, #0
_021D2A44:
	bl FUN_021D40CC
	add r0, sp, #0x18
	bl FUN_021DFC54
_021D2A4E:
	b _021D2B24
_021D2A50:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2A74
	ldr r0, _021D2BC4 ; =0x00000233
	bl FUN_021DF308
	b _021D2A4E
_021D2A60:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2A74
	movs r0, #0
	movs r4, #0
	bl FUN_021DFC94
	cmp r0, #0
	beq _021D2A76
_021D2A74:
	b _021D2BBC
_021D2A76:
	movs r0, #2
	strb r0, [r7, #0xa]
	movs r0, #4
	strb r0, [r7, #0xb]
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	bl FUN_0219C8A0
	strb r0, [r7, #0xf]
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	bl FUN_0219C890
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x14]
_021D2AA6:
	adds r5, r7, r4
	movs r0, #0x4d
	lsls r0, r0, #2
	ldrb r1, [r5, #0xa]
	ldr r0, [r6, r0]
	bl FUN_0219C784
	strb r0, [r5, #8]
	lsls r0, r4, #2
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x14]
	ldrb r1, [r5, #8]
	ldr r0, [r6, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #0x10]
	str r0, [r7, r1]
	bl FUN_021BAC80
	adds r4, r4, #1
	strb r0, [r5, #0xc]
	cmp r4, #2
	blo _021D2AA6
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	ldr r1, [sp, #8]
	bl FUN_0219D8C8
	movs r1, #0xe
	cmp r0, #0
	bne _021D2AE8
	movs r1, #0x11
_021D2AE8:
	ldr r0, [sp, #0xc]
	lsls r1, r1, #0x10
	adds r0, r7, r0
	ldrb r0, [r0, #0xc]
	lsrs r1, r1, #0x10
	movs r2, #2
	str r0, [sp]
	ldr r0, [r6, #0x34]
	ldr r3, [sp, #8]
_021D2AFA:
	bl FUN_021D4F00
	ldr r1, [r6, #0x34]
	adds r0, r6, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D2B24
_021D2B0C:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2BBC
	movs r0, #0
	bl FUN_021DFC78
_021D2B1A:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r6, r0
	bl FUN_021D3758
_021D2B24:
	ldr r0, [sp, #4]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [r0]
	b _021D2BBC
_021D2B30:
	movs r4, #0x55
	lsls r4, r4, #2
	adds r0, r6, r4
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2BBC
	adds r0, r4, #0
	subs r0, #0x20
	ldr r0, [r6, r0]
	bl FUN_0219C890
	adds r5, r0, #0
	ldr r0, [r7]
	bl FUN_021BB0A4
	ldrb r1, [r7, #0xa]
	bl FUN_021DF85C
	ldr r0, [r7, #4]
	bl FUN_021BB0A4
	ldrb r1, [r7, #0xb]
	bl FUN_021DF85C
	adds r4, #0xe0
	adds r0, r4, #0
	bl FUN_021DF308
	adds r3, r7, r5
	ldr r0, [r6, #0x34]
	movs r1, #0xb
	movs r2, #1
	ldrb r3, [r3, #0xc]
	b _021D2AFA
_021D2B76:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2BBC
	b _021D2B1A
_021D2B80:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r6, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2BBC
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2BBC
	ldrb r0, [r7, #8]
	adds r2, r6, #0
	movs r4, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r4, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r7, #9]
	adds r6, #0x48
	adds r1, r0, #0
	muls r1, r4, r1
	adds r0, r6, r1
	bl FUN_021D39CC
	add sp, #0x38
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D2BBC:
	movs r0, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D2BC4: .word 0x00000233
	thumb_func_end FUN_021D29FC

	thumb_func_start FUN_021D2BC8
FUN_021D2BC8: ; 0x021D2BC8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	adds r7, r0, #0
	str r1, [sp, #8]
	adds r4, r7, #0
	ldr r1, [r1]
	adds r4, #0xf0
	cmp r1, #5
	bhi _021D2C46
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D2BE6: ; jump table
	.short _021D2BF2 - _021D2BE6 - 2 ; case 0
	.short _021D2C22 - _021D2BE6 - 2 ; case 1
	.short _021D2C32 - _021D2BE6 - 2 ; case 2
	.short _021D2D26 - _021D2BE6 - 2 ; case 3
	.short _021D2D40 - _021D2BE6 - 2 ; case 4
	.short _021D2D94 - _021D2BE6 - 2 ; case 5
_021D2BF2:
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	bl FUN_0219C8A0
	strb r0, [r4, #0x16]
	movs r0, #0
	str r0, [sp]
	add r5, sp, #0x18
	ldrb r2, [r4, #0x16]
	adds r0, r7, #0
	adds r1, r5, #0
	movs r3, #4
	bl FUN_021D40CC
	adds r0, r5, #0
	bl FUN_021DFC54
_021D2C16:
	ldr r0, [sp, #8]
	ldr r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #8]
	str r1, [r0]
	b _021D2D9A
_021D2C22:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2C46
	ldr r0, _021D2DA0 ; =0x00000232
	bl FUN_021DF308
	b _021D2C16
_021D2C32:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2C46
	movs r0, #0
	movs r6, #0
	bl FUN_021DFC94
	cmp r0, #0
	beq _021D2C48
_021D2C46:
	b _021D2D9A
_021D2C48:
	movs r0, #2
	strb r0, [r4, #0xf]
	movs r0, #4
	strb r0, [r4, #0x10]
	movs r0, #6
	strb r0, [r4, #0x11]
	movs r0, #0x4d
	strb r6, [r4, #0x15]
	lsls r0, r0, #2
	ldr r0, [r7, r0]
	bl FUN_0219C8A0
	strb r0, [r4, #0x16]
	adds r0, r4, #0
	str r0, [sp, #0x10]
	adds r0, #0x15
	str r0, [sp, #0x10]
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	str r0, [sp, #0x14]
_021D2C72:
	adds r5, r4, r6
	movs r0, #0x4d
	lsls r0, r0, #2
	ldrb r1, [r5, #0xf]
	ldr r0, [r7, r0]
	bl FUN_0219C784
	strb r0, [r5, #0xc]
	lsls r0, r6, #2
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x14]
	ldrb r1, [r5, #0xc]
	ldr r0, [r7, r0]
	bl FUN_0219D1C8
	ldr r1, [sp, #0xc]
	str r0, [r4, r1]
	bl FUN_021BAC80
	strb r0, [r5, #0x12]
	ldr r0, [sp, #0xc]
	ldr r0, [r4, r0]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021D2CB0
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	strb r1, [r0]
_021D2CB0:
	adds r6, r6, #1
	cmp r6, #3
	blo _021D2C72
	ldr r0, [r4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0xf]
	bl FUN_021DF85C
	ldrb r0, [r4, #0x15]
	cmp r0, #1
	bls _021D2CD4
	ldr r0, [r4, #4]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0x10]
	bl FUN_021DF85C
_021D2CD4:
	ldrb r0, [r4, #0x15]
	cmp r0, #2
	bls _021D2CE6
	ldr r0, [r4, #8]
	bl FUN_021BB0A4
	ldrb r1, [r4, #0x11]
	bl FUN_021DF85C
_021D2CE6:
	movs r0, #0x8d
	lsls r0, r0, #2
	bl FUN_021DF308
	ldrb r0, [r4, #0x15]
	cmp r0, #3
	bne _021D2CF8
	movs r1, #0xd
	b _021D2D06
_021D2CF8:
	cmp r0, #2
	bne _021D2D00
	movs r0, #0xc
	b _021D2D02
_021D2D00:
	movs r0, #0xb
_021D2D02:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_021D2D06:
	ldrb r0, [r4, #0x13]
	movs r2, #3
	str r0, [sp]
	ldrb r0, [r4, #0x14]
	str r0, [sp, #4]
	ldrb r3, [r4, #0x12]
	ldr r0, [r7, #0x34]
	bl FUN_021D4F00
	ldr r1, [r7, #0x34]
	adds r0, r7, #0
	movs r2, #0x50
	movs r3, #0
	bl FUN_021D2E60
	b _021D2C16
_021D2D26:
	bl FUN_021D2F1C
	cmp r0, #0
	beq _021D2D9A
	movs r0, #0
	bl FUN_021DFC78
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D3758
	b _021D2C16
_021D2D40:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r7, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D2D9A
	bl FUN_021DF828
	cmp r0, #0
	bne _021D2D9A
	ldrb r0, [r4, #0xc]
	adds r2, r7, #0
	movs r5, #0xc
	adds r1, r0, #0
	adds r2, #0x48
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
	ldrb r0, [r4, #0x15]
	cmp r0, #1
	bls _021D2D7E
	ldrb r0, [r4, #0xd]
	adds r2, r7, #0
	adds r2, #0x48
	adds r1, r0, #0
	muls r1, r5, r1
	adds r0, r2, r1
	bl FUN_021D39CC
_021D2D7E:
	ldrb r0, [r4, #0x15]
	cmp r0, #1
	bls _021D2D92
	ldrb r1, [r4, #0xe]
	movs r0, #0xc
	adds r7, #0x48
	muls r0, r1, r0
	adds r0, r7, r0
	bl FUN_021D39CC
_021D2D92:
	b _021D2C16
_021D2D94:
	add sp, #0x38
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D2D9A:
	movs r0, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D2DA0: .word 0x00000232
	thumb_func_end FUN_021D2BC8

	thumb_func_start FUN_021D2DA4
FUN_021D2DA4: ; 0x021D2DA4
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0x4d
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bl FUN_0219BF14
	cmp r0, #3
	bhi _021D2DCA
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D2DC2: ; jump table
	.short _021D2DCA - _021D2DC2 - 2 ; case 0
	.short _021D2DD8 - _021D2DC2 - 2 ; case 1
	.short _021D2DD8 - _021D2DC2 - 2 ; case 2
	.short _021D2DEA - _021D2DC2 - 2 ; case 3
_021D2DCA:
	movs r0, #1
	cmp r4, #1
	beq _021D2DD2
	movs r0, #2
_021D2DD2:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, pc}
_021D2DD8:
	cmp r4, #1
	bne _021D2DE0
	movs r0, #0xe
	pop {r4, pc}
_021D2DE0:
	movs r0, #0xf
	cmp r4, #2
	beq _021D2DFA
	movs r0, #0x10
	pop {r4, pc}
_021D2DEA:
	cmp r4, #1
	bne _021D2DF2
	movs r0, #0x11
	pop {r4, pc}
_021D2DF2:
	movs r0, #0x12
	cmp r4, #2
	beq _021D2DFA
	movs r0, #0x13
_021D2DFA:
	pop {r4, pc}
	thumb_func_end FUN_021D2DA4

	thumb_func_start FUN_021D2DFC
FUN_021D2DFC: ; 0x021D2DFC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	movs r1, #0xc
	adds r4, r0, #0
	bl FUN_021D45B8
	adds r5, r0, #0
	lsls r1, r5, #0x18
	ldr r0, [r4, #4]
	lsrs r1, r1, #0x18
	bl FUN_02047168
	lsls r2, r5, #0x18
	movs r0, #1
	movs r1, #9
	lsrs r2, r2, #0x18
	movs r7, #1
	bl FUN_02023314
	ldr r0, [r4, #0x24]
	movs r1, #0
	str r0, [sp]
	ldr r0, [r4, #4]
	movs r2, #0
	adds r3, r6, #0
	movs r5, #0
	bl FUN_02021D28
	ldr r0, [r4]
	bl FUN_02048270
	ldr r0, _021D2E5C ; =0x0000013F
	adds r1, r0, #0
	strb r5, [r4, r0]
	adds r1, #9
	strh r5, [r4, r1]
	adds r1, r0, #0
	adds r1, #0xb
	strh r5, [r4, r1]
	adds r1, r0, #0
	adds r1, #0xd
	strh r5, [r4, r1]
	subs r1, r0, #1
	strb r7, [r4, r1]
	adds r0, r0, #2
	strb r5, [r4, r0]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D2E5C: .word 0x0000013F
	thumb_func_end FUN_021D2DFC

	thumb_func_start FUN_021D2E60
FUN_021D2E60: ; 0x021D2E60
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	str r1, [sp, #0x1c]
	movs r1, #0xc
	adds r5, r0, #0
	adds r6, r2, #0
	str r3, [sp, #0x20]
	bl FUN_021D45B8
	adds r7, r0, #0
	lsls r1, r7, #0x18
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x18
	bl FUN_02047168
	lsls r2, r7, #0x18
	movs r0, #1
	movs r1, #9
	lsrs r2, r2, #0x18
	bl FUN_02023314
	movs r4, #0x4d
	lsls r4, r4, #2
	ldr r0, [r5, r4]
	bl FUN_0219BE20
	ldr r1, [r5, #0x24]
	ldr r3, [sp, #0x1c]
	str r1, [sp]
	str r0, [sp, #4]
	ldr r0, [r5, #0x2c]
	movs r1, #0
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r0, #8
	ldrh r0, [r5, r0]
	movs r2, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x20]
	str r7, [sp, #0x14]
	str r0, [sp, #0x18]
	ldr r0, [r5]
	bl FUN_020222C0
	str r0, [r5, #0x30]
	bl FUN_020223BC
	adds r1, r4, #0
	adds r1, #0xb
	movs r0, #0
	strb r0, [r5, r1]
	adds r1, r4, #0
	adds r1, #0xa
	strb r0, [r5, r1]
	cmp r6, #0xff
	bne _021D2EE4
	movs r0, #0x50
	movs r1, #0x50
	adds r0, #0xf8
	strh r1, [r5, r0]
	adds r1, #0xfc
	movs r0, #0
	strh r0, [r5, r1]
	b _021D2EEE
_021D2EE4:
	adds r0, r4, #0
	adds r0, #0x14
	strh r6, [r5, r0]
	adds r4, #0x18
	strh r6, [r5, r4]
_021D2EEE:
	movs r0, #0x52
	lsls r0, r0, #2
	ldrh r2, [r5, r0]
	adds r1, r0, #2
	subs r0, r0, #7
	strh r2, [r5, r1]
	movs r1, #0
	strb r1, [r5, r0]
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D2E60

	thumb_func_start FUN_021D2F04
FUN_021D2F04: ; 0x021D2F04
	ldr r1, _021D2F18 ; =0x00000141
	ldrb r2, [r0, r1]
	cmp r2, #0
	beq _021D2F14
	movs r2, #0
	strb r2, [r0, r1]
	movs r0, #1
	bx lr
_021D2F14:
	movs r0, #0
	bx lr
	.align 2, 0
_021D2F18: .word 0x00000141
	thumb_func_end FUN_021D2F04

	thumb_func_start FUN_021D2F1C
FUN_021D2F1C: ; 0x021D2F1C
	push {r3, r4, r5, lr}
	ldr r5, _021D30CC ; =0x0000013F
	adds r4, r0, #0
	ldrb r1, [r4, r5]
	cmp r1, #7
	bls _021D2F2A
	b _021D30C2
_021D2F2A:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D2F36: ; jump table
	.short _021D2F46 - _021D2F36 - 2 ; case 0
	.short _021D2F62 - _021D2F36 - 2 ; case 1
	.short _021D2F96 - _021D2F36 - 2 ; case 2
	.short _021D3032 - _021D2F36 - 2 ; case 3
	.short _021D3062 - _021D2F36 - 2 ; case 4
	.short _021D307E - _021D2F36 - 2 ; case 5
	.short _021D30B0 - _021D2F36 - 2 ; case 6
	.short _021D30C2 - _021D2F36 - 2 ; case 7
_021D2F46:
	movs r1, #0xc
	bl FUN_021D45B8
	subs r1, r5, #1
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0x15
	ldrb r1, [r4, r1]
	adds r0, r4, r0
	bl FUN_021D3788
	ldrb r0, [r4, r5]
	adds r0, r0, #1
	strb r0, [r4, r5]
_021D2F62:
	movs r5, #0x55
	lsls r5, r5, #2
	adds r0, r4, r5
	bl FUN_021D37D8
	cmp r0, #0
	bne _021D2F72
	b _021D30C6
_021D2F72:
	adds r0, r5, #0
	subs r0, #0x16
	ldrb r0, [r4, r0]
	cmp r0, #0
	beq _021D2F84
	movs r0, #6
	subs r5, #0x15
_021D2F80:
	strb r0, [r4, r5]
	b _021D30C6
_021D2F84:
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _021D2F8E
	bl FUN_020223D0
_021D2F8E:
	ldr r0, _021D30CC ; =0x0000013F
	ldrb r1, [r4, r0]
	adds r1, r1, #1
	strb r1, [r4, r0]
_021D2F96:
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _021D302A
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0219BF24
	cmp r0, #0
	bne _021D2FE6
	bl FUN_0203DF4C
	movs r1, #3
	tst r0, r1
	bne _021D2FBC
	bl FUN_0203DA58
	cmp r0, #0
	beq _021D2FD6
_021D2FBC:
	ldr r0, [r4, #0x30]
	bl FUN_02022484
	cmp r0, #0
	bne _021D2FE6
	movs r0, #2
	bl FUN_02017C50
	adds r1, r0, #0
	ldr r0, [r4, #0x30]
	bl FUN_0202243C
	b _021D2FE6
_021D2FD6:
	ldr r0, [r4, #0x30]
	bl FUN_02022484
	cmp r0, #0
	beq _021D2FE6
	ldr r0, [r4, #0x30]
	bl FUN_02022468
_021D2FE6:
	ldr r0, [r4, #0x30]
	bl FUN_020223E0
	movs r5, #0x51
	lsls r5, r5, #2
	str r0, [r4, r5]
	cmp r0, #0
	beq _021D30C6
	adds r0, r5, #0
	subs r0, #0x10
	ldr r0, [r4, r0]
	bl FUN_0219BF24
	cmp r0, #0
	bne _021D3008
	movs r1, #3
	b _021D300A
_021D3008:
	movs r1, #4
_021D300A:
	subs r0, r5, #5
	strb r1, [r4, r0]
	movs r1, #0x51
	lsls r1, r1, #2
	ldr r0, [r4, r1]
	cmp r0, #2
	bne _021D30C6
	adds r0, r1, #0
	adds r0, #8
	ldrh r2, [r4, r0]
	adds r0, r1, #4
	strh r2, [r4, r0]
	movs r2, #1
	subs r0, r1, #3
	strb r2, [r4, r0]
	b _021D30C6
_021D302A:
	ldr r0, _021D30CC ; =0x0000013F
	movs r1, #6
_021D302E:
	strb r1, [r4, r0]
	b _021D30C6
_021D3032:
	bl FUN_0203DF28
	movs r1, #3
	tst r0, r1
	bne _021D3044
	bl FUN_0203DA74
	cmp r0, #0
	beq _021D304C
_021D3044:
	movs r0, #0x52
	movs r1, #0
	lsls r0, r0, #2
	strh r1, [r4, r0]
_021D304C:
	movs r0, #0x52
	lsls r0, r0, #2
	ldrh r1, [r4, r0]
	cmp r1, #0
	beq _021D305C
	subs r1, r1, #1
	strh r1, [r4, r0]
	b _021D30C6
_021D305C:
	movs r1, #5
	subs r0, #9
	b _021D302E
_021D3062:
	adds r0, r5, #0
	adds r0, #9
	ldrh r0, [r4, r0]
	cmp r0, #0
	beq _021D307A
	adds r0, r5, #0
	adds r0, #9
	ldrh r0, [r4, r0]
	subs r0, r0, #1
_021D3074:
	adds r5, #9
	strh r0, [r4, r5]
	b _021D30C6
_021D307A:
	movs r0, #5
	b _021D2F80
_021D307E:
	adds r0, r5, #5
	ldr r0, [r4, r0]
	cmp r0, #2
	bne _021D3098
	bl FUN_02023304
	ldr r0, [r4, #0x30]
	bl FUN_020223F8
	movs r0, #0
	str r0, [r4, #0x30]
	movs r0, #6
	b _021D2F80
_021D3098:
	ldr r0, [r4, #0x30]
	bl FUN_020223E8
	ldr r0, _021D30D0 ; =0x00000547
	bl FUN_02006254
	movs r0, #2
	strb r0, [r4, r5]
	adds r0, r5, #0
	adds r0, #0xb
	ldrh r0, [r4, r0]
	b _021D3074
_021D30B0:
	ldr r0, _021D30D0 ; =0x00000547
	bl FUN_020062C4
	cmp r0, #0
	bne _021D30C6
	movs r0, #7
	strb r0, [r4, r5]
	movs r0, #1
	pop {r3, r4, r5, pc}
_021D30C2:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021D30C6:
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_021D30CC: .word 0x0000013F
_021D30D0: .word 0x00000547
	thumb_func_end FUN_021D2F1C

	thumb_func_start FUN_021D30D4
FUN_021D30D4: ; 0x021D30D4
	push {r4, r5}
	adds r4, r0, #0
	adds r4, #0xf0
	adds r5, r0, #0
	str r1, [r4, #4]
	ldr r1, [sp, #0xc]
	adds r5, #0xf0
	strh r3, [r5]
	str r2, [r4, #8]
	strb r1, [r4, #0xc]
	add r1, sp, #8
	ldrb r1, [r1, #8]
	movs r3, #0
	ldr r2, _021D3110 ; =FUN_021D3114
	strb r1, [r4, #0xd]
	ldr r1, [sp, #8]
	str r1, [r4, #0x10]
	adds r1, r0, #0
	adds r1, #0xe0
	str r3, [r1]
	adds r1, r0, #0
	adds r1, #0xe4
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xe8
	str r0, [r1]
	adds r0, #0xec
	str r3, [r0]
	pop {r4, r5}
	bx lr
	.align 2, 0
_021D3110: .word FUN_021D3114
	thumb_func_end FUN_021D30D4

	thumb_func_start FUN_021D3114
FUN_021D3114: ; 0x021D3114
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	cmp r0, #0
	beq _021D312A
	cmp r0, #1
	beq _021D313C
	cmp r0, #2
	beq _021D315A
	b _021D3168
_021D312A:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r4, r0
	bl FUN_021D3758
_021D3134:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D316C
_021D313C:
	movs r0, #0x55
	lsls r0, r0, #2
	adds r0, r4, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D316C
	adds r0, r4, #0
	bl FUN_021D45D0
	adds r4, #0xf0
	adds r0, r4, #0
	bl FUN_021DF4A0
	b _021D3134
_021D315A:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D316C
	bl FUN_02006280
	b _021D3134
_021D3168:
	movs r0, #1
	pop {r3, r4, r5, pc}
_021D316C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D3114

	thumb_func_start FUN_021D3170
FUN_021D3170: ; 0x021D3170
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xe0
	ldr r2, [r0]
	cmp r2, #0
	beq _021D319C
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D3198
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xe0
	adds r4, #0xec
	str r1, [r0]
	str r1, [r4]
_021D3198:
	movs r0, #0
	pop {r4, pc}
_021D319C:
	adds r0, r4, #0
	adds r0, #0xe4
	ldr r2, [r0]
	cmp r2, #0
	beq _021D31C4
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D31C0
	movs r0, #0
	adds r4, #0xe4
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
_021D31C0:
	movs r0, #0
	pop {r4, pc}
_021D31C4:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D3170

	thumb_func_start FUN_021D31C8
FUN_021D31C8: ; 0x021D31C8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x4e
	str r2, [sp]
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r7, r1, #0
	adds r4, r3, #0
	bl FUN_0219D1C8
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r6, r0, #0
	movs r0, #0x4e
	lsls r0, r0, #2
	subs r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r7, #0
	bl FUN_0219C71C
	adds r5, r0, #0
	cmp r4, #0
	bne _021D3208
	adds r1, r6, #0
	bl FUN_021DFB04
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_021DF5A0
	pop {r3, r4, r5, r6, r7, pc}
_021D3208:
	adds r1, r6, #0
	bl FUN_021DFB20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D31C8

	thumb_func_start FUN_021D3210
FUN_021D3210: ; 0x021D3210
	push {r4, lr}
	bl FUN_021DF828
	adds r4, r0, #0
	bl FUN_021DFB98
	orrs r0, r4
	bne _021D3224
	movs r0, #1
	pop {r4, pc}
_021D3224:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021D3210

	thumb_func_start FUN_021D3228
FUN_021D3228: ; 0x021D3228
	push {r4, lr}
	adds r4, r2, #0
	movs r2, #0x4d
	lsls r2, r2, #2
	ldr r0, [r0, r2]
	bl FUN_0219C71C
	adds r1, r4, #0
	bl FUN_021DF5A0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D3228

	thumb_func_start FUN_021D3240
FUN_021D3240: ; 0x021D3240
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D324E
	movs r0, #1
	pop {r3, pc}
_021D324E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D3240

	thumb_func_start FUN_021D3254
FUN_021D3254: ; 0x021D3254
	push {r3, r4, r5, lr}
	adds r4, r2, #0
	movs r2, #0x4d
	lsls r2, r2, #2
	ldr r0, [r0, r2]
	bl FUN_0219C71C
	adds r5, r0, #0
	bl FUN_021DFAEC
	cmp r4, #0
	bne _021D3274
	adds r0, r5, #0
	bl FUN_021DF658
	pop {r3, r4, r5, pc}
_021D3274:
	adds r0, r5, #0
	bl FUN_021DF878
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D3254

	thumb_func_start FUN_021D327C
FUN_021D327C: ; 0x021D327C
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D328A
	movs r0, #1
	pop {r3, pc}
_021D328A:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D327C

	thumb_func_start FUN_021D3290
FUN_021D3290: ; 0x021D3290
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0x4d
	adds r5, r0, #0
	lsls r7, r7, #2
	ldr r0, [r5, r7]
	adds r4, r1, #0
	bl FUN_0219C71C
	adds r6, r0, #0
	adds r0, r7, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_0219D1C8
	bl FUN_021BB0A4
	adds r1, r6, #0
	bl FUN_021DF85C
	movs r0, #0xc
	adds r5, #0x48
	muls r0, r4, r0
	adds r0, r5, r0
	bl FUN_021D39CC
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D3290

	thumb_func_start FUN_021D32C4
FUN_021D32C4: ; 0x021D32C4
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D32D2
	movs r0, #1
	pop {r3, pc}
_021D32D2:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D32C4

	thumb_func_start FUN_021D32D8
FUN_021D32D8: ; 0x021D32D8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	cmp r3, #0
	bne _021D32E8
	cmp r4, #0
	bne _021D32F6
_021D32E8:
	adds r0, r6, #0
	bl FUN_021DFAEC
	adds r0, r6, #0
	bl FUN_021DF878
	pop {r4, r5, r6, pc}
_021D32F6:
	ldr r0, [r5, #0x2c]
	ldr r1, _021D3330 ; =FUN_021D3344
	movs r2, #0x10
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	adds r2, r5, #0
	movs r1, #0xc
	adds r2, #0x48
	muls r1, r6, r1
	strh r6, [r0, #6]
	adds r1, r2, r1
	adds r5, #0x42
	str r1, [r0]
	str r5, [r0, #0xc]
	cmp r4, #0
	bne _021D3320
	movs r4, #0x9b
	lsls r4, r4, #2
_021D3320:
	strh r4, [r0, #8]
	movs r1, #0
	strh r1, [r0, #4]
	ldr r1, [r0, #0xc]
	ldrb r0, [r1]
	adds r0, r0, #1
	strb r0, [r1]
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D3330: .word FUN_021D3344
	thumb_func_end FUN_021D32D8

	thumb_func_start FUN_021D3334
FUN_021D3334: ; 0x021D3334
	adds r0, #0x42
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D3340
	movs r0, #1
	bx lr
_021D3340:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021D3334

	thumb_func_start FUN_021D3344
FUN_021D3344: ; 0x021D3344
	push {r4, lr}
	adds r4, r1, #0
	ldrh r1, [r4, #4]
	cmp r1, #0
	beq _021D3358
	cmp r1, #1
	beq _021D3368
	cmp r1, #2
	beq _021D3384
	pop {r4, pc}
_021D3358:
	ldrh r0, [r4, #6]
	ldrh r1, [r4, #8]
	bl FUN_021DF39C
	ldrh r0, [r4, #4]
	adds r0, r0, #1
	strh r0, [r4, #4]
	pop {r4, pc}
_021D3368:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D3390
	ldrh r0, [r4, #6]
	bl FUN_021DFAEC
	ldrh r0, [r4, #6]
	bl FUN_021DF878
	ldrh r0, [r4, #4]
	adds r0, r0, #1
	strh r0, [r4, #4]
	pop {r4, pc}
_021D3384:
	ldr r2, [r4, #0xc]
	ldrb r1, [r2]
	subs r1, r1, #1
	strb r1, [r2]
	bl FUN_0203A89C
_021D3390:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D3344

	thumb_func_start FUN_021D3394
FUN_021D3394: ; 0x021D3394
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	ldr r0, [r5, #0x2c]
	ldr r1, _021D3408 ; =FUN_021D3420
	movs r2, #0xc
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	adds r1, r5, #0
	movs r2, #0xc
	adds r1, #0x48
	muls r2, r4, r2
	adds r1, r1, r2
	str r1, [r0]
	adds r1, r5, #0
	adds r1, #0x41
	str r1, [r0, #8]
	movs r2, #0
	strh r2, [r0, #4]
	ldrb r0, [r1]
	adds r2, r7, #0
	adds r0, r0, #1
	strb r0, [r1]
	movs r0, #0x4e
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r1, r6, #0
	bl FUN_0219D23C
	adds r6, r0, #0
	movs r0, #0x4e
	lsls r0, r0, #2
	subs r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_0219C71C
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_021BB0A4
	adds r1, r4, #0
	bl FUN_021DF85C
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _021D3404
	ldr r1, _021D340C ; =0x0000026D
	adds r0, r4, #0
	bl FUN_021DF39C
_021D3404:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D3408: .word FUN_021D3420
_021D340C: .word 0x0000026D
	thumb_func_end FUN_021D3394

	thumb_func_start FUN_021D3410
FUN_021D3410: ; 0x021D3410
	adds r0, #0x41
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D341C
	movs r0, #1
	bx lr
_021D341C:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021D3410

	thumb_func_start FUN_021D3420
FUN_021D3420: ; 0x021D3420
	push {r4, lr}
	adds r4, r1, #0
	ldrh r1, [r4, #4]
	cmp r1, #0
	beq _021D3430
	cmp r1, #1
	beq _021D3446
	pop {r4, pc}
_021D3430:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D3452
	ldr r0, [r4]
	bl FUN_021D39CC
	ldrh r0, [r4, #4]
	adds r0, r0, #1
	strh r0, [r4, #4]
	pop {r4, pc}
_021D3446:
	ldr r2, [r4, #8]
	ldrb r1, [r2]
	subs r1, r1, #1
	strb r1, [r2]
	bl FUN_0203A89C
_021D3452:
	pop {r4, pc}
	thumb_func_end FUN_021D3420

	thumb_func_start FUN_021D3454
FUN_021D3454: ; 0x021D3454
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x4e
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r7, r1, #0
	adds r4, r2, #0
	bl FUN_0219D1C8
	movs r1, #0xd
	bl FUN_021BB1F4
	adds r6, r0, #0
	movs r0, #0x4e
	lsls r0, r0, #2
	subs r0, r0, #4
	ldr r0, [r5, r0]
	adds r1, r7, #0
	bl FUN_0219C71C
	cmp r4, #0
	beq _021D3488
	adds r1, r6, #0
	bl FUN_021DFB20
	pop {r3, r4, r5, r6, r7, pc}
_021D3488:
	adds r1, r6, #0
	bl FUN_021DFB04
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D3454

	thumb_func_start FUN_021D3490
FUN_021D3490: ; 0x021D3490
	push {r3, lr}
	bl FUN_021DFB98
	cmp r0, #0
	bne _021D349E
	movs r0, #1
	pop {r3, pc}
_021D349E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D3490

	thumb_func_start FUN_021D34A4
FUN_021D34A4: ; 0x021D34A4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r2, r5, #0
	movs r6, #0xc
	adds r0, r1, #0
	adds r2, #0x48
	muls r0, r6, r0
	adds r0, r2, r0
	bl FUN_021D39B4
	adds r0, r4, #0
	adds r5, #0x48
	muls r0, r6, r0
	adds r0, r5, r0
	bl FUN_021D39B4
	movs r0, #1
	bl FUN_021E01EC
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021D34A4

	thumb_func_start FUN_021D34D0
FUN_021D34D0: ; 0x021D34D0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r2, r5, #0
	movs r6, #0xc
	adds r0, r1, #0
	adds r2, #0x48
	muls r0, r6, r0
	adds r0, r2, r0
	bl FUN_021D39CC
	adds r0, r4, #0
	adds r5, #0x48
	muls r0, r6, r0
	adds r0, r5, r0
	bl FUN_021D39CC
	movs r0, #0
	bl FUN_021E01EC
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D34D0

	thumb_func_start FUN_021D34FC
FUN_021D34FC: ; 0x021D34FC
	push {r3, lr}
	movs r2, #0xc
	adds r0, #0x48
	muls r2, r1, r2
	adds r0, r0, r2
	bl FUN_021D39B4
	movs r0, #1
	bl FUN_021E01EC
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D34FC

	thumb_func_start FUN_021D3514
FUN_021D3514: ; 0x021D3514
	push {r3, lr}
	movs r2, #0xc
	adds r0, #0x48
	muls r2, r1, r2
	adds r0, r0, r2
	bl FUN_021D39CC
	movs r0, #0
	bl FUN_021E01EC
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021D3514

	thumb_func_start FUN_021D352C
FUN_021D352C: ; 0x021D352C
	adds r0, r1, #0
	ldr r1, _021D3534 ; =0x0000025F
	ldr r3, _021D3538 ; =FUN_021DF39C
	bx r3
	.align 2, 0
_021D3534: .word 0x0000025F
_021D3538: .word FUN_021DF39C
	thumb_func_end FUN_021D352C

	thumb_func_start FUN_021D353C
FUN_021D353C: ; 0x021D353C
	push {r3, lr}
	bl FUN_021DF828
	cmp r0, #0
	bne _021D354A
	movs r0, #1
	pop {r3, pc}
_021D354A:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D353C

	thumb_func_start FUN_021D3550
FUN_021D3550: ; 0x021D3550
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r7, r2, #0
	cmp r4, #6
	beq _021D3590
	ldr r0, [r5, #0x2c]
	ldr r1, _021D3594 ; =FUN_021D35A8
	movs r2, #0x18
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	adds r6, r0, #0
	str r5, [r6]
	strb r4, [r6, #4]
	movs r0, #0x4d
	str r7, [r6, #0x10]
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r1, r4, #0
	bl FUN_0219C71C
	str r0, [r6, #8]
	adds r5, #0x40
	str r5, [r6, #0x14]
	movs r0, #0
	str r0, [r6, #0xc]
	ldrb r0, [r5]
	adds r0, r0, #1
	strb r0, [r5]
_021D3590:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D3594: .word FUN_021D35A8
	thumb_func_end FUN_021D3550

	thumb_func_start FUN_021D3598
FUN_021D3598: ; 0x021D3598
	adds r0, #0x40
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D35A4
	movs r0, #1
	bx lr
_021D35A4:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021D3598

	thumb_func_start FUN_021D35A8
FUN_021D35A8: ; 0x021D35A8
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021D35BA
	cmp r0, #1
	beq _021D35EC
	pop {r4, r5, r6, pc}
_021D35BA:
	movs r0, #0x4e
	ldr r1, [r4]
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	ldrb r1, [r4, #4]
	bl FUN_0219D1C8
	bl FUN_021BB084
	ldr r1, [r4, #0x10]
	cmp r1, #0
	ldr r1, [r4, #8]
	bne _021D35DA
	bl FUN_021DF6F4
	b _021D35DE
_021D35DA:
	bl FUN_021DF7AC
_021D35DE:
	ldr r0, [r4, #8]
	bl FUN_021DFAEC
	ldr r0, [r4, #0xc]
	adds r0, r0, #1
	str r0, [r4, #0xc]
	pop {r4, r5, r6, pc}
_021D35EC:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D361E
	movs r6, #0x4e
	ldr r0, [r4]
	lsls r6, r6, #2
	ldrb r1, [r4, #4]
	ldr r0, [r0, r6]
	bl FUN_0219D1C8
	adds r1, r0, #0
	ldr r2, [r4]
	subs r0, r6, #4
	ldr r0, [r2, r0]
	ldr r2, [r4, #8]
	bl FUN_021DFA44
	ldr r1, [r4, #0x14]
	ldrb r0, [r1]
	subs r0, r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl FUN_0203A89C
_021D361E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D35A8

	thumb_func_start FUN_021D3620
FUN_021D3620: ; 0x021D3620
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	ldr r0, [r5, #0x2c]
	ldr r1, _021D3678 ; =FUN_021D36E4
	movs r2, #0x18
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	lsls r1, r7, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219C784
	adds r1, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	bl FUN_021BB084
	str r0, [r4, #8]
	str r5, [r4]
	str r6, [r4, #4]
	adds r5, #0x40
	ldr r0, [sp]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x11]
	movs r0, #0
	str r0, [r4, #0xc]
	ldrb r0, [r5]
	adds r0, r0, #1
	strb r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D3678: .word FUN_021D36E4
	thumb_func_end FUN_021D3620

	thumb_func_start FUN_021D367C
FUN_021D367C: ; 0x021D367C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	ldr r0, [r5, #0x2c]
	ldr r1, _021D36D0 ; =FUN_021D36E4
	movs r2, #0x18
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	lsls r1, r6, #0x18
	ldr r0, [r5, r0]
	lsrs r1, r1, #0x18
	bl FUN_0219C784
	adds r1, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	adds r0, r0, #4
	ldr r0, [r5, r0]
	bl FUN_0219D1C8
	bl FUN_021BB084
	str r0, [r4, #8]
	str r5, [r4]
	str r6, [r4, #4]
	adds r5, #0x40
	str r5, [r4, #0x14]
	strb r7, [r4, #0x11]
	movs r0, #0
	str r0, [r4, #0xc]
	ldrb r0, [r5]
	adds r0, r0, #1
	strb r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D36D0: .word FUN_021D36E4
	thumb_func_end FUN_021D367C

	thumb_func_start FUN_021D36D4
FUN_021D36D4: ; 0x021D36D4
	adds r0, #0x40
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D36E0
	movs r0, #1
	bx lr
_021D36E0:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021D36D4

	thumb_func_start FUN_021D36E4
FUN_021D36E4: ; 0x021D36E4
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021D36F6
	cmp r0, #1
	beq _021D3714
	pop {r3, r4, r5, pc}
_021D36F6:
	ldrb r0, [r4, #0x11]
	cmp r0, #0
	ldr r0, [r4, #8]
	bne _021D3706
	ldr r1, [r4, #4]
	bl FUN_021DF6F4
	b _021D370C
_021D3706:
	ldr r1, [r4, #4]
	bl FUN_021DF7AC
_021D370C:
	ldr r0, [r4, #0xc]
	adds r0, r0, #1
	str r0, [r4, #0xc]
	pop {r3, r4, r5, pc}
_021D3714:
	bl FUN_021DF828
	cmp r0, #0
	bne _021D372A
	ldr r1, [r4, #0x14]
	ldrb r0, [r1]
	subs r0, r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl FUN_0203A89C
_021D372A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D36E4

	thumb_func_start FUN_021D372C
FUN_021D372C: ; 0x021D372C
	push {r3, lr}
	str r1, [r0]
	movs r1, #0
	strb r1, [r0, #0x14]
	movs r1, #0x1f
	lsls r1, r1, #0xc
	str r1, [r0, #4]
	movs r1, #7
	lsls r1, r1, #0xc
	str r1, [r0, #8]
	movs r0, #7
	str r0, [sp]
	ldr r0, _021D3754 ; =0x04000050
	movs r1, #2
	movs r2, #0x3d
	movs r3, #0x1f
	bl FUN_02074A98
	pop {r3, pc}
	nop
_021D3754: .word 0x04000050
	thumb_func_end FUN_021D372C

	thumb_func_start FUN_021D3758
FUN_021D3758: ; 0x021D3758
	ldrb r1, [r0, #0x14]
	cmp r1, #0
	beq _021D3762
	cmp r1, #3
	bne _021D3780
_021D3762:
	movs r1, #0x1f
	lsls r1, r1, #0xc
	str r1, [r0, #4]
	movs r1, #7
	lsls r1, r1, #0xc
	str r1, [r0, #8]
	ldr r1, _021D3784 ; =0xFFFFAD56
	str r1, [r0, #0xc]
	movs r1, #6
	lsls r1, r1, #0xa
	str r1, [r0, #0x10]
	movs r1, #6
	strb r1, [r0, #0x15]
	movs r1, #1
	strb r1, [r0, #0x14]
_021D3780:
	bx lr
	nop
_021D3784: .word 0xFFFFAD56
	thumb_func_end FUN_021D3758

	thumb_func_start FUN_021D3788
FUN_021D3788: ; 0x021D3788
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #0x14]
	adds r4, r2, #0
	adds r0, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _021D37CC
	cmp r1, #0
	bne _021D37B2
	ldr r0, [r5]
	bl FUN_02048520
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	bl FUN_02047168
	ldr r0, [r5]
	bl FUN_02048270
_021D37B2:
	movs r0, #0
	str r0, [r5, #4]
	movs r0, #1
	lsls r0, r0, #0x10
	str r0, [r5, #8]
	ldr r0, _021D37D0 ; =0x000052AA
	str r0, [r5, #0xc]
	ldr r0, _021D37D4 ; =0xFFFFE800
	str r0, [r5, #0x10]
	movs r0, #6
	strb r0, [r5, #0x15]
	movs r0, #4
	strb r0, [r5, #0x14]
_021D37CC:
	pop {r3, r4, r5, pc}
	nop
_021D37D0: .word 0x000052AA
_021D37D4: .word 0xFFFFE800
	thumb_func_end FUN_021D3788

	thumb_func_start FUN_021D37D8
FUN_021D37D8: ; 0x021D37D8
	push {r3, lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #4
	bhi _021D384A
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D37EE: ; jump table
	.short _021D37FC - _021D37EE - 2 ; case 0
	.short _021D3834 - _021D37EE - 2 ; case 1
	.short _021D37F8 - _021D37EE - 2 ; case 2
	.short _021D3808 - _021D37EE - 2 ; case 3
	.short _021D3800 - _021D37EE - 2 ; case 4
_021D37F8:
	movs r0, #1
	pop {r3, pc}
_021D37FC:
	movs r0, #1
	pop {r3, pc}
_021D3800:
	movs r0, #3
	strb r0, [r3, #0x14]
	movs r0, #0
	pop {r3, pc}
_021D3808:
	ldrb r0, [r3, #0x15]
	cmp r0, #0
	beq _021D3824
_021D380E:
	ldr r2, [r3, #4]
	ldr r1, [r3, #0xc]
	subs r0, r0, #1
	adds r1, r2, r1
	str r1, [r3, #4]
	ldr r2, [r3, #8]
	ldr r1, [r3, #0x10]
	strb r0, [r3, #0x15]
	adds r1, r2, r1
	str r1, [r3, #8]
	b _021D384A
_021D3824:
	movs r0, #0x1f
	lsls r0, r0, #0xc
	str r0, [r3, #4]
	movs r0, #7
	lsls r0, r0, #0xc
	str r0, [r3, #8]
	movs r0, #0
	b _021D3848
_021D3834:
	ldrb r0, [r3, #0x15]
	cmp r0, #0
	beq _021D383C
	b _021D380E
_021D383C:
	movs r0, #0
	str r0, [r3, #4]
	movs r0, #1
	lsls r0, r0, #0x10
	str r0, [r3, #8]
	movs r0, #2
_021D3848:
	strb r0, [r3, #0x14]
_021D384A:
	ldr r0, [r3, #8]
	movs r1, #2
	asrs r0, r0, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r3, [r3, #4]
	ldr r0, _021D386C ; =0x04000050
	asrs r3, r3, #0xc
	lsls r3, r3, #0x18
	movs r2, #0x3d
	lsrs r3, r3, #0x18
	bl FUN_02074A98
	movs r0, #0
	pop {r3, pc}
	nop
_021D386C: .word 0x04000050
	thumb_func_end FUN_021D37D8

	thumb_func_start FUN_021D3870
FUN_021D3870: ; 0x021D3870
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x2c]
	ldr r1, _021D3898 ; =FUN_021D38AC
	movs r2, #0xc
	movs r3, #1
	bl FUN_0203A8B4
	bl FUN_0203A93C
	str r4, [r0]
	adds r4, #0x40
	str r4, [r0, #8]
	movs r1, #0
	str r1, [r0, #4]
	ldrb r0, [r4]
	adds r0, r0, #1
	strb r0, [r4]
	pop {r4, pc}
	nop
_021D3898: .word FUN_021D38AC
	thumb_func_end FUN_021D3870

	thumb_func_start FUN_021D389C
FUN_021D389C: ; 0x021D389C
	adds r0, #0x40
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D38A8
	movs r0, #1
	bx lr
_021D38A8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_021D389C

	thumb_func_start FUN_021D38AC
FUN_021D38AC: ; 0x021D38AC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _021D38BE
	cmp r0, #1
	beq _021D38D2
	pop {r3, r4, r5, pc}
_021D38BE:
	movs r0, #0x55
	ldr r1, [r4]
	lsls r0, r0, #2
	adds r0, r1, r0
	bl FUN_021D3758
	ldr r0, [r4, #4]
	adds r0, r0, #1
	str r0, [r4, #4]
	pop {r3, r4, r5, pc}
_021D38D2:
	movs r0, #0x55
	ldr r1, [r4]
	lsls r0, r0, #2
	adds r0, r1, r0
	bl FUN_021D37D8
	cmp r0, #0
	beq _021D38F6
	ldr r0, [r4]
	bl FUN_021D45D0
	ldr r1, [r4, #8]
	ldrb r0, [r1]
	subs r0, r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl FUN_0203A89C
_021D38F6:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D38AC

	thumb_func_start FUN_021D38F8
FUN_021D38F8: ; 0x021D38F8
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r5, r0, #0
	adds r2, r4, #0
	movs r0, #0xc
_021D3902:
	adds r1, r4, #0
	muls r1, r0, r1
	adds r3, r5, r1
	adds r1, r3, #0
	adds r1, #0x53
	strb r2, [r1]
	adds r4, r4, #1
	str r2, [r3, #0x48]
	cmp r4, #6
	bls _021D3902
	movs r4, #0x4d
	lsls r4, r4, #2
	ldr r0, [r5, r4]
	bl FUN_0219BDC0
	cmp r0, #3
	beq _021D392E
	ldr r0, [r5, r4]
	bl FUN_0219BE9C
	adds r6, r0, #0
	b _021D3930
_021D392E:
	movs r6, #5
_021D3930:
	adds r7, r5, #0
	movs r4, #0
	adds r7, #0x48
_021D3936:
	movs r0, #0xc
	muls r0, r4, r0
	lsls r2, r4, #0x18
	adds r0, r7, r0
	adds r1, r5, #0
	lsrs r2, r2, #0x18
	bl FUN_021D396C
	adds r4, r4, #1
	cmp r4, r6
	bls _021D3936
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D38F8

	thumb_func_start FUN_021D3950
FUN_021D3950: ; 0x021D3950
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r5, #0
	adds r4, #0x48
	movs r6, #0xc
_021D395A:
	adds r0, r5, #0
	muls r0, r6, r0
	adds r0, r4, r0
	bl FUN_021D3990
	adds r5, r5, #1
	cmp r5, #6
	blo _021D395A
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D3950

	thumb_func_start FUN_021D396C
FUN_021D396C: ; 0x021D396C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x4d
	adds r4, r1, #0
	strb r2, [r5, #8]
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	adds r1, r2, #0
	bl FUN_0219C71C
	movs r1, #0
	strb r0, [r5, #9]
	movs r0, #1
	str r4, [r5, #4]
	strb r1, [r5, #0xa]
	strb r0, [r5, #0xb]
	str r1, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D396C

	thumb_func_start FUN_021D3990
FUN_021D3990: ; 0x021D3990
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xb]
	cmp r0, #0
	beq _021D39B0
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	beq _021D39AA
	ldrb r0, [r4, #9]
	bl FUN_021DFAEC
	movs r0, #0
	strb r0, [r4, #0xa]
_021D39AA:
	movs r0, #0
	str r0, [r4]
	strb r0, [r4, #0xb]
_021D39B0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D3990

	thumb_func_start FUN_021D39B4
FUN_021D39B4: ; 0x021D39B4
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	beq _021D39C8
	ldrb r0, [r4, #9]
	bl FUN_021DFAEC
	movs r0, #0
	strb r0, [r4, #0xa]
_021D39C8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D39B4

	thumb_func_start FUN_021D39CC
FUN_021D39CC: ; 0x021D39CC
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xb]
	cmp r0, #0
	beq _021D3A00
	movs r5, #0x4e
	ldr r0, [r4, #4]
	lsls r5, r5, #2
	ldrb r1, [r4, #8]
	ldr r0, [r0, r5]
	bl FUN_0219D1C8
	str r0, [r4]
	bl FUN_021BB3A8
	cmp r0, #0
	bne _021D3A00
	ldr r1, [r4, #4]
	subs r0, r5, #4
	ldr r0, [r1, r0]
	ldrb r2, [r4, #9]
	ldr r1, [r4]
	bl FUN_021DFA44
	movs r0, #1
	strb r0, [r4, #0xa]
_021D3A00:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D39CC

	thumb_func_start FUN_021D3A04
FUN_021D3A04: ; 0x021D3A04
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_0219D3FC
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_0219C47C
	cmp r0, #0
	beq _021D3A1E
	movs r0, #0
	pop {r4, pc}
_021D3A1E:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D3A04

	thumb_func_start FUN_021D3A24
FUN_021D3A24: ; 0x021D3A24
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_021D3A04
	adds r4, r0, #0
	bne _021D3A44
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl FUN_021DFF1C
_021D3A44:
	bl FUN_021E0558
	movs r0, #0x24
	adds r5, #0x90
	muls r0, r4, r0
	adds r0, r5, r0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021D3BF4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D3A24

	thumb_func_start FUN_021D3A5C
FUN_021D3A5C: ; 0x021D3A5C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021D3A04
	movs r1, #0x24
	adds r4, #0x90
	muls r1, r0, r1
	adds r0, r4, r1
	bl FUN_021D3C74
	pop {r4, pc}
	thumb_func_end FUN_021D3A5C

	thumb_func_start FUN_021D3A78
FUN_021D3A78: ; 0x021D3A78
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	bl FUN_021D3A04
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0x24
	adds r5, #0x90
	muls r0, r4, r0
	adds r0, r5, r0
	bl FUN_021D3F14
	cmp r4, #0
	bne _021D3AA4
	movs r0, #0
	movs r1, #1
	movs r2, #0
	bl FUN_021DFF1C
_021D3AA4:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D3A78

	thumb_func_start FUN_021D3AA8
FUN_021D3AA8: ; 0x021D3AA8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021D3A04
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x24
	adds r4, #0x90
	muls r0, r1, r0
	adds r0, r4, r0
	bl FUN_021D3F40
	pop {r4, pc}
	thumb_func_end FUN_021D3AA8

	thumb_func_start FUN_021D3AC8
FUN_021D3AC8: ; 0x021D3AC8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	adds r4, r1, #0
	bl FUN_021D3A04
	movs r1, #0x24
	adds r5, #0x90
	muls r1, r0, r1
	adds r0, r5, r1
	adds r1, r4, #0
	bl FUN_021D3F44
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D3AC8

	thumb_func_start FUN_021D3AE8
FUN_021D3AE8: ; 0x021D3AE8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_021D3A04
	movs r1, #0x24
	adds r4, #0x90
	muls r1, r0, r1
	adds r0, r4, r1
	bl FUN_021D3F8C
	pop {r4, pc}
	thumb_func_end FUN_021D3AE8

	thumb_func_start FUN_021D3B04
FUN_021D3B04: ; 0x021D3B04
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0x4f
	lsls r0, r0, #2
	ldrh r0, [r5, r0]
	str r1, [sp, #4]
	movs r1, #0x4f
	lsls r1, r1, #2
	adds r3, r5, #0
	str r0, [sp]
	movs r0, #0xb
	adds r1, #0xa7
	movs r2, #0
	adds r3, #0xdc
	movs r6, #0
	bl FUN_0204B290
	adds r1, r5, #0
	adds r1, #0xd8
	str r0, [r1]
	adds r7, r5, #0
	movs r0, #1
	adds r7, #0xb2
	str r0, [sp, #8]
_021D3B36:
	movs r0, #0x24
	adds r4, r6, #0
	muls r4, r0, r4
	adds r0, r5, r4
	adds r0, #0x90
	str r5, [r0]
	adds r0, r5, r4
	adds r0, #0x9a
	movs r1, #2
	strb r6, [r0]
	cmp r6, #0
	beq _021D3B50
	movs r1, #3
_021D3B50:
	adds r0, r5, r4
	adds r0, #0x9b
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0xdc
	ldr r0, [r0]
	lsls r1, r6, #3
	adds r1, r6, r1
	ldr r0, [r0, #0x14]
	lsls r1, r1, #8
	adds r1, r0, r1
	adds r0, r5, r4
	adds r0, #0xa0
	str r1, [r0]
	movs r3, #0x4f
	lsls r3, r3, #2
	ldrh r3, [r5, r3]
	movs r0, #0x12
	movs r1, #4
	movs r2, #0x20
	bl FUN_02046E54
	adds r1, r5, r4
	adds r1, #0x94
	str r0, [r1]
	adds r1, r5, r4
	adds r1, #0x98
	movs r0, #0
	strh r0, [r1]
	adds r1, r5, r4
	adds r1, #0x9c
	movs r0, #0x1f
	strb r0, [r1]
	adds r1, r6, #0
	movs r0, #0x48
	muls r1, r0, r1
	ldr r0, [sp, #4]
	adds r6, r6, #1
	adds r1, r0, r1
	adds r0, r5, r4
	adds r0, #0xac
	str r1, [r0]
	ldrb r1, [r7, r4]
	ldr r0, [sp, #8]
	bics r1, r0
	strb r1, [r7, r4]
	cmp r6, #2
	blo _021D3B36
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D3B04

	thumb_func_start FUN_021D3BB4
FUN_021D3BB4: ; 0x021D3BB4
	push {r3, r4, r5, r6, r7, lr}
	movs r4, #0
	adds r5, r0, #0
	adds r7, r4, #0
_021D3BBC:
	movs r0, #0x24
	adds r6, r4, #0
	muls r6, r0, r6
	adds r0, r5, r6
	adds r0, #0x94
	ldr r0, [r0]
	cmp r0, #0
	beq _021D3BD6
	bl FUN_02046F08
	adds r0, r5, r6
	adds r0, #0x94
	str r7, [r0]
_021D3BD6:
	adds r4, r4, #1
	cmp r4, #2
	blo _021D3BBC
	adds r0, r5, #0
	adds r0, #0xd8
	ldr r0, [r0]
	cmp r0, #0
	beq _021D3BF0
	bl FUN_0203A278
	movs r0, #0
	adds r5, #0xd8
	str r0, [r5]
_021D3BF0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D3BB4

	thumb_func_start FUN_021D3BF4
FUN_021D3BF4: ; 0x021D3BF4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x4e
	str r1, [sp]
	adds r7, r2, #0
	ldr r2, [r5]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	bl FUN_0219D1C8
	movs r1, #0x10
	adds r4, r0, #0
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	bl FUN_021BAC80
	adds r4, r0, #0
	adds r0, r5, #0
	adds r0, #0x22
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _021D3C34
	ldrb r0, [r5, #0xc]
	cmp r4, r0
	beq _021D3C70
	adds r0, r5, #0
	bl FUN_021D3F14
_021D3C34:
	ldrh r0, [r5, #8]
	cmp r6, r0
	bne _021D3C40
	ldrb r0, [r5, #0xc]
	cmp r4, r0
	beq _021D3C4A
_021D3C40:
	adds r0, r5, #0
	strh r6, [r5, #8]
	strb r4, [r5, #0xc]
	bl FUN_021D3E1C
_021D3C4A:
	adds r0, r5, #0
	adds r0, #0x22
	ldrb r0, [r0]
	movs r1, #2
	bics r0, r1
	lsls r1, r7, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1e
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x22
	strb r1, [r0]
	movs r0, #0
	strb r0, [r5, #0xd]
	ldr r0, [sp]
	adds r1, r6, #0
	bl FUN_021E0518
_021D3C70:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D3BF4

	thumb_func_start FUN_021D3C74
FUN_021D3C74: ; 0x021D3C74
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldrb r1, [r4, #0xd]
	cmp r1, #6
	bls _021D3C82
	b _021D3E00
_021D3C82:
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D3C8E: ; jump table
	.short _021D3C9C - _021D3C8E - 2 ; case 0
	.short _021D3CB2 - _021D3C8E - 2 ; case 1
	.short _021D3CF2 - _021D3C8E - 2 ; case 2
	.short _021D3D30 - _021D3C8E - 2 ; case 3
	.short _021D3D9E - _021D3C8E - 2 ; case 4
	.short _021D3DD8 - _021D3C8E - 2 ; case 5
	.short _021D3DE6 - _021D3C8E - 2 ; case 6
_021D3C9C:
	ldrb r0, [r4, #0xb]
	movs r2, #9
	ldr r1, [r4, #0x10]
	ldr r3, [r4, #0x1c]
	lsls r2, r2, #8
	bl FUN_020450AC
_021D3CAA:
	ldrb r0, [r4, #0xd]
	adds r0, r0, #1
_021D3CAE:
	strb r0, [r4, #0xd]
	b _021D3E00
_021D3CB2:
	adds r0, r4, #0
	movs r1, #8
	adds r0, #0x20
	strb r1, [r0]
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	bne _021D3CCA
	movs r0, #9
	lsls r0, r0, #0x10
	str r0, [r4, #0x14]
	ldr r0, _021D3E08 ; =0xFFFEE000
	b _021D3CD2
_021D3CCA:
	ldr r0, _021D3E0C ; =0xFFF70000
	str r0, [r4, #0x14]
	movs r0, #0x12
	lsls r0, r0, #0xc
_021D3CD2:
	str r0, [r4, #0x18]
	ldr r2, [r4, #0x14]
	ldrb r0, [r4, #0xb]
	movs r1, #0
	asrs r2, r2, #0xc
	bl FUN_02044D28
	ldrb r0, [r4, #0xb]
	movs r1, #3
	movs r2, #0
	bl FUN_02044D28
	ldr r0, _021D3E10 ; =0x00000573
	bl FUN_02006254
	b _021D3CAA
_021D3CF2:
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #0
	beq _021D3D1C
	ldr r1, [r4, #0x14]
	ldr r0, [r4, #0x18]
	adds r2, r1, r0
	str r2, [r4, #0x14]
	ldrb r0, [r4, #0xb]
	movs r1, #0
	asrs r2, r2, #0xc
	bl FUN_02044D28
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	adds r4, #0x20
	subs r0, r0, #1
_021D3D18:
	strb r0, [r4]
	b _021D3E00
_021D3D1C:
	ldrb r0, [r4, #0xb]
	movs r1, #0
	movs r2, #0
	movs r5, #0
	bl FUN_02044D28
	adds r0, r4, #0
	adds r0, #0x21
	strb r5, [r0]
	b _021D3CAA
_021D3D30:
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	cmp r0, #0x11
	bhs _021D3D78
	ldr r0, [r4, #4]
	bl FUN_02046F20
	adds r1, r4, #0
	adds r1, #0x21
	ldrb r2, [r1]
	ldr r1, [r4, #0x1c]
	movs r5, #0
	adds r6, r1, r2
	lsls r1, r2, #5
	adds r7, r0, r1
_021D3D50:
	lsls r1, r5, #3
	adds r1, r5, r1
	movs r3, #0x12
	lsls r1, r1, #6
	muls r3, r5, r3
	ldrb r0, [r4, #0xb]
	adds r1, r7, r1
	movs r2, #0x20
	adds r3, r6, r3
	bl FUN_020450AC
	adds r5, r5, #1
	cmp r5, #4
	blo _021D3D50
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	adds r4, #0x21
	adds r0, r0, #1
	b _021D3D18
_021D3D78:
	adds r0, r4, #0
	adds r0, #0x22
	ldrb r2, [r0]
	movs r0, #1
	bics r2, r0
	adds r3, r2, #0
	movs r0, #1
	adds r2, r4, #0
	orrs r3, r0
	adds r2, #0x22
	strb r3, [r2]
	adds r2, r4, #0
	adds r2, #0x22
	ldrb r2, [r2]
	lsls r2, r2, #0x1e
	lsrs r2, r2, #0x1f
	beq _021D3E02
	adds r0, r1, #1
	b _021D3CAE
_021D3D9E:
	bl FUN_021E00F8
	adds r7, r0, #0
	bl FUN_021E00EC
	adds r6, r0, #0
	ldrb r0, [r4, #0xa]
	movs r1, #1
	adds r0, r0, #1
	lsls r1, r0
	lsls r0, r1, #0x10
	lsrs r5, r0, #0x10
	ldr r0, _021D3E14 ; =0x0000080D
	bl FUN_02006254
	movs r0, #0x10
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, _021D3E18 ; =0x00007FFF
	movs r1, #1
	str r0, [sp, #8]
	adds r0, r7, #0
	adds r2, r5, #0
	movs r3, #0
	str r6, [sp, #0xc]
	bl FUN_02027010
	b _021D3CAA
_021D3DD8:
	bl FUN_021E00F8
	bl FUN_020277AC
	cmp r0, #0
	bne _021D3E00
	b _021D3CAA
_021D3DE6:
	ldr r0, _021D3E14 ; =0x0000080D
	bl FUN_020062C4
	cmp r0, #0
	bne _021D3E00
	ldr r0, _021D3E10 ; =0x00000573
	bl FUN_020062C4
	cmp r0, #0
	bne _021D3E00
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D3E00:
	movs r0, #0
_021D3E02:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D3E08: .word 0xFFFEE000
_021D3E0C: .word 0xFFF70000
_021D3E10: .word 0x00000573
_021D3E14: .word 0x0000080D
_021D3E18: .word 0x00007FFF
	thumb_func_end FUN_021D3C74

	thumb_func_start FUN_021D3E1C
FUN_021D3E1C: ; 0x021D3E1C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5, #4]
	ldr r4, [r5]
	bl FUN_02046F2C
	adds r6, r0, #0
	ldr r0, [r5, #4]
	bl FUN_02046F20
	adds r1, r0, #0
	ldr r0, [r5]
	ldrb r3, [r5, #0xa]
	adds r0, #0xdc
	ldr r0, [r0]
	lsls r2, r3, #3
	adds r2, r3, r2
	ldr r0, [r0, #0x14]
	lsls r2, r2, #8
	adds r0, r0, r2
	adds r2, r6, #0
	blx FUN_02078698
	movs r0, #1
	movs r1, #2
	movs r2, #0
	movs r6, #2
	movs r7, #0
	bl FUN_02023314
	ldrh r0, [r5, #8]
	movs r1, #0x67
	movs r2, #2
	str r0, [sp]
	ldrb r3, [r5, #0xc]
	ldr r0, [r4, #0x38]
	bl FUN_021D4F00
	str r6, [sp]
	ldr r0, [r4, #0x38]
	ldr r1, [r4, #0x28]
	movs r2, #0
	add r3, sp, #4
	bl FUN_020228EC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _021D3EEA
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	adds r1, r2, #0
	movs r0, #0x84
	adds r1, #8
	subs r6, r0, r3
	subs r3, r1, r6
	cmp r3, #0xc
	bge _021D3EA2
	movs r0, #0xc
	subs r0, r0, r3
	lsrs r3, r0, #0x1f
	adds r3, r0, r3
	asrs r3, r3, #1
	subs r0, r0, r3
	adds r1, r1, r3
	subs r6, r6, r0
_021D3EA2:
	subs r7, r1, r2
	bpl _021D3EA8
	movs r7, #0
_021D3EA8:
	cmp r6, #0
	bge _021D3EAE
	movs r6, #0
_021D3EAE:
	ldr r0, [r4, #0x38]
	ldr r1, [r4, #0x3c]
	movs r2, #0
	bl FUN_0202292C
	ldr r0, [r4, #0x28]
	lsls r1, r7, #0x10
	str r0, [sp]
	ldr r0, [r5, #4]
	ldr r3, [r4, #0x3c]
	asrs r1, r1, #0x10
	movs r2, #7
	bl FUN_02021D28
	ldr r0, [r4, #0x38]
	ldr r1, [r4, #0x3c]
	movs r2, #1
	bl FUN_0202292C
	ldr r0, [r4, #0x28]
	lsls r1, r6, #0x10
	str r0, [sp]
	ldr r0, [r5, #4]
	ldr r3, [r4, #0x3c]
	asrs r1, r1, #0x10
	movs r2, #0x12
	bl FUN_02021D28
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021D3EEA:
	ldr r0, [r4, #0x38]
	ldr r1, [r4, #0x28]
	adds r2, r7, #0
	bl FUN_020228B4
	movs r1, #0x88
	subs r0, r1, r0
	lsrs r1, r0, #1
	bpl _021D3EFE
	adds r1, r7, #0
_021D3EFE:
	ldr r0, [r4, #0x28]
	lsls r1, r1, #0x10
	str r0, [sp]
	ldr r0, [r5, #4]
	ldr r3, [r4, #0x38]
	asrs r1, r1, #0x10
	movs r2, #0x12
	bl FUN_02021D28
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D3E1C

	thumb_func_start FUN_021D3F14
FUN_021D3F14: ; 0x021D3F14
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	ldrb r0, [r4, #0xb]
	bne _021D3F26
	movs r1, #0
	movs r2, #0x90
	b _021D3F2C
_021D3F26:
	movs r2, #0
	movs r1, #0
	subs r2, #0x90
_021D3F2C:
	bl FUN_02044D28
	adds r0, r4, #0
	adds r0, #0x22
	ldrb r1, [r0]
	movs r0, #1
	adds r4, #0x22
	bics r1, r0
	strb r1, [r4]
	pop {r4, pc}
	thumb_func_end FUN_021D3F14

	thumb_func_start FUN_021D3F40
FUN_021D3F40: ; 0x021D3F40
	movs r0, #1
	bx lr
	thumb_func_end FUN_021D3F40

	thumb_func_start FUN_021D3F44
FUN_021D3F44: ; 0x021D3F44
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x4e
	ldr r2, [r5]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	adds r6, r1, #0
	bl FUN_0219D1C8
	movs r1, #0x10
	adds r7, r0, #0
	bl FUN_021BB1F4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r7, #0
	bl FUN_021BAC80
	ldrh r1, [r5, #8]
	cmp r4, r1
	bne _021D3F74
	ldrb r1, [r5, #0xc]
	cmp r0, r1
	beq _021D3F7E
_021D3F74:
	strb r0, [r5, #0xc]
	adds r0, r5, #0
	strh r4, [r5, #8]
	bl FUN_021D3E1C
_021D3F7E:
	movs r0, #0
	strb r0, [r5, #0xd]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021E0518
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D3F44

	thumb_func_start FUN_021D3F8C
FUN_021D3F8C: ; 0x021D3F8C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xd]
	cmp r0, #5
	bls _021D3F98
	b _021D40AE
_021D3F98:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D3FA4: ; jump table
	.short _021D3FB0 - _021D3FA4 - 2 ; case 0
	.short _021D3FE6 - _021D3FA4 - 2 ; case 1
	.short _021D402E - _021D3FA4 - 2 ; case 2
	.short _021D4044 - _021D3FA4 - 2 ; case 3
	.short _021D408C - _021D3FA4 - 2 ; case 4
	.short _021D40A2 - _021D3FA4 - 2 ; case 5
_021D3FB0:
	ldr r0, _021D40B8 ; =0x0400004C
	movs r1, #0
	strb r1, [r0]
	ldrb r1, [r4, #0xa]
	cmp r1, #0
	bne _021D3FC0
	subs r0, #0x40
	b _021D3FC2
_021D3FC0:
	subs r0, #0x3e
_021D3FC2:
	ldrh r2, [r0]
	movs r1, #0x40
	orrs r1, r2
	strh r1, [r0]
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	strb r1, [r0]
	ldr r0, _021D40BC ; =0x0000054E
	bl FUN_02006254
_021D3FDE:
	ldrb r0, [r4, #0xd]
	adds r0, r0, #1
	strb r0, [r4, #0xd]
	b _021D40B2
_021D3FE6:
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bls _021D40B2
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x21
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r1, [r0]
	lsls r0, r1, #4
	orrs r1, r0
	ldr r0, _021D40B8 ; =0x0400004C
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	cmp r0, #0xf
	blo _021D40B2
	b _021D3FDE
_021D402E:
	ldr r0, [r4, #4]
	bl FUN_02046F20
	adds r1, r0, #0
	movs r2, #9
	ldrb r0, [r4, #0xb]
	ldr r3, [r4, #0x1c]
	lsls r2, r2, #8
	bl FUN_020450AC
	b _021D3FDE
_021D4044:
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bls _021D40B2
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	subs r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x21
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r1, [r0]
	lsls r0, r1, #4
	orrs r1, r0
	ldr r0, _021D40B8 ; =0x0400004C
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r0, [r0]
	cmp r0, #0
	bne _021D40B2
	b _021D3FDE
_021D408C:
	ldrb r0, [r4, #0xa]
	cmp r0, #0
	ldr r0, _021D40C0 ; =0x0000FFBF
	bne _021D4098
	ldr r2, _021D40C4 ; =0x0400000C
	b _021D409A
_021D4098:
	ldr r2, _021D40C8 ; =0x0400000E
_021D409A:
	ldrh r1, [r2]
	ands r0, r1
	strh r0, [r2]
	b _021D3FDE
_021D40A2:
	ldr r0, _021D40BC ; =0x0000054E
	bl FUN_020062C4
	cmp r0, #0
	bne _021D40B2
	b _021D3FDE
_021D40AE:
	movs r0, #1
	pop {r4, pc}
_021D40B2:
	movs r0, #0
	pop {r4, pc}
	nop
_021D40B8: .word 0x0400004C
_021D40BC: .word 0x0000054E
_021D40C0: .word 0x0000FFBF
_021D40C4: .word 0x0400000C
_021D40C8: .word 0x0400000E
	thumb_func_end FUN_021D3F8C

	thumb_func_start FUN_021D40CC
FUN_021D40CC: ; 0x021D40CC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r7, r1, #0
	adds r6, r2, #0
	add r0, sp, #0x14
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	add r0, sp, #0xc
	str r1, [r0]
	str r1, [r0, #4]
	adds r0, r7, #0
	movs r2, #0x20
	adds r5, r3, #0
	blx FUN_020787D4
	movs r0, #0x4e
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	adds r1, r6, #0
	bl FUN_0219D414
	str r0, [sp, #0x14]
	bl FUN_0219D4C8
	str r0, [sp, #0xc]
	cmp r5, #4
	bhs _021D412E
	movs r0, #0x4e
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	adds r1, r5, #0
	bl FUN_0219D414
	str r0, [sp, #0x18]
	bl FUN_0219D4C8
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xc]
	cmp r0, #3
	ble _021D4124
	movs r0, #3
	str r0, [sp, #0xc]
_021D4124:
	ldr r0, [sp, #0x10]
	cmp r0, #3
	ble _021D412E
	movs r0, #3
	str r0, [sp, #0x10]
_021D412E:
	ldr r0, [sp, #0x30]
	str r0, [r7]
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0219C9C8
	str r0, [r7, #0x1c]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	adds r0, r0, r1
	movs r6, #0
	str r0, [sp, #4]
_021D414A:
	ldr r0, [sp, #4]
	cmp r6, r0
	bge _021D41C8
	ldr r0, [sp]
	cmp r6, r0
	bge _021D415C
	movs r4, #0
	lsls r0, r6, #0x18
	b _021D4162
_021D415C:
	subs r0, r6, r0
	movs r4, #1
	lsls r0, r0, #0x18
_021D4162:
	asrs r5, r0, #0x18
	lsls r1, r4, #2
	add r0, sp, #0x14
	ldr r0, [r0, r1]
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219D534
	str r0, [sp, #8]
	bl FUN_021BB3A8
	cmp r0, #0
	beq _021D418A
	lsls r0, r4, #1
	adds r0, r4, r0
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #2
	b _021D41C6
_021D418A:
	ldr r0, [sp, #8]
	bl FUN_021BBAE8
	cmp r0, #0
	beq _021D41A2
	lsls r0, r4, #1
	adds r0, r4, r0
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #3
	b _021D41C6
_021D41A2:
	ldr r0, [sp, #8]
	bl FUN_021BB3BC
	cmp r0, #0
	bne _021D41BA
	lsls r0, r4, #1
	adds r0, r4, r0
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #0
	b _021D41C6
_021D41BA:
	lsls r0, r4, #1
	adds r0, r4, r0
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #1
_021D41C6:
	str r0, [r1, #4]
_021D41C8:
	adds r6, r6, #1
	cmp r6, #6
	blt _021D414A
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D40CC

	thumb_func_start FUN_021D41D4
FUN_021D41D4: ; 0x021D41D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x34]
	movs r1, #0xf
	bl FUN_021D579C
	ldr r1, [r4, #0x34]
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl FUN_021D2E60
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D41D4

	thumb_func_start FUN_021D41F0
FUN_021D41F0: ; 0x021D41F0
	ldr r3, _021D41F4 ; =FUN_021D2F1C
	bx r3
	.align 2, 0
_021D41F4: .word FUN_021D2F1C
	thumb_func_end FUN_021D41F0

	thumb_func_start FUN_021D41F8
FUN_021D41F8: ; 0x021D41F8
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D41F8

	thumb_func_start FUN_021D41FC
FUN_021D41FC: ; 0x021D41FC
	push {r3, lr}
	movs r3, #0x10
	movs r0, #1
	movs r1, #0
	movs r2, #0x10
	subs r3, #0x13
	bl FUN_0204E08C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D41FC

	thumb_func_start FUN_021D4210
FUN_021D4210: ; 0x021D4210
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	movs r1, #0xc
	bl FUN_02047168
	ldr r0, [r4]
	bl FUN_02048270
	movs r2, #0
	movs r0, #1
	movs r1, #0x10
	subs r3, r2, #3
	bl FUN_0204E08C
	pop {r4, pc}
	thumb_func_end FUN_021D4210

	thumb_func_start FUN_021D4230
FUN_021D4230: ; 0x021D4230
	ldr r3, _021D4234 ; =FUN_021D10B0
	bx r3
	.align 2, 0
_021D4234: .word FUN_021D10B0
	thumb_func_end FUN_021D4230

	thumb_func_start FUN_021D4238
FUN_021D4238: ; 0x021D4238
	push {r3, r4}
	movs r3, #0x5b
	lsls r3, r3, #2
	str r1, [r0, r3]
	adds r1, r3, #4
	adds r4, r0, r1
	movs r3, #7
_021D4246:
	ldrh r1, [r2]
	adds r2, r2, #2
	strh r1, [r4]
	adds r4, r4, #2
	subs r3, r3, #1
	bne _021D4246
	adds r1, r0, #0
	movs r3, #0
	adds r1, #0xe0
	str r3, [r1]
	adds r1, r0, #0
	ldr r2, _021D4270 ; =FUN_021D43BC
	adds r1, #0xe4
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xe8
	str r0, [r1]
	adds r0, #0xec
	str r3, [r0]
	pop {r3, r4}
	bx lr
	.align 2, 0
_021D4270: .word FUN_021D43BC
	thumb_func_end FUN_021D4238

	thumb_func_start FUN_021D4274
FUN_021D4274: ; 0x021D4274
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xe0
	ldr r2, [r0]
	cmp r2, #0
	beq _021D42A0
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D429C
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xe0
	adds r4, #0xec
	str r1, [r0]
	str r1, [r4]
_021D429C:
	movs r0, #0
	pop {r4, pc}
_021D42A0:
	adds r0, r4, #0
	adds r0, #0xe4
	ldr r2, [r0]
	cmp r2, #0
	beq _021D42C8
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D42C4
	movs r0, #0
	adds r4, #0xe4
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
_021D42C4:
	movs r0, #0
	pop {r4, pc}
_021D42C8:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D4274

	thumb_func_start FUN_021D42CC
FUN_021D42CC: ; 0x021D42CC
	adds r1, r0, #0
	movs r3, #0
	adds r1, #0xe0
	str r3, [r1]
	adds r1, r0, #0
	ldr r2, _021D42E8 ; =FUN_021D4488
	adds r1, #0xe4
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xe8
	str r0, [r1]
	adds r0, #0xec
	str r3, [r0]
	bx lr
	.align 2, 0
_021D42E8: .word FUN_021D4488
	thumb_func_end FUN_021D42CC

	thumb_func_start FUN_021D42EC
FUN_021D42EC: ; 0x021D42EC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xe0
	ldr r2, [r0]
	cmp r2, #0
	beq _021D4318
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D4314
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xe0
	adds r4, #0xec
	str r1, [r0]
	str r1, [r4]
_021D4314:
	movs r0, #0
	pop {r4, pc}
_021D4318:
	adds r0, r4, #0
	adds r0, #0xe4
	ldr r2, [r0]
	cmp r2, #0
	beq _021D4340
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D433C
	movs r0, #0
	adds r4, #0xe4
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
_021D433C:
	movs r0, #0
	pop {r4, pc}
_021D4340:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D42EC

	thumb_func_start FUN_021D4344
FUN_021D4344: ; 0x021D4344
	adds r1, r0, #0
	movs r3, #0
	adds r1, #0xe0
	str r3, [r1]
	adds r1, r0, #0
	ldr r2, _021D4360 ; =FUN_021D4518
	adds r1, #0xe4
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xe8
	str r0, [r1]
	adds r0, #0xec
	str r3, [r0]
	bx lr
	.align 2, 0
_021D4360: .word FUN_021D4518
	thumb_func_end FUN_021D4344

	thumb_func_start FUN_021D4364
FUN_021D4364: ; 0x021D4364
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xe0
	ldr r2, [r0]
	cmp r2, #0
	beq _021D4390
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D438C
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xe0
	adds r4, #0xec
	str r1, [r0]
	str r1, [r4]
_021D438C:
	movs r0, #0
	pop {r4, pc}
_021D4390:
	adds r0, r4, #0
	adds r0, #0xe4
	ldr r2, [r0]
	cmp r2, #0
	beq _021D43B8
	adds r1, r4, #0
	adds r1, #0xe8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xec
	blx r2
	cmp r0, #0
	beq _021D43B4
	movs r0, #0
	adds r4, #0xe4
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
_021D43B4:
	movs r0, #0
	pop {r4, pc}
_021D43B8:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D4364

	thumb_func_start FUN_021D43BC
FUN_021D43BC: ; 0x021D43BC
	push {r4, r5, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	cmp r0, #4
	bhi _021D447E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D43D6: ; jump table
	.short _021D43E0 - _021D43D6 - 2 ; case 0
	.short _021D4418 - _021D43D6 - 2 ; case 1
	.short _021D4450 - _021D43D6 - 2 ; case 2
	.short _021D4458 - _021D43D6 - 2 ; case 3
	.short _021D4478 - _021D43D6 - 2 ; case 4
_021D43E0:
	movs r0, #1
	movs r1, #9
	movs r2, #0xc
	bl FUN_02023314
	ldr r0, [r4, #8]
	bl FUN_02048298
	ldr r1, [r4, #0x10]
	ldr r0, [r4, #8]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r2, #3
	bl FUN_02048384
	ldr r0, [r4, #0xc]
	movs r1, #0xc
	bl FUN_02047168
	ldr r0, [r4, #8]
	bl FUN_02048500
	bl FUN_02044FBC
_021D4410:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D447E
_021D4418:
	movs r3, #0x5e
	lsls r3, r3, #2
	ldrh r0, [r4, r3]
	subs r1, r3, #6
	subs r2, r3, #4
	str r0, [sp]
	adds r0, r3, #2
	ldrh r0, [r4, r0]
	str r0, [sp, #4]
	adds r0, r3, #4
	ldrh r0, [r4, r0]
	subs r3, r3, #2
	str r0, [sp, #8]
	ldrh r1, [r4, r1]
	ldrh r2, [r4, r2]
	ldrh r3, [r4, r3]
	ldr r0, [r4, #0x34]
	bl FUN_021D5824
	ldr r0, [r4, #0x24]
	movs r1, #0
	str r0, [sp]
	ldr r0, [r4, #0xc]
	ldr r3, [r4, #0x34]
	movs r2, #0
	bl FUN_02021D28
	b _021D4410
_021D4450:
	ldr r0, [r4, #8]
	bl FUN_02048270
	b _021D4410
_021D4458:
	movs r4, #3
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl FUN_02044D28
	adds r4, #0xfd
	movs r0, #3
	movs r1, #3
	adds r2, r4, #0
	bl FUN_02044D28
	ldr r0, _021D4484 ; =0x00000547
	bl FUN_02006254
	b _021D4410
_021D4478:
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, pc}
_021D447E:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
_021D4484: .word 0x00000547
	thumb_func_end FUN_021D43BC

	thumb_func_start FUN_021D4488
FUN_021D4488: ; 0x021D4488
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	cmp r0, #0
	beq _021D44A0
	cmp r0, #1
	beq _021D44FA
	cmp r0, #2
	beq _021D4508
	b _021D450E
_021D44A0:
	movs r6, #0x5b
	lsls r6, r6, #2
	adds r1, r6, #4
	ldr r0, [r4, r6]
	adds r1, r4, r1
	bl FUN_021BB14C
	adds r0, r6, #0
	adds r0, #0xc
	ldrh r0, [r4, r0]
	adds r2, r6, #0
	adds r1, r6, #6
	str r0, [sp]
	adds r0, r6, #0
	adds r0, #0xe
	ldrh r0, [r4, r0]
	adds r2, #8
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r0, #0x10
	ldrh r0, [r4, r0]
	adds r6, #0xa
	str r0, [sp, #8]
	ldrh r1, [r4, r1]
	ldrh r2, [r4, r2]
	ldrh r3, [r4, r6]
	ldr r0, [r4, #0x34]
	bl FUN_021D58B4
	ldr r0, [r4, #0xc]
	movs r1, #0xc
	bl FUN_02047168
	ldr r0, [r4, #0x24]
	movs r1, #0
	str r0, [sp]
	ldr r0, [r4, #0xc]
	ldr r3, [r4, #0x34]
	movs r2, #0
	bl FUN_02021D28
_021D44F2:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D450E
_021D44FA:
	ldr r0, [r4, #8]
	bl FUN_02048270
	ldr r0, _021D4514 ; =0x00000547
	bl FUN_02006254
	b _021D44F2
_021D4508:
	add sp, #0xc
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_021D450E:
	movs r0, #0
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_021D4514: .word 0x00000547
	thumb_func_end FUN_021D4488

	thumb_func_start FUN_021D4518
FUN_021D4518: ; 0x021D4518
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	cmp r0, #0
	beq _021D4530
	cmp r0, #1
	beq _021D4590
	cmp r0, #2
	beq _021D45A8
	b _021D45AE
_021D4530:
	ldr r0, [r4, #8]
	bl FUN_02048514
	subs r0, r0, #1
	str r0, [sp, #0x10]
	ldr r0, [r4, #8]
	bl FUN_02048518
	subs r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [r4, #8]
	bl FUN_02048504
	adds r7, r0, #2
	ldr r0, [r4, #8]
	bl FUN_02048508
	adds r6, r0, #2
	ldr r0, [r4, #8]
	bl FUN_02048500
	lsls r1, r7, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	str r1, [sp]
	lsls r1, r6, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	str r1, [sp, #4]
	movs r1, #0
	adds r4, r0, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	str r1, [sp, #8]
	bl FUN_02045630
	adds r0, r4, #0
	bl FUN_02044FBC
	ldr r0, _021D45B4 ; =0x00000547
	bl FUN_02006254
_021D4588:
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _021D45AE
_021D4590:
	movs r2, #0
	movs r0, #3
	movs r1, #0
	subs r2, #0x90
	bl FUN_02044D28
	movs r0, #3
	movs r1, #3
	movs r2, #0
	bl FUN_02044D28
	b _021D4588
_021D45A8:
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D45AE:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D45B4: .word 0x00000547
	thumb_func_end FUN_021D4518

	thumb_func_start FUN_021D45B8
FUN_021D45B8: ; 0x021D45B8
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0x4d
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	bl FUN_0219C9C8
	cmp r0, #2
	bne _021D45CC
	movs r4, #0
_021D45CC:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_021D45B8

	thumb_func_start FUN_021D45D0
FUN_021D45D0: ; 0x021D45D0
	push {r4, lr}
	movs r1, #0xc
	adds r4, r0, #0
	bl FUN_021D45B8
	adds r1, r0, #0
	lsls r1, r1, #0x18
	ldr r0, [r4, #4]
	lsrs r1, r1, #0x18
	bl FUN_02047168
	ldr r0, [r4]
	bl FUN_02048270
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D45D0

	thumb_func_start FUN_021D45F0
FUN_021D45F0: ; 0x021D45F0
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	ldr r6, _021D4620 ; =0x00000C0C
	ldr r3, _021D4624 ; =0x021DAFF8
	adds r5, r1, #0
	movs r4, #0x67
	adds r1, r6, #0
	movs r2, #1
	str r4, [sp]
	bl FUN_0203A228
	cmp r5, #0
	bne _021D4616
	adds r2, r6, #0
	subs r2, #0xc
	subs r1, r6, #4
	str r2, [r0, r1]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_021D4616:
	adds r4, #0xfd
	subs r1, r6, #4
	str r4, [r0, r1]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_021D4620: .word 0x00000C0C
_021D4624: .word 0x021DAFF8
	thumb_func_end FUN_021D45F0

	thumb_func_start FUN_021D4628
FUN_021D4628: ; 0x021D4628
	ldr r3, _021D462C ; =FUN_0203A278
	bx r3
	.align 2, 0
_021D462C: .word FUN_0203A278
	thumb_func_end FUN_021D4628

	thumb_func_start FUN_021D4630
FUN_021D4630: ; 0x021D4630
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #2]
	cmp r0, #0
	bne _021D465C
	ldr r0, _021D4660 ; =0x00000C08
	ldrh r3, [r5]
	subs r2, r2, #1
	ldr r0, [r5, r0]
	adds r4, r3, r2
	cmp r4, r0
	bhi _021D4658
	adds r0, r1, #1
	adds r1, r5, #0
	adds r1, #8
	adds r1, r1, r3
	blx FUN_0207894C
	strh r4, [r5]
	pop {r3, r4, r5, pc}
_021D4658:
	movs r0, #1
	strb r0, [r5, #2]
_021D465C:
	pop {r3, r4, r5, pc}
	nop
_021D4660: .word 0x00000C08
	thumb_func_end FUN_021D4630

	thumb_func_start FUN_021D4664
FUN_021D4664: ; 0x021D4664
	ldrb r0, [r0]
	bx lr
	thumb_func_end FUN_021D4664

	thumb_func_start FUN_021D4668
FUN_021D4668: ; 0x021D4668
	ldrh r2, [r0]
	adds r0, #8
	str r2, [r1]
	bx lr
	thumb_func_end FUN_021D4668

	thumb_func_start FUN_021D4670
FUN_021D4670: ; 0x021D4670
	push {r3, r4}
	str r1, [r0]
	ldr r3, [r0, #4]
	movs r1, #2
	lsls r1, r1, #0x1e
	adds r4, r3, #0
	subs r3, r1, #1
	ands r4, r1
	ands r2, r3
	orrs r2, r4
	subs r1, r1, #1
	ands r1, r2
	movs r3, #0
	str r1, [r0, #4]
	adds r2, r3, #0
_021D468E:
	lsls r1, r3, #2
	adds r1, r0, r1
	adds r3, r3, #1
	str r2, [r1, #8]
	cmp r3, #4
	blo _021D468E
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D4670

	thumb_func_start FUN_021D46A0
FUN_021D46A0: ; 0x021D46A0
	movs r3, #0
	adds r2, r3, #0
_021D46A4:
	lsls r1, r3, #2
	adds r1, r0, r1
	adds r3, r3, #1
	str r2, [r1, #8]
	cmp r3, #4
	blo _021D46A4
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D46A0

	thumb_func_start FUN_021D46B4
FUN_021D46B4: ; 0x021D46B4
	push {r4, r5}
	adds r4, r0, #0
	adds r4, #8
	lsls r3, r1, #2
	ldr r0, [r0]
	ldr r2, [r4, r3]
	ldrb r5, [r0, r2]
	movs r0, #7
	asrs r1, r5, #4
	ands r1, r0
	asrs r5, r5, #7
	movs r0, #1
	ands r0, r5
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #2
	bne _021D46DE
	adds r1, r2, #1
	str r1, [r4, r3]
	pop {r4, r5}
	bx lr
_021D46DE:
	movs r0, #0
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021D46B4

	thumb_func_start FUN_021D46E4
FUN_021D46E4: ; 0x021D46E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r7, r0, #0
	str r1, [sp]
	ldr r1, [r7, #4]
	str r2, [sp, #4]
	str r3, [sp, #8]
	lsrs r0, r1, #0x1f
	beq _021D4714
	ldr r0, [sp]
	adds r7, #0x18
	lsls r4, r0, #6
	adds r0, r7, r4
	bl FUN_021BDCD8
	ldr r0, [sp, #4]
	movs r1, #1
	strb r1, [r0]
	ldr r0, [sp, #8]
	movs r1, #0
	strb r1, [r0]
	add sp, #0x24
	adds r0, r7, r4
	pop {r4, r5, r6, r7, pc}
_021D4714:
	ldr r0, [sp]
	adds r4, r7, #0
	adds r4, #8
	lsls r5, r0, #2
	lsls r1, r1, #1
	ldr r0, [r4, r5]
	lsrs r1, r1, #1
	cmp r0, r1
	blo _021D4728
	b _021D482E
_021D4728:
	ldr r1, [sp]
	lsls r1, r1, #6
	str r1, [sp, #0x18]
	adds r1, r7, #0
	str r1, [sp, #0x1c]
	adds r1, #0x18
	str r1, [sp, #0x1c]
_021D4736:
	ldr r1, [r7]
	movs r6, #1
	ldrb r0, [r1, r0]
	movs r1, #0xf
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x10]
	asrs r2, r0, #4
	movs r1, #7
	asrs r0, r0, #7
	ands r1, r2
	adds r2, r0, #0
	ldr r0, [sp, #8]
	ands r2, r6
	strb r2, [r0]
	ldr r0, [r4, r5]
	adds r0, r0, #1
	str r0, [r4, r5]
	ldr r2, [r7, #4]
	lsls r2, r2, #1
	lsrs r2, r2, #1
	cmp r0, r2
	bhi _021D482E
	cmp r1, #1
	bne _021D47F8
	movs r0, #0
	mov ip, r0
	ldr r0, [sp, #0x10]
	cmp r0, #0
	beq _021D482E
	cmp r0, #4
	bhi _021D482E
	mov r0, ip
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bls _021D47EC
_021D4782:
	ldr r2, [r4, r5]
	adds r0, r2, #1
	str r0, [r4, r5]
	ldr r1, [r7]
	ldrb r3, [r1, r2]
	str r1, [sp, #0x20]
	movs r1, #7
	asrs r2, r3, #5
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0x1f
	ands r1, r3
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	ldr r1, [r7, #4]
	lsls r1, r1, #1
	lsrs r1, r1, #1
	cmp r0, r1
	bhs _021D47EC
	ldr r1, [sp]
	cmp r2, r1
	beq _021D47B8
	lsls r1, r6, #2
	adds r0, r0, r1
	str r0, [r4, r5]
	b _021D47E0
_021D47B8:
	lsls r1, r6, #2
	str r1, [sp, #0xc]
	ldr r1, [sp, #0x20]
	ldr r2, [sp, #0x1c]
	adds r0, r1, r0
	ldr r1, [sp, #0x18]
	adds r1, r2, r1
	ldr r2, [sp, #0xc]
	blx FUN_0207894C
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	adds r0, r1, r0
	mov ip, r0
	ldr r1, [r4, r5]
	ldr r0, [sp, #0xc]
	adds r0, r1, r0
	str r0, [r4, r5]
	ldr r0, [sp, #4]
	strb r6, [r0]
_021D47E0:
	ldr r0, [sp, #0x14]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp, #0x14]
	cmp r1, r0
	blo _021D4782
_021D47EC:
	mov r0, ip
	cmp r0, #0
	beq _021D481E
	add sp, #0x24
	mov r0, ip
	pop {r4, r5, r6, r7, pc}
_021D47F8:
	cmp r1, #3
	bne _021D481A
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	adds r0, r1, r0
	bl FUN_021BDCC4
	ldr r0, [sp, #4]
	movs r1, #0
	strb r6, [r0]
	ldr r0, [sp, #8]
	strb r1, [r0]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	add sp, #0x24
	adds r0, r1, r0
	pop {r4, r5, r6, r7, pc}
_021D481A:
	cmp r1, #2
	bne _021D482E
_021D481E:
	ldr r0, [r7, #4]
	lsls r0, r0, #1
	lsrs r1, r0, #1
	ldr r0, [r4, r5]
	cmp r0, r1
	bhs _021D482E
	cmp r0, r1
	blo _021D4736
_021D482E:
	ldr r1, [r7, #4]
	ldr r0, _021D4858 ; =0x7FFFFFFF
	ands r1, r0
	adds r0, r0, #1
	orrs r0, r1
	str r0, [r7, #4]
	ldr r0, [sp]
	adds r7, #0x18
	lsls r4, r0, #6
	adds r0, r7, r4
	bl FUN_021BDCD8
	ldr r0, [sp, #4]
	movs r1, #1
	strb r1, [r0]
	ldr r0, [sp, #8]
	movs r1, #0
	strb r1, [r0]
	adds r0, r7, r4
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D4858: .word 0x7FFFFFFF
	thumb_func_end FUN_021D46E4

	thumb_func_start FUN_021D485C
FUN_021D485C: ; 0x021D485C
	push {r4, r5, r6, r7}
	ldr r2, [r0, #4]
	movs r1, #0
	lsls r2, r2, #1
	movs r5, #0
	lsrs r2, r2, #1
	beq _021D48BA
	ldr r3, [r0]
_021D486C:
	ldrb r4, [r3, r1]
	movs r0, #0xf
	movs r6, #7
	asrs r7, r4, #4
	ands r0, r4
	ands r6, r7
	asrs r7, r4, #7
	movs r4, #1
	ands r4, r7
	lsls r0, r0, #0x18
	lsls r4, r4, #0x18
	adds r1, r1, #1
	lsrs r0, r0, #0x18
	lsrs r4, r4, #0x18
	beq _021D488C
	adds r5, r5, #1
_021D488C:
	cmp r1, r2
	bhs _021D48BA
	cmp r6, #1
	beq _021D4898
	adds r1, r1, r0
	b _021D48B6
_021D4898:
	movs r6, #0
	cmp r0, #0
	bls _021D48B6
	movs r7, #0x1f
_021D48A0:
	adds r4, r1, #1
	ldrb r1, [r3, r1]
	ands r1, r7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x16
	adds r1, r4, r1
	cmp r1, r2
	bhs _021D48B6
	adds r6, r6, #1
	cmp r6, r0
	blo _021D48A0
_021D48B6:
	cmp r1, r2
	blo _021D486C
_021D48BA:
	adds r0, r5, #0
	pop {r4, r5, r6, r7}
	bx lr
	thumb_func_end FUN_021D485C

	thumb_func_start FUN_021D48C0
FUN_021D48C0: ; 0x021D48C0
	ldr r2, [r0, #4]
	lsrs r3, r2, #0x1f
	bne _021D48DC
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [r0, #8]
	lsls r0, r2, #1
	lsrs r0, r0, #1
	cmp r1, r0
	bne _021D48D8
	movs r0, #1
	bx lr
_021D48D8:
	movs r0, #0
	bx lr
_021D48DC:
	movs r0, #1
	bx lr
	thumb_func_end FUN_021D48C0

	thumb_func_start FUN_021D48E0
FUN_021D48E0: ; 0x021D48E0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	movs r1, #0
	movs r2, #0x40
	blx FUN_020787D4
	ldrb r1, [r5, #3]
	movs r0, #0x40
	bics r1, r0
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x19
	orrs r0, r1
	strb r0, [r5, #3]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D48E0

	thumb_func_start FUN_021D4904
FUN_021D4904: ; 0x021D4904
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r3, #4
	lsls r2, r2, #0x1f
	strb r3, [r0, #4]
	lsrs r3, r2, #0x18
	movs r2, #0x20
	orrs r2, r3
	strb r2, [r0, #5]
	movs r2, #2
	str r2, [r1]
	adds r0, r0, #4
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D4904

	thumb_func_start FUN_021D4920
FUN_021D4920: ; 0x021D4920
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	ldrb r1, [r4]
	mov ip, r2
	cmp r1, #0
	bne _021D4940
	ldrb r2, [r4, #3]
	movs r1, #0x3f
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strb r1, [r4, #3]
	movs r1, #2
	strb r1, [r4]
_021D4940:
	ldrb r6, [r4, #1]
	movs r2, #1
	lsls r2, r0
	adds r1, r6, #0
	tst r1, r2
	bne _021D4992
	lsls r1, r3, #2
	str r1, [sp]
	ldr r5, [sp]
	ldrb r1, [r4]
	adds r5, r5, #1
	adds r5, r1, r5
	cmp r5, #0x3c
	bhi _021D498A
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	orrs r2, r6
	strb r2, [r4, #1]
	ldrb r2, [r4, #2]
	lsls r0, r0, #5
	adds r2, r2, #1
	strb r2, [r4, #2]
	adds r2, r0, #0
	orrs r2, r3
	adds r0, r4, r1
	strb r2, [r0, #4]
	ldrb r1, [r4]
	adds r2, r4, #4
	mov r0, ip
	adds r1, r1, #1
	adds r1, r2, r1
	ldr r2, [sp]
	blx FUN_0207894C
	add sp, #4
	strb r5, [r4]
	pop {r3, r4, r5, r6, pc}
_021D498A:
	ldrb r1, [r4, #3]
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r4, #3]
_021D4992:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021D4920

	thumb_func_start FUN_021D4998
FUN_021D4998: ; 0x021D4998
	push {r4, r5}
	ldrb r4, [r0, #3]
	lsls r3, r4, #0x18
	lsrs r3, r3, #0x1f
	bne _021D49CA
	strb r1, [r0, #4]
	lsls r1, r4, #0x1a
	lsrs r3, r1, #0x1a
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x1f
	lsls r4, r4, #0x1f
	lsls r3, r3, #0x1d
	ldrb r5, [r0, #2]
	movs r1, #0xf
	lsrs r4, r4, #0x18
	lsrs r3, r3, #0x19
	ands r1, r5
	orrs r3, r4
	orrs r1, r3
	strb r1, [r0, #5]
	ldrb r1, [r0]
	adds r0, r0, #4
	str r1, [r2]
	pop {r4, r5}
	bx lr
_021D49CA:
	movs r0, #0
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_021D4998

	thumb_func_start FUN_021D49D0
FUN_021D49D0: ; 0x021D49D0
	movs r2, #0
	strb r2, [r0, #4]
	movs r2, #0x30
	strb r2, [r0, #5]
	movs r2, #2
	str r2, [r1]
	adds r0, r0, #4
	bx lr
	thumb_func_end FUN_021D49D0

	thumb_func_start FUN_021D49E0
FUN_021D49E0: ; 0x021D49E0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	adds r1, r4, #4
	adds r5, r2, #0
	blx FUN_0207894C
	movs r0, #0
	ldrb r1, [r4, #3]
	strb r0, [r4, #1]
	strb r0, [r4, #2]
	movs r0, #0x3f
	bics r1, r0
	strb r1, [r4, #3]
	ldrb r1, [r4, #3]
	movs r0, #0x40
	strb r5, [r4]
	bics r1, r0
	strb r1, [r4, #3]
	ldrb r1, [r4, #3]
	movs r0, #0x80
	bics r1, r0
	strb r1, [r4, #3]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D49E0

	thumb_func_start FUN_021D4A10
FUN_021D4A10: ; 0x021D4A10
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	cmp r1, #0
	bne _021D4A1E
	movs r1, #2
	str r1, [r4]
_021D4A1E:
	ldrb r1, [r0]
	ldr r5, [r4]
	cmp r5, r1
	bhs _021D4A58
	adds r1, r0, r5
	ldrb r1, [r1, #4]
	movs r5, #7
	adds r0, r0, #4
	asrs r6, r1, #5
	ands r5, r6
	strb r5, [r2]
	movs r2, #0x1f
	ands r1, r2
	strb r1, [r3]
	ldrb r1, [r3]
	lsls r5, r1, #2
	ldr r1, [r4]
	adds r2, r5, #0
	adds r1, r1, #1
	str r1, [r4]
	adds r0, r0, r1
	ldr r1, [sp, #0x10]
	blx FUN_0207894C
	ldr r0, [r4]
	adds r0, r0, r5
	str r0, [r4]
	movs r0, #1
	pop {r4, r5, r6, pc}
_021D4A58:
	movs r0, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_021D4A10

	thumb_func_start FUN_021D4A5C
FUN_021D4A5C: ; 0x021D4A5C
	push {r3, r4}
	movs r4, #0
	ldr r1, _021D4A78 ; =0x021DD8AC
	adds r3, r4, #0
_021D4A64:
	lsls r2, r4, #2
	adds r4, r4, #1
	str r3, [r1, r2]
	cmp r4, #4
	blt _021D4A64
	ldr r1, _021D4A7C ; =0x021DD8A8
	str r0, [r1]
	pop {r3, r4}
	bx lr
	nop
_021D4A78: .word 0x021DD8AC
_021D4A7C: .word 0x021DD8A8
	thumb_func_end FUN_021D4A5C

	thumb_func_start FUN_021D4A80
FUN_021D4A80: ; 0x021D4A80
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D4A80

	thumb_func_start FUN_021D4A84
FUN_021D4A84: ; 0x021D4A84
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	ldr r6, _021D4AF0 ; =0x021DD8AC
	lsls r4, r5, #2
	ldr r1, [r6, r4]
	adds r7, r0, #0
	movs r0, #0
	str r2, [sp, #4]
	cmp r1, #0
	bne _021D4AD2
	movs r0, #0x7e
	str r0, [sp]
	adds r0, r3, #0
	movs r1, #0xbd
	ldr r3, _021D4AF4 ; =0x021DB004
	lsls r1, r1, #4
	movs r2, #1
	bl FUN_0203A228
	str r7, [r0]
	strb r5, [r0, #0xd]
	ldrb r1, [r0, #0xc]
	movs r2, #0xf0
	bics r1, r2
	ldr r2, [sp, #4]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x18
	orrs r1, r2
	strb r1, [r0, #0xc]
	movs r1, #0
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	ldrb r2, [r0, #0xc]
	movs r1, #0xf
	bics r2, r1
	strb r2, [r0, #0xc]
_021D4AD2:
	ldr r1, _021D4AF8 ; =0x021DD8A8
	ldr r1, [r1]
	cmp r1, #0
	bne _021D4AE8
	ldr r1, [r6, r4]
	cmp r1, #0
	bne _021D4AE2
	str r0, [r6, r4]
_021D4AE2:
	add sp, #8
	ldr r0, [r6, r4]
	pop {r3, r4, r5, r6, r7, pc}
_021D4AE8:
	str r0, [r6, r4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D4AF0: .word 0x021DD8AC
_021D4AF4: .word 0x021DB004
_021D4AF8: .word 0x021DD8A8
	thumb_func_end FUN_021D4A84

	thumb_func_start FUN_021D4AFC
FUN_021D4AFC: ; 0x021D4AFC
	ldrb r2, [r0, #0xc]
	movs r1, #0
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	movs r1, #0xf
	bics r2, r1
	strb r2, [r0, #0xc]
	bx lr
	thumb_func_end FUN_021D4AFC

	thumb_func_start FUN_021D4B0C
FUN_021D4B0C: ; 0x021D4B0C
	ldr r3, _021D4B10 ; =FUN_0203A278
	bx r3
	.align 2, 0
_021D4B10: .word FUN_0203A278
	thumb_func_end FUN_021D4B0C

	thumb_func_start FUN_021D4B14
FUN_021D4B14: ; 0x021D4B14
	push {r3, lr}
	ldr r0, _021D4B24 ; =0x021DD8A8
	ldr r0, [r0]
	cmp r0, #0
	beq _021D4B22
	bl FUN_021BA498
_021D4B22:
	pop {r3, pc}
	.align 2, 0
_021D4B24: .word 0x021DD8A8
	thumb_func_end FUN_021D4B14

	thumb_func_start FUN_021D4B28
FUN_021D4B28: ; 0x021D4B28
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D4B28

	thumb_func_start FUN_021D4B2C
FUN_021D4B2C: ; 0x021D4B2C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #1
	strb r0, [r4, #0xe]
	adds r0, r2, #0
	strb r1, [r4, #0xf]
	strh r1, [r4, #0x10]
	adds r1, r4, #0
	adds r1, #0x14
	adds r2, r3, #0
	strh r3, [r4, #0x12]
	blx FUN_0207894C
	movs r0, #0
	ldrb r1, [r4, #0xc]
	str r0, [r4, #4]
	str r0, [r4, #8]
	movs r0, #0xf
	bics r1, r0
	strb r1, [r4, #0xc]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D4B2C

	thumb_func_start FUN_021D4B58
FUN_021D4B58: ; 0x021D4B58
	push {r4, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #0xe]
	cmp r1, #1
	beq _021D4B6C
	cmp r1, #3
	beq _021D4B78
	cmp r1, #4
	beq _021D4B86
	b _021D4B8A
_021D4B6C:
	bl FUN_021D4BB0
	cmp r0, #0
	beq _021D4B8A
	movs r0, #3
	strb r0, [r4, #0xe]
_021D4B78:
	adds r0, r4, #0
	bl FUN_021D4BD0
	cmp r0, #0
	beq _021D4B8A
	movs r0, #4
	strb r0, [r4, #0xe]
_021D4B86:
	movs r0, #1
	pop {r4, pc}
_021D4B8A:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D4B58

	thumb_func_start FUN_021D4B90
FUN_021D4B90: ; 0x021D4B90
	cmp r1, #0
	beq _021D4B98
	ldr r2, [r0, #8]
	str r2, [r1]
_021D4B98:
	ldr r0, [r0, #4]
	bx lr
	thumb_func_end FUN_021D4B90

	thumb_func_start FUN_021D4B9C
FUN_021D4B9C: ; 0x021D4B9C
	push {r3, lr}
	movs r1, #0
	strb r1, [r0, #0xe]
	ldrb r0, [r0, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	beq _021D4BAE
	bl FUN_021BA498
_021D4BAE:
	pop {r3, pc}
	thumb_func_end FUN_021D4B9C

	thumb_func_start FUN_021D4BB0
FUN_021D4BB0: ; 0x021D4BB0
	push {r3, lr}
	ldrb r1, [r0, #0xc]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x1c
	beq _021D4BCA
	adds r1, r0, #0
	adds r1, #0x10
	ldrh r2, [r1, #2]
	ldrb r0, [r0, #0xd]
	adds r2, r2, #4
	bl FUN_021BA398
	pop {r3, pc}
_021D4BCA:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D4BB0

	thumb_func_start FUN_021D4BD0
FUN_021D4BD0: ; 0x021D4BD0
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xc]
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x1c
	beq _021D4C00
	bl FUN_021BA3D8
	cmp r0, #0
	beq _021D4BFC
	ldrb r0, [r4, #0xd]
	adds r1, r4, #4
	bl FUN_021BA414
	str r0, [r4, #8]
	ldrb r1, [r4, #0xc]
	movs r0, #0xf
	bics r1, r0
	movs r0, #1
	orrs r1, r0
	strb r1, [r4, #0xc]
	pop {r4, pc}
_021D4BFC:
	movs r0, #0
	pop {r4, pc}
_021D4C00:
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D4BD0

	thumb_func_start FUN_021D4C08
FUN_021D4C08: ; 0x021D4C08
	movs r1, #0
	strh r1, [r0, #0x10]
	movs r1, #4
	strh r1, [r0, #0x12]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D4C08

	thumb_func_start FUN_021D4C14
FUN_021D4C14: ; 0x021D4C14
	push {r3, lr}
	ldrb r1, [r0, #0xc]
	lsls r2, r1, #0x18
	lsrs r2, r2, #0x1c
	beq _021D4C3A
	bl FUN_021BA4A0
	cmp r0, #0
	beq _021D4C36
	add r0, sp, #0
	bl FUN_021BA4AC
	ldr r0, [sp]
	ldrh r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
_021D4C36:
	movs r0, #0
	pop {r3, pc}
_021D4C3A:
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bne _021D4C48
	ldrh r0, [r0, #0x10]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
_021D4C48:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_021D4C14

	thumb_func_start FUN_021D4C4C
FUN_021D4C4C: ; 0x021D4C4C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r1, #0
	ldrb r1, [r0, #0xc]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x1c
	beq _021D4C6C
	add r0, sp, #0
	bl FUN_021BA4AC
	ldr r1, [sp]
	add sp, #4
	adds r0, r1, #4
	str r0, [r4]
	ldrh r0, [r1, #2]
	pop {r3, r4, pc}
_021D4C6C:
	adds r1, r0, #0
	adds r1, #0x14
	str r1, [r4]
	ldrh r0, [r0, #0x12]
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021D4C4C

	thumb_func_start FUN_021D4C78
FUN_021D4C78: ; 0x021D4C78
	push {r4, lr}
	ldrb r3, [r0, #0xc]
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x1c
	beq _021D4C8C
	adds r0, r1, #0
	adds r1, r2, #0
	bl FUN_021BA4C4
	pop {r4, pc}
_021D4C8C:
	lsls r4, r3, #0x1c
	lsrs r4, r4, #0x1c
	bne _021D4CA0
	str r1, [r0, #4]
	movs r1, #0xf
	bics r3, r1
	movs r1, #1
	orrs r1, r3
	str r2, [r0, #8]
	strb r1, [r0, #0xc]
_021D4CA0:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_021D4C78

	thumb_func_start FUN_021D4CA4
FUN_021D4CA4: ; 0x021D4CA4
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	adds r4, r1, #0
	adds r7, r2, #0
	adds r5, r3, #0
	bl FUN_0219C9C8
	adds r6, r0, #0
	ldr r1, [sp]
	ldr r0, _021D4D80 ; =0x021DD8BC
	str r1, [r0]
	str r7, [r0, #4]
	ldr r0, _021D4D84 ; =0x021DD8FC
	movs r7, #2
	strh r5, [r0, #0x20]
	ldr r0, _021D4D80 ; =0x021DD8BC
	lsls r7, r7, #8
	str r4, [r0, #0x64]
	adds r0, r1, #0
	adds r1, r7, #0
	bl FUN_0219DB04
	ldr r1, _021D4D84 ; =0x021DD8FC
	movs r4, #0
	strh r0, [r1, #0x28]
	adds r0, r1, #0
	strh r4, [r0, #0x2a]
	adds r0, r5, #0
	bl FUN_02024200
	ldr r1, _021D4D80 ; =0x021DD8BC
	adds r7, #0xf4
	str r0, [r1, #8]
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_0204855C
	ldr r1, _021D4D80 ; =0x021DD8BC
	adds r7, r4, #0
	str r0, [r1, #0xc]
_021D4CF4:
	ldr r0, _021D4D88 ; =0x021DAA5C
	lsls r1, r4, #1
	ldrh r2, [r0, r1]
	cmp r6, #1
	bne _021D4D04
	cmp r2, #0x13
	bne _021D4D04
	movs r2, #0x11
_021D4D04:
	lsls r2, r2, #0x10
	adds r0, r7, #0
	movs r1, #2
	lsrs r2, r2, #0x10
	adds r3, r5, #0
	bl FUN_02048788
	lsls r2, r4, #2
	ldr r1, _021D4D80 ; =0x021DD8BC
	adds r4, r4, #1
	adds r1, r1, r2
	str r0, [r1, #0x10]
	cmp r4, #9
	blt _021D4CF4
	cmp r6, #0
	beq _021D4D7E
	ldr r0, [sp]
	bl FUN_0219E3DC
	adds r4, r0, #0
	ldr r0, [sp]
	bl FUN_0219BFA8
	bl FUN_02008BF0
	cmp r0, #0
	bne _021D4D3C
	movs r7, #1
_021D4D3C:
	ldr r0, [sp]
	bl FUN_0219C9F0
	adds r2, r0, #0
	lsls r3, r7, #0x18
	lsls r2, r2, #1
	lsrs r3, r3, #0x18
	adds r2, #0xb5
	adds r2, r3, r2
	lsls r2, r2, #0x10
	movs r0, #0
	movs r1, #2
	lsrs r2, r2, #0x10
	adds r3, r5, #0
	bl FUN_02048788
	ldr r7, _021D4D80 ; =0x021DD8BC
	cmp r6, #1
	str r0, [r7, #0x34]
	bne _021D4D7E
	movs r2, #8
	ldrsh r2, [r4, r2]
	movs r0, #0
	movs r1, #2
	lsls r3, r2, #2
	ldr r2, _021D4D8C ; =0x021DAA70
	ldr r2, [r2, r3]
	adds r3, r5, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	bl FUN_02048788
	str r0, [r7, #0x38]
_021D4D7E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D4D80: .word 0x021DD8BC
_021D4D84: .word 0x021DD8FC
_021D4D88: .word 0x021DAA5C
_021D4D8C: .word 0x021DAA70
	thumb_func_end FUN_021D4CA4

	thumb_func_start FUN_021D4D90
FUN_021D4D90: ; 0x021D4D90
	push {r3, r4, r5, lr}
	ldr r4, _021D4DB8 ; =0x021DD8BC
	ldr r0, [r4, #8]
	bl FUN_020242A0
	ldr r0, [r4, #0xc]
	bl FUN_02048590
	movs r5, #0
_021D4DA2:
	lsls r0, r5, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _021D4DB0
	bl FUN_02048800
_021D4DB0:
	adds r5, r5, #1
	cmp r5, #0xb
	blt _021D4DA2
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D4DB8: .word 0x021DD8BC
	thumb_func_end FUN_021D4D90

	thumb_func_start FUN_021D4DBC
FUN_021D4DBC: ; 0x021D4DBC
	push {r3, r4, r5, lr}
	ldr r4, _021D4DDC ; =0x021DD8BC
	adds r2, r0, #0
	ldr r0, [r4, #4]
	adds r5, r1, #0
	adds r1, r2, #0
	bl FUN_0219D25C
	bl FUN_021BB0A4
	adds r2, r0, #0
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_02024490
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D4DDC: .word 0x021DD8BC
	thumb_func_end FUN_021D4DBC

	thumb_func_start FUN_021D4DE0
FUN_021D4DE0: ; 0x021D4DE0
	push {r3, r4, r5, lr}
	ldr r4, _021D4E00 ; =0x021DD8BC
	adds r2, r0, #0
	ldr r0, [r4, #4]
	adds r5, r1, #0
	adds r1, r2, #0
	bl FUN_0219D25C
	bl FUN_021BB084
	adds r2, r0, #0
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_02024490
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D4E00: .word 0x021DD8BC
	thumb_func_end FUN_021D4DE0

	thumb_func_start FUN_021D4E04
FUN_021D4E04: ; 0x021D4E04
	push {r3, r4, r5, lr}
	ldr r4, _021D4E24 ; =0x021DD8BC
	adds r2, r0, #0
	ldr r0, [r4, #4]
	adds r5, r1, #0
	adds r1, r2, #0
	bl FUN_0219D25C
	bl FUN_021BB0A4
	adds r2, r0, #0
	ldr r0, [r4, #8]
	adds r1, r5, #0
	bl FUN_02024420
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D4E24: .word 0x021DD8BC
	thumb_func_end FUN_021D4E04

	thumb_func_start FUN_021D4E28
FUN_021D4E28: ; 0x021D4E28
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	ldr r0, _021D4E88 ; =0x021DD8BC
	adds r5, r2, #0
	adds r7, r1, #0
	ldr r0, [r0]
	adds r1, r5, #0
	bl FUN_0219D978
	adds r4, r0, #0
	ldr r0, _021D4E88 ; =0x021DD8BC
	ldr r0, [r0]
	bl FUN_0219E350
	lsls r1, r5, #2
	adds r0, r0, r1
	ldr r5, [r0, #0x58]
	cmp r5, #0
	beq _021D4E78
	adds r0, r5, #0
	bl FUN_02048544
	cmp r0, #0
	beq _021D4E78
	adds r0, r4, #0
	bl FUN_02030760
	adds r3, r0, #0
	movs r0, #1
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_020243A8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021D4E78:
	lsls r2, r4, #0x18
	adds r0, r6, #0
	adds r1, r7, #0
	lsrs r2, r2, #0x18
	bl FUN_020246C0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D4E88: .word 0x021DD8BC
	thumb_func_end FUN_021D4E28

	thumb_func_start FUN_021D4E8C
FUN_021D4E8C: ; 0x021D4E8C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r2, #0
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r6, #4
	beq _021D4EE6
	ldr r7, _021D4EFC ; =0x021DD8BC
	adds r1, r6, #0
	ldr r0, [r7]
	bl FUN_0219D8C8
	cmp r0, #0
	ldr r0, [r7]
	beq _021D4ED2
	adds r1, r6, #0
	add r2, sp, #8
	bl FUN_0219D904
	adds r6, r0, #0
	ldr r0, [sp, #8]
	bl FUN_02030760
	adds r3, r0, #0
	movs r0, #1
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_020243A8
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021D4ED2:
	adds r1, r6, #0
	bl FUN_0219D9BC
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020245D4
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_021D4EE6:
	ldr r0, _021D4EFC ; =0x021DD8BC
	ldr r0, [r0]
	bl FUN_0219D9D8
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020245D4
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D4EFC: .word 0x021DD8BC
	thumb_func_end FUN_021D4E8C

	thumb_func_start FUN_021D4F00
FUN_021D4F00: ; 0x021D4F00
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021D4F00

	non_word_aligned_thumb_func_start FUN_021D4F02
FUN_021D4F02: ; 0x021D4F02
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r1, #0
	add r1, sp, #0x20
	movs r0, #3
	bics r1, r0
	ldr r3, [sp, #0x20]
	adds r1, r1, #4
	movs r2, #0
	cmp r3, #0
	bls _021D4F2C
	ldr r6, _021D4F54 ; =0x021DD8BC
_021D4F1A:
	adds r1, r1, #4
	subs r0, r1, #4
	lsls r5, r2, #2
	ldr r0, [r0]
	adds r5, r6, r5
	adds r2, r2, #1
	str r0, [r5, #0x3c]
	cmp r2, r3
	blo _021D4F1A
_021D4F2C:
	cmp r2, #9
	bhs _021D4F40
	ldr r1, _021D4F54 ; =0x021DD8BC
	movs r3, #0
_021D4F34:
	lsls r0, r2, #2
	adds r0, r1, r0
	adds r2, r2, #1
	str r3, [r0, #0x3c]
	cmp r2, #9
	blo _021D4F34
_021D4F40:
	ldr r2, _021D4F58 ; =0x021DD8F8
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_021D4F5C
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	nop
_021D4F54: .word 0x021DD8BC
_021D4F58: .word 0x021DD8F8
	thumb_func_end FUN_021D4F02

	thumb_func_start FUN_021D4F5C
FUN_021D4F5C: ; 0x021D4F5C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	ldr r1, _021D4F9C ; =0x021DAA84
	adds r6, r0, #0
	movs r2, #0
_021D4F68:
	lsls r0, r2, #1
	ldrh r0, [r1, r0]
	cmp r5, r0
	bne _021D4F8A
	ldr r0, _021D4FA0 ; =0x021DD8BC
	ldr r1, [r4]
	ldr r0, [r0]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C47C
	cmp r0, #0
	bne _021D4F90
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	b _021D4F90
_021D4F8A:
	adds r2, r2, #1
	cmp r2, #0x1b
	blo _021D4F68
_021D4F90:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021D4FA4
	pop {r4, r5, r6, pc}
	.align 2, 0
_021D4F9C: .word 0x021DAA84
_021D4FA0: .word 0x021DD8BC
	thumb_func_end FUN_021D4F5C

	thumb_func_start FUN_021D4FA4
FUN_021D4FA4: ; 0x021D4FA4
	push {r4, r5, r6, lr}
	ldr r4, _021D4FCC ; =0x021DD8BC
	adds r5, r0, #0
	adds r6, r2, #0
	ldr r0, [r4, #0x10]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r0, [r4, #0xc]
	ldr r2, [r4, #8]
	adds r1, r6, #0
	bl FUN_021D50BC
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r5, #0
	bl FUN_0202494C
	pop {r4, r5, r6, pc}
	nop
_021D4FCC: .word 0x021DD8BC
	thumb_func_end FUN_021D4FA4

	thumb_func_start FUN_021D4FD0
FUN_021D4FD0: ; 0x021D4FD0
	push {r4, r5, r6, lr}
	ldr r4, _021D4FF4 ; =0x021DAABC
	movs r6, #0
_021D4FD6:
	lsls r5, r6, #3
	ldrh r3, [r4, r5]
	cmp r1, r3
	bne _021D4FE6
	ldr r3, _021D4FF8 ; =0x021DAAC0
	ldr r3, [r3, r5]
	blx r3
	pop {r4, r5, r6, pc}
_021D4FE6:
	adds r6, r6, #1
	cmp r6, #0xe
	blo _021D4FD6
	bl FUN_021D52A8
	pop {r4, r5, r6, pc}
	nop
_021D4FF4: .word 0x021DAABC
_021D4FF8: .word 0x021DAAC0
	thumb_func_end FUN_021D4FD0

	thumb_func_start FUN_021D4FFC
FUN_021D4FFC: ; 0x021D4FFC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	cmp r5, #0
	beq _021D506C
	bl FUN_02048720
	adds r4, r0, #0
	bl FUN_02022B5C
	adds r6, r0, #0
	ldrh r0, [r5]
	cmp r0, r4
	beq _021D5066
_021D501E:
	cmp r0, r6
	bne _021D505E
	adds r0, r5, #0
	bl FUN_02022B64
	cmp r0, #0
	beq _021D5054
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02022C08
	ldr r1, [sp, #4]
	strb r0, [r1]
	adds r0, r5, #0
	bl FUN_02022B8C
	str r0, [r7]
	adds r0, r5, #0
	bl FUN_02022BF0
	ldr r1, [sp]
	strh r0, [r1]
	adds r0, r5, #0
	bl FUN_02022C20
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_021D5054:
	adds r0, r5, #0
	bl FUN_02022C20
	adds r5, r0, #0
	b _021D5060
_021D505E:
	adds r5, r5, #2
_021D5060:
	ldrh r0, [r5]
	cmp r0, r4
	bne _021D501E
_021D5066:
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D506C:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D4FFC

	thumb_func_start FUN_021D5074
FUN_021D5074: ; 0x021D5074
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	bl FUN_0204871C
	movs r5, #0
	cmp r0, #0
	beq _021D50B6
	add r7, sp, #0
	add r6, sp, #4
	adds r7, #2
	add r4, sp, #0
_021D508A:
	adds r1, r6, #0
	adds r2, r7, #0
	add r3, sp, #0
	bl FUN_021D4FFC
	cmp r0, #0
	beq _021D50B2
	ldr r1, [sp, #4]
	cmp r1, #1
	bne _021D50B2
	ldrh r1, [r4, #2]
	cmp r1, #1
	beq _021D50AC
	cmp r1, #2
	beq _021D50AC
	cmp r1, #0xc
	bne _021D50B2
_021D50AC:
	adds r1, r5, #1
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
_021D50B2:
	cmp r0, #0
	bne _021D508A
_021D50B6:
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D5074

	thumb_func_start FUN_021D50BC
FUN_021D50BC: ; 0x021D50BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp, #8]
	adds r6, r1, #0
	str r2, [sp, #0xc]
	bl FUN_02048720
	str r0, [sp, #0x14]
	bl FUN_02022B5C
	movs r2, #0
	str r0, [sp, #0x10]
	adds r1, r2, #0
	add r0, sp, #0x18
_021D50D8:
	strb r1, [r0, r2]
	adds r2, r2, #1
	cmp r2, #8
	blo _021D50D8
	ldr r0, [sp, #8]
	bl FUN_0204871C
	adds r5, r0, #0
	ldrh r0, [r5]
	ldr r1, [sp, #0x14]
	cmp r0, r1
	beq _021D514A
	add r4, sp, #0x18
_021D50F2:
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _021D5140
	adds r0, r5, #0
	bl FUN_02022B64
	cmp r0, #0
	beq _021D5136
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02022C08
	adds r7, r0, #0
	adds r0, r5, #0
	bl FUN_02022B8C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _021D5136
	adds r0, r5, #0
	bl FUN_02022BF0
	cmp r0, #0xe
	bne _021D5136
	adds r1, r7, #1
	cmp r1, #8
	bhs _021D5136
_021D512A:
	ldrb r0, [r4, r1]
	adds r0, r0, #1
	strb r0, [r4, r1]
	adds r1, r1, #1
	cmp r1, #8
	blo _021D512A
_021D5136:
	adds r0, r5, #0
	bl FUN_02022C20
	adds r5, r0, #0
	b _021D5142
_021D5140:
	adds r5, r5, #2
_021D5142:
	ldrh r0, [r5]
	ldr r1, [sp, #0x14]
	cmp r0, r1
	bne _021D50F2
_021D514A:
	ldr r0, [sp, #8]
	bl FUN_0204871C
	adds r7, r0, #0
	ldrh r1, [r7]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bne _021D515C
	b _021D529E
_021D515C:
	ldr r0, [sp, #0x10]
	cmp r1, r0
	beq _021D5164
	b _021D5292
_021D5164:
	adds r0, r7, #0
	bl FUN_02022B64
	cmp r0, #0
	bne _021D5170
	b _021D5288
_021D5170:
	adds r0, r7, #0
	movs r1, #0
	bl FUN_02022C08
	adds r4, r0, #0
	adds r0, r7, #0
	adds r5, r4, #0
	bl FUN_02022B8C
	add r1, sp, #0x18
	lsls r0, r0, #0x18
	ldrb r1, [r1, r4]
	lsrs r0, r0, #0x18
	cmp r4, r1
	blo _021D5190
	subs r5, r4, r1
_021D5190:
	cmp r0, #2
	bne _021D51B6
	adds r0, r7, #0
	bl FUN_02022BF0
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r0, #0
	str r0, [sp]
	movs r0, #1
	lsls r2, r5, #2
	str r0, [sp, #4]
	ldr r0, [sp, #0xc]
	ldr r2, [r6, r2]
	adds r1, r4, #0
	bl FUN_02024548
	b _021D5288
_021D51B6:
	adds r0, r7, #0
	bl FUN_02022BF0
	cmp r0, #0xf
	bhi _021D5288
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D51CC: ; jump table
	.short _021D5200 - _021D51CC - 2 ; case 0
	.short _021D523E - _021D51CC - 2 ; case 1
	.short _021D5214 - _021D51CC - 2 ; case 2
	.short _021D5250 - _021D51CC - 2 ; case 3
	.short _021D5288 - _021D51CC - 2 ; case 4
	.short _021D5288 - _021D51CC - 2 ; case 5
	.short _021D5252 - _021D51CC - 2 ; case 6
	.short _021D5260 - _021D51CC - 2 ; case 7
	.short _021D5288 - _021D51CC - 2 ; case 8
	.short _021D526E - _021D51CC - 2 ; case 9
	.short _021D5288 - _021D51CC - 2 ; case 10
	.short _021D5288 - _021D51CC - 2 ; case 11
	.short _021D523C - _021D51CC - 2 ; case 12
	.short _021D5288 - _021D51CC - 2 ; case 13
	.short _021D51EC - _021D51CC - 2 ; case 14
	.short _021D527C - _021D51CC - 2 ; case 15
_021D51EC:
	lsls r2, r5, #2
	ldr r2, [r6, r2]
	lsls r1, r4, #0x18
	lsls r2, r2, #0x18
	ldr r0, [sp, #0xc]
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021D4E28
	b _021D5288
_021D5200:
	lsls r2, r5, #2
	ldr r2, [r6, r2]
	lsls r1, r4, #0x18
	lsls r2, r2, #0x18
	ldr r0, [sp, #0xc]
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	bl FUN_021D4E8C
	b _021D5288
_021D5214:
	ldr r0, _021D52A4 ; =0x021DD8FC
	ldrh r0, [r0, #0x2a]
	cmp r0, #0
	bne _021D522C
	lsls r0, r5, #2
	ldr r0, [r6, r0]
	adds r1, r4, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021D4DBC
	b _021D5288
_021D522C:
	lsls r0, r5, #2
	ldr r0, [r6, r0]
	adds r1, r4, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021D4DE0
	b _021D5288
_021D523C:
	b _021D522C
_021D523E:
	lsls r0, r5, #2
	ldr r0, [r6, r0]
	lsls r1, r4, #0x18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021D4E04
	b _021D5288
_021D5250:
	b _021D527C
_021D5252:
	lsls r2, r5, #2
	ldr r0, [sp, #0xc]
	ldr r2, [r6, r2]
	adds r1, r4, #0
	bl FUN_0202452C
	b _021D5288
_021D5260:
	lsls r2, r5, #2
	ldr r0, [sp, #0xc]
	ldr r2, [r6, r2]
	adds r1, r4, #0
	bl FUN_020244D0
	b _021D5288
_021D526E:
	lsls r2, r5, #2
	ldr r0, [sp, #0xc]
	ldr r2, [r6, r2]
	adds r1, r4, #0
	bl FUN_020244E0
	b _021D5288
_021D527C:
	lsls r2, r5, #2
	ldr r0, [sp, #0xc]
	ldr r2, [r6, r2]
	adds r1, r4, #0
	bl FUN_020245C4
_021D5288:
	adds r0, r7, #0
	bl FUN_02022C20
	adds r7, r0, #0
	b _021D5294
_021D5292:
	adds r7, r7, #2
_021D5294:
	ldrh r1, [r7]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	beq _021D529E
	b _021D515C
_021D529E:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D52A4: .word 0x021DD8FC
	thumb_func_end FUN_021D50BC

	thumb_func_start FUN_021D52A8
FUN_021D52A8: ; 0x021D52A8
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _021D52DC ; =0x021DD8BC
	adds r5, r0, #0
	adds r6, r2, #0
	ldr r0, [r7, #0x14]
	ldr r2, [r7, #0xc]
	adds r4, r1, #0
	bl FUN_02048864
	ldr r0, [r7, #0xc]
	bl FUN_021D5074
	cmp r0, #2
	bne _021D52D0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D535C
	pop {r3, r4, r5, r6, r7, pc}
_021D52D0:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_021D52E0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D52DC: .word 0x021DD8BC
	thumb_func_end FUN_021D52A8

	thumb_func_start FUN_021D52E0
FUN_021D52E0: ; 0x021D52E0
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	ldr r1, _021D5354 ; =0x021DD8FC
	adds r7, r2, #0
	adds r6, r0, #0
	ldr r0, [r7]
	ldrh r1, [r1, #0x28]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #0
	bne _021D532A
	bl FUN_0219C688
	ldr r5, _021D5358 ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r5, #0x64]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D532A
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D5322
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D5326
_021D5322:
	movs r1, #1
	b _021D532C
_021D5326:
	movs r1, #2
	b _021D532C
_021D532A:
	movs r1, #0
_021D532C:
	ldr r5, _021D5358 ; =0x021DD8BC
	adds r1, r4, r1
	lsls r1, r1, #0x10
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_02048864
	ldr r0, [r5, #0xc]
	ldr r2, [r5, #8]
	adds r1, r7, #0
	bl FUN_021D50BC
	ldr r0, [r5, #8]
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D5354: .word 0x021DD8FC
_021D5358: .word 0x021DD8BC
	thumb_func_end FUN_021D52E0

	thumb_func_start FUN_021D535C
FUN_021D535C: ; 0x021D535C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	str r0, [sp]
	ldr r0, [r7, #4]
	adds r5, r1, #0
	ldr r1, _021D5478 ; =0x021DD8FC
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r7]
	ldrh r1, [r1, #0x28]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #0
	bne _021D53AC
	bl FUN_0219C688
	ldr r4, _021D547C ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r4, #0x64]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D53AC
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D53A4
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D53A8
_021D53A4:
	movs r4, #1
	b _021D53AE
_021D53A8:
	movs r4, #2
	b _021D53AE
_021D53AC:
	movs r4, #0
_021D53AE:
	cmp r4, #0
	beq _021D53BC
	cmp r4, #1
	beq _021D5400
	cmp r4, #2
	beq _021D5404
	b _021D540A
_021D53BC:
	ldr r0, _021D5478 ; =0x021DD8FC
	ldrh r0, [r0, #0x28]
	cmp r0, #0
	bne _021D53FA
	adds r0, r6, #0
	bl FUN_0219C688
	ldr r4, _021D547C ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r4, #0x64]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D53FA
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D53F2
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D53F6
_021D53F2:
	movs r0, #1
	b _021D53FC
_021D53F6:
	movs r0, #2
	b _021D53FC
_021D53FA:
	movs r0, #0
_021D53FC:
	adds r0, r5, r0
	b _021D5450
_021D5400:
	adds r0, r5, #3
	b _021D5406
_021D5404:
	adds r0, r5, #5
_021D5406:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_021D540A:
	ldr r0, _021D5478 ; =0x021DD8FC
	ldrh r0, [r0, #0x28]
	cmp r0, #0
	bne _021D5448
	adds r0, r6, #0
	bl FUN_0219C688
	ldr r6, _021D547C ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r6, #0x64]
	ldr r0, [r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D5448
	ldr r0, [r6]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D5440
	ldr r0, [r6]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D5444
_021D5440:
	movs r0, #1
	b _021D544A
_021D5444:
	movs r0, #2
	b _021D544A
_021D5448:
	movs r0, #0
_021D544A:
	cmp r4, r0
	bne _021D5454
	adds r0, r5, #1
_021D5450:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_021D5454:
	ldr r4, _021D547C ; =0x021DD8BC
	adds r1, r5, #0
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r0, [r4, #0xc]
	ldr r2, [r4, #8]
	adds r1, r7, #0
	bl FUN_021D50BC
	ldr r0, [r4, #8]
	ldr r1, [sp]
	ldr r2, [r4, #0xc]
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D5478: .word 0x021DD8FC
_021D547C: .word 0x021DD8BC
	thumb_func_end FUN_021D535C

	thumb_func_start FUN_021D5480
FUN_021D5480: ; 0x021D5480
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	str r0, [sp]
	ldr r0, [r4, #8]
	adds r5, r1, #0
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [r4, #0xc]
	movs r1, #0
	cmp r0, #3
	blt _021D549A
	movs r1, #2
_021D549A:
	cmp r0, #2
	bne _021D54A0
	movs r1, #1
_021D54A0:
	movs r0, #0x15
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r5, r0
	ldr r1, _021D5534 ; =0x021DD8FC
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [r4]
	ldrh r1, [r1, #0x28]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #0
	bne _021D54F0
	bl FUN_0219C688
	ldr r6, _021D5538 ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r6, #0x64]
	ldr r0, [r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D54F0
	ldr r0, [r6]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D54E8
	ldr r0, [r6]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D54EC
_021D54E8:
	movs r6, #1
	b _021D54F2
_021D54EC:
	movs r6, #2
	b _021D54F2
_021D54F0:
	movs r6, #0
_021D54F2:
	ldr r0, [r4]
	movs r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021D4DBC
	ldr r0, _021D5538 ; =0x021DD8BC
	ldr r2, [r4, #4]
	ldr r0, [r0, #8]
	movs r1, #1
	bl FUN_020244E0
	lsls r1, r7, #1
	adds r1, r7, r1
	ldr r0, _021D5538 ; =0x021DD8BC
	adds r1, r5, r1
	ldr r2, _021D5538 ; =0x021DD8BC
	adds r1, r1, r6
	lsls r1, r1, #0x10
	ldr r0, [r0, #0x14]
	ldr r2, [r2, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_02048864
	ldr r0, _021D5538 ; =0x021DD8BC
	ldr r2, _021D5538 ; =0x021DD8BC
	ldr r0, [r0, #8]
	ldr r1, [sp]
	ldr r2, [r2, #0xc]
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D5534: .word 0x021DD8FC
_021D5538: .word 0x021DD8BC
	thumb_func_end FUN_021D5480

	thumb_func_start FUN_021D553C
FUN_021D553C: ; 0x021D553C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r7, r0, #0
	ldr r0, [r4, #4]
	adds r5, r1, #0
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r4, #8]
	movs r1, #0
	cmp r0, #3
	blt _021D5556
	movs r1, #2
_021D5556:
	cmp r0, #2
	bne _021D555C
	movs r1, #1
_021D555C:
	movs r0, #0x15
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [r4]
	movs r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021D4DBC
	ldr r1, _021D55DC ; =0x021DD8FC
	ldr r0, [r4]
	ldrh r1, [r1, #0x28]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #0
	bne _021D55B8
	bl FUN_0219C688
	ldr r4, _021D55E0 ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r4, #0x64]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D55B8
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D55B0
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D55B4
_021D55B0:
	movs r1, #1
	b _021D55BA
_021D55B4:
	movs r1, #2
	b _021D55BA
_021D55B8:
	movs r1, #0
_021D55BA:
	lsls r2, r6, #1
	adds r2, r6, r2
	ldr r4, _021D55E0 ; =0x021DD8BC
	adds r2, r5, r2
	adds r1, r2, r1
	lsls r1, r1, #0x10
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_02048864
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D55DC: .word 0x021DD8FC
_021D55E0: .word 0x021DD8BC
	thumb_func_end FUN_021D553C

	thumb_func_start FUN_021D55E4
FUN_021D55E4: ; 0x021D55E4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r7, r0, #0
	ldr r0, [r4, #4]
	adds r6, r1, #0
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [r4]
	movs r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_021D4DBC
	ldr r1, _021D5668 ; =0x021DD8FC
	ldr r0, [r4]
	ldrh r1, [r1, #0x28]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, #0
	bne _021D5642
	bl FUN_0219C688
	ldr r4, _021D566C ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r4, #0x64]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D5642
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D563A
	ldr r0, [r4]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D563E
_021D563A:
	movs r1, #1
	b _021D5644
_021D563E:
	movs r1, #2
	b _021D5644
_021D5642:
	movs r1, #0
_021D5644:
	lsls r2, r5, #1
	adds r2, r5, r2
	ldr r4, _021D566C ; =0x021DD8BC
	adds r2, r6, r2
	adds r1, r2, r1
	lsls r1, r1, #0x10
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_02048864
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D5668: .word 0x021DD8FC
_021D566C: .word 0x021DD8BC
	thumb_func_end FUN_021D55E4

	thumb_func_start FUN_021D5670
FUN_021D5670: ; 0x021D5670
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r4, r0, #0
	ldr r0, [r6]
	ldr r7, _021D56C0 ; =0x021DD8BC
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [r7]
	bl FUN_0219C8A0
	cmp r5, r0
	beq _021D569C
	ldr r0, [r7]
	adds r1, r5, #0
	bl FUN_0219D8C8
	cmp r0, #0
	beq _021D5698
	movs r1, #0x23
	b _021D569E
_021D5698:
	movs r1, #0x22
	b _021D569E
_021D569C:
	movs r1, #0x21
_021D569E:
	ldr r5, _021D56C0 ; =0x021DD8BC
	ldr r0, [r5, #0x10]
	ldr r2, [r5, #0xc]
	bl FUN_02048864
	ldr r0, [r5, #0xc]
	ldr r2, [r5, #8]
	adds r1, r6, #0
	bl FUN_021D50BC
	ldr r0, [r5, #8]
	ldr r2, [r5, #0xc]
	adds r1, r4, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D56C0: .word 0x021DD8BC
	thumb_func_end FUN_021D5670

	thumb_func_start FUN_021D56C4
FUN_021D56C4: ; 0x021D56C4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, _021D5738 ; =0x021DD8FC
	adds r4, r1, #0
	ldrh r0, [r0, #0x28]
	adds r6, r2, #0
	cmp r0, #0
	bne _021D570A
	adds r0, r4, #0
	bl FUN_0219C688
	ldr r5, _021D573C ; =0x021DD8BC
	adds r2, r0, #0
	ldr r1, [r5, #0x64]
	ldr r0, [r5]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0219C594
	cmp r0, #0
	beq _021D570A
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #0
	beq _021D5702
	ldr r0, [r5]
	bl FUN_0219BF14
	cmp r0, #4
	bne _021D5706
_021D5702:
	movs r5, #1
	b _021D570C
_021D5706:
	movs r5, #2
	b _021D570C
_021D570A:
	movs r5, #0
_021D570C:
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021D4DBC
	ldr r4, _021D573C ; =0x021DD8BC
	lsls r1, r6, #1
	adds r1, r6, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r1, r1, r5
	lsls r1, r1, #0x10
	ldr r0, [r4, #0x18]
	ldr r2, [r4, #0xc]
	lsrs r1, r1, #0x10
	bl FUN_02048864
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D5738: .word 0x021DD8FC
_021D573C: .word 0x021DD8BC
	thumb_func_end FUN_021D56C4

	thumb_func_start FUN_021D5740
FUN_021D5740: ; 0x021D5740
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #2
	lsls r0, r0, #0xa
	adds r4, r2, #0
	cmp r1, r0
	blo _021D5770
	ldr r0, _021D5798 ; =0x021DD8BC
	ldr r0, [r0]
	bl FUN_0219E350
	adds r1, r0, #0
	cmp r4, #0
	bne _021D5766
	ldr r1, [r1, #0x6c]
	adds r0, r5, #0
	bl FUN_020485AC
	pop {r3, r4, r5, pc}
_021D5766:
	ldr r1, [r1, #0x68]
	adds r0, r5, #0
	bl FUN_020485AC
	pop {r3, r4, r5, pc}
_021D5770:
	cmp r1, #0
	beq _021D5796
	subs r1, r1, #1
	lsls r0, r1, #1
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r4, #0
	bne _021D5786
	adds r0, r0, #1
	b _021D5788
_021D5786:
	adds r0, r0, #2
_021D5788:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _021D5798 ; =0x021DD8BC
	adds r2, r5, #0
	ldr r0, [r0, #0x2c]
	bl FUN_02048864
_021D5796:
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D5798: .word 0x021DD8BC
	thumb_func_end FUN_021D5740

	thumb_func_start FUN_021D579C
FUN_021D579C: ; 0x021D579C
	adds r2, r0, #0
	ldr r0, _021D57A8 ; =0x021DD8BC
	ldr r3, _021D57AC ; =FUN_02048864
	ldr r0, [r0, #0x1c]
	bx r3
	nop
_021D57A8: .word 0x021DD8BC
_021D57AC: .word FUN_02048864
	thumb_func_end FUN_021D579C

	thumb_func_start FUN_021D57B0
FUN_021D57B0: ; 0x021D57B0
	ldr r3, _021D57B4 ; =FUN_021D57B8
	bx r3
	.align 2, 0
_021D57B4: .word FUN_021D57B8
	thumb_func_end FUN_021D57B0

	thumb_func_start FUN_021D57B8
FUN_021D57B8: ; 0x021D57B8
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, _021D57E8 ; =0x021DD8BC
	adds r5, r0, #0
	adds r6, r2, #0
	ldr r0, [r4, #0x24]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r7, _021D57EC ; =0x021DD8FC
	movs r0, #1
	strh r0, [r7, #0x2a]
	ldr r0, [r4, #0xc]
	ldr r2, [r4, #8]
	adds r1, r6, #0
	bl FUN_021D50BC
	movs r0, #0
	strh r0, [r7, #0x2a]
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r5, #0
	bl FUN_0202494C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D57E8: .word 0x021DD8BC
_021D57EC: .word 0x021DD8FC
	thumb_func_end FUN_021D57B8

	thumb_func_start FUN_021D57F0
FUN_021D57F0: ; 0x021D57F0
	ldr r3, _021D57F4 ; =FUN_021D57F8
	bx r3
	.align 2, 0
_021D57F4: .word FUN_021D57F8
	thumb_func_end FUN_021D57F0

	thumb_func_start FUN_021D57F8
FUN_021D57F8: ; 0x021D57F8
	push {r4, r5, r6, lr}
	ldr r4, _021D5820 ; =0x021DD8BC
	adds r5, r0, #0
	adds r6, r2, #0
	ldr r0, [r4, #0x28]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r0, [r4, #0xc]
	ldr r2, [r4, #8]
	adds r1, r6, #0
	bl FUN_021D50BC
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r5, #0
	bl FUN_0202494C
	pop {r4, r5, r6, pc}
	nop
_021D5820: .word 0x021DD8BC
	thumb_func_end FUN_021D57F8

	thumb_func_start FUN_021D5824
FUN_021D5824: ; 0x021D5824
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r4, _021D58B0 ; =0x021DD8BC
	adds r7, r0, #0
	str r2, [sp, #0xc]
	str r1, [sp, #8]
	ldr r0, [r4, #0x1c]
	ldr r2, [r4, #0xc]
	movs r1, #0x10
	str r3, [sp, #0x10]
	bl FUN_02048864
	movs r5, #0
	str r5, [sp]
	movs r6, #1
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #8]
	movs r1, #0
	movs r3, #2
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0xc]
	movs r1, #1
	movs r3, #2
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x10]
	movs r1, #2
	movs r3, #2
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x28]
	movs r1, #3
	movs r3, #2
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x2c]
	movs r1, #4
	movs r3, #2
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x30]
	movs r1, #5
	movs r3, #2
	bl FUN_02024548
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_0202494C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021D58B0: .word 0x021DD8BC
	thumb_func_end FUN_021D5824

	thumb_func_start FUN_021D58B4
FUN_021D58B4: ; 0x021D58B4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r4, _021D5940 ; =0x021DD8BC
	adds r7, r0, #0
	str r2, [sp, #0xc]
	str r1, [sp, #8]
	ldr r0, [r4, #0x1c]
	ldr r2, [r4, #0xc]
	movs r1, #0x11
	str r3, [sp, #0x10]
	bl FUN_02048864
	movs r5, #0
	str r5, [sp]
	movs r6, #1
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #8]
	movs r1, #0
	movs r3, #3
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0xc]
	movs r1, #1
	movs r3, #3
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x10]
	movs r1, #2
	movs r3, #3
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x28]
	movs r1, #3
	movs r3, #3
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x2c]
	movs r1, #4
	movs r3, #3
	bl FUN_02024548
	str r5, [sp]
	str r6, [sp, #4]
	ldr r0, [r4, #8]
	ldr r2, [sp, #0x30]
	movs r1, #5
	movs r3, #3
	bl FUN_02024548
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r7, #0
	bl FUN_0202494C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021D5940: .word 0x021DD8BC
	thumb_func_end FUN_021D58B4

	thumb_func_start FUN_021D5944
FUN_021D5944: ; 0x021D5944
	push {r3, r4, r5, lr}
	ldr r4, _021D5960 ; =0x021DD8BC
	adds r5, r0, #0
	ldr r0, [r4, #0x34]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r5, #0
	bl FUN_0202494C
	pop {r3, r4, r5, pc}
	nop
_021D5960: .word 0x021DD8BC
	thumb_func_end FUN_021D5944

	thumb_func_start FUN_021D5964
FUN_021D5964: ; 0x021D5964
	push {r3, r4, r5, lr}
	ldr r4, _021D5980 ; =0x021DD8BC
	adds r5, r0, #0
	ldr r0, [r4, #0x38]
	ldr r2, [r4, #0xc]
	bl FUN_02048864
	ldr r0, [r4, #8]
	ldr r2, [r4, #0xc]
	adds r1, r5, #0
	bl FUN_0202494C
	pop {r3, r4, r5, pc}
	nop
_021D5980: .word 0x021DD8BC
	thumb_func_end FUN_021D5964

	thumb_func_start FUN_021D5984
FUN_021D5984: ; 0x021D5984
	push {r3, r4, r5, lr}
	ldr r4, _021D59A4 ; =0x021DD8BC
	ldr r0, [r4]
	bl FUN_0219BFA8
	adds r5, r0, #0
	movs r0, #0
	movs r1, #0
	bl FUN_021D4E04
	ldr r0, [r4, #8]
	movs r1, #1
	adds r2, r5, #0
	bl FUN_020245D4
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D59A4: .word 0x021DD8BC
	thumb_func_end FUN_021D5984

	thumb_func_start FUN_021D59A8
FUN_021D59A8: ; 0x021D59A8
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r5, r0, #0
	lsls r6, r7, #2
	movs r4, #0
	adds r0, r5, r6
	str r4, [r0, #8]
	bl FUN_021CE198
	adds r1, r5, r6
	str r0, [r1, #0x28]
	movs r0, #0x4a
	str r4, [r1, #0x48]
	lsls r0, r0, #2
	str r4, [r1, r0]
	adds r0, #0x20
	str r4, [r1, r0]
	movs r0, #0x18
	muls r0, r7, r0
	adds r2, r5, r0
	movs r1, #0x1f
_021D59D2:
	lsls r0, r4, #2
	adds r0, r2, r0
	adds r4, r4, #1
	str r1, [r0, #0x68]
	cmp r4, #6
	blo _021D59D2
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D59A8

	thumb_func_start FUN_021D59E0
FUN_021D59E0: ; 0x021D59E0
	adds r1, r0, #0
	ldr r0, _021D59E8 ; =0x021DD928
	ldr r3, _021D59EC ; =FUN_021D5AF4
	bx r3
	.align 2, 0
_021D59E8: .word 0x021DD928
_021D59EC: .word FUN_021D5AF4
	thumb_func_end FUN_021D59E0

	thumb_func_start FUN_021D59F0
FUN_021D59F0: ; 0x021D59F0
	ldr r0, _021D59F8 ; =0x021DD928
	ldr r3, _021D59FC ; =FUN_021D5B14
	bx r3
	nop
_021D59F8: .word 0x021DD928
_021D59FC: .word FUN_021D5B14
	thumb_func_end FUN_021D59F0

	thumb_func_start FUN_021D5A00
FUN_021D5A00: ; 0x021D5A00
	ldr r0, _021D5A08 ; =0x021DD928
	ldr r3, _021D5A0C ; =FUN_021D5B1C
	bx r3
	nop
_021D5A08: .word 0x021DD928
_021D5A0C: .word FUN_021D5B1C
	thumb_func_end FUN_021D5A00

	thumb_func_start FUN_021D5A10
FUN_021D5A10: ; 0x021D5A10
	adds r3, r0, #0
	adds r2, r1, #0
	adds r1, r3, #0
	ldr r0, _021D5A1C ; =0x021DD928
	ldr r3, _021D5A20 ; =FUN_021D5B2C
	bx r3
	.align 2, 0
_021D5A1C: .word 0x021DD928
_021D5A20: .word FUN_021D5B2C
	thumb_func_end FUN_021D5A10

	thumb_func_start FUN_021D5A24
FUN_021D5A24: ; 0x021D5A24
	ldr r0, _021D5A2C ; =0x021DD928
	ldr r3, _021D5A30 ; =FUN_021D5B3C
	bx r3
	nop
_021D5A2C: .word 0x021DD928
_021D5A30: .word FUN_021D5B3C
	thumb_func_end FUN_021D5A24

	thumb_func_start FUN_021D5A34
FUN_021D5A34: ; 0x021D5A34
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021D5A34

	non_word_aligned_thumb_func_start FUN_021D5A36
FUN_021D5A36: ; 0x021D5A36
	push {r3, lr}
	add r2, sp, #0xc
	adds r1, r0, #0
	ldr r0, _021D5A50 ; =0x021DD928
	ldr r2, [r2]
	movs r3, #1
	bl FUN_021D5B60
	pop {r3}
	pop {r3}
	add sp, #0x10
	bx r3
	nop
_021D5A50: .word 0x021DD928
	thumb_func_end FUN_021D5A36

	thumb_func_start FUN_021D5A54
FUN_021D5A54: ; 0x021D5A54
	adds r1, r0, #0
	ldr r0, _021D5A5C ; =0x021DD928
	ldr r3, _021D5A60 ; =FUN_021D5C00
	bx r3
	.align 2, 0
_021D5A5C: .word 0x021DD928
_021D5A60: .word FUN_021D5C00
	thumb_func_end FUN_021D5A54

	thumb_func_start FUN_021D5A64
FUN_021D5A64: ; 0x021D5A64
	adds r3, r0, #0
	adds r2, r1, #0
	adds r1, r3, #0
	ldr r0, _021D5A70 ; =0x021DD928
	ldr r3, _021D5A74 ; =FUN_021D5C44
	bx r3
	.align 2, 0
_021D5A70: .word 0x021DD928
_021D5A74: .word FUN_021D5C44
	thumb_func_end FUN_021D5A64

	thumb_func_start FUN_021D5A78
FUN_021D5A78: ; 0x021D5A78
	adds r1, r0, #0
	ldr r0, _021D5A80 ; =0x021DD928
	ldr r3, _021D5A84 ; =FUN_021D5CA0
	bx r3
	.align 2, 0
_021D5A80: .word 0x021DD928
_021D5A84: .word FUN_021D5CA0
	thumb_func_end FUN_021D5A78

	thumb_func_start FUN_021D5A88
FUN_021D5A88: ; 0x021D5A88
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r0, _021D5A9C ; =0x021DD928
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_021D5D88
	pop {r3, r4, r5, pc}
	.align 2, 0
_021D5A9C: .word 0x021DD928
	thumb_func_end FUN_021D5A88

	thumb_func_start FUN_021D5AA0
FUN_021D5AA0: ; 0x021D5AA0
	adds r3, r0, #0
	adds r2, r1, #0
	adds r1, r3, #0
	ldr r0, _021D5AAC ; =0x021DD928
	ldr r3, _021D5AB0 ; =FUN_021D5DE4
	bx r3
	.align 2, 0
_021D5AAC: .word 0x021DD928
_021D5AB0: .word FUN_021D5DE4
	thumb_func_end FUN_021D5AA0

	thumb_func_start FUN_021D5AB4
FUN_021D5AB4: ; 0x021D5AB4
	adds r1, r0, #0
	ldr r0, _021D5ABC ; =0x021DD928
	ldr r3, _021D5AC0 ; =FUN_021D5E50
	bx r3
	.align 2, 0
_021D5ABC: .word 0x021DD928
_021D5AC0: .word FUN_021D5E50
	thumb_func_end FUN_021D5AB4

	thumb_func_start FUN_021D5AC4
FUN_021D5AC4: ; 0x021D5AC4
	push {r3, r4, lr}
	sub sp, #4
	movs r1, #0x43
	lsls r1, r1, #2
	str r1, [sp]
	ldr r3, _021D5AE8 ; =0x021DB014
	adds r1, #0x5c
	movs r2, #1
	bl FUN_0203A228
	movs r1, #0
	adds r4, r0, #0
	bl FUN_021D5AF4
	adds r0, r4, #0
	add sp, #4
	pop {r3, r4, pc}
	nop
_021D5AE8: .word 0x021DB014
	thumb_func_end FUN_021D5AC4

	thumb_func_start FUN_021D5AEC
FUN_021D5AEC: ; 0x021D5AEC
	ldr r3, _021D5AF0 ; =FUN_0203A278
	bx r3
	.align 2, 0
_021D5AF0: .word FUN_0203A278
	thumb_func_end FUN_021D5AEC

	thumb_func_start FUN_021D5AF4
FUN_021D5AF4: ; 0x021D5AF4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r4, #0
_021D5AFC:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021D59A8
	adds r4, r4, #1
	cmp r4, #8
	blo _021D5AFC
	movs r0, #0xff
	str r6, [r5]
	str r0, [r5, #4]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021D5AF4

	thumb_func_start FUN_021D5B14
FUN_021D5B14: ; 0x021D5B14
	ldr r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_021D5B14

	thumb_func_start FUN_021D5B1C
FUN_021D5B1C: ; 0x021D5B1C
	ldr r1, [r0]
	cmp r1, #0
	beq _021D5B26
	ldr r0, [r0, #4]
	bx lr
_021D5B26:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D5B1C

	thumb_func_start FUN_021D5B2C
FUN_021D5B2C: ; 0x021D5B2C
	str r1, [r0]
	str r2, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D5B2C

	thumb_func_start FUN_021D5B34
FUN_021D5B34: ; 0x021D5B34
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	bx lr
	thumb_func_end FUN_021D5B34

	thumb_func_start FUN_021D5B3C
FUN_021D5B3C: ; 0x021D5B3C
	ldr r2, [r0]
	cmp r2, #0
	beq _021D5B5A
	ldr r1, [r0, #4]
	cmp r1, #0xff
	beq _021D5B5A
	subs r1, r1, #1
	str r1, [r0, #4]
	bne _021D5B5A
	lsls r1, r2, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0
	str r1, [r0]
	adds r0, r2, #0
	bx lr
_021D5B5A:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D5B3C

	thumb_func_start FUN_021D5B60
FUN_021D5B60: ; 0x021D5B60
	push {r0, r1, r2, r3}
	thumb_func_end FUN_021D5B60

	non_word_aligned_thumb_func_start FUN_021D5B62
FUN_021D5B62: ; 0x021D5B62
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x52
	adds r4, r1, #0
	lsls r0, r0, #2
	adds r7, r5, r0
	lsls r6, r4, #2
	ldr r0, [r7, r6]
	cmp r0, #0
	bne _021D5BE6
	cmp r3, #0
	beq _021D5B9C
	adds r0, r5, #0
	str r0, [sp]
	adds r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	bl FUN_021D5BF0
	ldr r1, [sp]
	cmp r0, #0
	str r0, [r1, r6]
	bne _021D5B9C
	movs r0, #0
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
_021D5B9C:
	movs r0, #1
	lsls r1, r4, #2
	str r0, [r7, r6]
	adds r2, r5, r1
	ldr r0, [sp, #0x20]
	movs r1, #0x4a
	str r0, [r2, #0x28]
	movs r0, #0
	str r0, [r2, #0x48]
	lsls r1, r1, #2
	str r0, [r2, r1]
	movs r1, #0x18
	muls r1, r4, r1
	adds r3, r5, r1
	movs r2, #0x1f
_021D5BBA:
	lsls r1, r0, #2
	adds r1, r3, r1
	adds r0, r0, #1
	str r2, [r1, #0x68]
	cmp r0, #6
	blo _021D5BBA
	add r0, sp, #0x20
	ldr r0, [r0]
	bl FUN_021CE318
	adds r2, r0, #0
	cmp r2, #0x1f
	beq _021D5BDC
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_021D5C44
_021D5BDC:
	movs r0, #1
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
_021D5BE6:
	movs r0, #0
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_021D5B62

	thumb_func_start FUN_021D5BF0
FUN_021D5BF0: ; 0x021D5BF0
	bx pc
	nop
	thumb_func_end FUN_021D5BF0
_021D5BF4:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x21, 0x80, 0x89, 0x06

	thumb_func_start FUN_021D5C00
FUN_021D5C00: ; 0x021D5C00
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	bl FUN_021D5E50
	cmp r0, #0
	beq _021D5C2E
	adds r6, r7, #0
	lsls r4, r5, #2
	adds r6, #8
	ldr r0, [r6, r4]
	cmp r0, #0
	beq _021D5C22
	bl FUN_021D5C34
	movs r0, #0
	str r0, [r6, r4]
_021D5C22:
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_021D59A8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D5C2E:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021D5C00

	thumb_func_start FUN_021D5C34
FUN_021D5C34: ; 0x021D5C34
	bx pc
	nop
	thumb_func_end FUN_021D5C34
_021D5C38:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1
	.byte 0x81, 0x80, 0x89, 0x06

	thumb_func_start FUN_021D5C44
FUN_021D5C44: ; 0x021D5C44
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_021D5E50
	cmp r0, #0
	beq _021D5C9A
	movs r0, #0x4a
	lsls r0, r0, #2
	adds r7, r5, r0
	lsls r0, r6, #2
	mov ip, r0
	ldr r0, [r7, r0]
	cmp r0, #6
	bhs _021D5C9A
	movs r1, #0
	cmp r0, #0
	bls _021D5C84
	movs r2, #0x18
	muls r2, r6, r2
	adds r2, r5, r2
_021D5C70:
	lsls r3, r1, #2
	adds r3, r2, r3
	ldr r3, [r3, #0x68]
	cmp r4, r3
	bne _021D5C7E
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D5C7E:
	adds r1, r1, #1
	cmp r1, r0
	blo _021D5C70
_021D5C84:
	movs r1, #0x18
	muls r1, r6, r1
	adds r2, r5, r1
	lsls r1, r0, #2
	adds r1, r2, r1
	str r4, [r1, #0x68]
	adds r1, r0, #1
	mov r0, ip
	str r1, [r7, r0]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D5C9A:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D5C44

	thumb_func_start FUN_021D5CA0
FUN_021D5CA0: ; 0x021D5CA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r4, r1, #0
	movs r6, #0
_021D5CAA:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021D5E50
	cmp r0, #0
	beq _021D5D6E
	lsls r0, r6, #2
	movs r2, #0x4a
	adds r7, r5, r0
	lsls r2, r2, #2
	ldr r1, [r7, r2]
	str r0, [sp, #4]
	cmp r1, #0
	beq _021D5D6E
	movs r0, #0
	mov ip, r0
	movs r0, #0
	cmp r1, #0
	bls _021D5CF0
	movs r1, #0x18
	muls r1, r6, r1
	adds r1, r5, r1
	adds r2, r7, r2
_021D5CD8:
	lsls r3, r0, #2
	adds r3, r1, r3
	ldr r3, [r3, #0x68]
	cmp r4, r3
	bne _021D5CE8
	movs r1, #1
	mov ip, r1
	b _021D5CF0
_021D5CE8:
	ldr r3, [r2]
	adds r0, r0, #1
	cmp r0, r3
	blo _021D5CD8
_021D5CF0:
	mov r1, ip
	cmp r1, #0
	beq _021D5D6E
	cmp r0, #5
	bhs _021D5D0E
	movs r1, #0x18
	muls r1, r6, r1
	adds r3, r5, r1
_021D5D00:
	lsls r1, r0, #2
	adds r2, r3, r1
	ldr r1, [r2, #0x6c]
	adds r0, r0, #1
	str r1, [r2, #0x68]
	cmp r0, #5
	blo _021D5D00
_021D5D0E:
	movs r1, #0x18
	muls r1, r6, r1
	adds r1, r5, r1
	str r1, [sp, #8]
	lsls r2, r0, #2
	ldr r0, [sp, #8]
	movs r1, #0x1f
	adds r0, r0, r2
	str r1, [r0, #0x68]
	ldr r0, [sp, #4]
	movs r1, #0x4a
	adds r0, r5, r0
	lsls r1, r1, #2
	str r0, [sp]
	ldr r0, [r0, r1]
	subs r2, r0, #1
	ldr r0, [sp]
	str r2, [r0, r1]
	bne _021D5D4E
	ldr r0, [r7, #8]
	cmp r0, #0
	beq _021D5D44
	bl FUN_021D5D78
	ldr r0, [sp]
	movs r1, #0
	str r1, [r0, #8]
_021D5D44:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_021D59A8
	b _021D5D6E
_021D5D4E:
	adds r7, #0x28
	ldr r0, [r7]
	bl FUN_021CE318
	cmp r4, r0
	bne _021D5D6E
	adds r1, r5, #0
	ldr r0, [sp, #4]
	adds r1, #0x28
	adds r0, r1, r0
	ldr r1, [sp, #8]
	ldr r1, [r1, #0x68]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_021CE348
_021D5D6E:
	adds r6, r6, #1
	cmp r6, #8
	blo _021D5CAA
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D5CA0

	thumb_func_start FUN_021D5D78
FUN_021D5D78: ; 0x021D5D78
	bx pc
	nop
	thumb_func_end FUN_021D5D78
_021D5D7C:
	.byte 0x00, 0xC0, 0x9F, 0xE5
	.byte 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0x80, 0x89, 0x06

	thumb_func_start FUN_021D5D88
FUN_021D5D88: ; 0x021D5D88
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	str r3, [sp, #4]
	adds r0, r2, #0
	str r1, [sp]
	bl FUN_021BAC80
	str r0, [sp, #8]
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r7, [r6, r0]
	movs r5, #0
	cmp r7, #0
	bls _021D5DDC
_021D5DA6:
	lsls r0, r5, #2
	adds r0, r6, r0
	adds r0, #0xb0
	ldr r0, [r0]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [sp, #8]
	adds r1, r4, #0
	bl FUN_0219D340
	cmp r0, #0
	bne _021D5DD6
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_0219D25C
	ldr r1, [sp, #4]
	bl FUN_021BAF90
	cmp r0, #0
	beq _021D5DD6
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_021D5DD6:
	adds r5, r5, #1
	cmp r5, r7
	blo _021D5DA6
_021D5DDC:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D5D88

	thumb_func_start FUN_021D5DE4
FUN_021D5DE4: ; 0x021D5DE4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	str r2, [sp]
	movs r4, #1
_021D5DEE:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021D5E50
	cmp r0, #0
	beq _021D5E36
	lsls r0, r4, #2
	adds r5, r6, r0
	adds r0, r5, #0
	adds r0, #0x28
	ldr r0, [r0]
	bl FUN_021CE37C
	cmp r0, #0
	beq _021D5E36
	ldr r1, [r5, #0x48]
	adds r1, r1, #1
	str r1, [r5, #0x48]
	cmp r1, r0
	blo _021D5E36
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _021D5E24
	bl FUN_021D5E40
	movs r0, #0
	str r0, [r5, #8]
_021D5E24:
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_021D59A8
	cmp r7, #0
	beq _021D5E36
	ldr r1, [sp]
	adds r0, r4, #0
	blx r7
_021D5E36:
	adds r4, r4, #1
	cmp r4, #8
	blo _021D5DEE
	pop {r3, r4, r5, r6, r7, pc}
	nop
	thumb_func_end FUN_021D5DE4

	thumb_func_start FUN_021D5E40
FUN_021D5E40: ; 0x021D5E40
	bx pc
	nop
	thumb_func_end FUN_021D5E40
_021D5E44:
	.byte 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x81, 0x80, 0x89, 0x06

	thumb_func_start FUN_021D5E50
FUN_021D5E50: ; 0x021D5E50
	lsls r1, r1, #2
	adds r1, r0, r1
	movs r0, #0x52
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	bx lr
	thumb_func_end FUN_021D5E50

	thumb_func_start FUN_021D5E5C
FUN_021D5E5C: ; 0x021D5E5C
	push {r3, r4, r5, lr}
	movs r1, #0x49
	lsls r1, r1, #2
	str r1, [sp]
	ldr r3, _021D5EA0 ; =0x021DB020
	adds r4, r0, #0
	movs r1, #0xdc
	movs r2, #1
	bl FUN_0203A228
	adds r5, r0, #0
	movs r0, #4
	movs r1, #0
	adds r2, r4, #0
	bl FUN_0204BF48
	str r0, [r5, #4]
	ldr r0, _021D5EA4 ; =0x021DAB34
	movs r1, #1
	adds r2, r4, #0
	bl FUN_0204BEC8
	str r0, [r5, #8]
	movs r1, #1
	bl FUN_0204BF40
	ldr r0, [r5, #4]
	ldr r1, [r5, #8]
	bl FUN_0204C044
	strh r4, [r5, #0x20]
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
	nop
_021D5EA0: .word 0x021DB020
_021D5EA4: .word 0x021DAB34
	thumb_func_end FUN_021D5E5C

	thumb_func_start FUN_021D5EA8
FUN_021D5EA8: ; 0x021D5EA8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _021D5EBA
	bl FUN_021D6C28
	movs r0, #0
	str r0, [r4, #0xc]
_021D5EBA:
	ldr r0, [r4, #8]
	bl FUN_0204BEF8
	ldr r0, [r4, #4]
	bl FUN_0204BFC4
	adds r0, r4, #0
	bl FUN_0203A278
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D5EA8

	thumb_func_start FUN_021D5ED0
FUN_021D5ED0: ; 0x021D5ED0
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x14]
	cmp r1, #0
	beq _021D5EDC
	b _021D5FFA
_021D5EDC:
	ldrh r1, [r4, #0x10]
	cmp r1, #5
	bls _021D5EE4
	b _021D5FFA
_021D5EE4:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D5EF0: ; jump table
	.short _021D5FFA - _021D5EF0 - 2 ; case 0
	.short _021D5EFC - _021D5EF0 - 2 ; case 1
	.short _021D5F7A - _021D5EF0 - 2 ; case 2
	.short _021D5FB0 - _021D5EF0 - 2 ; case 3
	.short _021D5FC8 - _021D5EF0 - 2 ; case 4
	.short _021D5FE8 - _021D5EF0 - 2 ; case 5
_021D5EFC:
	ldr r1, [r4]
	movs r0, #0
	ldrsh r0, [r1, r0]
	ldrh r1, [r4, #0x18]
	bl FUN_021D61BC
	ldrh r1, [r4, #0x20]
	bl FUN_021D6BE8
	adds r1, r4, #0
	adds r1, #0x78
	ldrh r1, [r1]
	str r0, [r4, #0xc]
	cmp r1, #0
	bne _021D5F40
	movs r1, #3
	bl FUN_021D6C3C
	adds r7, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #4
	bl FUN_021D6C3C
	adds r6, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #5
	bl FUN_021D6C3C
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #6
	bl FUN_021D6C3C
	b _021D5F64
_021D5F40:
	movs r1, #7
	bl FUN_021D6C3C
	adds r7, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #8
	bl FUN_021D6C3C
	adds r6, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #9
	bl FUN_021D6C3C
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	movs r1, #0xa
	bl FUN_021D6C3C
_021D5F64:
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r6, #0
	adds r3, r5, #0
	bl FUN_021D6084
	ldrh r0, [r4, #0x10]
	adds r0, r0, #1
	strh r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021D5F7A:
	ldrh r1, [r4, #0x1a]
	ldr r0, [r4, #0xc]
	movs r2, #0
	movs r5, #0
	bl FUN_021D6C44
	lsls r1, r0, #2
	ldr r0, _021D5FFC ; =0x021DAB64
	strh r5, [r4, #0x12]
	ldr r0, [r0, r1]
	str r0, [r4, #0x1c]
_021D5F90:
	ldrh r1, [r4, #0x1a]
	ldr r0, [r4, #0xc]
	adds r2, r5, #1
	bl FUN_021D6C44
	lsls r1, r5, #1
	adds r1, r4, r1
	adds r1, #0x60
	adds r5, r5, #1
	strh r0, [r1]
	cmp r5, #8
	blt _021D5F90
	ldrh r0, [r4, #0x10]
	adds r0, r0, #1
	strh r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021D5FB0:
	adds r1, r4, #0
	adds r2, r4, #0
	ldr r3, [r4, #0x1c]
	adds r1, #0x12
	adds r2, #0x60
	blx r3
	cmp r0, #0
	beq _021D5FFA
	ldrh r0, [r4, #0x10]
	adds r0, r0, #1
	strh r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021D5FC8:
	ldrh r0, [r4, #0x1a]
	adds r0, r0, #1
	strh r0, [r4, #0x1a]
	ldr r0, [r4, #0xc]
	bl FUN_021D6C54
	ldrh r1, [r4, #0x1a]
	cmp r1, r0
	bhs _021D5FE0
	movs r0, #2
	strh r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021D5FE0:
	ldrh r0, [r4, #0x10]
	adds r0, r0, #1
	strh r0, [r4, #0x10]
	pop {r3, r4, r5, r6, r7, pc}
_021D5FE8:
	bl FUN_021D6170
	ldr r0, [r4, #0xc]
	bl FUN_021D6C28
	movs r0, #0
	str r0, [r4, #0xc]
	movs r0, #1
	str r0, [r4, #0x14]
_021D5FFA:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_021D5FFC: .word 0x021DAB64
	thumb_func_end FUN_021D5ED0

	thumb_func_start FUN_021D6000
FUN_021D6000: ; 0x021D6000
	ldr r0, [r0, #0x14]
	bx lr
	thumb_func_end FUN_021D6000

	thumb_func_start FUN_021D6004
FUN_021D6004: ; 0x021D6004
	push {r3, r4}
	movs r4, #1
	strh r4, [r0, #0x10]
	movs r4, #0
	str r1, [r0]
	strh r2, [r0, #0x18]
	adds r1, r0, #0
	ldr r2, [sp, #8]
	adds r1, #0x78
	str r4, [r0, #0x14]
	strh r4, [r0, #0x1a]
	adds r0, #0x7a
	strh r2, [r1]
	strh r3, [r0]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_021D6004

	thumb_func_start FUN_021D6024
FUN_021D6024: ; 0x021D6024
	str r1, [r0, #0x5c]
	bx lr
	thumb_func_end FUN_021D6024

	thumb_func_start FUN_021D6028
FUN_021D6028: ; 0x021D6028
	push {r4, r5, r6, r7}
	movs r5, #0
	ldrsh r6, [r0, r5]
	ldr r4, _021D6080 ; =0x021DABC0
	adds r3, r1, #0
	adds r1, r2, #0
	adds r0, r5, #0
_021D6036:
	lsls r2, r5, #2
	ldr r2, [r4, r2]
	lsls r7, r2, #0x14
	lsrs r7, r7, #0x14
	cmp r6, r7
	bne _021D6072
	lsls r7, r2, #0xa
	lsrs r7, r7, #0x16
	cmp r3, r7
	bne _021D6072
	adds r7, r0, #0
	lsrs r2, r2, #0x16
	beq _021D605A
	cmp r2, #1
	beq _021D6060
	cmp r2, #2
	beq _021D6062
	b _021D6068
_021D605A:
	cmp r1, #1
	bne _021D6068
	b _021D6066
_021D6060:
	b _021D6066
_021D6062:
	cmp r1, #1
	beq _021D6068
_021D6066:
	movs r7, #1
_021D6068:
	cmp r7, #0
	beq _021D6072
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_021D6072:
	adds r5, r5, #1
	cmp r5, #0xb9
	blo _021D6036
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	nop
_021D6080: .word 0x021DABC0
	thumb_func_end FUN_021D6028

	thumb_func_start FUN_021D6084
FUN_021D6084: ; 0x021D6084
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	adds r4, r2, #0
	str r1, [sp, #0xc]
	ldrh r2, [r5, #0x20]
	ldr r1, _021D6164 ; =0x00007FFF
	ldr r7, _021D6168 ; =0x00000112
	ands r2, r1
	adds r1, r1, #1
	orrs r1, r2
	lsls r1, r1, #0x10
	adds r0, r7, #0
	lsrs r1, r1, #0x10
	str r3, [sp, #0x10]
	bl FUN_0204AA5C
	ldrh r1, [r5, #0x20]
	movs r2, #1
	movs r3, #0
	str r1, [sp]
	adds r1, r4, #0
	adds r6, r0, #0
	movs r4, #0
	bl FUN_0204B848
	adds r1, r5, #0
	adds r1, #0x72
	strh r0, [r1]
	ldrh r0, [r5, #0x20]
	ldr r1, [sp, #0xc]
	movs r2, #0
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl FUN_0204BBCC
	adds r1, r5, #0
	adds r1, #0x70
	strh r0, [r1]
	bl FUN_021E00F8
	adds r7, #0xce
	movs r1, #2
	movs r2, #0
	adds r3, r7, #0
	bl FUN_02026FA8
	ldrh r3, [r5, #0x20]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x30]
	adds r0, r6, #0
	bl FUN_0204BE0C
	adds r1, r5, #0
	adds r1, #0x74
	strh r0, [r1]
	ldrh r0, [r5, #0x20]
	adds r3, r5, #0
	ldr r1, [sp, #0x10]
	str r0, [sp]
	adds r0, r6, #0
	movs r2, #0
	adds r3, #0x80
	bl FUN_0204B3F8
	str r0, [r5, #0x7c]
	adds r0, r6, #0
	bl FUN_0204AB38
	ldr r1, _021D616C ; =0x021DAB2C
	add r0, sp, #0x14
	ldrh r2, [r1]
	adds r7, r4, #0
	strh r2, [r0]
	ldrh r2, [r1, #2]
	strh r2, [r0, #2]
	ldrh r2, [r1, #4]
	strh r2, [r0, #4]
	ldrh r1, [r1, #6]
	strh r1, [r0, #6]
_021D6126:
	lsls r0, r4, #2
	adds r6, r5, r0
	add r0, sp, #0x14
	str r0, [sp]
	str r7, [sp, #4]
	ldrh r0, [r5, #0x20]
	adds r1, r5, #0
	adds r2, r5, #0
	adds r3, r5, #0
	str r0, [sp, #8]
	adds r1, #0x72
	adds r2, #0x70
	adds r3, #0x74
	ldrh r1, [r1]
	ldrh r2, [r2]
	ldrh r3, [r3]
	ldr r0, [r5, #4]
	bl FUN_0204C06C
	adds r1, r7, #0
	str r0, [r6, #0x24]
	bl FUN_0204C150
	adds r4, r4, #1
	cmp r4, #4
	blt _021D6126
	movs r0, #1
	adds r5, #0x76
	strh r0, [r5]
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_021D6164: .word 0x00007FFF
_021D6168: .word 0x00000112
_021D616C: .word 0x021DAB2C
	thumb_func_end FUN_021D6084

	thumb_func_start FUN_021D6170
FUN_021D6170: ; 0x021D6170
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0x76
	ldrh r0, [r0]
	cmp r0, #0
	beq _021D61B8
	movs r4, #0
_021D617E:
	lsls r0, r4, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	bl FUN_0204C134
	adds r4, r4, #1
	cmp r4, #4
	blt _021D617E
	ldr r0, [r5, #0x7c]
	bl FUN_0203A278
	adds r0, r5, #0
	adds r0, #0x74
	ldrh r0, [r0]
	bl FUN_0204BE90
	adds r0, r5, #0
	adds r0, #0x72
	ldrh r0, [r0]
	bl FUN_0204B9B8
	adds r0, r5, #0
	adds r0, #0x70
	ldrh r0, [r0]
	bl FUN_0204BCFC
	movs r0, #0
	adds r5, #0x76
	strh r0, [r5]
_021D61B8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_021D6170

	thumb_func_start FUN_021D61BC
FUN_021D61BC: ; 0x021D61BC
	push {r4, r5}
	ldr r2, _021D61E8 ; =0x021DABC0
	movs r3, #0
_021D61C2:
	lsls r4, r3, #2
	ldr r4, [r2, r4]
	lsls r5, r4, #0x14
	lsrs r5, r5, #0x14
	cmp r0, r5
	bne _021D61DC
	lsls r4, r4, #0xa
	lsrs r4, r4, #0x16
	cmp r1, r4
	bne _021D61DC
	adds r0, r3, #0
	pop {r4, r5}
	bx lr
_021D61DC:
	adds r3, r3, #1
	cmp r3, #0xb9
	blo _021D61C2
	ldr r0, _021D61EC ; =0x0000FFFF
	pop {r4, r5}
	bx lr
	.align 2, 0
_021D61E8: .word 0x021DABC0
_021D61EC: .word 0x0000FFFF
	thumb_func_end FUN_021D61BC

	thumb_func_start FUN_021D61F0
FUN_021D61F0: ; 0x021D61F0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r5, r1, #0
	ldrh r1, [r4]
	str r0, [sp]
	lsls r3, r1, #2
	adds r1, r0, #0
	adds r1, r1, r3
	ldr r7, [r1, #0x24]
	ldrh r1, [r5]
	cmp r1, #0
	beq _021D6214
	cmp r1, #1
	beq _021D625E
	cmp r1, #2
	beq _021D628E
	b _021D6294
_021D6214:
	ldrh r3, [r4, #2]
	adds r1, r7, #0
	lsls r6, r3, #4
	ldr r3, _021D629C ; =0x021DAB44
	ldr r3, [r3, r6]
	blx r3
	ldrh r1, [r4, #2]
	ldr r0, [sp]
	lsls r2, r1, #4
	ldr r1, _021D62A0 ; =0x021DAB4C
	ldr r1, [r1, r2]
	blx r1
	ldrh r2, [r4, #2]
	add r6, sp, #4
	ldr r0, [sp]
	lsls r3, r2, #4
	ldr r2, _021D62A4 ; =0x021DAB50
	adds r1, r6, #0
	ldr r2, [r2, r3]
	blx r2
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_0204C16C
	ldrh r1, [r4]
	adds r0, r7, #0
	bl FUN_0204C4B4
	adds r0, r7, #0
	movs r1, #1
	bl FUN_0204C150
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
	b _021D6294
_021D625E:
	ldrh r1, [r4, #2]
	lsls r2, r1, #4
	ldr r1, _021D62A0 ; =0x021DAB4C
	ldr r1, [r1, r2]
	blx r1
	cmp r0, #0
	beq _021D6272
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
_021D6272:
	ldrh r2, [r4, #2]
	add r5, sp, #4
	ldr r0, [sp]
	lsls r3, r2, #4
	ldr r2, _021D62A4 ; =0x021DAB50
	adds r1, r5, #0
	ldr r2, [r2, r3]
	blx r2
	adds r0, r7, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0204C16C
	b _021D6294
_021D628E:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D6294:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D629C: .word 0x021DAB44
_021D62A0: .word 0x021DAB4C
_021D62A4: .word 0x021DAB50
	thumb_func_end FUN_021D61F0

	thumb_func_start FUN_021D62A8
FUN_021D62A8: ; 0x021D62A8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r5, r1, #0
	ldrh r1, [r4]
	str r0, [sp]
	lsls r3, r1, #2
	adds r1, r0, #0
	adds r1, r1, r3
	ldr r7, [r1, #0x24]
	ldrh r1, [r5]
	cmp r1, #0
	beq _021D62CC
	cmp r1, #1
	beq _021D6316
	cmp r1, #2
	beq _021D6346
	b _021D634C
_021D62CC:
	ldrh r3, [r4, #2]
	adds r1, r7, #0
	lsls r6, r3, #4
	ldr r3, _021D6354 ; =0x021DAB48
	ldr r3, [r3, r6]
	blx r3
	ldrh r1, [r4, #2]
	ldr r0, [sp]
	lsls r2, r1, #4
	ldr r1, _021D6358 ; =0x021DAB4C
	ldr r1, [r1, r2]
	blx r1
	ldrh r2, [r4, #2]
	add r6, sp, #4
	ldr r0, [sp]
	lsls r3, r2, #4
	ldr r2, _021D635C ; =0x021DAB50
	adds r1, r6, #0
	ldr r2, [r2, r3]
	blx r2
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl FUN_0204C16C
	ldrh r1, [r4]
	adds r0, r7, #0
	bl FUN_0204C4B4
	adds r0, r7, #0
	movs r1, #1
	bl FUN_0204C150
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
	b _021D634C
_021D6316:
	ldrh r1, [r4, #2]
	lsls r2, r1, #4
	ldr r1, _021D6358 ; =0x021DAB4C
	ldr r1, [r1, r2]
	blx r1
	cmp r0, #0
	beq _021D632A
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
_021D632A:
	ldrh r2, [r4, #2]
	add r5, sp, #4
	ldr r0, [sp]
	lsls r3, r2, #4
	ldr r2, _021D635C ; =0x021DAB50
	adds r1, r5, #0
	ldr r2, [r2, r3]
	blx r2
	adds r0, r7, #0
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0204C16C
	b _021D634C
_021D6346:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D634C:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D6354: .word 0x021DAB48
_021D6358: .word 0x021DAB4C
_021D635C: .word 0x021DAB50
	thumb_func_end FUN_021D62A8

	thumb_func_start FUN_021D6360
FUN_021D6360: ; 0x021D6360
	push {r3, lr}
	ldrh r1, [r2]
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r1, [r2, #2]
	ldr r0, [r0, #0x24]
	bl FUN_0204C150
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021D6360

	thumb_func_start FUN_021D6374
FUN_021D6374: ; 0x021D6374
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r5, r1, #0
	ldrh r1, [r4]
	adds r7, r0, #0
	lsls r1, r1, #2
	adds r1, r7, r1
	ldr r1, [r1, #0x24]
	str r1, [sp]
	ldrh r1, [r5]
	cmp r1, #0
	beq _021D6398
	cmp r1, #1
	beq _021D6400
	cmp r1, #2
	beq _021D643E
	b _021D6444
_021D6398:
	adds r0, #0xc8
	movs r1, #0
	movs r2, #0x14
	blx FUN_020787D4
	adds r1, r7, #0
	ldrh r3, [r4, #2]
	movs r6, #0xc
	ldr r2, [sp]
	muls r6, r3, r6
	ldr r3, _021D644C ; =0x021DAB90
	adds r0, r7, #0
	ldr r3, [r3, r6]
	adds r1, #0xc8
	blx r3
	adds r1, r7, #0
	ldrh r2, [r4, #2]
	movs r3, #0xc
	adds r0, r7, #0
	muls r3, r2, r3
	ldr r2, _021D6450 ; =0x021DAB94
	adds r1, #0xc8
	ldr r2, [r2, r3]
	blx r2
	adds r0, r7, #0
	adds r7, #0xc8
	adds r1, r7, #0
	add r7, sp, #4
	ldrh r3, [r4, #2]
	movs r6, #0xc
	adds r2, r7, #0
	muls r6, r3, r6
	ldr r3, _021D6454 ; =0x021DAB98
	ldr r3, [r3, r6]
	blx r3
	ldr r0, [sp]
	adds r1, r7, #0
	movs r2, #0
	bl FUN_0204C16C
	ldrh r1, [r4]
	ldr r0, [sp]
	bl FUN_0204C4B4
	ldr r0, [sp]
	movs r1, #1
	bl FUN_0204C150
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
	b _021D6444
_021D6400:
	ldrh r2, [r4, #2]
	movs r3, #0xc
	adds r1, r7, #0
	muls r3, r2, r3
	ldr r2, _021D6450 ; =0x021DAB94
	adds r1, #0xc8
	ldr r2, [r2, r3]
	blx r2
	cmp r0, #0
	beq _021D641A
	ldrh r0, [r5]
	adds r0, r0, #1
	strh r0, [r5]
_021D641A:
	ldrh r4, [r4, #2]
	adds r0, r7, #0
	adds r7, #0xc8
	movs r3, #0xc
	adds r6, r4, #0
	muls r6, r3, r6
	ldr r3, _021D6454 ; =0x021DAB98
	add r5, sp, #4
	ldr r3, [r3, r6]
	adds r1, r7, #0
	adds r2, r5, #0
	blx r3
	ldr r0, [sp]
	adds r1, r5, #0
	movs r2, #0
	bl FUN_0204C16C
	b _021D6444
_021D643E:
	add sp, #8
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_021D6444:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_021D644C: .word 0x021DAB90
_021D6450: .word 0x021DAB94
_021D6454: .word 0x021DAB98
	thumb_func_end FUN_021D6374

	thumb_func_start FUN_021D6458
FUN_021D6458: ; 0x021D6458
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r1, #0
	ldrh r1, [r4]
	adds r3, r2, #0
	cmp r1, #0
	beq _021D646C
	cmp r1, #1
	beq _021D6478
	b _021D64A2
_021D646C:
	bl FUN_021D6170
	ldrh r0, [r4]
	adds r0, r0, #1
	strh r0, [r4]
	b _021D64A2
_021D6478:
	adds r1, r0, #0
	adds r1, #0x78
	ldrh r1, [r1]
	cmp r1, #0
	bne _021D648E
	ldrh r1, [r3, #6]
	ldrh r2, [r3, #2]
	str r1, [sp]
	ldrh r1, [r3]
	ldrh r3, [r3, #4]
	b _021D6498
_021D648E:
	ldrh r1, [r3, #0xe]
	ldrh r2, [r3, #0xa]
	str r1, [sp]
	ldrh r1, [r3, #8]
	ldrh r3, [r3, #0xc]
_021D6498:
	bl FUN_021D6084
	add sp, #4
	movs r0, #1
	pop {r3, r4, pc}
_021D64A2:
	movs r0, #0
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_021D6458

	thumb_func_start FUN_021D64A8
FUN_021D64A8: ; 0x021D64A8
	push {r3, r4}
	adds r1, r0, #0
	adds r1, #0x84
	ldr r4, [r1]
	adds r1, r0, #0
	adds r1, #0x84
	ldr r1, [r1]
	adds r3, r1, #1
	adds r1, r0, #0
	adds r1, #0x84
	str r3, [r1]
	ldrh r1, [r2]
	cmp r4, r1
	blo _021D64D0
	movs r1, #0
	adds r0, #0x84
	str r1, [r0]
	movs r0, #1
	pop {r3, r4}
	bx lr
_021D64D0:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D64A8

	thumb_func_start FUN_021D64D8
FUN_021D64D8: ; 0x021D64D8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	cmp r0, #0
	beq _021D64EA
	cmp r0, #1
	beq _021D6552
	b _021D6560
_021D64EA:
	ldrh r1, [r5, #0x18]
	ldr r3, [r5]
	movs r0, #0x78
	adds r3, #0xf8
	muls r0, r1, r0
	adds r1, r3, r0
	ldrh r0, [r2]
	cmp r0, #0xa
	blo _021D6522
	ldrh r0, [r2, #2]
	cmp r0, #0
	bne _021D6512
	adds r0, r5, #0
	adds r0, #0x7a
	ldrh r2, [r0]
	movs r0, #0xc
	muls r0, r2, r0
	adds r1, r1, r0
	movs r0, #0x48
	b _021D6530
_021D6512:
	adds r0, r5, #0
	adds r0, #0x7a
	ldrh r2, [r0]
	movs r0, #0xc
	muls r0, r2, r0
	adds r1, r1, r0
	movs r0, #0x4a
	b _021D6530
_021D6522:
	ldrh r3, [r2, #2]
	movs r2, #0x14
	lsls r0, r0, #1
	muls r2, r3, r2
	adds r1, r1, r2
	adds r1, r1, r0
	movs r0, #0xc
_021D6530:
	ldrsh r2, [r1, r0]
	adds r0, r5, #0
	lsls r2, r2, #0x10
	adds r0, #0x34
	movs r1, #8
	lsrs r2, r2, #0x10
	bl FUN_021D0B2C
	ldr r0, [r5, #0x5c]
	adds r5, #0x34
	adds r1, r5, #0
	bl FUN_021D022C
	ldrh r0, [r4]
	adds r0, r0, #1
	strh r0, [r4]
	b _021D6560
_021D6552:
	ldr r0, [r5, #0x5c]
	bl FUN_021D0328
	cmp r0, #0
	beq _021D6560
	movs r0, #1
	pop {r3, r4, r5, pc}
_021D6560:
	movs r0, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D64D8

	thumb_func_start FUN_021D6564
FUN_021D6564: ; 0x021D6564
	push {r4, lr}
	adds r4, r1, #0
	ldrh r1, [r4]
	cmp r1, #0
	beq _021D6574
	cmp r1, #1
	beq _021D6582
	b _021D6590
_021D6574:
	ldr r0, [r0, #0x5c]
	bl FUN_021D04FC
	ldrh r0, [r4]
	adds r0, r0, #1
	strh r0, [r4]
	b _021D6590
_021D6582:
	ldr r0, [r0, #0x5c]
	bl FUN_021D050C
	cmp r0, #0
	beq _021D6590
	movs r0, #1
	pop {r4, pc}
_021D6590:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021D6564

	thumb_func_start FUN_021D6594
FUN_021D6594: ; 0x021D6594
	push {r3, lr}
	ldrh r0, [r2]
	bl FUN_02006254
	movs r0, #1
	pop {r3, pc}
	thumb_func_end FUN_021D6594

	thumb_func_start FUN_021D65A0
FUN_021D65A0: ; 0x021D65A0
	push {r3, lr}
	bl FUN_020062A8
	cmp r0, #0
	bne _021D65AE
	movs r0, #1
	pop {r3, pc}
_021D65AE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D65A0

	thumb_func_start FUN_021D65B4
FUN_021D65B4: ; 0x021D65B4
	push {r3, lr}
	bl FUN_02006280
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_021D65B4

	thumb_func_start FUN_021D65C0
FUN_021D65C0: ; 0x021D65C0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r2, #0
	adds r5, r0, #0
	add r6, sp, #8
	add r7, sp, #0
	ldrh r0, [r4, #4]
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021D66AC
	adds r5, #0x88
	ldrh r3, [r4, #6]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_021D690C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D65C0

	thumb_func_start FUN_021D65E8
FUN_021D65E8: ; 0x021D65E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r2, #0
	adds r3, r1, #0
	adds r5, r0, #0
	add r6, sp, #4
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #8]
	add r7, sp, #0xc
	adds r2, r3, #0
	adds r3, r7, #0
	str r6, [sp]
	bl FUN_021D6768
	adds r5, #0x88
	ldrh r3, [r4, #6]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_021D690C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D65E8
_021D6618:
	.byte 0x01, 0x4B, 0x88, 0x30, 0x18, 0x47, 0xC0, 0x46
	.byte 0x9D, 0x69, 0x1D, 0x02, 0x01, 0x4B, 0x88, 0x30, 0x18, 0x47, 0xC0, 0x46, 0xDD, 0x69, 0x1D, 0x02

	thumb_func_start FUN_021D6630
FUN_021D6630: ; 0x021D6630
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r2, #0
	adds r5, r0, #0
	add r6, sp, #0xc
	add r7, sp, #4
	ldrh r0, [r4, #4]
	adds r2, r6, #0
	adds r3, r7, #0
	bl FUN_021D66AC
	ldrh r0, [r4, #6]
	movs r3, #0x32
	adds r5, #0x88
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	lsls r3, r3, #0xc
	bl FUN_021D69E8
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D6630

	thumb_func_start FUN_021D6660
FUN_021D6660: ; 0x021D6660
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r4, r2, #0
	adds r3, r1, #0
	adds r5, r0, #0
	add r6, sp, #4
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #8]
	add r7, sp, #0xc
	adds r2, r3, #0
	adds r3, r7, #0
	str r6, [sp]
	bl FUN_021D6768
	ldrh r0, [r4, #6]
	movs r3, #0x32
	adds r5, #0x88
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	lsls r3, r3, #0xc
	bl FUN_021D69E8
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_021D6660
_021D6694:
	.byte 0x01, 0x4B, 0x88, 0x30, 0x18, 0x47, 0xC0, 0x46, 0x61, 0x6B, 0x1D, 0x02
	.byte 0x01, 0x4B, 0x88, 0x30, 0x18, 0x47, 0xC0, 0x46, 0xD9, 0x6B, 0x1D, 0x02

	thumb_func_start FUN_021D66AC
FUN_021D66AC: ; 0x021D66AC
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r4, r2, #0
	add r2, sp, #0
	movs r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	adds r0, r1, #0
	add r1, sp, #8
	movs r2, #0
	adds r5, r3, #0
	bl FUN_0204C1A4
	cmp r6, #7
	bhi _021D6720
	adds r0, r6, r6
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D66D8: ; jump table
	.short _021D66E8 - _021D66D8 - 2 ; case 0
	.short _021D66EE - _021D66D8 - 2 ; case 1
	.short _021D66F4 - _021D66D8 - 2 ; case 2
	.short _021D66FC - _021D66D8 - 2 ; case 3
	.short _021D6702 - _021D66D8 - 2 ; case 4
	.short _021D6708 - _021D66D8 - 2 ; case 5
	.short _021D6710 - _021D66D8 - 2 ; case 6
	.short _021D6718 - _021D66D8 - 2 ; case 7
_021D66E8:
	movs r0, #1
	lsls r0, r0, #8
	b _021D671E
_021D66EE:
	movs r0, #0xff
	mvns r0, r0
	b _021D671E
_021D66F4:
	movs r0, #0xff
	mvns r0, r0
_021D66F8:
	str r0, [sp]
	b _021D6720
_021D66FC:
	movs r0, #1
	lsls r0, r0, #8
	b _021D66F8
_021D6702:
	movs r0, #0xff
	mvns r0, r0
	b _021D671C
_021D6708:
	movs r0, #1
	lsls r0, r0, #8
	str r0, [sp]
	b _021D66EE
_021D6710:
	movs r0, #0xff
	mvns r0, r0
	str r0, [sp]
	b _021D66E8
_021D6718:
	movs r0, #1
	lsls r0, r0, #8
_021D671C:
	str r0, [sp]
_021D671E:
	str r0, [sp, #4]
_021D6720:
	add r1, sp, #0
	movs r0, #8
	ldrsh r0, [r1, r0]
	cmp r0, #0x80
	bne _021D674C
	movs r0, #0xa
	ldrsh r0, [r1, r0]
	cmp r0, #0x60
	bne _021D674C
	movs r0, #0x60
	str r0, [r4, #4]
	movs r1, #0x80
	ldr r0, [sp]
	str r1, [r4]
	adds r0, r1, r0
	str r0, [r5]
	ldr r0, [sp, #4]
	ldr r1, [r4, #4]
	add sp, #0xc
	adds r0, r1, r0
	str r0, [r5, #4]
	pop {r3, r4, r5, r6, pc}
_021D674C:
	movs r0, #0x60
	str r0, [r5, #4]
	movs r1, #0x80
	ldr r0, [sp]
	str r1, [r5]
	subs r0, r1, r0
	str r0, [r4]
	ldr r1, [r5, #4]
	ldr r0, [sp, #4]
	subs r0, r1, r0
	str r0, [r4, #4]
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_021D66AC

	thumb_func_start FUN_021D6768
FUN_021D6768: ; 0x021D6768
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp]
	adds r5, r1, #0
	add r1, sp, #8
	movs r0, #0
	str r0, [r1]
	str r0, [r1, #4]
	ldr r1, _021D6800 ; =0x00001243
	str r2, [sp, #4]
	lsls r0, r5, #0xc
	adds r6, r3, #0
	ldr r7, [sp, #0x28]
	bl FUN_02073E1C
	asrs r4, r0, #0xc
	ldr r0, [sp, #4]
	add r1, sp, #0x10
	movs r2, #0
	bl FUN_0204C1A4
	ldr r0, [sp]
	cmp r0, #7
	bhi _021D67DE
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_021D67A4: ; jump table
	.short _021D67B4 - _021D67A4 - 2 ; case 0
	.short _021D67B8 - _021D67A4 - 2 ; case 1
	.short _021D67BE - _021D67A4 - 2 ; case 2
	.short _021D67C4 - _021D67A4 - 2 ; case 3
	.short _021D67C8 - _021D67A4 - 2 ; case 4
	.short _021D67CE - _021D67A4 - 2 ; case 5
	.short _021D67D4 - _021D67A4 - 2 ; case 6
	.short _021D67DA - _021D67A4 - 2 ; case 7
_021D67B4:
	str r5, [sp, #0xc]
	b _021D67DE
_021D67B8:
	rsbs r0, r5, #0
_021D67BA:
	str r0, [sp, #0xc]
	b _021D67DE
_021D67BE:
	rsbs r0, r5, #0
	str r0, [sp, #8]
	b _021D67DE
_021D67C4:
	str r5, [sp, #8]
	b _021D67DE
_021D67C8:
	rsbs r0, r4, #0
	str r0, [sp, #8]
	b _021D67BA
_021D67CE:
	str r4, [sp, #8]
	rsbs r0, r4, #0
	b _021D67BA
_021D67D4:
	rsbs r0, r4, #0
	str r0, [sp, #8]
	b _021D67DC
_021D67DA:
	str r4, [sp, #8]
_021D67DC:
	str r4, [sp, #0xc]
_021D67DE:
	add r1, sp, #8
	movs r0, #8
	ldrsh r2, [r1, r0]
	movs r0, #0xa
	str r2, [r6]
	ldrsh r0, [r1, r0]
	str r0, [r6, #4]
	ldr r0, [sp, #8]
	adds r0, r2, r0
	str r0, [r7]
	ldr r1, [r6, #4]
	ldr r0, [sp, #0xc]
	adds r0, r1, r0
	str r0, [r7, #4]
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_021D6800: .word 0x00001243
	thumb_func_end FUN_021D6768

	thumb_func_start FUN_021D6804
FUN_021D6804: ; 0x021D6804
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r2, #0
	add r1, sp, #0
	movs r2, #0
	movs r4, #0
	bl FUN_0204C1A4
	add r1, sp, #0
	ldrsh r0, [r1, r4]
	str r0, [r5, #4]
	movs r0, #2
	ldrsh r2, [r1, r0]
	str r2, [r5, #8]
	ldrsh r2, [r1, r4]
	str r2, [r5, #0xc]
	ldrsh r0, [r1, r0]
	subs r0, #0xa
	str r0, [r5, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D6804

	thumb_func_start FUN_021D682C
FUN_021D682C: ; 0x021D682C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r2, #0
	add r1, sp, #0
	movs r2, #0
	movs r4, #0
	bl FUN_0204C1A4
	add r1, sp, #0
	ldrsh r0, [r1, r4]
	str r0, [r5, #4]
	movs r0, #2
	ldrsh r2, [r1, r0]
	str r2, [r5, #8]
	ldrsh r2, [r1, r4]
	str r2, [r5, #0xc]
	ldrsh r0, [r1, r0]
	adds r0, #0xa
	str r0, [r5, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D682C

	thumb_func_start FUN_021D6854
FUN_021D6854: ; 0x021D6854
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r2, #0
	add r1, sp, #0
	movs r2, #0
	movs r4, #0
	bl FUN_0204C1A4
	add r1, sp, #0
	ldrsh r0, [r1, r4]
	str r0, [r5, #4]
	movs r0, #2
	ldrsh r2, [r1, r0]
	str r2, [r5, #8]
	ldrsh r2, [r1, r4]
	subs r2, #0xa
	str r2, [r5, #0xc]
	ldrsh r0, [r1, r0]
	str r0, [r5, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D6854

	thumb_func_start FUN_021D687C
FUN_021D687C: ; 0x021D687C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r0, r2, #0
	add r1, sp, #0
	movs r2, #0
	movs r4, #0
	bl FUN_0204C1A4
	add r1, sp, #0
	ldrsh r0, [r1, r4]
	str r0, [r5, #4]
	movs r0, #2
	ldrsh r2, [r1, r0]
	str r2, [r5, #8]
	ldrsh r2, [r1, r4]
	adds r2, #0xa
	str r2, [r5, #0xc]
	ldrsh r0, [r1, r0]
	str r0, [r5, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D687C

	thumb_func_start FUN_021D68A4
FUN_021D68A4: ; 0x021D68A4
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r4]
	cmp r1, #3
	bhi _021D68FC
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_021D68BA: ; jump table
	.short _021D68C2 - _021D68BA - 2 ; case 0
	.short _021D68D8 - _021D68BA - 2 ; case 1
	.short _021D68E4 - _021D68BA - 2 ; case 2
	.short _021D68EE - _021D68BA - 2 ; case 3
_021D68C2:
	adds r2, r4, #0
	adds r0, #0x88
	adds r1, r4, #4
	adds r2, #0xc
_021D68CA:
	movs r3, #0xa
	bl FUN_021D690C
_021D68D0:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	b _021D68FC
_021D68D8:
	adds r0, #0x88
	bl FUN_021D699C
	cmp r0, #0
	beq _021D68FC
	b _021D68D0
_021D68E4:
	adds r1, r4, #0
	adds r0, #0x88
	adds r1, #0xc
	adds r2, r4, #4
	b _021D68CA
_021D68EE:
	adds r0, #0x88
	bl FUN_021D699C
	cmp r0, #0
	beq _021D68FC
	movs r0, #1
	pop {r4, pc}
_021D68FC:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_021D68A4
_021D6900:
	.byte 0x01, 0x4B, 0x88, 0x30, 0x11, 0x1C, 0x18, 0x47, 0xDD, 0x69, 0x1D, 0x02

	thumb_func_start FUN_021D690C
FUN_021D690C: ; 0x021D690C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldm r1, {r0, r1}
	adds r4, r3, #0
	ldr r3, [r2]
	str r1, [r5, #4]
	str r1, [r5, #0xc]
	ldr r1, [r2, #4]
	str r0, [r5]
	str r0, [r5, #8]
	str r3, [r5, #0x10]
	str r1, [r5, #0x14]
	str r4, [r5, #0x24]
	beq _021D6996
	subs r0, r3, r0
	cmp r0, #0
	ble _021D6940
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D694E
_021D6940:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D694E:
	blx FUN_0208DA78
	adds r1, r4, #0
	blx FUN_0208D688
	str r0, [r5, #0x18]
	ldr r1, [r5, #0x14]
	ldr r0, [r5, #0xc]
	subs r0, r1, r0
	cmp r0, #0
	ble _021D6976
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6984
_021D6976:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6984:
	blx FUN_0208DA78
	adds r1, r4, #0
	blx FUN_0208D688
	str r0, [r5, #0x1c]
	movs r0, #0
	str r0, [r5, #0x20]
	pop {r3, r4, r5, pc}
_021D6996:
	subs r0, r4, #2
	str r0, [r5, #0x20]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_021D690C

	thumb_func_start FUN_021D699C
FUN_021D699C: ; 0x021D699C
	push {r3, r4}
	ldr r1, [r0, #0x24]
	ldr r2, [r0, #0x20]
	subs r1, r1, #1
	cmp r2, r1
	bge _021D69CC
	adds r1, r2, #1
	ldr r2, [r0, #0x18]
	ldr r4, [r0, #8]
	adds r3, r2, #0
	muls r3, r1, r3
	asrs r2, r3, #0xc
	adds r2, r4, r2
	str r2, [r0]
	ldr r2, [r0, #0x1c]
	str r1, [r0, #0x20]
	muls r1, r2, r1
	ldr r3, [r0, #0xc]
	asrs r1, r1, #0xc
	adds r1, r3, r1
	str r1, [r0, #4]
	movs r0, #0
	pop {r3, r4}
	bx lr
_021D69CC:
	ldr r2, [r0, #0x10]
	ldr r1, [r0, #0x14]
	str r2, [r0]
	str r1, [r0, #4]
	movs r0, #1
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_021D699C
_021D69DC:
	.byte 0x02, 0x68, 0x40, 0x68
	.byte 0x0A, 0x80, 0x48, 0x80, 0x70, 0x47, 0x00, 0x00

	thumb_func_start FUN_021D69E8
FUN_021D69E8: ; 0x021D69E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #4]
	adds r7, r2, #0
	str r3, [sp]
	ldr r6, [sp, #0x20]
	cmp r0, #0
	ble _021D6A0E
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6A1C
_021D6A0E:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6A1C:
	blx FUN_0208DA78
	str r0, [sp, #8]
	ldr r0, [r4]
	cmp r0, #0
	ble _021D6A3A
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6A48
_021D6A3A:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6A48:
	blx FUN_0208DA78
	str r0, [r5]
	ldr r0, [sp, #8]
	str r0, [r5, #4]
	movs r0, #0
	str r0, [r5, #8]
	ldr r0, [r4, #4]
	cmp r0, #0
	ble _021D6A6E
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6A7C
_021D6A6E:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6A7C:
	blx FUN_0208DA78
	str r0, [sp, #4]
	ldr r0, [r4]
	cmp r0, #0
	ble _021D6A9A
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6AA8
_021D6A9A:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6AA8:
	blx FUN_0208DA78
	str r0, [r5, #0xc]
	ldr r0, [sp, #4]
	str r0, [r5, #0x10]
	movs r0, #0
	str r0, [r5, #0x14]
	ldr r0, [r7, #4]
	cmp r0, #0
	ble _021D6ACE
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6ADC
_021D6ACE:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6ADC:
	blx FUN_0208DA78
	adds r4, r0, #0
	ldr r0, [r7]
	cmp r0, #0
	ble _021D6AFA
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_0208DF40
	b _021D6B08
_021D6AFA:
	lsls r0, r0, #0xc
	blx FUN_0208D3A0
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_0208E170
_021D6B08:
	blx FUN_0208DA78
	str r0, [r5, #0x18]
	adds r0, r5, #0
	adds r1, r5, #0
	movs r7, #0
	adds r0, #0x18
	adds r1, #0xc
	str r4, [r5, #0x1c]
	str r7, [r5, #0x20]
	blx FUN_02074518
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, #0x18
	adds r1, #0xc
	adds r2, #0x24
	bl FUN_02074000
	adds r0, r5, #0
	adds r0, #0x24
	adds r1, r0, #0
	blx FUN_02074280
	ldr r0, [sp]
	adds r1, r0, #0
	muls r1, r6, r1
	subs r0, r4, r1
	adds r1, r6, #0
	muls r1, r6, r1
	lsls r0, r0, #1
	lsls r1, r1, #0xc
	bl FUN_02073E1C
	ldr r1, [sp]
	str r0, [r5, #0x34]
	str r1, [r5, #0x30]
	str r7, [r5, #0x38]
	str r6, [r5, #0x3c]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D69E8

	thumb_func_start FUN_021D6B60
FUN_021D6B60: ; 0x021D6B60
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x38]
	subs r0, r0, #1
	cmp r1, r0
	bge _021D6BC6
	adds r6, r1, #1
	ldr r0, [r5, #0x30]
	lsls r2, r6, #0xc
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	str r6, [r5, #0x38]
	blx FUN_0208D638
	adds r2, r6, #0
	adds r7, r0, #0
	muls r2, r6, r2
	lsls r2, r2, #0xc
	ldr r0, [r5, #0x34]
	adds r4, r1, #0
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_0208D638
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r6, r7, r2
	adcs r4, r3
	lsls r4, r4, #0x14
	lsrs r6, r6, #0xc
	orrs r6, r4
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, r6, r0
	adds r1, #0x24
	adds r2, #0xc
	adds r3, r5, #0
	blx FUN_020744C0
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_021D6BC6:
	adds r2, r5, #0
	adds r2, #0x18
	ldm r2!, {r0, r1}
	stm r5!, {r0, r1}
	ldr r0, [r2]
	str r0, [r5]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_021D6B60
_021D6BD8:
	.byte 0x02, 0x68, 0x40, 0x68, 0x12, 0x13, 0x00, 0x13
	.byte 0x0A, 0x80, 0x48, 0x80, 0x70, 0x47, 0x00, 0x00

	thumb_func_start FUN_021D6BE8
FUN_021D6BE8: ; 0x021D6BE8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, _021D6C1C ; =0x0000068E
	adds r5, r1, #0
	str r0, [sp]
	ldr r3, _021D6C20 ; =0x021DB020
	adds r0, r5, #0
	movs r1, #8
	movs r2, #1
	bl FUN_0203A228
	adds r4, r0, #0
	adds r0, r4, #4
	str r0, [sp]
	ldr r0, _021D6C24 ; =0x00000113
	adds r1, r6, #0
	movs r2, #0
	adds r3, r5, #0
	bl FUN_0204B59C
	str r0, [r4]
	adds r0, r4, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_021D6C1C: .word 0x0000068E
_021D6C20: .word 0x021DB020
_021D6C24: .word 0x00000113
	thumb_func_end FUN_021D6BE8

	thumb_func_start FUN_021D6C28
FUN_021D6C28: ; 0x021D6C28
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0203A278
	adds r0, r4, #0
	bl FUN_0203A278
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_021D6C28

	thumb_func_start FUN_021D6C3C
FUN_021D6C3C: ; 0x021D6C3C
	ldr r2, [r0]
	lsls r0, r1, #1
	ldrh r0, [r2, r0]
	bx lr
	thumb_func_end FUN_021D6C3C

	thumb_func_start FUN_021D6C44
FUN_021D6C44: ; 0x021D6C44
	ldr r3, [r0]
	lsls r0, r1, #3
	adds r0, r1, r0
	adds r0, #0xb
	adds r0, r2, r0
	lsls r0, r0, #1
	ldrh r0, [r3, r0]
	bx lr
	thumb_func_end FUN_021D6C44

	thumb_func_start FUN_021D6C54
FUN_021D6C54: ; 0x021D6C54
	ldr r0, [r0, #4]
	ldr r3, _021D6C60 ; =FUN_0208D894
	subs r0, #0x16
	movs r1, #0x12
	bx r3
	nop
_021D6C60: .word FUN_0208D894
	thumb_func_end FUN_021D6C54
_021D6C64:
	.byte 0x00, 0x0C, 0x06, 0x12, 0x03, 0x05, 0x00, 0x02, 0x04, 0x00, 0x03, 0x05
	.byte 0x07, 0x02, 0x04, 0x06, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xAD, 0x19, 0x02, 0x91, 0xAF, 0x19, 0x02
	.byte 0xA1, 0xB1, 0x19, 0x02, 0xE9, 0xB3, 0x19, 0x02, 0x51, 0xB6, 0x19, 0x02, 0x95, 0xBB, 0x19, 0x02
	.byte 0x00, 0x00, 0x00, 0x00, 0xE1, 0xAD, 0x19, 0x02, 0x91, 0xAF, 0x19, 0x02, 0xA1, 0xB1, 0x19, 0x02
	.byte 0xE9, 0xB3, 0x19, 0x02

	thumb_func_start FUN_021D6CA4
FUN_021D6CA4: ; 0x021D6CA4
	push {r0, r2, r3, r5, r6, r7}
	lsls r1, r3, #8
	.hword 0xBB95
	lsls r1, r3, #8
	movs r0, r0
	movs r0, r0
	add r5, sp, #0x384
	lsls r1, r3, #8
	add r7, sp, #0x244
	lsls r1, r3, #8
	.hword 0xB1A1
	lsls r1, r3, #8
	.hword 0xB3E9
	lsls r1, r3, #8
	rev r5, r2
	lsls r1, r3, #8
	.hword 0xBB95
	lsls r1, r3, #8
	movs r0, r0
	movs r0, r0
	add r5, sp, #0x384
	lsls r1, r3, #8
	add r7, sp, #0x244
	lsls r1, r3, #8
	.hword 0xB1A1
	lsls r1, r3, #8
	.hword 0xB3E9
	lsls r1, r3, #8
	thumb_func_end FUN_021D6CA4
_021D6CDC:
	.byte 0xA9, 0xB8, 0x19, 0x02
	.byte 0x95, 0xBB, 0x19, 0x02, 0x02, 0x00, 0x02, 0x00, 0x05, 0x03, 0x06, 0x00, 0x02, 0x06, 0x02, 0x00
	.byte 0x02, 0x00, 0x04, 0x02, 0x06, 0x01, 0x03, 0x06, 0x03, 0x00, 0x03, 0x00, 0x01, 0x03, 0x05, 0x00
	.byte 0x02, 0x04, 0x03, 0x00, 0x03, 0x00, 0x00, 0x02, 0x04, 0x01, 0x03, 0x05, 0x02, 0x00, 0x02, 0x00
	.byte 0x01, 0x03, 0x06, 0x04, 0x02, 0x06, 0x02, 0x00, 0x02, 0x00, 0x00, 0x02, 0x06, 0x05, 0x03, 0x06
	.byte 0x01, 0x99, 0x19, 0x02, 0x49, 0x9C, 0x19, 0x02, 0x15, 0x9D, 0x19, 0x02, 0x07, 0x02, 0x06, 0x02
	.byte 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x0D, 0x00
	.byte 0x26, 0x01, 0x0B, 0x00, 0x0E, 0x00, 0x21, 0x01, 0x0C, 0x00, 0x0F, 0x00, 0x22, 0x01, 0x0D, 0x00
	.byte 0x10, 0x00, 0x25, 0x01, 0x0E, 0x00, 0x11, 0x00, 0x23, 0x01, 0x0F, 0x00, 0x12, 0x00, 0x24, 0x01
	.byte 0x12, 0x00, 0x00, 0x00, 0xED, 0xFA, 0x1A, 0x02, 0x13, 0x00, 0x00, 0x00, 0xFD, 0xFA, 0x1A, 0x02
	.byte 0x14, 0x00, 0x00, 0x00, 0x0D, 0xFB, 0x1A, 0x02, 0x15, 0x00, 0x00, 0x00, 0x1D, 0xFB, 0x1A, 0x02
	.byte 0x16, 0x00, 0x00, 0x00, 0x2D, 0xFB, 0x1A, 0x02, 0x17, 0x00, 0x00, 0x00, 0x3D, 0xFB, 0x1A, 0x02
	.byte 0x18, 0x00, 0x00, 0x00, 0x4D, 0xFB, 0x1A, 0x02, 0x19, 0x00, 0x01, 0x00, 0x5D, 0xFB, 0x1A, 0x02
	.byte 0x1A, 0x00, 0x00, 0x00, 0xC5, 0xFB, 0x1A, 0x02, 0x1E, 0x00, 0x01, 0x00, 0x55, 0xFC, 0x1A, 0x02
	.byte 0x1F, 0x00, 0x01, 0x00, 0x65, 0xFC, 0x1A, 0x02, 0x20, 0x00, 0x01, 0x00, 0x75, 0xFC, 0x1A, 0x02
	.byte 0x21, 0x00, 0x01, 0x00, 0x85, 0xFC, 0x1A, 0x02, 0x22, 0x00, 0x01, 0x00, 0x95, 0xFC, 0x1A, 0x02
	.byte 0x23, 0x00, 0x01, 0x00, 0xA5, 0xFC, 0x1A, 0x02, 0x24, 0x00, 0x01, 0x00, 0xB5, 0xFC, 0x1A, 0x02
	.byte 0x27, 0x00, 0x00, 0x00, 0x35, 0xFD, 0x1A, 0x02, 0x28, 0x00, 0x00, 0x00, 0xD1, 0xFD, 0x1A, 0x02
	.byte 0x29, 0x00, 0x00, 0x00, 0x7D, 0xFE, 0x1A, 0x02, 0x65, 0x02, 0x02, 0x01, 0x69, 0x00, 0x1B, 0x02
	.byte 0x63, 0x02, 0x02, 0x01, 0xC5, 0x00, 0x1B, 0x02, 0x64, 0x02, 0x02, 0x01, 0x15, 0x01, 0x1B, 0x02
	.byte 0x66, 0x02, 0x02, 0x01, 0xB1, 0x01, 0x1B, 0x02, 0x00, 0x08, 0x01, 0x04, 0x05, 0x30, 0x06, 0x30
	.byte 0x08, 0x28, 0x09, 0x30, 0x0A, 0x30, 0x0B, 0x40, 0x0C, 0x3C, 0x0E, 0x40, 0x0F, 0x0C, 0x12, 0x08
	.byte 0x10, 0x0C, 0x11, 0x38, 0x07, 0x34, 0x13, 0x30, 0x14, 0x08, 0x04, 0x2C, 0x02, 0x04, 0x03, 0x04
	.byte 0x15, 0x0C, 0x16, 0x0C, 0x17, 0x0C, 0x18, 0x0C, 0x19, 0x38, 0x1A, 0x08, 0x1B, 0x38, 0x1D, 0x30
	.byte 0x1C, 0x08, 0x1E, 0x20, 0x1F, 0x34, 0x20, 0x34, 0x21, 0x0C, 0x22, 0x08, 0x23, 0x30, 0x24, 0x80
	.byte 0x25, 0x0C, 0x26, 0x08, 0x27, 0x08, 0x28, 0x04, 0x29, 0x58, 0x2A, 0x08, 0x2B, 0x08, 0x2C, 0x30
	.byte 0x2D, 0x30, 0x2E, 0x30, 0x2F, 0x30, 0x30, 0x08, 0x31, 0x30, 0x32, 0x30, 0x33, 0x30, 0x34, 0x30
	.byte 0x35, 0x04, 0x36, 0x34, 0x37, 0x34, 0x38, 0x04, 0x39, 0x30, 0x3A, 0x08, 0x3B, 0x04, 0x00, 0x00
	.byte 0x00, 0x12, 0x12, 0x01, 0x03, 0x03, 0x42, 0x03, 0x03, 0x03, 0x03, 0x08, 0x01, 0x01, 0x22, 0x53
	.byte 0x01, 0x12, 0x04, 0x33, 0x12, 0x53, 0x12, 0x12, 0x26, 0x02, 0x02, 0x02, 0x02, 0x12, 0x12, 0x15
	.byte 0x01, 0x22, 0x02, 0x01, 0x01, 0x33, 0x02, 0x12, 0x01, 0x32, 0x01, 0x01, 0x02, 0x26, 0x01, 0x01
	.byte 0x24, 0x42, 0x43, 0x43, 0x01, 0x02, 0x01, 0x23, 0x23, 0x01, 0x01, 0x02, 0x12, 0x14, 0x07, 0x02
	.byte 0x01, 0x01, 0x01, 0x42, 0x23, 0x22, 0x16, 0x12, 0x32, 0x12, 0x54, 0x01, 0x11, 0x12, 0x43, 0x02
	.byte 0x14, 0x01, 0x01, 0x02, 0x13, 0x11, 0x01, 0x01, 0x01, 0x12, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00
	.byte 0x06, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x01, 0x05, 0x0A, 0x0F, 0x3D, 0x00
	.byte 0x3E, 0x00, 0x3F, 0x00, 0x40, 0x00, 0x12, 0x00, 0x11, 0x00, 0x13, 0x00, 0x14, 0x00, 0x0D, 0x00
	.byte 0x0E, 0x00, 0x0F, 0x00, 0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x1E, 0x01, 0x1F, 0x02, 0x20, 0x03
	.byte 0x21, 0x04, 0x22, 0x05, 0x23, 0x06, 0x12, 0x02, 0x13, 0x05, 0x14, 0x04, 0x15, 0x03, 0x16, 0x01
	.byte 0x17, 0x06, 0x18, 0x07, 0x00, 0x09, 0x01, 0x03, 0x0A, 0x0D, 0x03, 0x03, 0x0E, 0x11, 0x06, 0x03
	.byte 0x12, 0x15, 0x0B, 0x04, 0x16, 0x16, 0x14, 0x01, 0x54, 0x00, 0x6B, 0x02, 0x54, 0x00, 0x6B, 0x02
	.byte 0x55, 0x00, 0x68, 0x02, 0x57, 0x00, 0x69, 0x02, 0x56, 0x00, 0x6A, 0x02, 0x0A, 0x00, 0x0B, 0x00
	.byte 0x72, 0x00, 0x57, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x0A, 0x00, 0x4E, 0x00, 0x1F, 0x00, 0x00, 0x00
	.byte 0x0B, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x12, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
	.byte 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x08, 0x00, 0x00, 0xC1, 0x08, 0x00, 0x00
	.byte 0xC5, 0x08, 0x00, 0x00, 0xC6, 0x08, 0x00, 0x00, 0xC7, 0x08, 0x00, 0x00, 0xC8, 0x08, 0x00, 0x00
	.byte 0xC9, 0x08, 0x00, 0x00, 0xCA, 0x08, 0x00, 0x00, 0xBF, 0x08, 0x00, 0x00, 0xC0, 0x08, 0x00, 0x00
	.byte 0xC3, 0x08, 0x00, 0x00, 0xC4, 0x08, 0x00, 0x00, 0xCB, 0x08, 0x00, 0x00, 0xCC, 0x08, 0x00, 0x00
	.byte 0xCD, 0x08, 0x00, 0x00, 0xCE, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
	.byte 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
	.byte 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
	.byte 0x12, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x05, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x22, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x01, 0x01, 0x00, 0x00, 0x0D, 0x1E, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0xE5, 0x1E, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0xB1, 0x1F, 0x1B, 0x02, 0x9D, 0x20, 0x1B, 0x02, 0x99, 0x20, 0x1B, 0x02
	.byte 0x03, 0x00, 0x00, 0x00, 0xF9, 0x23, 0x1B, 0x02, 0xED, 0x59, 0x1B, 0x02, 0x75, 0x34, 0x1B, 0x02
	.byte 0x07, 0x00, 0x00, 0x00, 0x71, 0x5F, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x05, 0x00, 0x00, 0x00, 0xE5, 0x5F, 0x1B, 0x02, 0xFD, 0x5F, 0x1B, 0x02, 0x21, 0x61, 0x1B, 0x02
	.byte 0x06, 0x00, 0x00, 0x00, 0xF1, 0x5F, 0x1B, 0x02, 0xFD, 0x5F, 0x1B, 0x02, 0x21, 0x61, 0x1B, 0x02
	.byte 0x04, 0x00, 0x00, 0x00, 0x69, 0x63, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x21, 0x61, 0x1B, 0x02
	.byte 0x08, 0x00, 0x00, 0x00, 0x61, 0x6E, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x4D, 0x6E, 0x1B, 0x02
	.byte 0x0A, 0x00, 0x00, 0x00, 0xED, 0x64, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x0B, 0x01, 0x00, 0x00, 0xC1, 0x66, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x66, 0x1B, 0x02
	.byte 0x0C, 0x01, 0x00, 0x00, 0xED, 0x6A, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0xD9, 0x6A, 0x1B, 0x02
	.byte 0x0E, 0x01, 0x00, 0x00, 0xD9, 0x6C, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x0F, 0x01, 0x00, 0x00, 0x4D, 0x6D, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x0D, 0x01, 0x00, 0x00, 0x41, 0x65, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x65, 0x1B, 0x02
	.byte 0x10, 0x01, 0x00, 0x00, 0x05, 0x6E, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x5A, 0x00, 0x00, 0x00, 0x71, 0x72, 0x1B, 0x02, 0x5C, 0x00, 0x00, 0x00, 0xB9, 0x72, 0x1B, 0x02
	.byte 0x5B, 0x00, 0x00, 0x00, 0x15, 0x73, 0x1B, 0x02, 0x5D, 0x00, 0x00, 0x00, 0x5D, 0x73, 0x1B, 0x02
	.byte 0x59, 0x00, 0x00, 0x00, 0xB9, 0x73, 0x1B, 0x02, 0x30, 0x00, 0x00, 0x00, 0x35, 0x74, 0x1B, 0x02
	.byte 0x31, 0x00, 0x00, 0x00, 0xC1, 0x74, 0x1B, 0x02, 0x32, 0x00, 0x00, 0x00, 0x11, 0x75, 0x1B, 0x02
	.byte 0x33, 0x00, 0x00, 0x00, 0x61, 0x75, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0xD9, 0x75, 0x1B, 0x02
	.byte 0x35, 0x00, 0x00, 0x00, 0x39, 0x76, 0x1B, 0x02, 0x36, 0x00, 0x00, 0x00, 0x7D, 0x76, 0x1B, 0x02
	.byte 0x39, 0x00, 0x00, 0x00, 0x25, 0x77, 0x1B, 0x02, 0x3A, 0x00, 0x00, 0x00, 0x91, 0x77, 0x1B, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0xBD, 0x6F, 0x1B, 0x02, 0x3C, 0x00, 0x00, 0x00, 0x99, 0x70, 0x1B, 0x02
	.byte 0x3D, 0x00, 0x00, 0x00, 0xE1, 0x70, 0x1B, 0x02, 0x37, 0x00, 0x00, 0x00, 0x41, 0x78, 0x1B, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xD5, 0x77, 0x1B, 0x02, 0x3E, 0x00, 0x00, 0x00, 0x01, 0x7E, 0x1B, 0x02
	.byte 0x3F, 0x00, 0x00, 0x00, 0xAD, 0x78, 0x1B, 0x02, 0x40, 0x00, 0x00, 0x00, 0x2D, 0x79, 0x1B, 0x02
	.byte 0x41, 0x00, 0x00, 0x00, 0x9D, 0x79, 0x1B, 0x02, 0x42, 0x00, 0x00, 0x00, 0xE1, 0x79, 0x1B, 0x02
	.byte 0x57, 0x00, 0x00, 0x00, 0x75, 0x8A, 0x1B, 0x02, 0x58, 0x00, 0x00, 0x00, 0xCD, 0x8A, 0x1B, 0x02
	.byte 0x01, 0x00, 0x00, 0x00, 0x11, 0x8B, 0x1B, 0x02, 0x02, 0x00, 0x00, 0x00, 0x31, 0x8B, 0x1B, 0x02
	.byte 0x03, 0x00, 0x00, 0x00, 0xC1, 0x8B, 0x1B, 0x02, 0x04, 0x00, 0x00, 0x00, 0x51, 0x8B, 0x1B, 0x02
	.byte 0x05, 0x00, 0x00, 0x00, 0x79, 0x8B, 0x1B, 0x02, 0x06, 0x00, 0x00, 0x00, 0xA1, 0x8B, 0x1B, 0x02
	.byte 0x07, 0x00, 0x00, 0x00, 0xD9, 0x8B, 0x1B, 0x02, 0x08, 0x00, 0x00, 0x00, 0xFD, 0x8B, 0x1B, 0x02
	.byte 0x09, 0x00, 0x00, 0x00, 0x21, 0x8C, 0x1B, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x41, 0x8C, 0x1B, 0x02
	.byte 0x0B, 0x00, 0x00, 0x00, 0x61, 0x8C, 0x1B, 0x02, 0x0C, 0x00, 0x00, 0x00, 0xD9, 0x8C, 0x1B, 0x02
	.byte 0x0D, 0x00, 0x00, 0x00, 0xF1, 0x8C, 0x1B, 0x02, 0x0E, 0x00, 0x00, 0x00, 0x09, 0x8D, 0x1B, 0x02
	.byte 0x0F, 0x00, 0x00, 0x00, 0x25, 0x8D, 0x1B, 0x02, 0x10, 0x00, 0x00, 0x00, 0x45, 0x8D, 0x1B, 0x02
	.byte 0x11, 0x00, 0x00, 0x00, 0x5D, 0x8D, 0x1B, 0x02, 0x12, 0x00, 0x00, 0x00, 0x79, 0x8D, 0x1B, 0x02
	.byte 0x13, 0x00, 0x00, 0x00, 0x71, 0x91, 0x1B, 0x02, 0x14, 0x00, 0x00, 0x00, 0x95, 0x91, 0x1B, 0x02
	.byte 0x16, 0x00, 0x00, 0x00, 0xCD, 0x8D, 0x1B, 0x02, 0x15, 0x00, 0x00, 0x00, 0xED, 0x8D, 0x1B, 0x02
	.byte 0x17, 0x00, 0x00, 0x00, 0x65, 0x8E, 0x1B, 0x02, 0x18, 0x00, 0x00, 0x00, 0x85, 0x8E, 0x1B, 0x02
	.byte 0x19, 0x00, 0x00, 0x00, 0xC1, 0x8E, 0x1B, 0x02, 0x1A, 0x00, 0x00, 0x00, 0xDD, 0x8E, 0x1B, 0x02
	.byte 0x1B, 0x00, 0x00, 0x00, 0xF9, 0x8E, 0x1B, 0x02, 0x1C, 0x00, 0x00, 0x00, 0x15, 0x8F, 0x1B, 0x02
	.byte 0x1D, 0x00, 0x00, 0x00, 0x31, 0x8F, 0x1B, 0x02, 0x1E, 0x00, 0x00, 0x00, 0x4D, 0x8F, 0x1B, 0x02
	.byte 0x1F, 0x00, 0x00, 0x00, 0x6D, 0x8F, 0x1B, 0x02, 0x20, 0x00, 0x00, 0x00, 0xA1, 0x8F, 0x1B, 0x02
	.byte 0x21, 0x00, 0x00, 0x00, 0xB9, 0x8F, 0x1B, 0x02, 0x22, 0x00, 0x00, 0x00, 0xCD, 0x8F, 0x1B, 0x02
	.byte 0x23, 0x00, 0x00, 0x00, 0xE1, 0x8F, 0x1B, 0x02, 0x24, 0x00, 0x00, 0x00, 0xF5, 0x8F, 0x1B, 0x02
	.byte 0x25, 0x00, 0x00, 0x00, 0x05, 0x90, 0x1B, 0x02, 0x26, 0x00, 0x00, 0x00, 0x25, 0x90, 0x1B, 0x02
	.byte 0x27, 0x00, 0x00, 0x00, 0x51, 0x90, 0x1B, 0x02, 0x28, 0x00, 0x00, 0x00, 0x71, 0x90, 0x1B, 0x02
	.byte 0x29, 0x00, 0x00, 0x00, 0x89, 0x90, 0x1B, 0x02, 0x2A, 0x00, 0x00, 0x00, 0xB5, 0x90, 0x1B, 0x02
	.byte 0x2B, 0x00, 0x00, 0x00, 0xD5, 0x90, 0x1B, 0x02, 0x2C, 0x00, 0x00, 0x00, 0xED, 0x90, 0x1B, 0x02
	.byte 0x2D, 0x00, 0x00, 0x00, 0x0D, 0x91, 0x1B, 0x02, 0x2E, 0x00, 0x00, 0x00, 0x41, 0x91, 0x1B, 0x02
	.byte 0x2F, 0x00, 0x00, 0x00, 0x61, 0x91, 0x1B, 0x02, 0x43, 0x00, 0x00, 0x00, 0x45, 0x7A, 0x1B, 0x02
	.byte 0x44, 0x00, 0x00, 0x00, 0xA1, 0x7A, 0x1B, 0x02, 0x45, 0x00, 0x00, 0x00, 0x59, 0x7E, 0x1B, 0x02
	.byte 0x46, 0x00, 0x00, 0x00, 0x1D, 0x84, 0x1B, 0x02, 0x47, 0x00, 0x00, 0x00, 0x7D, 0x85, 0x1B, 0x02
	.byte 0x48, 0x00, 0x00, 0x00, 0xE5, 0x85, 0x1B, 0x02, 0x49, 0x00, 0x00, 0x00, 0x91, 0x86, 0x1B, 0x02
	.byte 0x4A, 0x00, 0x00, 0x00, 0x25, 0x87, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x91, 0x88, 0x1B, 0x02
	.byte 0x4C, 0x00, 0x00, 0x00, 0xF5, 0x88, 0x1B, 0x02, 0x4D, 0x00, 0x00, 0x00, 0x2D, 0x89, 0x1B, 0x02
	.byte 0x4E, 0x00, 0x00, 0x00, 0xAD, 0x89, 0x1B, 0x02, 0x4F, 0x00, 0x00, 0x00, 0x0D, 0x8A, 0x1B, 0x02
	.byte 0x50, 0x00, 0x00, 0x00, 0x35, 0x7B, 0x1B, 0x02, 0x51, 0x00, 0x00, 0x00, 0x49, 0x7C, 0x1B, 0x02
	.byte 0x52, 0x00, 0x00, 0x00, 0x81, 0x7C, 0x1B, 0x02, 0x53, 0x00, 0x00, 0x00, 0xE1, 0x7C, 0x1B, 0x02
	.byte 0x54, 0x00, 0x00, 0x00, 0x65, 0x7D, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0xC5, 0x7D, 0x1B, 0x02
	.byte 0x56, 0x00, 0x00, 0x00, 0xD1, 0x7D, 0x1B, 0x02, 0xFD, 0x9A, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00
	.byte 0x21, 0x9C, 0x1B, 0x02, 0x00, 0x00, 0x00, 0x00, 0xF5, 0x9C, 0x1B, 0x02, 0xAD, 0x9C, 0x1B, 0x02
	.byte 0xF9, 0x9D, 0x1B, 0x02, 0x99, 0x9D, 0x1B, 0x02, 0x3D, 0x9F, 0x1B, 0x02, 0xF1, 0x9E, 0x1B, 0x02
	.byte 0xC1, 0xA0, 0x1B, 0x02, 0x79, 0xA0, 0x1B, 0x02, 0xDD, 0xA1, 0x1B, 0x02, 0x95, 0xA1, 0x1B, 0x02
	.byte 0xF9, 0xA4, 0x1B, 0x02, 0x21, 0xA5, 0x1B, 0x02, 0x55, 0xA4, 0x1B, 0x02, 0x3D, 0xA4, 0x1B, 0x02
	.byte 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
	.byte 0x10, 0x08, 0x04, 0x03, 0x02, 0x00, 0x00, 0x23, 0x46, 0x55, 0x64, 0x00, 0x01, 0x02, 0x04, 0x08
	.byte 0x10, 0x02, 0x04, 0x06, 0x09, 0x0C, 0x10, 0x14, 0x19, 0x1E, 0x73, 0x00, 0x71, 0x08, 0xDB, 0x10
	.byte 0x36, 0x18, 0x6E, 0x21, 0x7D, 0x29, 0xBF, 0x30, 0x86, 0x39, 0xBE, 0x41, 0x02, 0x08, 0x02, 0x07
	.byte 0x02, 0x06, 0x02, 0x05, 0x02, 0x04, 0x02, 0x03, 0x02, 0x02, 0x03, 0x02, 0x04, 0x02, 0x05, 0x02
	.byte 0x06, 0x02, 0x07, 0x02, 0x08, 0x02, 0x06, 0x12, 0x06, 0x10, 0x06, 0x0E, 0x06, 0x0C, 0x06, 0x0A
	.byte 0x06, 0x08, 0x06, 0x06, 0x08, 0x06, 0x0A, 0x06, 0x0C, 0x06, 0x0E, 0x06, 0x10, 0x06, 0x12, 0x06
	.byte 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x04, 0x00, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04
	.byte 0x04, 0x08, 0x04, 0x02, 0x02, 0x04, 0x08, 0x02, 0x00, 0x08, 0x04, 0x04, 0x04, 0x04, 0x02, 0x08
	.byte 0x04, 0x08, 0x04, 0x08, 0x04, 0x04, 0x04, 0x02, 0x08, 0x04, 0x02, 0x04, 0x04, 0x08, 0x02, 0x04
	.byte 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x04, 0x02, 0x00, 0x04, 0x04, 0x08, 0x04
	.byte 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x08, 0x04, 0x08, 0x02, 0x04, 0x08, 0x08, 0x04, 0x02
	.byte 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x08, 0x04, 0x02, 0x04, 0x08, 0x04, 0x02, 0x08, 0x04
	.byte 0x04, 0x04, 0x04, 0x08, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02
	.byte 0x04, 0x08, 0x04, 0x08, 0x04, 0x04, 0x08, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x02
	.byte 0x04, 0x04, 0x04, 0x04, 0x08, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x04, 0x04
	.byte 0x02, 0x02, 0x02, 0x04, 0x02, 0x04, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x08
	.byte 0x04, 0x08, 0x02, 0x02, 0x08, 0x04, 0x04, 0x08, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08
	.byte 0x04, 0x04, 0x04, 0x08, 0x02, 0x02, 0x04, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x02, 0x02, 0x08
	.byte 0x08, 0x02, 0x04, 0x02, 0x02, 0x08, 0x02, 0x04, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x08, 0x04
	.byte 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x02, 0x02, 0x04, 0x04, 0x02, 0x04, 0x04, 0x08, 0x04
	.byte 0x08, 0x04, 0x04, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x04, 0x02, 0x04, 0x04, 0x00, 0x04, 0x04
	.byte 0x08, 0x04, 0x08, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x08, 0x04, 0x04, 0x02, 0x08, 0x04, 0x04
	.byte 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x04
	.byte 0x04, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x02, 0x04, 0x04, 0x04, 0x04, 0x08, 0x04, 0x04
	.byte 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x21, 0xE1, 0x1B, 0x02, 0x76, 0x00, 0x00, 0x00
	.byte 0xD1, 0xF2, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0xC9, 0x21, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0x65, 0xDF, 0x1B, 0x02, 0x7F, 0x00, 0x00, 0x00, 0xB1, 0xF0, 0x1B, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0xD1, 0x22, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x71, 0x21, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00
	.byte 0xFD, 0xDF, 0x1B, 0x02, 0x7B, 0x00, 0x00, 0x00, 0x79, 0x24, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0x09, 0x1B, 0x1C, 0x02, 0x8B, 0x00, 0x00, 0x00, 0xC9, 0x0D, 0x1C, 0x02, 0x7F, 0x00, 0x00, 0x00
	.byte 0x0D, 0x1D, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x3D, 0x1D, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0x51, 0xE9, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00, 0xC1, 0xE4, 0x1B, 0x02, 0x35, 0x00, 0x00, 0x00
	.byte 0x4D, 0xEA, 0x1B, 0x02, 0x38, 0x00, 0x00, 0x00, 0xC5, 0x1A, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0x09, 0x1F, 0x1C, 0x02, 0x11, 0x00, 0x00, 0x00, 0x01, 0x23, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0x5D, 0xE5, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00, 0xF9, 0xE4, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0xDD, 0xE4, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0xA5, 0xE2, 0x1B, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0x95, 0x1B, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00, 0xF9, 0x04, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00
	.byte 0x71, 0xE0, 0x1B, 0x02, 0x7F, 0x00, 0x00, 0x00, 0xCD, 0xF0, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0x31, 0x22, 0x1C, 0x02, 0x7B, 0x00, 0x00, 0x00, 0x51, 0x24, 0x1C, 0x02, 0x5D, 0x00, 0x00, 0x00
	.byte 0xBD, 0x18, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0x6D, 0x19, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0x1D, 0xE4, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00, 0xA9, 0xE5, 0x1B, 0x02, 0x3C, 0x00, 0x00, 0x00
	.byte 0x05, 0xEA, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00, 0xA5, 0xE4, 0x1B, 0x02, 0x5A, 0x00, 0x00, 0x00
	.byte 0xA9, 0xEB, 0x1B, 0x02, 0x87, 0x00, 0x00, 0x00, 0x55, 0x15, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0x41, 0x14, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0xCD, 0x1E, 0x1C, 0x02, 0x0C, 0x00, 0x00, 0x00
	.byte 0x59, 0x13, 0x1C, 0x02, 0x0C, 0x00, 0x00, 0x00, 0xE9, 0x12, 0x1C, 0x02, 0x0C, 0x00, 0x00, 0x00
	.byte 0x75, 0x12, 0x1C, 0x02, 0x6C, 0x00, 0x00, 0x00, 0x45, 0x12, 0x1C, 0x02, 0x80, 0x00, 0x00, 0x00
	.byte 0x21, 0x12, 0x1C, 0x02, 0x54, 0x00, 0x00, 0x00, 0xE5, 0x1D, 0x1C, 0x02, 0x5A, 0x00, 0x00, 0x00
	.byte 0x95, 0x24, 0x1C, 0x02, 0x6D, 0x00, 0x00, 0x00, 0xED, 0xDE, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0x05, 0x16, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xBD, 0xE9, 0x1B, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0xA1, 0x23, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00, 0x29, 0x03, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00
	.byte 0x85, 0xE3, 0x1B, 0x02, 0x13, 0x00, 0x00, 0x00, 0xC9, 0xDF, 0x1B, 0x02, 0x13, 0x00, 0x00, 0x00
	.byte 0x31, 0xE0, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x89, 0x25, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0x81, 0xE9, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0x05, 0x27, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0x81, 0x1A, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00, 0xFD, 0x20, 0x1C, 0x02, 0x76, 0x00, 0x00, 0x00
	.byte 0xD9, 0x19, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0xA5, 0x19, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0xE1, 0x03, 0x1C, 0x02, 0x3E, 0x00, 0x00, 0x00, 0xB1, 0x03, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0x8D, 0x03, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00, 0x55, 0x03, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0x25, 0x19, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00, 0x11, 0xDF, 0x1B, 0x02, 0x47, 0x00, 0x00, 0x00
	.byte 0xED, 0xE3, 0x1B, 0x02, 0x47, 0x00, 0x00, 0x00, 0xB9, 0xE3, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0x9D, 0xDF, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0xD5, 0x16, 0x1C, 0x02, 0x41, 0x00, 0x00, 0x00
	.byte 0x75, 0xE4, 0x1B, 0x02, 0x38, 0x00, 0x00, 0x00, 0xD9, 0xE8, 0x1B, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0x75, 0x08, 0x1C, 0x02, 0x54, 0x00, 0x00, 0x00, 0x59, 0xFB, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00
	.byte 0xB9, 0xF9, 0x1B, 0x02, 0x28, 0x00, 0x00, 0x00, 0x89, 0xF9, 0x1B, 0x02, 0x50, 0x00, 0x00, 0x00
	.byte 0x65, 0xF9, 0x1B, 0x02, 0x68, 0x00, 0x00, 0x00, 0xB5, 0xF8, 0x1B, 0x02, 0x83, 0x00, 0x00, 0x00
	.byte 0x2D, 0xF8, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x85, 0xF7, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0xE9, 0xF6, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x19, 0xF6, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0x85, 0xF5, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x55, 0xF5, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0x25, 0xF5, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00, 0xF5, 0xF4, 0x1B, 0x02, 0x4B, 0x00, 0x00, 0x00
	.byte 0x61, 0xF4, 0x1B, 0x02, 0x36, 0x00, 0x00, 0x00, 0x31, 0xF4, 0x1B, 0x02, 0x36, 0x00, 0x00, 0x00
	.byte 0x0D, 0xF4, 0x1B, 0x02, 0x6B, 0x00, 0x00, 0x00, 0xA9, 0xF3, 0x1B, 0x02, 0x76, 0x00, 0x00, 0x00
	.byte 0x45, 0xF3, 0x1B, 0x02, 0x5B, 0x00, 0x00, 0x00, 0x7D, 0xEA, 0x1B, 0x02, 0x5C, 0x00, 0x00, 0x00
	.byte 0x8D, 0xEA, 0x1B, 0x02, 0x5B, 0x00, 0x00, 0x00, 0xA9, 0xEA, 0x1B, 0x02, 0x5C, 0x00, 0x00, 0x00
	.byte 0xB9, 0xEA, 0x1B, 0x02, 0x5B, 0x00, 0x00, 0x00, 0xD5, 0xEA, 0x1B, 0x02, 0x5C, 0x00, 0x00, 0x00
	.byte 0xE5, 0xEA, 0x1B, 0x02, 0x0B, 0x00, 0x00, 0x00, 0x45, 0x09, 0x1C, 0x02, 0x0D, 0x00, 0x00, 0x00
	.byte 0x4D, 0x09, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x5D, 0xDE, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x5D, 0xDE, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0xAD, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0xAD, 0xEF, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0xC9, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0xC9, 0xEF, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0xE5, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0xE5, 0xEF, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x01, 0xF0, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x55, 0xF0, 0x1B, 0x02, 0x7A, 0x00, 0x00, 0x00
	.byte 0x99, 0xF0, 0x1B, 0x02, 0x8D, 0x00, 0x00, 0x00, 0x29, 0x0E, 0x1C, 0x02, 0xA3, 0x00, 0x00, 0x00
	.byte 0x95, 0x0E, 0x1C, 0x02, 0x7F, 0x00, 0x00, 0x00, 0x45, 0xF1, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0x9D, 0xF1, 0x1B, 0x02, 0x5B, 0x00, 0x00, 0x00, 0x6D, 0x1E, 0x1C, 0x02, 0x5C, 0x00, 0x00, 0x00
	.byte 0x7D, 0x1E, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0x99, 0x1E, 0x1C, 0x02, 0x7F, 0x00, 0x00, 0x00
	.byte 0xF5, 0xE2, 0x1B, 0x02, 0x9C, 0x00, 0x00, 0x00, 0xCD, 0x13, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00
	.byte 0x01, 0x14, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x95, 0xFB, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x95, 0xFB, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x41, 0xFC, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x41, 0xFC, 0x1B, 0x02, 0x38, 0x00, 0x00, 0x00, 0x61, 0x1F, 0x1C, 0x02, 0x7F, 0x00, 0x00, 0x00
	.byte 0xF5, 0xE2, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x91, 0xFD, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x91, 0xFD, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x8D, 0xFE, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00
	.byte 0x8D, 0xFE, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0xAD, 0xE0, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00
	.byte 0xDD, 0xE0, 0x1B, 0x02, 0x38, 0x00, 0x00, 0x00, 0xAD, 0x00, 0x1C, 0x02, 0x6B, 0x00, 0x00, 0x00
	.byte 0xD1, 0x00, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0xCD, 0xE2, 0x1B, 0x02, 0x7F, 0x00, 0x00, 0x00
	.byte 0xF5, 0xE2, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0x11, 0xE3, 0x1B, 0x02, 0x7F, 0x00, 0x00, 0x00
	.byte 0x39, 0xE3, 0x1B, 0x02, 0x03, 0x00, 0x00, 0x00, 0xAD, 0x20, 0x1C, 0x02, 0x04, 0x00, 0x00, 0x00
	.byte 0xCD, 0x20, 0x1C, 0x02, 0x12, 0x00, 0x00, 0x00, 0x5D, 0x04, 0x1C, 0x02, 0x1B, 0x00, 0x00, 0x00
	.byte 0x85, 0x04, 0x1C, 0x02, 0x76, 0x00, 0x00, 0x00, 0xD5, 0x04, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0xC1, 0x07, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00, 0x4D, 0x07, 0x1C, 0x02, 0x89, 0x00, 0x00, 0x00
	.byte 0x85, 0x07, 0x1C, 0x02, 0x65, 0x00, 0x00, 0x00, 0xD5, 0xEB, 0x1B, 0x02, 0x67, 0x00, 0x00, 0x00
	.byte 0x35, 0xEF, 0x1B, 0x02, 0x0E, 0x00, 0x00, 0x00, 0x11, 0xEC, 0x1B, 0x02, 0x2A, 0x00, 0x00, 0x00
	.byte 0x85, 0x0C, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00, 0xDD, 0x0C, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0x99, 0x0C, 0x1C, 0x02, 0x2A, 0x00, 0x00, 0x00, 0xC9, 0x0C, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0xDD, 0x0C, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00, 0x2D, 0x0D, 0x1C, 0x02, 0x64, 0x00, 0x00, 0x00
	.byte 0x8D, 0xF2, 0x1B, 0x02, 0x51, 0x00, 0x00, 0x00, 0x8D, 0xF2, 0x1B, 0x02, 0x6C, 0x00, 0x00, 0x00
	.byte 0xAD, 0xF2, 0x1B, 0x02, 0x2D, 0x00, 0x00, 0x00, 0x51, 0x10, 0x1C, 0x02, 0x9A, 0x00, 0x00, 0x00
	.byte 0xBD, 0x10, 0x1C, 0x02, 0x9B, 0x00, 0x00, 0x00, 0xE5, 0x10, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00
	.byte 0x51, 0x11, 0x1C, 0x02, 0x8A, 0x00, 0x00, 0x00, 0x51, 0x11, 0x1C, 0x02, 0x4E, 0x00, 0x00, 0x00
	.byte 0xA5, 0x11, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x41, 0x23, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0x49, 0x23, 0x1C, 0x02, 0x09, 0x00, 0x00, 0x00, 0x51, 0x23, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00
	.byte 0xC5, 0x24, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0xE9, 0x24, 0x1C, 0x02, 0x56, 0x00, 0x00, 0x00
	.byte 0xE9, 0x24, 0x1C, 0x02, 0x70, 0x00, 0x00, 0x00, 0x55, 0xFF, 0x1B, 0x02, 0x74, 0x00, 0x00, 0x00
	.byte 0xB1, 0xFF, 0x1B, 0x02, 0x75, 0x00, 0x00, 0x00, 0xE9, 0xFF, 0x1B, 0x02, 0x33, 0x00, 0x00, 0x00
	.byte 0x45, 0x00, 0x1C, 0x02, 0x39, 0x00, 0x00, 0x00, 0x71, 0x00, 0x1C, 0x02, 0x3A, 0x00, 0x00, 0x00
	.byte 0x89, 0x00, 0x1C, 0x02, 0x7F, 0x00, 0x00, 0x00, 0x49, 0x02, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0xD9, 0x02, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00, 0xFD, 0x02, 0x1C, 0x02, 0x78, 0x00, 0x00, 0x00
	.byte 0xA1, 0x1F, 0x1C, 0x02, 0x6A, 0x00, 0x00, 0x00, 0x25, 0x20, 0x1C, 0x02, 0x89, 0x00, 0x00, 0x00
	.byte 0x25, 0x20, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x39, 0x26, 0x1C, 0x02, 0x6A, 0x00, 0x00, 0x00
	.byte 0x61, 0x26, 0x1C, 0x02, 0x89, 0x00, 0x00, 0x00, 0x81, 0x26, 0x1C, 0x02, 0xD7, 0x00, 0xD8, 0x00
	.byte 0xDF, 0x00, 0x3F, 0x01, 0xE0, 0x00, 0xE5, 0x00, 0xE7, 0x00, 0x21, 0x01, 0x22, 0x01, 0x23, 0x01
	.byte 0x24, 0x01, 0x25, 0x01, 0x26, 0x01, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x95, 0x05, 0x1C, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0xC1, 0x05, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00, 0xED, 0x05, 0x1C, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x41, 0x06, 0x1C, 0x02, 0x65, 0x00, 0x00, 0x00, 0xAD, 0xED, 0x1B, 0x02
	.byte 0x67, 0x00, 0x00, 0x00, 0xC1, 0xED, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00, 0xD5, 0xED, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0xE5, 0xED, 0x1B, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x6D, 0x06, 0x1C, 0x02
	.byte 0x21, 0x00, 0x00, 0x00, 0xA1, 0x06, 0x1C, 0x02, 0x03, 0x00, 0x00, 0x00, 0xFD, 0x06, 0x1C, 0x02
	.byte 0x04, 0x00, 0x00, 0x00, 0x0D, 0x07, 0x1C, 0x02, 0x6A, 0x00, 0x00, 0x00, 0x15, 0x07, 0x1C, 0x02
	.byte 0x65, 0x00, 0x00, 0x00, 0x41, 0xEC, 0x1B, 0x02, 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0x55, 0xEC, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x55, 0xEC, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x65, 0xEC, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x9D, 0x09, 0x1C, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0x9D, 0x09, 0x1C, 0x02, 0x03, 0x00, 0x00, 0x00, 0x3D, 0x0A, 0x1C, 0x02
	.byte 0x04, 0x00, 0x00, 0x00, 0x69, 0x0A, 0x1C, 0x02, 0x6A, 0x00, 0x00, 0x00, 0x8D, 0x0A, 0x1C, 0x02
	.byte 0x65, 0x00, 0x00, 0x00, 0xED, 0xEC, 0x1B, 0x02, 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0x01, 0xED, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x01, 0xED, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x11, 0xED, 0x1B, 0x02, 0x65, 0x00, 0x00, 0x00, 0x2D, 0xED, 0x1B, 0x02
	.byte 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00, 0x41, 0xED, 0x1B, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x41, 0xED, 0x1B, 0x02, 0x02, 0x00, 0x00, 0x00, 0x51, 0xED, 0x1B, 0x02
	.byte 0x65, 0x00, 0x00, 0x00, 0x6D, 0xED, 0x1B, 0x02, 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0x81, 0xED, 0x1B, 0x02, 0x55, 0x00, 0x00, 0x00, 0x81, 0xED, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x91, 0xED, 0x1B, 0x02, 0x65, 0x00, 0x00, 0x00, 0x01, 0xEE, 0x1B, 0x02
	.byte 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00, 0x15, 0xEE, 0x1B, 0x02
	.byte 0x2D, 0x00, 0x00, 0x00, 0x35, 0xEE, 0x1B, 0x02, 0x02, 0x00, 0x00, 0x00, 0x25, 0xEE, 0x1B, 0x02
	.byte 0x64, 0x00, 0x00, 0x00, 0xE1, 0xF1, 0x1B, 0x02, 0x51, 0x00, 0x00, 0x00, 0x0D, 0xF2, 0x1B, 0x02
	.byte 0x6D, 0x00, 0x00, 0x00, 0x31, 0xF2, 0x1B, 0x02, 0x4A, 0x00, 0x00, 0x00, 0x49, 0xF2, 0x1B, 0x02
	.byte 0x82, 0x00, 0x00, 0x00, 0x61, 0xF2, 0x1B, 0x02, 0x38, 0x00, 0x00, 0x00, 0x91, 0x17, 0x1C, 0x02
	.byte 0x64, 0x00, 0x00, 0x00, 0xC1, 0x17, 0x1C, 0x02, 0x51, 0x00, 0x00, 0x00, 0xC1, 0x17, 0x1C, 0x02
	.byte 0x6C, 0x00, 0x00, 0x00, 0xED, 0x17, 0x1C, 0x02, 0x82, 0x00, 0x00, 0x00, 0x05, 0x18, 0x1C, 0x02
	.byte 0x65, 0x00, 0x00, 0x00, 0x81, 0xEC, 0x1B, 0x02, 0x0E, 0x00, 0x00, 0x00, 0xC9, 0xEC, 0x1B, 0x02
	.byte 0x67, 0x00, 0x00, 0x00, 0x35, 0xEF, 0x1B, 0x02, 0x8A, 0x00, 0x00, 0x00, 0xA9, 0xEC, 0x1B, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xA9, 0xEC, 0x1B, 0x02, 0x02, 0x00, 0x00, 0x00, 0xB9, 0xEC, 0x1B, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xA9, 0xE1, 0x1B, 0x02, 0x58, 0x00, 0x00, 0x00, 0xCD, 0xE1, 0x1B, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0xA9, 0xE1, 0x1B, 0x02, 0x13, 0x00, 0x00, 0x00, 0x51, 0xE1, 0x1B, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0x75, 0xE1, 0x1B, 0x02, 0x77, 0x00, 0x00, 0x00, 0x21, 0xE2, 0x1B, 0x02
	.byte 0x56, 0x00, 0x00, 0x00, 0x0D, 0x0F, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x0D, 0x0F, 0x1C, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0x29, 0x0F, 0x1C, 0x02, 0x89, 0x00, 0x00, 0x00, 0x4D, 0x0F, 0x1C, 0x02
	.byte 0x6A, 0x00, 0x00, 0x00, 0x65, 0x0F, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x9D, 0x0F, 0x1C, 0x02
	.byte 0x21, 0x00, 0x00, 0x00, 0xDD, 0x0F, 0x1C, 0x02, 0x57, 0x00, 0x00, 0x00, 0xBD, 0x0A, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0xBD, 0x0A, 0x1C, 0x02, 0x8A, 0x00, 0x00, 0x00, 0xDD, 0x0A, 0x1C, 0x02
	.byte 0x89, 0x00, 0x00, 0x00, 0x31, 0x0B, 0x1C, 0x02, 0x6A, 0x00, 0x00, 0x00, 0x61, 0x0B, 0x1C, 0x02
	.byte 0x79, 0x00, 0x00, 0x00, 0x21, 0x0B, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x01, 0x0B, 0x1C, 0x02
	.byte 0x78, 0x00, 0x00, 0x00, 0x01, 0x0B, 0x1C, 0x02, 0x7E, 0x00, 0x00, 0x00, 0x01, 0x0B, 0x1C, 0x02
	.byte 0x57, 0x00, 0x00, 0x00, 0x85, 0xE6, 0x1B, 0x02, 0x58, 0x00, 0x00, 0x00, 0x85, 0xE6, 0x1B, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0xC1, 0xE6, 0x1B, 0x02, 0x7E, 0x00, 0x00, 0x00, 0x45, 0xE7, 0x1B, 0x02
	.byte 0x6A, 0x00, 0x00, 0x00, 0x85, 0xE7, 0x1B, 0x02, 0x79, 0x00, 0x00, 0x00, 0xBD, 0xE7, 0x1B, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x45, 0xE7, 0x1B, 0x02, 0x78, 0x00, 0x00, 0x00, 0x45, 0xE7, 0x1B, 0x02
	.byte 0x89, 0x00, 0x00, 0x00, 0xED, 0xE7, 0x1B, 0x02, 0x3B, 0x00, 0x00, 0x00, 0x35, 0xE8, 0x1B, 0x02
	.byte 0x3C, 0x00, 0x00, 0x00, 0x85, 0xE8, 0x1B, 0x02, 0x16, 0x00, 0x00, 0x00, 0x51, 0xDE, 0x1B, 0x02
	.byte 0x1D, 0x00, 0x00, 0x00, 0xC9, 0xEA, 0x1B, 0x02, 0x49, 0x00, 0x00, 0x00, 0xC9, 0xEA, 0x1B, 0x02
	.byte 0x27, 0x00, 0x00, 0x00, 0xE1, 0xDE, 0x1B, 0x02, 0x50, 0x00, 0x00, 0x00, 0x05, 0xDF, 0x1B, 0x02
	.byte 0x2F, 0x00, 0x00, 0x00, 0x59, 0xDF, 0x1B, 0x02, 0x34, 0x00, 0x00, 0x00, 0x71, 0xEA, 0x1B, 0x02
	.byte 0x25, 0x00, 0x00, 0x00, 0x91, 0xDF, 0x1B, 0x02, 0x4A, 0x00, 0x00, 0x00, 0x91, 0xDF, 0x1B, 0x02
	.byte 0x6E, 0x00, 0x00, 0x00, 0xAD, 0xE3, 0x1B, 0x02, 0x03, 0x00, 0x00, 0x00, 0x69, 0xE4, 0x1B, 0x02
	.byte 0x42, 0x00, 0x00, 0x00, 0xB5, 0xE4, 0x1B, 0x02, 0x43, 0x00, 0x00, 0x00, 0xD1, 0xE4, 0x1B, 0x02
	.byte 0x41, 0x00, 0x00, 0x00, 0xED, 0xE4, 0x1B, 0x02, 0x44, 0x00, 0x00, 0x00, 0x09, 0xE5, 0x1B, 0x02
	.byte 0x3E, 0x00, 0x00, 0x00, 0x9D, 0xE5, 0x1B, 0x02, 0x5C, 0x00, 0x00, 0x00, 0x65, 0xEA, 0x1B, 0x02
	.byte 0x33, 0x00, 0x00, 0x00, 0x9D, 0xEA, 0x1B, 0x02, 0x56, 0x00, 0x00, 0x00, 0xC9, 0xEB, 0x1B, 0x02
	.byte 0x74, 0x00, 0x00, 0x00, 0xE1, 0xE3, 0x1B, 0x02, 0x6F, 0x00, 0x00, 0x00, 0xE1, 0xE3, 0x1B, 0x02
	.byte 0x3F, 0x00, 0x00, 0x00, 0x41, 0xEA, 0x1B, 0x02, 0x4F, 0x00, 0x00, 0x00, 0x45, 0xE9, 0x1B, 0x02
	.byte 0x66, 0x00, 0x00, 0x00, 0x35, 0xEC, 0x1B, 0x02, 0x02, 0x00, 0x00, 0x00, 0xBD, 0xEF, 0x1B, 0x02
	.byte 0x46, 0x00, 0x00, 0x00, 0xD9, 0xEF, 0x1B, 0x02, 0x2D, 0x00, 0x00, 0x00, 0xF5, 0xEF, 0x1B, 0x02
	.byte 0x75, 0x00, 0x00, 0x00, 0x11, 0xF0, 0x1B, 0x02, 0x4C, 0x00, 0x00, 0x00, 0xA5, 0xF0, 0x1B, 0x02
	.byte 0x0D, 0x00, 0x00, 0x00, 0xA5, 0xF0, 0x1B, 0x02, 0x65, 0x00, 0x00, 0x00, 0x75, 0xE9, 0x1B, 0x02
	.byte 0x0C, 0x00, 0x00, 0x00, 0xA5, 0xEE, 0x1B, 0x02, 0x5D, 0x00, 0x00, 0x00, 0x39, 0xF3, 0x1B, 0x02
	.byte 0x5A, 0x00, 0x00, 0x00, 0x01, 0xF4, 0x1B, 0x02, 0x73, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x1B, 0x02
	.byte 0x2C, 0x00, 0x00, 0x00, 0xDD, 0xF0, 0x1B, 0x02, 0x13, 0x00, 0x00, 0x00, 0x81, 0xF2, 0x1B, 0x02
	.byte 0x5B, 0x00, 0x00, 0x00, 0x99, 0xE4, 0x1B, 0x02, 0x20, 0x00, 0x00, 0x00, 0xC5, 0xF2, 0x1B, 0x02
	.byte 0x5E, 0x00, 0x00, 0x00, 0xD5, 0xF1, 0x1B, 0x02, 0x21, 0x00, 0x00, 0x00, 0xF1, 0xDF, 0x1B, 0x02
	.byte 0x22, 0x00, 0x00, 0x00, 0x25, 0xE0, 0x1B, 0x02, 0x3D, 0x00, 0x00, 0x00, 0x9D, 0xF3, 0x1B, 0x02
	.byte 0x4D, 0x00, 0x00, 0x00, 0xA1, 0xE0, 0x1B, 0x02, 0x5F, 0x00, 0x00, 0x00, 0x65, 0xE0, 0x1B, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x15, 0xE1, 0x1B, 0x02, 0x04, 0x00, 0x00, 0x00, 0x25, 0xF4, 0x1B, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x25, 0xF4, 0x1B, 0x02, 0x69, 0x00, 0x00, 0x00, 0x55, 0xF4, 0x1B, 0x02
	.byte 0x53, 0x00, 0x00, 0x00, 0xE9, 0xF4, 0x1B, 0x02, 0x61, 0x00, 0x00, 0x00, 0x11, 0xE4, 0x1B, 0x02
	.byte 0x59, 0x00, 0x00, 0x00, 0xB1, 0xE9, 0x1B, 0x02, 0x0E, 0x00, 0x00, 0x00, 0xC1, 0xE2, 0x1B, 0x02
	.byte 0x45, 0x00, 0x00, 0x00, 0x7D, 0xF9, 0x1B, 0x02, 0x78, 0x00, 0x00, 0x00, 0xF9, 0xE9, 0x1B, 0x02
	.byte 0x09, 0x00, 0x00, 0x00, 0x49, 0xF5, 0x1B, 0x02, 0x26, 0x00, 0x00, 0x00, 0x19, 0xF5, 0x1B, 0x02
	.byte 0x31, 0x00, 0x00, 0x00, 0x79, 0xF5, 0x1B, 0x02, 0x1B, 0x00, 0x00, 0x00, 0x65, 0xF6, 0x1B, 0x02
	.byte 0x39, 0x00, 0x00, 0x00, 0xF9, 0xE5, 0x1B, 0x02, 0x3A, 0x00, 0x00, 0x00, 0xF9, 0xE5, 0x1B, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x0D, 0xF6, 0x1B, 0x02, 0x08, 0x00, 0x00, 0x00, 0x05, 0xE3, 0x1B, 0x02
	.byte 0x51, 0x00, 0x00, 0x00, 0x49, 0xE3, 0x1B, 0x02, 0x24, 0x00, 0x00, 0x00, 0xAD, 0xF9, 0x1B, 0x02
	.byte 0x60, 0x00, 0x00, 0x00, 0xA1, 0xF9, 0x1B, 0x02, 0x18, 0x00, 0x00, 0x00, 0x79, 0xF7, 0x1B, 0x02
	.byte 0x1E, 0x00, 0x00, 0x00, 0x89, 0xFB, 0x1B, 0x02, 0x1C, 0x00, 0x00, 0x00, 0x59, 0xF9, 0x1B, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x35, 0xFC, 0x1B, 0x02, 0x05, 0x00, 0x00, 0x00, 0x49, 0xFF, 0x1B, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x05, 0x01, 0x1C, 0x02, 0x6D, 0x00, 0x00, 0x00, 0xA1, 0x00, 0x1C, 0x02
	.byte 0x57, 0x00, 0x00, 0x00, 0x1D, 0x03, 0x1C, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x75, 0x03, 0x1C, 0x02
	.byte 0x0B, 0x00, 0x00, 0x00, 0x49, 0x03, 0x1C, 0x02, 0x4E, 0x00, 0x00, 0x00, 0x81, 0x03, 0x1C, 0x02
	.byte 0x07, 0x00, 0x00, 0x00, 0x75, 0xEC, 0x1B, 0x02, 0x0F, 0x00, 0x00, 0x00, 0xE1, 0xEC, 0x1B, 0x02
	.byte 0x48, 0x00, 0x00, 0x00, 0xE1, 0xEC, 0x1B, 0x02, 0x14, 0x00, 0x00, 0x00, 0xF5, 0xED, 0x1B, 0x02
	.byte 0x28, 0x00, 0x00, 0x00, 0x21, 0xED, 0x1B, 0x02, 0x29, 0x00, 0x00, 0x00, 0xA1, 0xED, 0x1B, 0x02
	.byte 0x11, 0x00, 0x00, 0x00, 0x61, 0xED, 0x1B, 0x02, 0x71, 0x00, 0x00, 0x00, 0xD5, 0x03, 0x1C, 0x02
	.byte 0x2B, 0x00, 0x00, 0x00, 0x51, 0x04, 0x1C, 0x02, 0x1A, 0x00, 0x00, 0x00, 0xED, 0x04, 0x1C, 0x02
	.byte 0x7A, 0x00, 0x00, 0x00, 0xCD, 0xE8, 0x1B, 0x02, 0x12, 0x00, 0x00, 0x00, 0x69, 0x08, 0x1C, 0x02
	.byte 0x6C, 0x00, 0x00, 0x00, 0x85, 0xFD, 0x1B, 0x02, 0x6B, 0x00, 0x00, 0x00, 0x81, 0xFE, 0x1B, 0x02
	.byte 0x77, 0x00, 0x00, 0x00, 0x3D, 0xFF, 0x1B, 0x02, 0x6A, 0x00, 0x00, 0x00, 0x21, 0xF8, 0x1B, 0x02
	.byte 0x32, 0x00, 0x00, 0x00, 0x91, 0x09, 0x1C, 0x02, 0x10, 0x00, 0x00, 0x00, 0xA9, 0xF8, 0x1B, 0x02
	.byte 0x68, 0x00, 0x00, 0x00, 0xB1, 0x0A, 0x1C, 0x02, 0x36, 0x00, 0x00, 0x00, 0x61, 0x06, 0x1C, 0x02
	.byte 0x1F, 0x00, 0x00, 0x00, 0xBD, 0x0C, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x79, 0x0C, 0x1C, 0x02
	.byte 0x70, 0x00, 0x00, 0x00, 0x99, 0xE2, 0x1B, 0x02, 0x06, 0x00, 0x00, 0x00, 0x41, 0x07, 0x1C, 0x02
	.byte 0x19, 0x00, 0x00, 0x00, 0x89, 0x05, 0x1C, 0x02, 0x64, 0x00, 0x00, 0x00, 0x39, 0xE1, 0x1B, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0x6D, 0x0C, 0x1C, 0x02, 0x15, 0x00, 0x00, 0x00, 0x1D, 0x0E, 0x1C, 0x02
	.byte 0x40, 0x00, 0x00, 0x00, 0xAD, 0x0E, 0x1C, 0x02, 0x67, 0x00, 0x00, 0x00, 0x45, 0x10, 0x1C, 0x02
	.byte 0x3C, 0x00, 0x00, 0x00, 0x39, 0x11, 0x1C, 0x02, 0x2E, 0x00, 0x00, 0x00, 0x45, 0x11, 0x1C, 0x02
	.byte 0x62, 0x00, 0x00, 0x00, 0x15, 0x12, 0x1C, 0x02, 0x7B, 0x00, 0x00, 0x00, 0x39, 0x09, 0x1C, 0x02
	.byte 0x35, 0x00, 0x00, 0x00, 0x35, 0x14, 0x1C, 0x02, 0x54, 0x00, 0x00, 0x00, 0xC1, 0x13, 0x1C, 0x02
	.byte 0x01, 0x00, 0x00, 0x00, 0x39, 0x12, 0x1C, 0x02, 0x17, 0x00, 0x00, 0x00, 0x69, 0x12, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xDD, 0x12, 0x1C, 0x02, 0x2A, 0x00, 0x00, 0x00, 0x4D, 0x13, 0x1C, 0x02
	.byte 0x7C, 0x00, 0x00, 0x00, 0x49, 0x15, 0x1C, 0x02, 0x7D, 0x00, 0x00, 0x00, 0x31, 0x18, 0x1C, 0x02
	.byte 0x80, 0x00, 0x00, 0x00, 0x19, 0x19, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x61, 0x19, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x99, 0x19, 0x1C, 0x02, 0x86, 0x00, 0x00, 0x00, 0x45, 0x24, 0x1C, 0x02
	.byte 0x87, 0x00, 0x00, 0x00, 0x6D, 0x24, 0x1C, 0x02, 0x7E, 0x00, 0x00, 0x00, 0xB9, 0x24, 0x1C, 0x02
	.byte 0x7F, 0x00, 0x00, 0x00, 0x7D, 0x25, 0x1C, 0x02, 0x82, 0x00, 0x00, 0x00, 0xC9, 0x16, 0x1C, 0x02
	.byte 0x83, 0x00, 0x00, 0x00, 0x75, 0x1A, 0x1C, 0x02, 0x84, 0x00, 0x00, 0x00, 0xCD, 0x19, 0x1C, 0x02
	.byte 0x85, 0x00, 0x00, 0x00, 0x85, 0x17, 0x1C, 0x02, 0x89, 0x00, 0x00, 0x00, 0xB9, 0x1A, 0x1C, 0x02
	.byte 0x8A, 0x00, 0x00, 0x00, 0xFD, 0x1A, 0x1C, 0x02, 0x8B, 0x00, 0x00, 0x00, 0x39, 0x24, 0x1C, 0x02
	.byte 0x8C, 0x00, 0x00, 0x00, 0x89, 0x1B, 0x1C, 0x02, 0x8D, 0x00, 0x00, 0x00, 0x01, 0x1D, 0x1C, 0x02
	.byte 0x8E, 0x00, 0x00, 0x00, 0x31, 0x1D, 0x1C, 0x02, 0x8F, 0x00, 0x00, 0x00, 0xCD, 0x1D, 0x1C, 0x02
	.byte 0x90, 0x00, 0x00, 0x00, 0x55, 0x1E, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x61, 0x1E, 0x1C, 0x02
	.byte 0x92, 0x00, 0x00, 0x00, 0x8D, 0x1E, 0x1C, 0x02, 0x93, 0x00, 0x00, 0x00, 0xC1, 0x1E, 0x1C, 0x02
	.byte 0x94, 0x00, 0x00, 0x00, 0xFD, 0x1E, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00, 0x2D, 0x26, 0x1C, 0x02
	.byte 0x96, 0x00, 0x00, 0x00, 0x21, 0x26, 0x1C, 0x02, 0x97, 0x00, 0x00, 0x00, 0xE5, 0x20, 0x1C, 0x02
	.byte 0x98, 0x00, 0x00, 0x00, 0x25, 0x22, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00, 0xF1, 0x20, 0x1C, 0x02
	.byte 0x9A, 0x00, 0x00, 0x00, 0x65, 0x21, 0x1C, 0x02, 0x9B, 0x00, 0x00, 0x00, 0xBD, 0x21, 0x1C, 0x02
	.byte 0x9C, 0x00, 0x00, 0x00, 0x95, 0x23, 0x1C, 0x02, 0x9D, 0x00, 0x00, 0x00, 0xF5, 0x22, 0x1C, 0x02
	.byte 0x9E, 0x00, 0x00, 0x00, 0x35, 0x23, 0x1C, 0x02, 0x9F, 0x00, 0x00, 0x00, 0x55, 0x1F, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x79, 0xF7, 0x1B, 0x02, 0xA1, 0x00, 0x00, 0x00, 0x7D, 0x20, 0x1C, 0x02
	.byte 0xA2, 0x00, 0x00, 0x00, 0xF9, 0x26, 0x1C, 0x02, 0xA3, 0x00, 0x00, 0x00, 0xB1, 0x0A, 0x1C, 0x02
	.byte 0xA4, 0x00, 0x00, 0x00, 0xB1, 0x0A, 0x1C, 0x02, 0x01, 0x02, 0x03, 0x04, 0x05, 0x00, 0x00, 0x00
	.byte 0x38, 0x00, 0x00, 0x00, 0xF1, 0x4F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xC1, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xA9, 0x4F, 0x1C, 0x02, 0x62, 0x00, 0x00, 0x00, 0x91, 0x45, 0x1C, 0x02
	.byte 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02, 0x0F, 0x00, 0x00, 0x00, 0x09, 0x3D, 0x1C, 0x02
	.byte 0x3C, 0x00, 0x00, 0x00, 0x05, 0x40, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00, 0x65, 0x41, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x91, 0x4F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xC1, 0x4F, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xD9, 0x44, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x09, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xA9, 0x50, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0x89, 0x3E, 0x1C, 0x02
	.byte 0x36, 0x00, 0x00, 0x00, 0x45, 0x3E, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x35, 0x3F, 0x1C, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0xB5, 0x3F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xD9, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x79, 0x4F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x51, 0x51, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x25, 0x53, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x99, 0x51, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xDD, 0x51, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x09, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xD9, 0x4F, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02
	.byte 0x9F, 0x00, 0x00, 0x00, 0x61, 0x46, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x21, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x39, 0x50, 0x1C, 0x02, 0x3C, 0x00, 0x00, 0x00, 0x4D, 0x40, 0x1C, 0x02
	.byte 0x7C, 0x00, 0x00, 0x00, 0xF5, 0x4C, 0x1C, 0x02, 0x7C, 0x00, 0x00, 0x00, 0x0D, 0x4D, 0x1C, 0x02
	.byte 0x36, 0x00, 0x00, 0x00, 0x01, 0x3E, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0xD1, 0x3E, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x21, 0x50, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xD9, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x75, 0x3F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xD9, 0x4F, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x51, 0x50, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x61, 0x4F, 0x1C, 0x02
	.byte 0x13, 0x00, 0x00, 0x00, 0x9D, 0x40, 0x1C, 0x02, 0x76, 0x00, 0x00, 0x00, 0x2D, 0x48, 0x1C, 0x02
	.byte 0x3E, 0x00, 0x00, 0x00, 0x21, 0x55, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xF1, 0x4F, 0x1C, 0x02
	.byte 0x83, 0x00, 0x00, 0x00, 0x69, 0x54, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x09, 0x51, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x81, 0x51, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x79, 0x4F, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xC1, 0x4F, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x61, 0x4F, 0x1C, 0x02
	.byte 0x3C, 0x00, 0x00, 0x00, 0xF1, 0x52, 0x1C, 0x02, 0x7B, 0x00, 0x00, 0x00, 0xC9, 0x52, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x1D, 0x44, 0x1C, 0x02, 0x7C, 0x00, 0x00, 0x00, 0x3D, 0x4D, 0x1C, 0x02
	.byte 0x7C, 0x00, 0x00, 0x00, 0x25, 0x4D, 0x1C, 0x02, 0x62, 0x00, 0x00, 0x00, 0x51, 0x55, 0x1C, 0x02
	.byte 0x85, 0x00, 0x00, 0x00, 0xD5, 0x45, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xA1, 0x4C, 0x1C, 0x02
	.byte 0x8C, 0x00, 0x00, 0x00, 0xD9, 0x4B, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x69, 0x51, 0x1C, 0x02
	.byte 0x69, 0x00, 0x00, 0x00, 0x2D, 0x49, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x39, 0x51, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0xDD, 0x3B, 0x1C, 0x02
	.byte 0x13, 0x00, 0x00, 0x00, 0x3D, 0x3C, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x91, 0x4F, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x31, 0x52, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00, 0xA1, 0x3D, 0x1C, 0x02
	.byte 0x36, 0x00, 0x00, 0x00, 0xCD, 0x3D, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x39, 0x50, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x21, 0x51, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xA9, 0x50, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xC1, 0x50, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0xF1, 0x4A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xF1, 0x50, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xA9, 0x4F, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x09, 0x51, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xF1, 0x50, 0x1C, 0x02
	.byte 0x0F, 0x00, 0x00, 0x00, 0x65, 0x37, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xA1, 0x37, 0x1C, 0x02
	.byte 0x0B, 0x00, 0x00, 0x00, 0x05, 0x4C, 0x1C, 0x02, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x4C, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x45, 0x39, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xE9, 0x39, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x6D, 0x4C, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x89, 0x4C, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x61, 0x39, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xE9, 0x39, 0x1C, 0x02
	.byte 0x0F, 0x00, 0x00, 0x00, 0x65, 0x3C, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xA9, 0x3C, 0x1C, 0x02
	.byte 0x6C, 0x00, 0x00, 0x00, 0x2D, 0x3D, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x5D, 0x3D, 0x1C, 0x02
	.byte 0x6C, 0x00, 0x00, 0x00, 0x2D, 0x3D, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x5D, 0x3D, 0x1C, 0x02
	.byte 0x13, 0x00, 0x00, 0x00, 0x89, 0x52, 0x1C, 0x02, 0x12, 0x00, 0x00, 0x00, 0xA5, 0x52, 0x1C, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0x85, 0x4D, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0xB1, 0x4D, 0x1C, 0x02
	.byte 0x77, 0x00, 0x00, 0x00, 0xFD, 0x4D, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x5D, 0x4E, 0x1C, 0x02
	.byte 0x77, 0x00, 0x00, 0x00, 0xA9, 0x4E, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x15, 0x4F, 0x1C, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0xE1, 0x40, 0x1C, 0x02, 0x3C, 0x00, 0x00, 0x00, 0x1D, 0x41, 0x1C, 0x02
	.byte 0x74, 0x00, 0x00, 0x00, 0xC1, 0x42, 0x1C, 0x02, 0x75, 0x00, 0x00, 0x00, 0xF5, 0x42, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x91, 0x32, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xD5, 0x32, 0x1C, 0x02
	.byte 0x85, 0x00, 0x00, 0x00, 0x55, 0x44, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0xAD, 0x44, 0x1C, 0x02
	.byte 0x76, 0x00, 0x00, 0x00, 0x65, 0x47, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xB1, 0x47, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0xB9, 0x49, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00, 0x19, 0x4A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x51, 0x50, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x5D, 0x50, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xCD, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x4D, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x89, 0x55, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xD1, 0x55, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0x0D, 0x56, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x55, 0x56, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x2D, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x83, 0x00, 0x00, 0x00, 0x91, 0x56, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xF1, 0x56, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x4D, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x6D, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x8D, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xAD, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xED, 0x33, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x0D, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x2D, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x6D, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x8D, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xAD, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xCD, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0xED, 0x34, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x0D, 0x35, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x47, 0x00, 0x00, 0x00, 0x2D, 0x35, 0x1C, 0x02, 0x44, 0x00, 0x00, 0x00, 0xA1, 0x35, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0x25, 0x59, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x15, 0x59, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0xC5, 0x57, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xB5, 0x57, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0xD5, 0x59, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xC5, 0x59, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0xF1, 0x57, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xE1, 0x57, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0x1D, 0x58, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x0D, 0x58, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x22, 0x00, 0x00, 0x00, 0x3D, 0x42, 0x1C, 0x02
	.byte 0x9C, 0x00, 0x00, 0x00, 0x85, 0x42, 0x1C, 0x02, 0x3B, 0x00, 0x00, 0x00, 0xB1, 0x41, 0x1C, 0x02
	.byte 0x22, 0x00, 0x00, 0x00, 0x3D, 0x42, 0x1C, 0x02, 0x9C, 0x00, 0x00, 0x00, 0x85, 0x42, 0x1C, 0x02
	.byte 0x3B, 0x00, 0x00, 0x00, 0xE9, 0x41, 0x1C, 0x02, 0x22, 0x00, 0x00, 0x00, 0x3D, 0x42, 0x1C, 0x02
	.byte 0x9C, 0x00, 0x00, 0x00, 0x85, 0x42, 0x1C, 0x02, 0x13, 0x00, 0x00, 0x00, 0x21, 0x42, 0x1C, 0x02
	.byte 0x74, 0x00, 0x00, 0x00, 0x5D, 0x43, 0x1C, 0x02, 0x75, 0x00, 0x00, 0x00, 0x99, 0x43, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0xC5, 0x43, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0xB5, 0x53, 0x1C, 0x02
	.byte 0x12, 0x00, 0x00, 0x00, 0xFD, 0x53, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x15, 0x54, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0x49, 0x58, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x39, 0x58, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x51, 0x59, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x41, 0x59, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x94, 0x00, 0x00, 0x00, 0xB1, 0x46, 0x1C, 0x02, 0x97, 0x00, 0x00, 0x00, 0xE5, 0x46, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x0D, 0x47, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x75, 0x58, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x65, 0x58, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0xA1, 0x58, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x91, 0x58, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x1D, 0x5A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x2D, 0x5A, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0x7D, 0x59, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x6D, 0x59, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x01, 0x5A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xF1, 0x59, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0xA9, 0x59, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x99, 0x59, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0xCD, 0x58, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xBD, 0x58, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0x6D, 0x57, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x5D, 0x57, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00, 0x99, 0x57, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x89, 0x57, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02
	.byte 0x81, 0x00, 0x00, 0x00, 0xF9, 0x58, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xE9, 0x58, 0x1C, 0x02
	.byte 0x88, 0x00, 0x00, 0x00, 0x29, 0x5B, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x85, 0x3B, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x85, 0x3B, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xB5, 0x3B, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xC1, 0x3B, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xE9, 0x2C, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x19, 0x2D, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x49, 0x2D, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x7D, 0x2D, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0xC5, 0x28, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xC5, 0x28, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0xC5, 0x28, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0xD1, 0x28, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0xD1, 0x28, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xE9, 0x28, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xE9, 0x28, 0x1C, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0xE9, 0x28, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xF5, 0x28, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xF5, 0x28, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x31, 0x29, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x31, 0x29, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x31, 0x29, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x3D, 0x29, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x3D, 0x29, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x55, 0x29, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x55, 0x29, 0x1C, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x55, 0x29, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x61, 0x29, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0x61, 0x29, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x79, 0x29, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x79, 0x29, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x79, 0x29, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x85, 0x29, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x85, 0x29, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x9D, 0x29, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x9D, 0x29, 0x1C, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x9D, 0x29, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xA9, 0x29, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xA9, 0x29, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xE9, 0x2C, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x19, 0x2D, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x49, 0x2D, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x7D, 0x2D, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x7D, 0x2D, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xE9, 0x2C, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x19, 0x2D, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x49, 0x2D, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xF1, 0x2D, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xF1, 0x2D, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x75, 0x2F, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xAD, 0x2F, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0xE5, 0x2F, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x7D, 0x2E, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x8D, 0x2E, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x75, 0x2F, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0xAD, 0x2F, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0xE5, 0x2F, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xB1, 0x2E, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xC1, 0x2E, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x75, 0x2F, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xAD, 0x2F, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0xE5, 0x2F, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0xE5, 0x2E, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0xF5, 0x2E, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x75, 0x2F, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0xAD, 0x2F, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0xE5, 0x2F, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x19, 0x2F, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0x29, 0x2F, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0x75, 0x2F, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0xAD, 0x2F, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0xE5, 0x2F, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x4D, 0x2F, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x5D, 0x2F, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xE5, 0x30, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xE5, 0x30, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x01, 0x31, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x01, 0x31, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x1D, 0x31, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0x1D, 0x31, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x39, 0x31, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x39, 0x31, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x55, 0x31, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0x55, 0x31, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x71, 0x31, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x71, 0x31, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0xF5, 0x35, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x2D, 0x36, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x65, 0x36, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0xF5, 0x31, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0xF5, 0x31, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x0D, 0x29, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x0D, 0x29, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x0D, 0x29, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x19, 0x29, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x19, 0x29, 0x1C, 0x02
	.byte 0x91, 0x00, 0x00, 0x00, 0x01, 0x38, 0x1C, 0x02, 0x55, 0x00, 0x00, 0x00, 0x45, 0x38, 0x1C, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x69, 0x38, 0x1C, 0x02, 0x58, 0x00, 0x00, 0x00, 0x8D, 0x38, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0xC1, 0x38, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x29, 0x39, 0x1C, 0x02
	.byte 0x57, 0x00, 0x00, 0x00, 0x91, 0x3A, 0x1C, 0x02, 0x02, 0x00, 0x00, 0x00, 0xB5, 0x3A, 0x1C, 0x02
	.byte 0x58, 0x00, 0x00, 0x00, 0x91, 0x3A, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00, 0xD9, 0x3A, 0x1C, 0x02
	.byte 0x72, 0x00, 0x00, 0x00, 0x09, 0x3B, 0x1C, 0x02, 0x73, 0x00, 0x00, 0x00, 0x69, 0x3B, 0x1C, 0x02
	.byte 0x04, 0x00, 0x00, 0x00, 0xA9, 0x2A, 0x1C, 0x02, 0x91, 0x00, 0x00, 0x00, 0xD5, 0x2A, 0x1C, 0x02
	.byte 0x55, 0x00, 0x00, 0x00, 0x0D, 0x2B, 0x1C, 0x02, 0x9D, 0x00, 0x00, 0x00, 0x0D, 0x2B, 0x1C, 0x02
	.byte 0x4F, 0x00, 0x00, 0x00, 0x39, 0x2B, 0x1C, 0x02, 0x72, 0x00, 0x00, 0x00, 0x61, 0x2B, 0x1C, 0x02
	.byte 0x73, 0x00, 0x00, 0x00, 0x89, 0x2B, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00, 0xDD, 0x28, 0x1C, 0x02
	.byte 0x96, 0x00, 0x00, 0x00, 0x01, 0x29, 0x1C, 0x02, 0x98, 0x00, 0x00, 0x00, 0x25, 0x29, 0x1C, 0x02
	.byte 0x99, 0x00, 0x00, 0x00, 0x49, 0x29, 0x1C, 0x02, 0x9C, 0x00, 0x00, 0x00, 0x6D, 0x29, 0x1C, 0x02
	.byte 0x97, 0x00, 0x00, 0x00, 0x91, 0x29, 0x1C, 0x02, 0x9D, 0x00, 0x00, 0x00, 0xB5, 0x29, 0x1C, 0x02
	.byte 0x9A, 0x00, 0x00, 0x00, 0x9D, 0x2A, 0x1C, 0x02, 0x9B, 0x00, 0x00, 0x00, 0xDD, 0x2C, 0x1C, 0x02
	.byte 0x2B, 0x00, 0x00, 0x00, 0xD9, 0x2D, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0xE5, 0x2D, 0x1C, 0x02
	.byte 0x9F, 0x00, 0x00, 0x00, 0x71, 0x2E, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xA5, 0x2E, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0xD9, 0x2E, 0x1C, 0x02, 0xA2, 0x00, 0x00, 0x00, 0x0D, 0x2F, 0x1C, 0x02
	.byte 0xA3, 0x00, 0x00, 0x00, 0x41, 0x2F, 0x1C, 0x02, 0xC9, 0x00, 0x00, 0x00, 0xD9, 0x30, 0x1C, 0x02
	.byte 0xCA, 0x00, 0x00, 0x00, 0xF5, 0x30, 0x1C, 0x02, 0xCB, 0x00, 0x00, 0x00, 0x11, 0x31, 0x1C, 0x02
	.byte 0xCC, 0x00, 0x00, 0x00, 0x2D, 0x31, 0x1C, 0x02, 0xCD, 0x00, 0x00, 0x00, 0x49, 0x31, 0x1C, 0x02
	.byte 0xCE, 0x00, 0x00, 0x00, 0x65, 0x31, 0x1C, 0x02, 0xCF, 0x00, 0x00, 0x00, 0xE9, 0x31, 0x1C, 0x02
	.byte 0xD0, 0x00, 0x00, 0x00, 0x85, 0x32, 0x1C, 0x02, 0xB8, 0x00, 0x00, 0x00, 0x21, 0x33, 0x1C, 0x02
	.byte 0xB9, 0x00, 0x00, 0x00, 0x41, 0x33, 0x1C, 0x02, 0xBA, 0x00, 0x00, 0x00, 0x61, 0x33, 0x1C, 0x02
	.byte 0xBB, 0x00, 0x00, 0x00, 0x81, 0x33, 0x1C, 0x02, 0xBC, 0x00, 0x00, 0x00, 0xA1, 0x33, 0x1C, 0x02
	.byte 0xBD, 0x00, 0x00, 0x00, 0xC1, 0x33, 0x1C, 0x02, 0xBE, 0x00, 0x00, 0x00, 0xE1, 0x33, 0x1C, 0x02
	.byte 0xBF, 0x00, 0x00, 0x00, 0x01, 0x34, 0x1C, 0x02, 0xC0, 0x00, 0x00, 0x00, 0x21, 0x34, 0x1C, 0x02
	.byte 0xC1, 0x00, 0x00, 0x00, 0x41, 0x34, 0x1C, 0x02, 0xC2, 0x00, 0x00, 0x00, 0x61, 0x34, 0x1C, 0x02
	.byte 0xC3, 0x00, 0x00, 0x00, 0x81, 0x34, 0x1C, 0x02, 0xC4, 0x00, 0x00, 0x00, 0xA1, 0x34, 0x1C, 0x02
	.byte 0xC5, 0x00, 0x00, 0x00, 0xC1, 0x34, 0x1C, 0x02, 0xC6, 0x00, 0x00, 0x00, 0xE1, 0x34, 0x1C, 0x02
	.byte 0xC7, 0x00, 0x00, 0x00, 0x01, 0x35, 0x1C, 0x02, 0xC8, 0x00, 0x00, 0x00, 0x21, 0x35, 0x1C, 0x02
	.byte 0xD2, 0x00, 0x00, 0x00, 0x59, 0x37, 0x1C, 0x02, 0xD1, 0x00, 0x00, 0x00, 0xF5, 0x37, 0x1C, 0x02
	.byte 0xD3, 0x00, 0x00, 0x00, 0x39, 0x39, 0x1C, 0x02, 0xD4, 0x00, 0x00, 0x00, 0x55, 0x39, 0x1C, 0x02
	.byte 0xD6, 0x00, 0x00, 0x00, 0x85, 0x3A, 0x1C, 0x02, 0xDB, 0x00, 0x00, 0x00, 0x79, 0x3B, 0x1C, 0x02
	.byte 0xD5, 0x00, 0x00, 0x00, 0xD1, 0x3B, 0x1C, 0x02, 0xD7, 0x00, 0x00, 0x00, 0x31, 0x3C, 0x1C, 0x02
	.byte 0xD9, 0x00, 0x00, 0x00, 0x59, 0x3C, 0x1C, 0x02, 0x17, 0x01, 0x00, 0x00, 0xFD, 0x3C, 0x1C, 0x02
	.byte 0x3C, 0x01, 0x00, 0x00, 0xFD, 0x3C, 0x1C, 0x02, 0xDD, 0x00, 0x00, 0x00, 0x21, 0x3D, 0x1C, 0x02
	.byte 0x46, 0x01, 0x00, 0x00, 0xC1, 0x3D, 0x1C, 0x02, 0x09, 0x01, 0x00, 0x00, 0x95, 0x3D, 0x1C, 0x02
	.byte 0xE8, 0x00, 0x00, 0x00, 0xC1, 0x3D, 0x1C, 0x02, 0x14, 0x01, 0x00, 0x00, 0x7D, 0x3E, 0x1C, 0x02
	.byte 0xFF, 0x00, 0x00, 0x00, 0xC5, 0x3E, 0x1C, 0x02, 0x0A, 0x01, 0x00, 0x00, 0x29, 0x3F, 0x1C, 0x02
	.byte 0x0B, 0x01, 0x00, 0x00, 0x69, 0x3F, 0x1C, 0x02, 0xE2, 0x00, 0x00, 0x00, 0xA9, 0x3F, 0x1C, 0x02
	.byte 0xE3, 0x00, 0x00, 0x00, 0xF9, 0x3F, 0x1C, 0x02, 0x01, 0x01, 0x00, 0x00, 0x41, 0x40, 0x1C, 0x02
	.byte 0x12, 0x01, 0x00, 0x00, 0x91, 0x40, 0x1C, 0x02, 0xEC, 0x00, 0x00, 0x00, 0x79, 0x4D, 0x1C, 0x02
	.byte 0x00, 0x01, 0x00, 0x00, 0xF5, 0x3D, 0x1C, 0x02, 0x03, 0x01, 0x00, 0x00, 0x39, 0x3E, 0x1C, 0x02
	.byte 0xE1, 0x00, 0x00, 0x00, 0xD5, 0x40, 0x1C, 0x02, 0x02, 0x01, 0x00, 0x00, 0x59, 0x41, 0x1C, 0x02
	.byte 0xDC, 0x00, 0x00, 0x00, 0xA5, 0x41, 0x1C, 0x02, 0x19, 0x01, 0x00, 0x00, 0x21, 0x48, 0x1C, 0x02
	.byte 0x29, 0x01, 0x00, 0x00, 0xDD, 0x41, 0x1C, 0x02, 0x1F, 0x01, 0x00, 0x00, 0x15, 0x42, 0x1C, 0x02
	.byte 0xDE, 0x00, 0x00, 0x00, 0x55, 0x4F, 0x1C, 0x02, 0xED, 0x00, 0x00, 0x00, 0x6D, 0x4F, 0x1C, 0x02
	.byte 0xEE, 0x00, 0x00, 0x00, 0x85, 0x4F, 0x1C, 0x02, 0xEF, 0x00, 0x00, 0x00, 0x9D, 0x4F, 0x1C, 0x02
	.byte 0xF0, 0x00, 0x00, 0x00, 0xB5, 0x4F, 0x1C, 0x02, 0xF1, 0x00, 0x00, 0x00, 0xCD, 0x4F, 0x1C, 0x02
	.byte 0xF2, 0x00, 0x00, 0x00, 0xE5, 0x4F, 0x1C, 0x02, 0xE9, 0x00, 0x00, 0x00, 0xFD, 0x4F, 0x1C, 0x02
	.byte 0xF3, 0x00, 0x00, 0x00, 0x15, 0x50, 0x1C, 0x02, 0xF4, 0x00, 0x00, 0x00, 0x2D, 0x50, 0x1C, 0x02
	.byte 0x47, 0x01, 0x00, 0x00, 0x89, 0x3D, 0x1C, 0x02, 0xF5, 0x00, 0x00, 0x00, 0x45, 0x50, 0x1C, 0x02
	.byte 0xF6, 0x00, 0x00, 0x00, 0x9D, 0x50, 0x1C, 0x02, 0xF7, 0x00, 0x00, 0x00, 0xB5, 0x50, 0x1C, 0x02
	.byte 0xF8, 0x00, 0x00, 0x00, 0xCD, 0x50, 0x1C, 0x02, 0xF9, 0x00, 0x00, 0x00, 0xE5, 0x50, 0x1C, 0x02
	.byte 0xFA, 0x00, 0x00, 0x00, 0xFD, 0x50, 0x1C, 0x02, 0xFB, 0x00, 0x00, 0x00, 0x15, 0x51, 0x1C, 0x02
	.byte 0x3A, 0x01, 0x00, 0x00, 0x2D, 0x51, 0x1C, 0x02, 0x3B, 0x01, 0x00, 0x00, 0x45, 0x51, 0x1C, 0x02
	.byte 0x3D, 0x01, 0x00, 0x00, 0x5D, 0x51, 0x1C, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x75, 0x51, 0x1C, 0x02
	.byte 0x3E, 0x01, 0x00, 0x00, 0x8D, 0x51, 0x1C, 0x02, 0x13, 0x01, 0x00, 0x00, 0xB5, 0x42, 0x1C, 0x02
	.byte 0xE6, 0x00, 0x00, 0x00, 0x51, 0x43, 0x1C, 0x02, 0x0C, 0x01, 0x00, 0x00, 0x11, 0x44, 0x1C, 0x02
	.byte 0x0E, 0x01, 0x00, 0x00, 0x49, 0x44, 0x1C, 0x02, 0x15, 0x01, 0x00, 0x00, 0xCD, 0x44, 0x1C, 0x02
	.byte 0x1E, 0x01, 0x00, 0x00, 0x85, 0x45, 0x1C, 0x02, 0xFD, 0x00, 0x00, 0x00, 0xC9, 0x45, 0x1C, 0x02
	.byte 0x0D, 0x01, 0x00, 0x00, 0x55, 0x46, 0x1C, 0x02, 0x0F, 0x01, 0x00, 0x00, 0xA5, 0x46, 0x1C, 0x02
	.byte 0xEA, 0x00, 0x00, 0x00, 0x59, 0x47, 0x1C, 0x02, 0x10, 0x01, 0x00, 0x00, 0xF1, 0x4D, 0x1C, 0x02
	.byte 0x11, 0x01, 0x00, 0x00, 0x9D, 0x4E, 0x1C, 0x02, 0x88, 0x00, 0x00, 0x00, 0xD1, 0x51, 0x1C, 0x02
	.byte 0x87, 0x00, 0x00, 0x00, 0x25, 0x52, 0x1C, 0x02, 0x16, 0x01, 0x00, 0x00, 0x7D, 0x52, 0x1C, 0x02
	.byte 0x18, 0x01, 0x00, 0x00, 0x21, 0x49, 0x1C, 0x02, 0x1A, 0x01, 0x00, 0x00, 0xE9, 0x4C, 0x1C, 0x02
	.byte 0x1B, 0x01, 0x00, 0x00, 0x01, 0x4D, 0x1C, 0x02, 0x1C, 0x01, 0x00, 0x00, 0x19, 0x4D, 0x1C, 0x02
	.byte 0x1D, 0x01, 0x00, 0x00, 0x31, 0x4D, 0x1C, 0x02, 0x20, 0x01, 0x00, 0x00, 0xAD, 0x49, 0x1C, 0x02
	.byte 0x21, 0x01, 0x00, 0x00, 0xA9, 0x4A, 0x1C, 0x02, 0x22, 0x01, 0x00, 0x00, 0xB5, 0x4A, 0x1C, 0x02
	.byte 0x23, 0x01, 0x00, 0x00, 0xC1, 0x4A, 0x1C, 0x02, 0x24, 0x01, 0x00, 0x00, 0xCD, 0x4A, 0x1C, 0x02
	.byte 0x25, 0x01, 0x00, 0x00, 0xD9, 0x4A, 0x1C, 0x02, 0x26, 0x01, 0x00, 0x00, 0xE5, 0x4A, 0x1C, 0x02
	.byte 0x2A, 0x01, 0x00, 0x00, 0x0D, 0x4B, 0x1C, 0x02, 0x2B, 0x01, 0x00, 0x00, 0x19, 0x4B, 0x1C, 0x02
	.byte 0x2C, 0x01, 0x00, 0x00, 0x25, 0x4B, 0x1C, 0x02, 0x2D, 0x01, 0x00, 0x00, 0x31, 0x4B, 0x1C, 0x02
	.byte 0x2E, 0x01, 0x00, 0x00, 0x3D, 0x4B, 0x1C, 0x02, 0x2F, 0x01, 0x00, 0x00, 0x49, 0x4B, 0x1C, 0x02
	.byte 0x30, 0x01, 0x00, 0x00, 0x55, 0x4B, 0x1C, 0x02, 0x31, 0x01, 0x00, 0x00, 0x61, 0x4B, 0x1C, 0x02
	.byte 0x32, 0x01, 0x00, 0x00, 0x6D, 0x4B, 0x1C, 0x02, 0x33, 0x01, 0x00, 0x00, 0x79, 0x4B, 0x1C, 0x02
	.byte 0x34, 0x01, 0x00, 0x00, 0x85, 0x4B, 0x1C, 0x02, 0x35, 0x01, 0x00, 0x00, 0x91, 0x4B, 0x1C, 0x02
	.byte 0x36, 0x01, 0x00, 0x00, 0x9D, 0x4B, 0x1C, 0x02, 0x37, 0x01, 0x00, 0x00, 0xA9, 0x4B, 0x1C, 0x02
	.byte 0x38, 0x01, 0x00, 0x00, 0xB5, 0x4B, 0x1C, 0x02, 0x39, 0x01, 0x00, 0x00, 0xC1, 0x4B, 0x1C, 0x02
	.byte 0x28, 0x01, 0x00, 0x00, 0xCD, 0x4B, 0x1C, 0x02, 0xE4, 0x00, 0x00, 0x00, 0xF9, 0x4B, 0x1C, 0x02
	.byte 0xDF, 0x00, 0x00, 0x00, 0x61, 0x4C, 0x1C, 0x02, 0x3F, 0x01, 0x00, 0x00, 0x61, 0x4C, 0x1C, 0x02
	.byte 0x70, 0x00, 0x00, 0x00, 0x95, 0x4C, 0x1C, 0x02, 0x1B, 0x02, 0x00, 0x00, 0xBD, 0x52, 0x1C, 0x02
	.byte 0x1A, 0x02, 0x00, 0x00, 0xE5, 0x52, 0x1C, 0x02, 0x1C, 0x02, 0x00, 0x00, 0x19, 0x53, 0x1C, 0x02
	.byte 0x1D, 0x02, 0x00, 0x00, 0xA9, 0x53, 0x1C, 0x02, 0x1E, 0x02, 0x00, 0x00, 0x5D, 0x54, 0x1C, 0x02
	.byte 0x1F, 0x02, 0x00, 0x00, 0x15, 0x55, 0x1C, 0x02, 0x20, 0x02, 0x00, 0x00, 0x45, 0x55, 0x1C, 0x02
	.byte 0x21, 0x02, 0x00, 0x00, 0x7D, 0x55, 0x1C, 0x02, 0x22, 0x02, 0x00, 0x00, 0x01, 0x56, 0x1C, 0x02
	.byte 0x23, 0x02, 0x00, 0x00, 0x85, 0x56, 0x1C, 0x02, 0x24, 0x02, 0x00, 0x00, 0x51, 0x57, 0x1C, 0x02
	.byte 0x25, 0x02, 0x00, 0x00, 0x7D, 0x57, 0x1C, 0x02, 0x26, 0x02, 0x00, 0x00, 0xA9, 0x57, 0x1C, 0x02
	.byte 0x27, 0x02, 0x00, 0x00, 0xD5, 0x57, 0x1C, 0x02, 0x28, 0x02, 0x00, 0x00, 0x01, 0x58, 0x1C, 0x02
	.byte 0x29, 0x02, 0x00, 0x00, 0x2D, 0x58, 0x1C, 0x02, 0x2A, 0x02, 0x00, 0x00, 0x59, 0x58, 0x1C, 0x02
	.byte 0x2B, 0x02, 0x00, 0x00, 0x85, 0x58, 0x1C, 0x02, 0x2C, 0x02, 0x00, 0x00, 0xB1, 0x58, 0x1C, 0x02
	.byte 0x2D, 0x02, 0x00, 0x00, 0xDD, 0x58, 0x1C, 0x02, 0x2E, 0x02, 0x00, 0x00, 0x09, 0x59, 0x1C, 0x02
	.byte 0x2F, 0x02, 0x00, 0x00, 0x35, 0x59, 0x1C, 0x02, 0x30, 0x02, 0x00, 0x00, 0x61, 0x59, 0x1C, 0x02
	.byte 0x31, 0x02, 0x00, 0x00, 0x8D, 0x59, 0x1C, 0x02, 0x32, 0x02, 0x00, 0x00, 0xB9, 0x59, 0x1C, 0x02
	.byte 0x33, 0x02, 0x00, 0x00, 0xE5, 0x59, 0x1C, 0x02, 0x34, 0x02, 0x00, 0x00, 0x11, 0x5A, 0x1C, 0x02
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x03, 0x04, 0x06, 0x07, 0x00
	.byte 0x8F, 0x00, 0x00, 0x00, 0xDD, 0xB9, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x81, 0x5D, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x45, 0x83, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0x99, 0x5E, 0x1C, 0x02
	.byte 0x1F, 0x00, 0x00, 0x00, 0xA5, 0xB9, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xFD, 0x64, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0x25, 0xAD, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0xC1, 0x81, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0xF9, 0x82, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xF1, 0xB3, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0xE5, 0xC9, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00, 0xC9, 0x88, 0x1C, 0x02
	.byte 0x32, 0x00, 0x00, 0x00, 0x71, 0x89, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x95, 0x80, 0x1C, 0x02
	.byte 0x45, 0x00, 0x00, 0x00, 0xB5, 0x78, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x3D, 0xAE, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x29, 0x80, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0x61, 0x6E, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x81, 0x81, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x01, 0x82, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0xB1, 0x82, 0x1C, 0x02, 0x2C, 0x00, 0x00, 0x00, 0x05, 0x75, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x39, 0x86, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0xA1, 0x86, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x4D, 0x87, 0x1C, 0x02, 0x3D, 0x00, 0x00, 0x00, 0xC1, 0x67, 0x1C, 0x02
	.byte 0x2C, 0x00, 0x00, 0x00, 0xC5, 0x74, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x65, 0xCD, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x65, 0xCA, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x51, 0xB1, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xBD, 0x76, 0x1C, 0x02, 0x26, 0x00, 0x00, 0x00, 0x91, 0x61, 0x1C, 0x02
	.byte 0x62, 0x00, 0x00, 0x00, 0x7D, 0x78, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x01, 0x7A, 0x1C, 0x02
	.byte 0x38, 0x00, 0x00, 0x00, 0x49, 0xC8, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x8D, 0xC8, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x99, 0xAE, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x39, 0xA1, 0x1C, 0x02
	.byte 0x64, 0x00, 0x00, 0x00, 0x1D, 0x6B, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x3D, 0xA7, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x59, 0xAF, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0x29, 0x6E, 0x1C, 0x02
	.byte 0x25, 0x00, 0x00, 0x00, 0x0D, 0xC2, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x61, 0x82, 0x1C, 0x02
	.byte 0x46, 0x00, 0x00, 0x00, 0x5D, 0x6D, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00, 0x2D, 0xC6, 0x1C, 0x02
	.byte 0x5E, 0x00, 0x00, 0x00, 0x31, 0xD1, 0x1C, 0x02, 0x86, 0x00, 0x00, 0x00, 0xED, 0xB1, 0x1C, 0x02
	.byte 0x4D, 0x00, 0x00, 0x00, 0xAD, 0xB2, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0xC5, 0x65, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0x91, 0xAB, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0xF1, 0x6C, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x09, 0x87, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x81, 0xD5, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x29, 0xA4, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xC5, 0x73, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0xD5, 0xAB, 0x1C, 0x02, 0x96, 0x00, 0x00, 0x00, 0xC1, 0xBD, 0x1C, 0x02
	.byte 0x95, 0x00, 0x00, 0x00, 0x79, 0xBD, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x01, 0x9F, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0x5D, 0xAC, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00, 0x09, 0x8A, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0x4D, 0xAB, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0xE5, 0xAC, 0x1C, 0x02
	.byte 0xA1, 0x00, 0x00, 0x00, 0xA1, 0xAC, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0x4D, 0x5F, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xD1, 0x5C, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0xFD, 0xCA, 0x1C, 0x02
	.byte 0x59, 0x00, 0x00, 0x00, 0x19, 0xC8, 0x1C, 0x02, 0x2C, 0x00, 0x00, 0x00, 0xC1, 0xD3, 0x1C, 0x02
	.byte 0x64, 0x00, 0x00, 0x00, 0x49, 0x69, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x51, 0x65, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xF1, 0x62, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x65, 0xC9, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0xF9, 0xD2, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0xFD, 0x5E, 0x1C, 0x02
	.byte 0x2C, 0x00, 0x00, 0x00, 0xE5, 0x68, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xE9, 0xB0, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x01, 0xC9, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0x89, 0xD2, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0xCD, 0xC8, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xF9, 0xAE, 0x1C, 0x02
	.byte 0x9E, 0x00, 0x00, 0x00, 0x19, 0xD2, 0x1C, 0x02, 0x59, 0x00, 0x00, 0x00, 0xF1, 0xDA, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0x11, 0x81, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0x65, 0xAD, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x6D, 0xA8, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00, 0xBD, 0xC7, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xD9, 0xD6, 0x1C, 0x02, 0x3A, 0x00, 0x00, 0x00, 0xA5, 0xD1, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xDD, 0xAA, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x05, 0xA9, 0x1C, 0x02
	.byte 0x46, 0x00, 0x00, 0x00, 0x39, 0x6D, 0x1C, 0x02, 0x9E, 0x00, 0x00, 0x00, 0x21, 0x5E, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x35, 0x66, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xF5, 0xA9, 0x1C, 0x02
	.byte 0x18, 0x00, 0x00, 0x00, 0x75, 0xC4, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x9D, 0xD0, 0x1C, 0x02
	.byte 0x28, 0x00, 0x00, 0x00, 0xC5, 0x8A, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x11, 0xA6, 0x1C, 0x02
	.byte 0x37, 0x00, 0x00, 0x00, 0xD5, 0x85, 0x1C, 0x02, 0x15, 0x00, 0x00, 0x00, 0x61, 0xC2, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x79, 0xA3, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xE9, 0xA2, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xE1, 0xCF, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00, 0xD5, 0xC1, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xED, 0xA4, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xA1, 0xA0, 0x1C, 0x02
	.byte 0x24, 0x00, 0x00, 0x00, 0x9D, 0xC1, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xCD, 0x9F, 0x1C, 0x02
	.byte 0x83, 0x00, 0x00, 0x00, 0x61, 0xCE, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x45, 0x9E, 0x1C, 0x02
	.byte 0x2C, 0x00, 0x00, 0x00, 0xDD, 0x9D, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0x19, 0xAC, 0x1C, 0x02
	.byte 0x4B, 0x00, 0x00, 0x00, 0xD5, 0xCD, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xB9, 0x9B, 0x1C, 0x02
	.byte 0x83, 0x00, 0x00, 0x00, 0x29, 0xBE, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xCD, 0x99, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xF9, 0x98, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x39, 0x98, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xBD, 0x97, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00, 0x31, 0xBD, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xA1, 0xCC, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x91, 0xDB, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x2D, 0xD5, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x09, 0xCC, 0x1C, 0x02
	.byte 0x74, 0x00, 0x00, 0x00, 0xC1, 0x92, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0x7D, 0x92, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x09, 0x62, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00, 0x2D, 0xDB, 0x1C, 0x02
	.byte 0x85, 0x00, 0x00, 0x00, 0x11, 0xDA, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x39, 0x90, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0xAD, 0xCB, 0x1C, 0x02, 0x39, 0x00, 0x00, 0x00, 0x81, 0xCB, 0x1C, 0x02
	.byte 0xA0, 0x00, 0x00, 0x00, 0x19, 0xD4, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00, 0x99, 0x8C, 0x1C, 0x02
	.byte 0xB6, 0x00, 0xC5, 0x00, 0xCB, 0x00, 0xD5, 0x01, 0xF5, 0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20
	.byte 0x40, 0x80, 0x00, 0x00, 0xC8, 0x00, 0x50, 0x00, 0x3C, 0x00, 0x32, 0x00, 0x28, 0x00, 0x00, 0x00
	.byte 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x0A, 0x0F, 0x1E
	.byte 0x23, 0x32, 0x41, 0x46, 0x55, 0x5A, 0x5F, 0x6E, 0x64, 0x96, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00
	.byte 0x81, 0x9C, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x05, 0x9D, 0x1C, 0x02, 0x62, 0x00, 0x00, 0x00
	.byte 0x81, 0xDA, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45, 0x78, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00
	.byte 0x45, 0xA0, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45, 0x78, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00
	.byte 0xB5, 0xCE, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00, 0xF9, 0x88, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0xD5, 0xD5, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x31, 0xD6, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00
	.byte 0x71, 0x66, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x99, 0x66, 0x1C, 0x02, 0x2C, 0x00, 0x00, 0x00
	.byte 0x8D, 0x68, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0xC1, 0x68, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00
	.byte 0xFD, 0xC2, 0x1C, 0x02, 0x19, 0x00, 0x00, 0x00, 0x51, 0xC3, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00
	.byte 0x55, 0x6A, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00, 0x31, 0x6A, 0x1C, 0x02, 0x64, 0x00, 0x00, 0x00
	.byte 0x99, 0x6B, 0x1C, 0x02, 0x61, 0x00, 0x00, 0x00, 0xCD, 0x6B, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00
	.byte 0x99, 0xC3, 0x1C, 0x02, 0x19, 0x00, 0x00, 0x00, 0x2D, 0xC4, 0x1C, 0x02, 0x2C, 0x00, 0x00, 0x00
	.byte 0x81, 0x6D, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0xD1, 0x6D, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xB5, 0x6E, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0xE1, 0x6E, 0x1C, 0x02, 0x62, 0x00, 0x00, 0x00
	.byte 0xB9, 0xDA, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45, 0x78, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00
	.byte 0xB9, 0xC6, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00, 0x95, 0xC7, 0x1C, 0x02, 0x1D, 0x00, 0x00, 0x00
	.byte 0x4D, 0x74, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x71, 0x74, 0x1C, 0x02, 0x25, 0x00, 0x00, 0x00
	.byte 0x15, 0x78, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45, 0x78, 0x1C, 0x02, 0x3A, 0x00, 0x00, 0x00
	.byte 0xDD, 0xD1, 0x1C, 0x02, 0x33, 0x00, 0x00, 0x00, 0xF5, 0xD1, 0x1C, 0x02, 0x2D, 0x00, 0x00, 0x00
	.byte 0x9D, 0xD7, 0x1C, 0x02, 0x60, 0x00, 0x00, 0x00, 0xED, 0xD7, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00
	.byte 0x9D, 0x5F, 0x1C, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45, 0x78, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0xE1, 0x7F, 0x1C, 0x02, 0x35, 0x00, 0x00, 0x00, 0x05, 0x80, 0x1C, 0x02, 0x06, 0x00, 0x00, 0x00
	.byte 0x99, 0xAF, 0x1C, 0x02, 0x07, 0x00, 0x00, 0x00, 0xC1, 0xAF, 0x1C, 0x02, 0x06, 0x00, 0x00, 0x00
	.byte 0x79, 0xB0, 0x1C, 0x02, 0x07, 0x00, 0x00, 0x00, 0xA1, 0xB0, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0x91, 0x83, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00, 0xD5, 0x83, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0x2D, 0x84, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00, 0x6D, 0x84, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00
	.byte 0xC1, 0x87, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x29, 0x88, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0x61, 0x88, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x85, 0x88, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xF5, 0xB6, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x31, 0xB7, 0x1C, 0x02, 0x2C, 0x00, 0x00, 0x00
	.byte 0xE5, 0x67, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x29, 0x68, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0xA1, 0x89, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0xC5, 0x89, 0x1C, 0x02, 0x35, 0x00, 0x00, 0x00
	.byte 0x89, 0xB8, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0xCD, 0xB8, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00
	.byte 0x45, 0x8B, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x71, 0x8B, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00
	.byte 0x35, 0xBA, 0x1C, 0x02, 0x98, 0x00, 0x00, 0x00, 0x89, 0xBA, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00
	.byte 0x41, 0x8F, 0x1C, 0x02, 0x83, 0x00, 0x00, 0x00, 0x6D, 0x8F, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00
	.byte 0x6D, 0xBB, 0x1C, 0x02, 0x98, 0x00, 0x00, 0x00, 0xC1, 0xBB, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0x15, 0x92, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0x39, 0x92, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00
	.byte 0xD1, 0xBB, 0x1C, 0x02, 0x98, 0x00, 0x00, 0x00, 0x25, 0xBC, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00
	.byte 0x35, 0xBC, 0x1C, 0x02, 0x98, 0x00, 0x00, 0x00, 0x89, 0xBC, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00
	.byte 0xF9, 0xD4, 0x1C, 0x02, 0x45, 0x00, 0x00, 0x00, 0x45, 0x76, 0x1C, 0x02, 0x94, 0x00, 0x00, 0x00
	.byte 0x99, 0xBC, 0x1C, 0x02, 0x95, 0x00, 0x00, 0x00, 0xBD, 0xBC, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0xF9, 0xBC, 0x1C, 0x02, 0x2E, 0x00, 0x00, 0x00, 0x99, 0x9A, 0x1C, 0x02, 0x45, 0x00, 0x00, 0x00
	.byte 0xB1, 0x9A, 0x1C, 0x02, 0x23, 0x00, 0x00, 0x00, 0x29, 0x9B, 0x1C, 0x02, 0x22, 0x00, 0x00, 0x00
	.byte 0xE5, 0xBE, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00, 0x21, 0xBF, 0x1C, 0x02, 0x50, 0x00, 0x00, 0x00
	.byte 0xCD, 0xBE, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x45, 0xBF, 0x1C, 0x02, 0x01, 0x00, 0x00, 0x00
	.byte 0x89, 0xBF, 0x1C, 0x02, 0x4C, 0x00, 0x00, 0x00, 0xA1, 0xBF, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00
	.byte 0x79, 0xC0, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0xB9, 0xC0, 0x1C, 0x02, 0x01, 0x00, 0x00, 0x00
	.byte 0x89, 0xBF, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0x89, 0x60, 0x1C, 0x02, 0x48, 0x00, 0x00, 0x00
	.byte 0xA9, 0x60, 0x1C, 0x02, 0x45, 0x00, 0x00, 0x00, 0xC1, 0x60, 0x1C, 0x02, 0x1C, 0x00, 0x00, 0x00
	.byte 0x91, 0xB7, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00, 0xA9, 0xB7, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00
	.byte 0xA5, 0xA1, 0x1C, 0x02, 0x1C, 0x00, 0x00, 0x00, 0x91, 0xB7, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0xA9, 0xB7, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0xC1, 0xA1, 0x1C, 0x02, 0x1D, 0x00, 0x00, 0x00
	.byte 0x4D, 0x74, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x71, 0x74, 0x1C, 0x02, 0x18, 0x00, 0x00, 0x00
	.byte 0x5D, 0xC5, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xFD, 0x6F, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0x29, 0x70, 0x1C, 0x02, 0x27, 0x00, 0x00, 0x00, 0x55, 0x70, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xFD, 0x6F, 0x1C, 0x02, 0x8F, 0x00, 0x00, 0x00, 0x65, 0x71, 0x1C, 0x02, 0x27, 0x00, 0x00, 0x00
	.byte 0x55, 0x70, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xB1, 0x71, 0x1C, 0x02, 0x29, 0x00, 0x00, 0x00
	.byte 0xC1, 0x71, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0xD1, 0x71, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xF5, 0x71, 0x1C, 0x02, 0x29, 0x00, 0x00, 0x00, 0x05, 0x72, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00
	.byte 0x15, 0x72, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x39, 0x72, 0x1C, 0x02, 0x29, 0x00, 0x00, 0x00
	.byte 0x49, 0x72, 0x1C, 0x02, 0x46, 0x00, 0x00, 0x00, 0x59, 0x72, 0x1C, 0x02, 0x53, 0x00, 0x00, 0x00
	.byte 0x99, 0x75, 0x1C, 0x02, 0x32, 0x00, 0x00, 0x00, 0xF1, 0x75, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0x15, 0x76, 0x1C, 0x02, 0x45, 0x00, 0x00, 0x00, 0x45, 0x76, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0x6D, 0x76, 0x1C, 0x02, 0x27, 0x00, 0x00, 0x00, 0x89, 0x76, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0x11, 0x79, 0x1C, 0x02, 0x4B, 0x00, 0x00, 0x00, 0x59, 0x79, 0x1C, 0x02, 0x01, 0x00, 0x00, 0x00
	.byte 0xC1, 0x79, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00, 0x6D, 0x7A, 0x1C, 0x02, 0x04, 0x00, 0x00, 0x00
	.byte 0xE1, 0x7A, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00, 0x95, 0x7B, 0x1C, 0x02, 0x01, 0x00, 0xC8, 0x00
	.byte 0x04, 0x00, 0x96, 0x00, 0x09, 0x00, 0x64, 0x00, 0x10, 0x00, 0x50, 0x00, 0x20, 0x00, 0x28, 0x00
	.byte 0x30, 0x00, 0x14, 0x00, 0x30, 0x00, 0x00, 0x00, 0xC5, 0x84, 0x1C, 0x02, 0x31, 0x00, 0x00, 0x00
	.byte 0x01, 0x85, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x99, 0x85, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00
	.byte 0xDD, 0xB4, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x91, 0xB4, 0x1C, 0x02, 0x0D, 0x00, 0x00, 0x00
	.byte 0x01, 0xB5, 0x1C, 0x02, 0x06, 0x02, 0x07, 0x02, 0x01, 0x00, 0x00, 0x00, 0x08, 0x02, 0x07, 0x02
	.byte 0x02, 0x00, 0x00, 0x00, 0x06, 0x02, 0x08, 0x02, 0x03, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00
	.byte 0xF9, 0x88, 0x1C, 0x02, 0x32, 0x00, 0x00, 0x00, 0x1D, 0x89, 0x1C, 0x02, 0x34, 0x00, 0x00, 0x00
	.byte 0x41, 0x89, 0x1C, 0x02, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
	.byte 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
	.byte 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
	.byte 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
	.byte 0x8D, 0x93, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xDD, 0x93, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00
	.byte 0x35, 0x94, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x6D, 0x94, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xD9, 0x63, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x15, 0x64, 0x1C, 0x02, 0x2A, 0x00, 0x00, 0x00
	.byte 0x59, 0x64, 0x1C, 0x02, 0x76, 0x00, 0x00, 0x00, 0xDD, 0x64, 0x1C, 0x02, 0x64, 0x00, 0x00, 0x00
	.byte 0x99, 0x6B, 0x1C, 0x02, 0x61, 0x00, 0x00, 0x00, 0xCD, 0x6B, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0x89, 0x6C, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0xAD, 0x6C, 0x1C, 0x02, 0x03, 0x00, 0x00, 0x00
	.byte 0x8D, 0x93, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xDD, 0x93, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00
	.byte 0x35, 0x94, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0x8D, 0xD6, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0x31, 0x77, 0x1C, 0x02, 0x03, 0x00, 0x00, 0x00, 0xBD, 0x77, 0x1C, 0x02, 0x38, 0x00, 0x00, 0x00
	.byte 0x91, 0x77, 0x1C, 0x02, 0x04, 0x00, 0x00, 0x00, 0xE9, 0x77, 0x1C, 0x02, 0x03, 0x00, 0x00, 0x00
	.byte 0x8D, 0x93, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00, 0xDD, 0x93, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00
	.byte 0x35, 0x94, 0x1C, 0x02, 0xA1, 0x00, 0x00, 0x00, 0xA5, 0xAD, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0xA9, 0x8B, 0x1C, 0x02, 0x28, 0x00, 0x00, 0x00, 0x05, 0x8C, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00
	.byte 0x35, 0x8C, 0x1C, 0x02, 0x27, 0x00, 0x00, 0x00, 0x65, 0x8C, 0x1C, 0x02, 0xA0, 0x00, 0x00, 0x00
	.byte 0x19, 0x8E, 0x1C, 0x02, 0x1A, 0x00, 0x00, 0x00, 0x69, 0x8E, 0x1C, 0x02, 0x08, 0x00, 0x00, 0x00
	.byte 0xC1, 0x8E, 0x1C, 0x02, 0x76, 0x00, 0x00, 0x00, 0x1D, 0x8F, 0x1C, 0x02, 0x99, 0x00, 0x00, 0x00
	.byte 0xA1, 0x89, 0x1C, 0x02, 0x47, 0x00, 0x00, 0x00, 0xC5, 0x89, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00
	.byte 0x7D, 0x91, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0xE5, 0x91, 0x1C, 0x02, 0x45, 0x00, 0x00, 0x00
	.byte 0xF5, 0x7B, 0x1C, 0x02, 0x04, 0x00, 0x00, 0x00, 0x15, 0x7D, 0x1C, 0x02, 0x77, 0x00, 0x00, 0x00
	.byte 0x4D, 0x7D, 0x1C, 0x02, 0x65, 0x00, 0x00, 0x00, 0xED, 0x7D, 0x1C, 0x02, 0x0E, 0x00, 0x00, 0x00
	.byte 0x55, 0x7E, 0x1C, 0x02, 0x24, 0x00, 0x00, 0x00, 0x75, 0x7E, 0x1C, 0x02, 0x21, 0x00, 0x00, 0x00
	.byte 0xF1, 0x7E, 0x1C, 0x02, 0x26, 0x00, 0x00, 0x00, 0xF1, 0x7E, 0x1C, 0x02, 0x04, 0x00, 0x00, 0x00
	.byte 0x15, 0x7F, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x79, 0x7F, 0x1C, 0x02, 0x1F, 0x00, 0x00, 0x00
	.byte 0x4D, 0xB5, 0x1C, 0x02, 0x37, 0x00, 0x00, 0x00, 0x9D, 0xB5, 0x1C, 0x02, 0x81, 0x00, 0x00, 0x00

	thumb_func_start FUN_021D9FA0
FUN_021D9FA0: ; 0x021D9FA0
	push {r0, r2, r3, r6, r7, lr}
	lsls r4, r3, #8
	lsls r3, r1, #1
	movs r0, r0
	thumb_func_end FUN_021D9FA0
	; 0x021D9FA8
